
./build/NucleoInit.elf:     file format elf32-littlearm

SYMBOL TABLE:
08000000 l    d  .isr_vector	00000000 .isr_vector
080001c4 l    d  .text	00000000 .text
080022ac l    d  .rodata	00000000 .rodata
080022c0 l    d  .ARM.extab	00000000 .ARM.extab
080022f0 l    d  .ARM	00000000 .ARM
080023f8 l    d  .init_array	00000000 .init_array
08002400 l    d  .fini_array	00000000 .fini_array
20000000 l    d  .data	00000000 .data
2000043c l    d  .bss	00000000 .bss
20000464 l    d  ._user_heap_stack	00000000 ._user_heap_stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 crtstuff.c
080001c4 l     F .text	00000000 __do_global_dtors_aux
2000043c l       .bss	00000001 completed.1
08002400 l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
080001e8 l     F .text	00000000 frame_dummy
20000440 l       .bss	00000018 object.0
080023fc l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 stm32f4xx_it.c
00000000 l    df *ABS*	00000000 stm32f4xx_hal_rcc.c
00000000 l    df *ABS*	00000000 stm32f4xx_hal_rcc_ex.c
00000000 l    df *ABS*	00000000 stm32f4xx_hal_cortex.c
00000000 l    df *ABS*	00000000 stm32f4xx_hal.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 __call_atexit.c
08000de8 l     F .text	00000014 register_fini
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 unwind-arm.c
080011c8 l     F .text	00000012 selfrel_offset31
080011dc l     F .text	0000005c search_EIT_table
08001238 l     F .text	00000028 __gnu_unwind_get_pr_addr
08001260 l     F .text	0000009c get_eit_entry
080012fc l     F .text	00000058 restore_non_core_regs
08001354 l     F .text	00000004 __gnu_unwind_24bit.constprop.0
08001358 l     F .text	0000000a _Unwind_decode_typeinfo_ptr.constprop.0
08001364 l     F .text	00000002 _Unwind_DebugHook
08001368 l     F .text	0000003a unwind_phase2
080013a4 l     F .text	000000ca unwind_phase2_forced
08001580 l     F .text	0000001a _Unwind_GetGR
080015cc l     F .text	00000018 _Unwind_SetGR
08001668 l     F .text	000002a8 __gnu_unwind_pr_common
00000000 l    df *ABS*	00000000 libunwind.o
00000000 l    df *ABS*	00000000 pr-support.c
08001d4c l     F .text	00000038 next_unwind_byte
08001d84 l     F .text	0000001a _Unwind_GetGR.constprop.0
08001da0 l     F .text	00000002 unwind_UCB_from_context
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 getpid.c
00000000 l    df *ABS*	00000000 kill.c
00000000 l    df *ABS*	00000000 _exit.c
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 system_stm32f4xx.c
00000000 l    df *ABS*	00000000 impure.c
20000010 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
08002404 l       .fini_array	00000000 __fini_array_end
08002400 l       .fini_array	00000000 __fini_array_start
08002400 l       .init_array	00000000 __init_array_end
080023f8 l       .init_array	00000000 __preinit_array_end
080023f8 l       .init_array	00000000 __init_array_start
080023f8 l       .init_array	00000000 __preinit_array_start
08000adc  w    F .text	00000006 RTC_Alarm_IRQHandler
08001d04 g     F .text	00000022 .hidden ___Unwind_ForcedUnwind
08001474 g     F .text	00000066 .hidden __gnu_Unwind_RaiseException
08000a16  w    F .text	00000006 EXTI2_IRQHandler
08000afa  w    F .text	00000006 TIM8_CC_IRQHandler
08002270 g     F .text	00000010 _getpid
08000210 g     F .text	00000002 DebugMon_Handler
08000bae  w    F .text	00000006 FMPI2C1_EV_IRQHandler
08000b9c  w    F .text	00000006 SPI4_IRQHandler
08000000 g     O .isr_vector	000001c4 VectorTable
08002240 g     F .text	0000002c _kill_r
2000045c g     O .bss	00000001 __lock___atexit_recursive_mutex
08000a88  w    F .text	00000006 TIM1_CC_IRQHandler
08000860 g     F .text	00000070 HAL_NVIC_SetPriority
08000b6c  w    F .text	00000006 DMA2_Stream5_IRQHandler
08000206 g     F .text	00000002 HardFault_Handler
08000a46  w    F .text	00000006 DMA1_Stream5_IRQHandler
00000400 g       *ABS*	00000000 _Min_Stack_Size
08000b18  w    F .text	00000006 TIM6_IRQHandler
08000214 g     F .text	00000008 SysTick_Handler
080009ec  w    F .text	00000006 PVD_IRQHandler
08000b06  w    F .text	00000006 SDIO_IRQHandler
080009f2  w    F .text	00000006 TAMP_STAMP_IRQHandler
08002404 g       *ABS*	00000000 _sidata
08001bc0 g     F .text	00000000 .hidden __gnu_Unwind_Save_VFP
08001ce0 g     F .text	00000022 .hidden _Unwind_Resume_or_Rethrow
08000212 g     F .text	00000002 PendSV_Handler
08000204 g     F .text	00000002 NMI_Handler
080023f8 g       .ARM	00000000 __exidx_end
08000b5a  w    F .text	00000006 CAN2_RX1_IRQHandler
08000a1c  w    F .text	00000006 EXTI3_IRQHandler
0800021c  w    F .text	000000d4 HAL_RCC_GetSysClockFreq
08001910 g     F .text	00000004 .hidden __aeabi_unwind_cpp_pr0
20000438 g     O .data	00000004 __atexit_recursive_mutex
08000af4  w    F .text	00000006 TIM8_TRG_COM_TIM14_IRQHandler
0800207c g     F .text	0000000a .hidden _Unwind_GetRegionStart
08000b48  w    F .text	00000006 DFSDM1_FLT1_IRQHandler
08001ce0 g     F .text	00000022 .hidden ___Unwind_Resume_or_Rethrow
08000a7c  w    F .text	00000006 TIM1_UP_TIM10_IRQHandler
20000460 g     O .bss	00000004 errno
2000043c g       .bss	00000000 _sbss
08001d28 g     F .text	00000022 .hidden _Unwind_Backtrace
08000aee  w    F .text	00000006 TIM8_UP_TIM13_IRQHandler
08000b8a  w    F .text	00000006 I2C3_ER_IRQHandler
08001ba0 g     F .text	00000018 .hidden __restore_core_regs
08001be0 g     F .text	00000000 .hidden __gnu_Unwind_Save_VFP_D_16_to_31
08001470 g     F .text	00000004 .hidden _Unwind_GetCFA
080020b0 g     F .text	00000134 memcpy
0800159c g     F .text	0000002e .hidden _Unwind_VRS_Set
08000a0a  w    F .text	00000006 EXTI0_IRQHandler
08000aac  w    F .text	00000006 I2C2_EV_IRQHandler
08000ec8 g     F .text	00000000 .hidden __aeabi_uldivmod
08000a34  w    F .text	00000006 DMA1_Stream2_IRQHandler
08000a6a  w    F .text	00000006 CAN1_RX0_IRQHandler
08000b96  w    F .text	00000006 FPU_IRQHandler
08000968  w    F .text	00000028 HAL_Delay
20000008 g     O .data	00000004 SystemCoreClock
20000000 g     O .data	00000001 uwTickFreq
0800020c g     F .text	00000002 UsageFault_Handler
08000b60  w    F .text	00000006 CAN2_SCE_IRQHandler
08000b30  w    F .text	00000006 DMA2_Stream2_IRQHandler
0800226c g     F .text	00000004 _getpid_r
080015e4 g     F .text	00000084 .hidden __gnu_Unwind_Backtrace
20000000 g       .data	00000000 _sdata
08000ab8  w    F .text	00000006 SPI1_IRQHandler
08000ef8 g     F .text	000002d0 .hidden __udivmoddi4
08001bd0 g     F .text	00000000 .hidden __gnu_Unwind_Save_VFP_D
08000a76  w    F .text	00000006 TIM1_BRK_TIM9_IRQHandler
20000458 g     O .bss	00000004 uwTick
0800191c g     F .text	00000284 .hidden _Unwind_VRS_Pop
08000b54  w    F .text	00000006 CAN2_RX0_IRQHandler
08001918  w    F .text	00000004 .hidden __aeabi_unwind_cpp_pr2
08001d28 g     F .text	00000022 .hidden ___Unwind_Backtrace
080008d0 g     F .text	00000028 HAL_SYSTICK_Config
080022f0 g       .ARM	00000000 __exidx_start
08000b36  w    F .text	00000006 DMA2_Stream3_IRQHandler
080022bc g     O .rodata	00000004 _global_impure_ptr
08000cfc g     F .text	00000048 __libc_init_array
08001c98 g     F .text	00000022 .hidden ___Unwind_RaiseException
080020a0 g     F .text	0000000e abort
08001cbc g     F .text	00000022 .hidden ___Unwind_Resume
08000b7e  w    F .text	00000006 USART6_IRQHandler
08002294 g     F .text	00000000 _init
08001be8 g     F .text	00000000 .hidden __gnu_Unwind_Restore_WMMXD
08000ad0  w    F .text	00000006 USART3_IRQHandler
08000e08 g     F .text	0000002c __libc_fini_array
20000464 g       .bss	00000000 _ebss
08000990 g     F .text	00000054 Reset_Handler
08000a5e  w    F .text	00000006 CAN1_RX1_IRQHandler
08000b24  w    F .text	00000006 DMA2_Stream0_IRQHandler
20000004 g     O .data	00000004 uwTickPrio
08000a9a  w    F .text	00000006 TIM4_IRQHandler
08001bb8 g     F .text	00000000 .hidden __gnu_Unwind_Restore_VFP
08000ba8  w    F .text	00000006 QUADSPI_IRQHandler
20000468 g       ._user_heap_stack	00000000 end
08000aa0  w    F .text	00000006 I2C1_EV_IRQHandler
08000e38 g     F .text	00000002 __retarget_lock_release_recursive
08000a4c  w    F .text	00000006 DMA1_Stream6_IRQHandler
08001cbc g     F .text	00000022 .hidden _Unwind_Resume
08001544 g     F .text	0000000c .hidden _Unwind_DeleteException
08001540 g     F .text	00000002 .hidden _Unwind_Complete
08000a2e  w    F .text	00000006 DMA1_Stream1_IRQHandler
20000464 g       .bss	00000000 __bss_end__
08000a94  w    F .text	00000006 TIM3_IRQHandler
08000a04  w    F .text	00000006 RCC_IRQHandler
08000ae8  w    F .text	00000006 TIM8_BRK_TIM12_IRQHandler
00000200 g       *ABS*	00000000 _Min_Heap_Size
080009e4 g     F .text	00000002 Default_Handler
080022ac g     O .rodata	00000010 AHBPrescTable
08001da4 g     F .text	000002ac .hidden __gnu_unwind_execute
08000ad6  w    F .text	00000006 EXTI15_10_IRQHandler
08000e3c g     F .text	0000008c __register_exitproc
08000a52  w    F .text	00000006 ADC_IRQHandler
08001bc8 g     F .text	00000000 .hidden __gnu_Unwind_Restore_VFP_D
080002f0 g     F .text	00000160 HAL_RCC_ClockConfig
08000b00  w    F .text	00000006 DMA1_Stream7_IRQHandler
08000ba2  w    F .text	00000006 SPI5_IRQHandler
080014ec g     F .text	00000044 .hidden __gnu_Unwind_Resume
08000b1e  w    F .text	00000006 TIM7_IRQHandler
08000b4e  w    F .text	00000006 CAN2_TX_IRQHandler
08000b0c  w    F .text	00000006 TIM5_IRQHandler
08001bd8 g     F .text	00000000 .hidden __gnu_Unwind_Restore_VFP_D_16_to_31
08000b78  w    F .text	00000006 DMA2_Stream7_IRQHandler
08000b84  w    F .text	00000006 I2C3_EV_IRQHandler
08001c98 g     F .text	00000022 .hidden _Unwind_RaiseException
0800209c  w    F .text	00000002 .hidden __aeabi_ldiv0
08000a70  w    F .text	00000006 EXTI9_5_IRQHandler
080009f8  w    F .text	00000006 RTC_WKUP_IRQHandler
0800095c  w    F .text	0000000c HAL_GetTick
08000abe  w    F .text	00000006 SPI2_IRQHandler
08000e34 g     F .text	00000002 __retarget_lock_acquire_recursive
2000043c g       .bss	00000000 __bss_start
08000d44 g     F .text	000000a4 memset
08000208 g     F .text	00000002 MemManage_Handler
08000c68 g     F .text	00000094 main
08000a28  w    F .text	00000006 DMA1_Stream0_IRQHandler
08000a58  w    F .text	00000006 CAN1_TX_IRQHandler
0800020e g     F .text	00000002 SVC_Handler
08000bb4  w    F .text	00000006 FMPI2C1_ER_IRQHandler
08000a22  w    F .text	00000006 EXTI4_IRQHandler
080014dc g     F .text	0000000e .hidden __gnu_Unwind_ForcedUnwind
08001530 g     F .text	0000000e .hidden __gnu_Unwind_Resume_or_Rethrow
08000b90  w    F .text	00000006 RNG_IRQHandler
080022a0 g     F .text	00000000 _fini
08001ba0 g     F .text	00000018 .hidden restore_core_regs
08001c84 g     F .text	00000000 .hidden __gnu_Unwind_Save_WMMXC
08000dfc g     F .text	0000000c atexit
080008f8  w    F .text	0000004c HAL_InitTick
2000000c g     O .data	00000004 _impure_ptr
08000944  w    F .text	00000018 HAL_IncTick
080009e6  w    F .text	00000006 WWDG_IRQHandler
08000a8e  w    F .text	00000006 TIM2_IRQHandler
08002088 g     F .text	00000012 .hidden _Unwind_GetLanguageSpecificData
08000ae2  w    F .text	00000006 OTG_FS_WKUP_IRQHandler
08000a82  w    F .text	00000006 TIM1_TRG_COM_TIM11_IRQHandler
08001550 g     F .text	0000002e .hidden _Unwind_VRS_Get
20040000 g       *ABS*	00000000 _estack
08001c70 g     F .text	00000000 .hidden __gnu_Unwind_Restore_WMMXC
08000a10  w    F .text	00000006 EXTI1_IRQHandler
08002050 g     F .text	0000002a .hidden __gnu_unwind_frame
08001d04 g     F .text	00000022 .hidden _Unwind_ForcedUnwind
2000043c g       .data	00000000 _edata
08000aca  w    F .text	00000006 USART2_IRQHandler
08000450 g     F .text	00000410 HAL_RCC_OscConfig
08000b42  w    F .text	00000006 DFSDM1_FLT0_IRQHandler
08001c2c g     F .text	00000000 .hidden __gnu_Unwind_Save_WMMXD
08000bc0 g     F .text	000000a8 _Z18SystemClock_Configv
08002280 g     F .text	00000010 _kill
08000ab2  w    F .text	00000006 I2C2_ER_IRQHandler
08000b2a  w    F .text	00000006 DMA2_Stream1_IRQHandler
0800209c  w    F .text	00000002 .hidden __aeabi_idiv0
08000a64  w    F .text	00000006 CAN1_SCE_IRQHandler
080009fe  w    F .text	00000006 FLASH_IRQHandler
08002290 g     F .text	00000002 _exit
08000b3c  w    F .text	00000006 DMA2_Stream4_IRQHandler
0800020a g     F .text	00000002 BusFault_Handler
08000ac4  w    F .text	00000006 USART1_IRQHandler
08000b66  w    F .text	00000006 OTG_FS_IRQHandler
08000b12  w    F .text	00000006 SPI3_IRQHandler
08001914  w    F .text	00000004 .hidden __aeabi_unwind_cpp_pr1
08000a40  w    F .text	00000006 DMA1_Stream4_IRQHandler
08000aa6  w    F .text	00000006 I2C1_ER_IRQHandler
08000b72  w    F .text	00000006 DMA2_Stream6_IRQHandler
08000a3a  w    F .text	00000006 DMA1_Stream3_IRQHandler
080021e4 g     F .text	0000005c raise
08000bba g     F .text	00000004 Error_Handler



Disassembly of section .isr_vector:

08000000 <VectorTable>:
__weak void FMPI2C1_EV_IRQHandler(void)          { Default_Handler(); }   /* FMPI2C1 Event                               */
__weak void FMPI2C1_ER_IRQHandler(void)          { Default_Handler(); }   /* FMPI2C1 Error                               */

// Interrupt vector table
__attribute__((section(".isr_vector")))
void (* VectorTable[])(void) =
 8000000:	20040000 	andcs	r0, r4, r0
 8000004:	08000991 	stmdaeq	r0, {r0, r4, r7, r8, fp}
 8000008:	08000205 	stmdaeq	r0, {r0, r2, r9}
 800000c:	08000207 	stmdaeq	r0, {r0, r1, r2, r9}
 8000010:	08000209 	stmdaeq	r0, {r0, r3, r9}
 8000014:	0800020b 	stmdaeq	r0, {r0, r1, r3, r9}
 8000018:	0800020d 	stmdaeq	r0, {r0, r2, r3, r9}
	...
 800002c:	0800020f 	stmdaeq	r0, {r0, r1, r2, r3, r9}
 8000030:	08000211 	stmdaeq	r0, {r0, r4, r9}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000213 	stmdaeq	r0, {r0, r1, r4, r9}
 800003c:	08000215 	stmdaeq	r0, {r0, r2, r4, r9}
 8000040:	080009e7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, r8, fp}
 8000044:	080009ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, fp}
 8000048:	080009f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r8, fp}
 800004c:	080009f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, fp}
 8000050:	080009ff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, fp}
 8000054:	08000a05 	stmdaeq	r0, {r0, r2, r9, fp}
 8000058:	08000a0b 	stmdaeq	r0, {r0, r1, r3, r9, fp}
 800005c:	08000a11 	stmdaeq	r0, {r0, r4, r9, fp}
 8000060:	08000a17 	stmdaeq	r0, {r0, r1, r2, r4, r9, fp}
 8000064:	08000a1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, fp}
 8000068:	08000a23 	stmdaeq	r0, {r0, r1, r5, r9, fp}
 800006c:	08000a29 	stmdaeq	r0, {r0, r3, r5, r9, fp}
 8000070:	08000a2f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r9, fp}
 8000074:	08000a35 	stmdaeq	r0, {r0, r2, r4, r5, r9, fp}
 8000078:	08000a3b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r9, fp}
 800007c:	08000a41 	stmdaeq	r0, {r0, r6, r9, fp}
 8000080:	08000a47 	stmdaeq	r0, {r0, r1, r2, r6, r9, fp}
 8000084:	08000a4d 	stmdaeq	r0, {r0, r2, r3, r6, r9, fp}
 8000088:	08000a53 	stmdaeq	r0, {r0, r1, r4, r6, r9, fp}
 800008c:	08000a59 	stmdaeq	r0, {r0, r3, r4, r6, r9, fp}
 8000090:	08000a6b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r9, fp}
 8000094:	08000a5f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r9, fp}
 8000098:	08000a65 	stmdaeq	r0, {r0, r2, r5, r6, r9, fp}
 800009c:	08000a71 	stmdaeq	r0, {r0, r4, r5, r6, r9, fp}
 80000a0:	08000a77 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r9, fp}
 80000a4:	08000a7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, fp}
 80000a8:	08000a83 	stmdaeq	r0, {r0, r1, r7, r9, fp}
 80000ac:	08000a89 	stmdaeq	r0, {r0, r3, r7, r9, fp}
 80000b0:	08000a8f 	stmdaeq	r0, {r0, r1, r2, r3, r7, r9, fp}
 80000b4:	08000a95 	stmdaeq	r0, {r0, r2, r4, r7, r9, fp}
 80000b8:	08000a9b 	stmdaeq	r0, {r0, r1, r3, r4, r7, r9, fp}
 80000bc:	08000aa1 	stmdaeq	r0, {r0, r5, r7, r9, fp}
 80000c0:	08000aa7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r9, fp}
 80000c4:	08000aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp}
 80000c8:	08000ab3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r9, fp}
 80000cc:	08000ab9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, fp}
 80000d0:	08000abf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, r9, fp}
 80000d4:	08000ac5 	stmdaeq	r0, {r0, r2, r6, r7, r9, fp}
 80000d8:	08000acb 	stmdaeq	r0, {r0, r1, r3, r6, r7, r9, fp}
 80000dc:	08000ad1 	stmdaeq	r0, {r0, r4, r6, r7, r9, fp}
 80000e0:	08000ad7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, fp}
 80000e4:	08000add 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, fp}
 80000e8:	08000ae3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, fp}
 80000ec:	08000ae9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, fp}
 80000f0:	08000aef 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r7, r9, fp}
 80000f4:	08000af5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, fp}
 80000f8:	08000afb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r9, fp}
 80000fc:	08000b01 	stmdaeq	r0, {r0, r8, r9, fp}
 8000100:	00000000 	andeq	r0, r0, r0
 8000104:	08000b07 	stmdaeq	r0, {r0, r1, r2, r8, r9, fp}
 8000108:	08000b0d 	stmdaeq	r0, {r0, r2, r3, r8, r9, fp}
 800010c:	08000b13 	stmdaeq	r0, {r0, r1, r4, r8, r9, fp}
	...
 8000118:	08000b19 	stmdaeq	r0, {r0, r3, r4, r8, r9, fp}
 800011c:	08000b1f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r8, r9, fp}
 8000120:	08000b25 	stmdaeq	r0, {r0, r2, r5, r8, r9, fp}
 8000124:	08000b2b 	stmdaeq	r0, {r0, r1, r3, r5, r8, r9, fp}
 8000128:	08000b31 	stmdaeq	r0, {r0, r4, r5, r8, r9, fp}
 800012c:	08000b37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, fp}
 8000130:	08000b3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, fp}
 8000134:	08000b43 	stmdaeq	r0, {r0, r1, r6, r8, r9, fp}
 8000138:	08000b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp}
 800013c:	08000b4f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r8, r9, fp}
 8000140:	08000b55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, fp}
 8000144:	08000b5b 	stmdaeq	r0, {r0, r1, r3, r4, r6, r8, r9, fp}
 8000148:	08000b61 	stmdaeq	r0, {r0, r5, r6, r8, r9, fp}
 800014c:	08000b67 	stmdaeq	r0, {r0, r1, r2, r5, r6, r8, r9, fp}
 8000150:	08000b6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, fp}
 8000154:	08000b73 	stmdaeq	r0, {r0, r1, r4, r5, r6, r8, r9, fp}
 8000158:	08000b79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, fp}
 800015c:	08000b7f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r8, r9, fp}
 8000160:	08000b85 	stmdaeq	r0, {r0, r2, r7, r8, r9, fp}
 8000164:	08000b8b 	stmdaeq	r0, {r0, r1, r3, r7, r8, r9, fp}
	...
 8000180:	08000b91 	stmdaeq	r0, {r0, r4, r7, r8, r9, fp}
 8000184:	08000b97 	stmdaeq	r0, {r0, r1, r2, r4, r7, r8, r9, fp}
	...
 8000190:	08000b9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, fp}
 8000194:	08000ba3 	stmdaeq	r0, {r0, r1, r5, r7, r8, r9, fp}
	...
 80001b0:	08000ba9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, fp}
	...
 80001bc:	08000baf 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r8, r9, fp}
 80001c0:	08000bb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, fp}

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	2000043c 	andcs	r0, r0, ip, lsr r4
 80001e0:	00000000 	andeq	r0, r0, r0
 80001e4:	080022c0 	stmdaeq	r0, {r6, r7, r9, sp}

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	andeq	r0, r0, r0
 80001fc:	20000440 	andcs	r0, r0, r0, asr #8
 8000200:	080022c0 	stmdaeq	r0, {r6, r7, r9, sp}

08000204 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000204:	e7fe      	b.n	8000204 <NMI_Handler>

08000206 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000206:	e7fe      	b.n	8000206 <HardFault_Handler>

08000208 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000208:	e7fe      	b.n	8000208 <MemManage_Handler>

0800020a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800020a:	e7fe      	b.n	800020a <BusFault_Handler>

0800020c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800020c:	e7fe      	b.n	800020c <UsageFault_Handler>

0800020e <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800020e:	4770      	bx	lr

08000210 <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000210:	4770      	bx	lr

08000212 <PendSV_Handler>:

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000212:	4770      	bx	lr

08000214 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000214:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000216:	f000 fb95 	bl	8000944 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800021a:	bd08      	pop	{r3, pc}

0800021c <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 800021c:	b508      	push	{r3, lr}
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800021e:	4b31      	ldr	r3, [pc, #196]	; (80002e4 <HAL_RCC_GetSysClockFreq+0xc8>)
 8000220:	689b      	ldr	r3, [r3, #8]
 8000222:	f003 030c 	and.w	r3, r3, #12
 8000226:	2b04      	cmp	r3, #4
 8000228:	d057      	beq.n	80002da <HAL_RCC_GetSysClockFreq+0xbe>
 800022a:	2b08      	cmp	r3, #8
 800022c:	d157      	bne.n	80002de <HAL_RCC_GetSysClockFreq+0xc2>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800022e:	4b2d      	ldr	r3, [pc, #180]	; (80002e4 <HAL_RCC_GetSysClockFreq+0xc8>)
 8000230:	685a      	ldr	r2, [r3, #4]
 8000232:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8000236:	685b      	ldr	r3, [r3, #4]
 8000238:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 800023c:	d02a      	beq.n	8000294 <HAL_RCC_GetSysClockFreq+0x78>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800023e:	4b29      	ldr	r3, [pc, #164]	; (80002e4 <HAL_RCC_GetSysClockFreq+0xc8>)
 8000240:	6859      	ldr	r1, [r3, #4]
 8000242:	f3c1 1c88 	ubfx	ip, r1, #6, #9
 8000246:	ea4f 114c 	mov.w	r1, ip, lsl #5
 800024a:	ebb1 000c 	subs.w	r0, r1, ip
 800024e:	eb6e 0e0e 	sbc.w	lr, lr, lr
 8000252:	ea4f 138e 	mov.w	r3, lr, lsl #6
 8000256:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 800025a:	0181      	lsls	r1, r0, #6
 800025c:	1a09      	subs	r1, r1, r0
 800025e:	eb63 030e 	sbc.w	r3, r3, lr
 8000262:	00db      	lsls	r3, r3, #3
 8000264:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8000268:	00c9      	lsls	r1, r1, #3
 800026a:	eb11 0c0c 	adds.w	ip, r1, ip
 800026e:	f143 0300 	adc.w	r3, r3, #0
 8000272:	0259      	lsls	r1, r3, #9
 8000274:	2300      	movs	r3, #0
 8000276:	ea4f 204c 	mov.w	r0, ip, lsl #9
 800027a:	ea41 51dc 	orr.w	r1, r1, ip, lsr #23
 800027e:	f000 fe23 	bl	8000ec8 <__aeabi_uldivmod>
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8000282:	4b18      	ldr	r3, [pc, #96]	; (80002e4 <HAL_RCC_GetSysClockFreq+0xc8>)
 8000284:	685b      	ldr	r3, [r3, #4]
 8000286:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800028a:	3301      	adds	r3, #1
 800028c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800028e:	fbb0 f0f3 	udiv	r0, r0, r3
      break;
 8000292:	e025      	b.n	80002e0 <HAL_RCC_GetSysClockFreq+0xc4>
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8000294:	4b13      	ldr	r3, [pc, #76]	; (80002e4 <HAL_RCC_GetSysClockFreq+0xc8>)
 8000296:	6859      	ldr	r1, [r3, #4]
 8000298:	f3c1 1c88 	ubfx	ip, r1, #6, #9
 800029c:	ea4f 114c 	mov.w	r1, ip, lsl #5
 80002a0:	ebb1 000c 	subs.w	r0, r1, ip
 80002a4:	eb6e 0e0e 	sbc.w	lr, lr, lr
 80002a8:	ea4f 138e 	mov.w	r3, lr, lsl #6
 80002ac:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 80002b0:	0181      	lsls	r1, r0, #6
 80002b2:	1a09      	subs	r1, r1, r0
 80002b4:	eb63 030e 	sbc.w	r3, r3, lr
 80002b8:	00db      	lsls	r3, r3, #3
 80002ba:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80002be:	00c9      	lsls	r1, r1, #3
 80002c0:	eb11 0c0c 	adds.w	ip, r1, ip
 80002c4:	f143 0300 	adc.w	r3, r3, #0
 80002c8:	0299      	lsls	r1, r3, #10
 80002ca:	2300      	movs	r3, #0
 80002cc:	ea4f 208c 	mov.w	r0, ip, lsl #10
 80002d0:	ea41 519c 	orr.w	r1, r1, ip, lsr #22
 80002d4:	f000 fdf8 	bl	8000ec8 <__aeabi_uldivmod>
 80002d8:	e7d3      	b.n	8000282 <HAL_RCC_GetSysClockFreq+0x66>
      sysclockfreq = HSE_VALUE;
 80002da:	4803      	ldr	r0, [pc, #12]	; (80002e8 <HAL_RCC_GetSysClockFreq+0xcc>)
 80002dc:	e000      	b.n	80002e0 <HAL_RCC_GetSysClockFreq+0xc4>
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80002de:	4803      	ldr	r0, [pc, #12]	; (80002ec <HAL_RCC_GetSysClockFreq+0xd0>)
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80002e0:	bd08      	pop	{r3, pc}
 80002e2:	bf00      	nop
 80002e4:	40023800 	andmi	r3, r2, r0, lsl #16
 80002e8:	007a1200 	rsbseq	r1, sl, r0, lsl #4
 80002ec:	00f42400 	rscseq	r2, r4, r0, lsl #8

080002f0 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 80002f0:	2800      	cmp	r0, #0
 80002f2:	f000 809b 	beq.w	800042c <HAL_RCC_ClockConfig+0x13c>
{
 80002f6:	b570      	push	{r4, r5, r6, lr}
 80002f8:	460d      	mov	r5, r1
 80002fa:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80002fc:	4b4f      	ldr	r3, [pc, #316]	; (800043c <HAL_RCC_ClockConfig+0x14c>)
 80002fe:	681b      	ldr	r3, [r3, #0]
 8000300:	f003 0307 	and.w	r3, r3, #7
 8000304:	428b      	cmp	r3, r1
 8000306:	d208      	bcs.n	800031a <HAL_RCC_ClockConfig+0x2a>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8000308:	b2cb      	uxtb	r3, r1
 800030a:	4a4c      	ldr	r2, [pc, #304]	; (800043c <HAL_RCC_ClockConfig+0x14c>)
 800030c:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800030e:	6813      	ldr	r3, [r2, #0]
 8000310:	f003 0307 	and.w	r3, r3, #7
 8000314:	428b      	cmp	r3, r1
 8000316:	f040 808b 	bne.w	8000430 <HAL_RCC_ClockConfig+0x140>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800031a:	6823      	ldr	r3, [r4, #0]
 800031c:	f013 0f02 	tst.w	r3, #2
 8000320:	d017      	beq.n	8000352 <HAL_RCC_ClockConfig+0x62>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8000322:	f013 0f04 	tst.w	r3, #4
 8000326:	d004      	beq.n	8000332 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8000328:	4a45      	ldr	r2, [pc, #276]	; (8000440 <HAL_RCC_ClockConfig+0x150>)
 800032a:	6893      	ldr	r3, [r2, #8]
 800032c:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8000330:	6093      	str	r3, [r2, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8000332:	6823      	ldr	r3, [r4, #0]
 8000334:	f013 0f08 	tst.w	r3, #8
 8000338:	d004      	beq.n	8000344 <HAL_RCC_ClockConfig+0x54>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800033a:	4a41      	ldr	r2, [pc, #260]	; (8000440 <HAL_RCC_ClockConfig+0x150>)
 800033c:	6893      	ldr	r3, [r2, #8]
 800033e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8000342:	6093      	str	r3, [r2, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8000344:	4a3e      	ldr	r2, [pc, #248]	; (8000440 <HAL_RCC_ClockConfig+0x150>)
 8000346:	6893      	ldr	r3, [r2, #8]
 8000348:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800034c:	68a1      	ldr	r1, [r4, #8]
 800034e:	430b      	orrs	r3, r1
 8000350:	6093      	str	r3, [r2, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8000352:	6823      	ldr	r3, [r4, #0]
 8000354:	f013 0f01 	tst.w	r3, #1
 8000358:	d032      	beq.n	80003c0 <HAL_RCC_ClockConfig+0xd0>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800035a:	6863      	ldr	r3, [r4, #4]
 800035c:	2b01      	cmp	r3, #1
 800035e:	d021      	beq.n	80003a4 <HAL_RCC_ClockConfig+0xb4>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8000360:	1e9a      	subs	r2, r3, #2
 8000362:	2a01      	cmp	r2, #1
 8000364:	d925      	bls.n	80003b2 <HAL_RCC_ClockConfig+0xc2>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8000366:	4a36      	ldr	r2, [pc, #216]	; (8000440 <HAL_RCC_ClockConfig+0x150>)
 8000368:	6812      	ldr	r2, [r2, #0]
 800036a:	f012 0f02 	tst.w	r2, #2
 800036e:	d061      	beq.n	8000434 <HAL_RCC_ClockConfig+0x144>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8000370:	4933      	ldr	r1, [pc, #204]	; (8000440 <HAL_RCC_ClockConfig+0x150>)
 8000372:	688a      	ldr	r2, [r1, #8]
 8000374:	f022 0203 	bic.w	r2, r2, #3
 8000378:	4313      	orrs	r3, r2
 800037a:	608b      	str	r3, [r1, #8]
    tickstart = HAL_GetTick();
 800037c:	f000 faee 	bl	800095c <HAL_GetTick>
 8000380:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8000382:	4b2f      	ldr	r3, [pc, #188]	; (8000440 <HAL_RCC_ClockConfig+0x150>)
 8000384:	689b      	ldr	r3, [r3, #8]
 8000386:	f003 030c 	and.w	r3, r3, #12
 800038a:	6862      	ldr	r2, [r4, #4]
 800038c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8000390:	d016      	beq.n	80003c0 <HAL_RCC_ClockConfig+0xd0>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8000392:	f000 fae3 	bl	800095c <HAL_GetTick>
 8000396:	1b80      	subs	r0, r0, r6
 8000398:	f241 3388 	movw	r3, #5000	; 0x1388
 800039c:	4298      	cmp	r0, r3
 800039e:	d9f0      	bls.n	8000382 <HAL_RCC_ClockConfig+0x92>
        return HAL_TIMEOUT;
 80003a0:	2003      	movs	r0, #3
 80003a2:	e042      	b.n	800042a <HAL_RCC_ClockConfig+0x13a>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80003a4:	4a26      	ldr	r2, [pc, #152]	; (8000440 <HAL_RCC_ClockConfig+0x150>)
 80003a6:	6812      	ldr	r2, [r2, #0]
 80003a8:	f412 3f00 	tst.w	r2, #131072	; 0x20000
 80003ac:	d1e0      	bne.n	8000370 <HAL_RCC_ClockConfig+0x80>
        return HAL_ERROR;
 80003ae:	2001      	movs	r0, #1
 80003b0:	e03b      	b.n	800042a <HAL_RCC_ClockConfig+0x13a>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80003b2:	4a23      	ldr	r2, [pc, #140]	; (8000440 <HAL_RCC_ClockConfig+0x150>)
 80003b4:	6812      	ldr	r2, [r2, #0]
 80003b6:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 80003ba:	d1d9      	bne.n	8000370 <HAL_RCC_ClockConfig+0x80>
        return HAL_ERROR;
 80003bc:	2001      	movs	r0, #1
 80003be:	e034      	b.n	800042a <HAL_RCC_ClockConfig+0x13a>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80003c0:	4b1e      	ldr	r3, [pc, #120]	; (800043c <HAL_RCC_ClockConfig+0x14c>)
 80003c2:	681b      	ldr	r3, [r3, #0]
 80003c4:	f003 0307 	and.w	r3, r3, #7
 80003c8:	42ab      	cmp	r3, r5
 80003ca:	d907      	bls.n	80003dc <HAL_RCC_ClockConfig+0xec>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80003cc:	b2ea      	uxtb	r2, r5
 80003ce:	4b1b      	ldr	r3, [pc, #108]	; (800043c <HAL_RCC_ClockConfig+0x14c>)
 80003d0:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	f003 0307 	and.w	r3, r3, #7
 80003d8:	42ab      	cmp	r3, r5
 80003da:	d12d      	bne.n	8000438 <HAL_RCC_ClockConfig+0x148>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80003dc:	6823      	ldr	r3, [r4, #0]
 80003de:	f013 0f04 	tst.w	r3, #4
 80003e2:	d006      	beq.n	80003f2 <HAL_RCC_ClockConfig+0x102>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80003e4:	4a16      	ldr	r2, [pc, #88]	; (8000440 <HAL_RCC_ClockConfig+0x150>)
 80003e6:	6893      	ldr	r3, [r2, #8]
 80003e8:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80003ec:	68e1      	ldr	r1, [r4, #12]
 80003ee:	430b      	orrs	r3, r1
 80003f0:	6093      	str	r3, [r2, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80003f2:	6823      	ldr	r3, [r4, #0]
 80003f4:	f013 0f08 	tst.w	r3, #8
 80003f8:	d007      	beq.n	800040a <HAL_RCC_ClockConfig+0x11a>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80003fa:	4a11      	ldr	r2, [pc, #68]	; (8000440 <HAL_RCC_ClockConfig+0x150>)
 80003fc:	6893      	ldr	r3, [r2, #8]
 80003fe:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8000402:	6921      	ldr	r1, [r4, #16]
 8000404:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8000408:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800040a:	f7ff ff07 	bl	800021c <HAL_RCC_GetSysClockFreq>
 800040e:	4b0c      	ldr	r3, [pc, #48]	; (8000440 <HAL_RCC_ClockConfig+0x150>)
 8000410:	689b      	ldr	r3, [r3, #8]
 8000412:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8000416:	4a0b      	ldr	r2, [pc, #44]	; (8000444 <HAL_RCC_ClockConfig+0x154>)
 8000418:	5cd3      	ldrb	r3, [r2, r3]
 800041a:	40d8      	lsrs	r0, r3
 800041c:	4b0a      	ldr	r3, [pc, #40]	; (8000448 <HAL_RCC_ClockConfig+0x158>)
 800041e:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8000420:	4b0a      	ldr	r3, [pc, #40]	; (800044c <HAL_RCC_ClockConfig+0x15c>)
 8000422:	6818      	ldr	r0, [r3, #0]
 8000424:	f000 fa68 	bl	80008f8 <HAL_InitTick>
  return HAL_OK;
 8000428:	2000      	movs	r0, #0
}
 800042a:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800042c:	2001      	movs	r0, #1
}
 800042e:	4770      	bx	lr
      return HAL_ERROR;
 8000430:	2001      	movs	r0, #1
 8000432:	e7fa      	b.n	800042a <HAL_RCC_ClockConfig+0x13a>
        return HAL_ERROR;
 8000434:	2001      	movs	r0, #1
 8000436:	e7f8      	b.n	800042a <HAL_RCC_ClockConfig+0x13a>
      return HAL_ERROR;
 8000438:	2001      	movs	r0, #1
 800043a:	e7f6      	b.n	800042a <HAL_RCC_ClockConfig+0x13a>
 800043c:	40023c00 	andmi	r3, r2, r0, lsl #24
 8000440:	40023800 	andmi	r3, r2, r0, lsl #16
 8000444:	080022ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sp}
 8000448:	20000008 	andcs	r0, r0, r8
 800044c:	20000004 	andcs	r0, r0, r4

08000450 <HAL_RCC_OscConfig>:
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8000450:	2800      	cmp	r0, #0
 8000452:	f000 81e5 	beq.w	8000820 <HAL_RCC_OscConfig+0x3d0>
{
 8000456:	b570      	push	{r4, r5, r6, lr}
 8000458:	b082      	sub	sp, #8
 800045a:	4604      	mov	r4, r0
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800045c:	6803      	ldr	r3, [r0, #0]
 800045e:	f013 0f01 	tst.w	r3, #1
 8000462:	d03b      	beq.n	80004dc <HAL_RCC_OscConfig+0x8c>
#if defined(STM32F446xx)
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) ||\
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
#else
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8000464:	4b9f      	ldr	r3, [pc, #636]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 8000466:	689b      	ldr	r3, [r3, #8]
 8000468:	f003 030c 	and.w	r3, r3, #12
 800046c:	2b04      	cmp	r3, #4
 800046e:	d02c      	beq.n	80004ca <HAL_RCC_OscConfig+0x7a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8000470:	4b9c      	ldr	r3, [pc, #624]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 8000472:	689b      	ldr	r3, [r3, #8]
 8000474:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8000478:	2b08      	cmp	r3, #8
 800047a:	d021      	beq.n	80004c0 <HAL_RCC_OscConfig+0x70>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800047c:	6863      	ldr	r3, [r4, #4]
 800047e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8000482:	d04f      	beq.n	8000524 <HAL_RCC_OscConfig+0xd4>
 8000484:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8000488:	d052      	beq.n	8000530 <HAL_RCC_OscConfig+0xe0>
 800048a:	4b96      	ldr	r3, [pc, #600]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 800048c:	681a      	ldr	r2, [r3, #0]
 800048e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000492:	601a      	str	r2, [r3, #0]
 8000494:	681a      	ldr	r2, [r3, #0]
 8000496:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800049a:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800049c:	6863      	ldr	r3, [r4, #4]
 800049e:	2b00      	cmp	r3, #0
 80004a0:	d050      	beq.n	8000544 <HAL_RCC_OscConfig+0xf4>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80004a2:	f000 fa5b 	bl	800095c <HAL_GetTick>
 80004a6:	4605      	mov	r5, r0

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80004a8:	4b8e      	ldr	r3, [pc, #568]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80004b0:	d114      	bne.n	80004dc <HAL_RCC_OscConfig+0x8c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80004b2:	f000 fa53 	bl	800095c <HAL_GetTick>
 80004b6:	1b40      	subs	r0, r0, r5
 80004b8:	2864      	cmp	r0, #100	; 0x64
 80004ba:	d9f5      	bls.n	80004a8 <HAL_RCC_OscConfig+0x58>
          {
            return HAL_TIMEOUT;
 80004bc:	2003      	movs	r0, #3
 80004be:	e1b6      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80004c0:	4b88      	ldr	r3, [pc, #544]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 80004c2:	685b      	ldr	r3, [r3, #4]
 80004c4:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 80004c8:	d0d8      	beq.n	800047c <HAL_RCC_OscConfig+0x2c>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80004ca:	4b86      	ldr	r3, [pc, #536]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80004d2:	d003      	beq.n	80004dc <HAL_RCC_OscConfig+0x8c>
 80004d4:	6863      	ldr	r3, [r4, #4]
 80004d6:	2b00      	cmp	r3, #0
 80004d8:	f000 81a4 	beq.w	8000824 <HAL_RCC_OscConfig+0x3d4>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80004dc:	6823      	ldr	r3, [r4, #0]
 80004de:	f013 0f02 	tst.w	r3, #2
 80004e2:	d054      	beq.n	800058e <HAL_RCC_OscConfig+0x13e>
#if defined(STM32F446xx)
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) ||\
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
#else
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 80004e4:	4b7f      	ldr	r3, [pc, #508]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 80004e6:	689b      	ldr	r3, [r3, #8]
 80004e8:	f013 0f0c 	tst.w	r3, #12
 80004ec:	d03e      	beq.n	800056c <HAL_RCC_OscConfig+0x11c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80004ee:	4b7d      	ldr	r3, [pc, #500]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 80004f0:	689b      	ldr	r3, [r3, #8]
 80004f2:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 80004f6:	2b08      	cmp	r3, #8
 80004f8:	d033      	beq.n	8000562 <HAL_RCC_OscConfig+0x112>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80004fa:	68e3      	ldr	r3, [r4, #12]
 80004fc:	2b00      	cmp	r3, #0
 80004fe:	d15f      	bne.n	80005c0 <HAL_RCC_OscConfig+0x170>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8000500:	4b79      	ldr	r3, [pc, #484]	; (80006e8 <HAL_RCC_OscConfig+0x298>)
 8000502:	2200      	movs	r2, #0
 8000504:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8000506:	f000 fa29 	bl	800095c <HAL_GetTick>
 800050a:	4605      	mov	r5, r0

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800050c:	4b75      	ldr	r3, [pc, #468]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	f013 0f02 	tst.w	r3, #2
 8000514:	d03b      	beq.n	800058e <HAL_RCC_OscConfig+0x13e>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8000516:	f000 fa21 	bl	800095c <HAL_GetTick>
 800051a:	1b40      	subs	r0, r0, r5
 800051c:	2802      	cmp	r0, #2
 800051e:	d9f5      	bls.n	800050c <HAL_RCC_OscConfig+0xbc>
          {
            return HAL_TIMEOUT;
 8000520:	2003      	movs	r0, #3
 8000522:	e184      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8000524:	4a6f      	ldr	r2, [pc, #444]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 8000526:	6813      	ldr	r3, [r2, #0]
 8000528:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800052c:	6013      	str	r3, [r2, #0]
 800052e:	e7b5      	b.n	800049c <HAL_RCC_OscConfig+0x4c>
 8000530:	4b6c      	ldr	r3, [pc, #432]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 8000532:	681a      	ldr	r2, [r3, #0]
 8000534:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8000538:	601a      	str	r2, [r3, #0]
 800053a:	681a      	ldr	r2, [r3, #0]
 800053c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000540:	601a      	str	r2, [r3, #0]
 8000542:	e7ab      	b.n	800049c <HAL_RCC_OscConfig+0x4c>
        tickstart = HAL_GetTick();
 8000544:	f000 fa0a 	bl	800095c <HAL_GetTick>
 8000548:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800054a:	4b66      	ldr	r3, [pc, #408]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8000552:	d0c3      	beq.n	80004dc <HAL_RCC_OscConfig+0x8c>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8000554:	f000 fa02 	bl	800095c <HAL_GetTick>
 8000558:	1b40      	subs	r0, r0, r5
 800055a:	2864      	cmp	r0, #100	; 0x64
 800055c:	d9f5      	bls.n	800054a <HAL_RCC_OscConfig+0xfa>
            return HAL_TIMEOUT;
 800055e:	2003      	movs	r0, #3
 8000560:	e165      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8000562:	4b60      	ldr	r3, [pc, #384]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 8000564:	685b      	ldr	r3, [r3, #4]
 8000566:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 800056a:	d1c6      	bne.n	80004fa <HAL_RCC_OscConfig+0xaa>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800056c:	4b5d      	ldr	r3, [pc, #372]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	f013 0f02 	tst.w	r3, #2
 8000574:	d003      	beq.n	800057e <HAL_RCC_OscConfig+0x12e>
 8000576:	68e3      	ldr	r3, [r4, #12]
 8000578:	2b01      	cmp	r3, #1
 800057a:	f040 8155 	bne.w	8000828 <HAL_RCC_OscConfig+0x3d8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800057e:	4a59      	ldr	r2, [pc, #356]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 8000580:	6813      	ldr	r3, [r2, #0]
 8000582:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8000586:	6921      	ldr	r1, [r4, #16]
 8000588:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800058c:	6013      	str	r3, [r2, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800058e:	6823      	ldr	r3, [r4, #0]
 8000590:	f013 0f08 	tst.w	r3, #8
 8000594:	d042      	beq.n	800061c <HAL_RCC_OscConfig+0x1cc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8000596:	6963      	ldr	r3, [r4, #20]
 8000598:	b36b      	cbz	r3, 80005f6 <HAL_RCC_OscConfig+0x1a6>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800059a:	4b53      	ldr	r3, [pc, #332]	; (80006e8 <HAL_RCC_OscConfig+0x298>)
 800059c:	2201      	movs	r2, #1
 800059e:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80005a2:	f000 f9db 	bl	800095c <HAL_GetTick>
 80005a6:	4605      	mov	r5, r0

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80005a8:	4b4e      	ldr	r3, [pc, #312]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 80005aa:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80005ac:	f013 0f02 	tst.w	r3, #2
 80005b0:	d134      	bne.n	800061c <HAL_RCC_OscConfig+0x1cc>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80005b2:	f000 f9d3 	bl	800095c <HAL_GetTick>
 80005b6:	1b40      	subs	r0, r0, r5
 80005b8:	2802      	cmp	r0, #2
 80005ba:	d9f5      	bls.n	80005a8 <HAL_RCC_OscConfig+0x158>
        {
          return HAL_TIMEOUT;
 80005bc:	2003      	movs	r0, #3
 80005be:	e136      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
        __HAL_RCC_HSI_ENABLE();
 80005c0:	4b49      	ldr	r3, [pc, #292]	; (80006e8 <HAL_RCC_OscConfig+0x298>)
 80005c2:	2201      	movs	r2, #1
 80005c4:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80005c6:	f000 f9c9 	bl	800095c <HAL_GetTick>
 80005ca:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80005cc:	4b45      	ldr	r3, [pc, #276]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	f013 0f02 	tst.w	r3, #2
 80005d4:	d106      	bne.n	80005e4 <HAL_RCC_OscConfig+0x194>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80005d6:	f000 f9c1 	bl	800095c <HAL_GetTick>
 80005da:	1b40      	subs	r0, r0, r5
 80005dc:	2802      	cmp	r0, #2
 80005de:	d9f5      	bls.n	80005cc <HAL_RCC_OscConfig+0x17c>
            return HAL_TIMEOUT;
 80005e0:	2003      	movs	r0, #3
 80005e2:	e124      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80005e4:	4a3f      	ldr	r2, [pc, #252]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 80005e6:	6813      	ldr	r3, [r2, #0]
 80005e8:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80005ec:	6921      	ldr	r1, [r4, #16]
 80005ee:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80005f2:	6013      	str	r3, [r2, #0]
 80005f4:	e7cb      	b.n	800058e <HAL_RCC_OscConfig+0x13e>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80005f6:	4b3c      	ldr	r3, [pc, #240]	; (80006e8 <HAL_RCC_OscConfig+0x298>)
 80005f8:	2200      	movs	r2, #0
 80005fa:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80005fe:	f000 f9ad 	bl	800095c <HAL_GetTick>
 8000602:	4605      	mov	r5, r0

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8000604:	4b37      	ldr	r3, [pc, #220]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 8000606:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8000608:	f013 0f02 	tst.w	r3, #2
 800060c:	d006      	beq.n	800061c <HAL_RCC_OscConfig+0x1cc>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800060e:	f000 f9a5 	bl	800095c <HAL_GetTick>
 8000612:	1b40      	subs	r0, r0, r5
 8000614:	2802      	cmp	r0, #2
 8000616:	d9f5      	bls.n	8000604 <HAL_RCC_OscConfig+0x1b4>
        {
          return HAL_TIMEOUT;
 8000618:	2003      	movs	r0, #3
 800061a:	e108      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800061c:	6823      	ldr	r3, [r4, #0]
 800061e:	f013 0f04 	tst.w	r3, #4
 8000622:	d077      	beq.n	8000714 <HAL_RCC_OscConfig+0x2c4>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8000624:	4b2f      	ldr	r3, [pc, #188]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 8000626:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000628:	f013 5f80 	tst.w	r3, #268435456	; 0x10000000
 800062c:	d133      	bne.n	8000696 <HAL_RCC_OscConfig+0x246>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800062e:	2300      	movs	r3, #0
 8000630:	9301      	str	r3, [sp, #4]
 8000632:	4b2c      	ldr	r3, [pc, #176]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 8000634:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000636:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800063a:	641a      	str	r2, [r3, #64]	; 0x40
 800063c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800063e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000642:	9301      	str	r3, [sp, #4]
 8000644:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8000646:	2501      	movs	r5, #1
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8000648:	4b28      	ldr	r3, [pc, #160]	; (80006ec <HAL_RCC_OscConfig+0x29c>)
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	f413 7f80 	tst.w	r3, #256	; 0x100
 8000650:	d023      	beq.n	800069a <HAL_RCC_OscConfig+0x24a>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8000652:	68a3      	ldr	r3, [r4, #8]
 8000654:	2b01      	cmp	r3, #1
 8000656:	d034      	beq.n	80006c2 <HAL_RCC_OscConfig+0x272>
 8000658:	2b05      	cmp	r3, #5
 800065a:	d038      	beq.n	80006ce <HAL_RCC_OscConfig+0x27e>
 800065c:	4b21      	ldr	r3, [pc, #132]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 800065e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8000660:	f022 0201 	bic.w	r2, r2, #1
 8000664:	671a      	str	r2, [r3, #112]	; 0x70
 8000666:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8000668:	f022 0204 	bic.w	r2, r2, #4
 800066c:	671a      	str	r2, [r3, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800066e:	68a3      	ldr	r3, [r4, #8]
 8000670:	2b00      	cmp	r3, #0
 8000672:	d03d      	beq.n	80006f0 <HAL_RCC_OscConfig+0x2a0>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8000674:	f000 f972 	bl	800095c <HAL_GetTick>
 8000678:	4606      	mov	r6, r0

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800067a:	4b1a      	ldr	r3, [pc, #104]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 800067c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800067e:	f013 0f02 	tst.w	r3, #2
 8000682:	d146      	bne.n	8000712 <HAL_RCC_OscConfig+0x2c2>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8000684:	f000 f96a 	bl	800095c <HAL_GetTick>
 8000688:	1b80      	subs	r0, r0, r6
 800068a:	f241 3388 	movw	r3, #5000	; 0x1388
 800068e:	4298      	cmp	r0, r3
 8000690:	d9f3      	bls.n	800067a <HAL_RCC_OscConfig+0x22a>
        {
          return HAL_TIMEOUT;
 8000692:	2003      	movs	r0, #3
 8000694:	e0cb      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
    FlagStatus       pwrclkchanged = RESET;
 8000696:	2500      	movs	r5, #0
 8000698:	e7d6      	b.n	8000648 <HAL_RCC_OscConfig+0x1f8>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800069a:	4a14      	ldr	r2, [pc, #80]	; (80006ec <HAL_RCC_OscConfig+0x29c>)
 800069c:	6813      	ldr	r3, [r2, #0]
 800069e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80006a2:	6013      	str	r3, [r2, #0]
      tickstart = HAL_GetTick();
 80006a4:	f000 f95a 	bl	800095c <HAL_GetTick>
 80006a8:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80006aa:	4b10      	ldr	r3, [pc, #64]	; (80006ec <HAL_RCC_OscConfig+0x29c>)
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	f413 7f80 	tst.w	r3, #256	; 0x100
 80006b2:	d1ce      	bne.n	8000652 <HAL_RCC_OscConfig+0x202>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80006b4:	f000 f952 	bl	800095c <HAL_GetTick>
 80006b8:	1b80      	subs	r0, r0, r6
 80006ba:	2802      	cmp	r0, #2
 80006bc:	d9f5      	bls.n	80006aa <HAL_RCC_OscConfig+0x25a>
          return HAL_TIMEOUT;
 80006be:	2003      	movs	r0, #3
 80006c0:	e0b5      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80006c2:	4a08      	ldr	r2, [pc, #32]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 80006c4:	6f13      	ldr	r3, [r2, #112]	; 0x70
 80006c6:	f043 0301 	orr.w	r3, r3, #1
 80006ca:	6713      	str	r3, [r2, #112]	; 0x70
 80006cc:	e7cf      	b.n	800066e <HAL_RCC_OscConfig+0x21e>
 80006ce:	4b05      	ldr	r3, [pc, #20]	; (80006e4 <HAL_RCC_OscConfig+0x294>)
 80006d0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80006d2:	f042 0204 	orr.w	r2, r2, #4
 80006d6:	671a      	str	r2, [r3, #112]	; 0x70
 80006d8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80006da:	f042 0201 	orr.w	r2, r2, #1
 80006de:	671a      	str	r2, [r3, #112]	; 0x70
 80006e0:	e7c5      	b.n	800066e <HAL_RCC_OscConfig+0x21e>
 80006e2:	bf00      	nop
 80006e4:	40023800 	andmi	r3, r2, r0, lsl #16
 80006e8:	42470000 	submi	r0, r7, #0
 80006ec:	40007000 	andmi	r7, r0, r0
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80006f0:	f000 f934 	bl	800095c <HAL_GetTick>
 80006f4:	4606      	mov	r6, r0

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80006f6:	4b58      	ldr	r3, [pc, #352]	; (8000858 <HAL_RCC_OscConfig+0x408>)
 80006f8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80006fa:	f013 0f02 	tst.w	r3, #2
 80006fe:	d008      	beq.n	8000712 <HAL_RCC_OscConfig+0x2c2>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8000700:	f000 f92c 	bl	800095c <HAL_GetTick>
 8000704:	1b80      	subs	r0, r0, r6
 8000706:	f241 3388 	movw	r3, #5000	; 0x1388
 800070a:	4298      	cmp	r0, r3
 800070c:	d9f3      	bls.n	80006f6 <HAL_RCC_OscConfig+0x2a6>
        {
          return HAL_TIMEOUT;
 800070e:	2003      	movs	r0, #3
 8000710:	e08d      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8000712:	b9ed      	cbnz	r5, 8000750 <HAL_RCC_OscConfig+0x300>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8000714:	69a3      	ldr	r3, [r4, #24]
 8000716:	2b00      	cmp	r3, #0
 8000718:	f000 8088 	beq.w	800082c <HAL_RCC_OscConfig+0x3dc>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800071c:	4a4e      	ldr	r2, [pc, #312]	; (8000858 <HAL_RCC_OscConfig+0x408>)
 800071e:	6892      	ldr	r2, [r2, #8]
 8000720:	f002 020c 	and.w	r2, r2, #12
 8000724:	2a08      	cmp	r2, #8
 8000726:	d050      	beq.n	80007ca <HAL_RCC_OscConfig+0x37a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8000728:	2b02      	cmp	r3, #2
 800072a:	d017      	beq.n	800075c <HAL_RCC_OscConfig+0x30c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800072c:	4b4b      	ldr	r3, [pc, #300]	; (800085c <HAL_RCC_OscConfig+0x40c>)
 800072e:	2200      	movs	r2, #0
 8000730:	661a      	str	r2, [r3, #96]	; 0x60

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8000732:	f000 f913 	bl	800095c <HAL_GetTick>
 8000736:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8000738:	4b47      	ldr	r3, [pc, #284]	; (8000858 <HAL_RCC_OscConfig+0x408>)
 800073a:	681b      	ldr	r3, [r3, #0]
 800073c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8000740:	d079      	beq.n	8000836 <HAL_RCC_OscConfig+0x3e6>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8000742:	f000 f90b 	bl	800095c <HAL_GetTick>
 8000746:	1b00      	subs	r0, r0, r4
 8000748:	2802      	cmp	r0, #2
 800074a:	d9f5      	bls.n	8000738 <HAL_RCC_OscConfig+0x2e8>
          {
            return HAL_TIMEOUT;
 800074c:	2003      	movs	r0, #3
 800074e:	e06e      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
      __HAL_RCC_PWR_CLK_DISABLE();
 8000750:	4a41      	ldr	r2, [pc, #260]	; (8000858 <HAL_RCC_OscConfig+0x408>)
 8000752:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8000754:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8000758:	6413      	str	r3, [r2, #64]	; 0x40
 800075a:	e7db      	b.n	8000714 <HAL_RCC_OscConfig+0x2c4>
        __HAL_RCC_PLL_DISABLE();
 800075c:	4b3f      	ldr	r3, [pc, #252]	; (800085c <HAL_RCC_OscConfig+0x40c>)
 800075e:	2200      	movs	r2, #0
 8000760:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8000762:	f000 f8fb 	bl	800095c <HAL_GetTick>
 8000766:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8000768:	4b3b      	ldr	r3, [pc, #236]	; (8000858 <HAL_RCC_OscConfig+0x408>)
 800076a:	681b      	ldr	r3, [r3, #0]
 800076c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8000770:	d006      	beq.n	8000780 <HAL_RCC_OscConfig+0x330>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8000772:	f000 f8f3 	bl	800095c <HAL_GetTick>
 8000776:	1b40      	subs	r0, r0, r5
 8000778:	2802      	cmp	r0, #2
 800077a:	d9f5      	bls.n	8000768 <HAL_RCC_OscConfig+0x318>
            return HAL_TIMEOUT;
 800077c:	2003      	movs	r0, #3
 800077e:	e056      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8000780:	69e3      	ldr	r3, [r4, #28]
 8000782:	6a22      	ldr	r2, [r4, #32]
 8000784:	4313      	orrs	r3, r2
 8000786:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000788:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800078c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800078e:	0852      	lsrs	r2, r2, #1
 8000790:	3a01      	subs	r2, #1
 8000792:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000796:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8000798:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800079c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800079e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80007a2:	4a2d      	ldr	r2, [pc, #180]	; (8000858 <HAL_RCC_OscConfig+0x408>)
 80007a4:	6053      	str	r3, [r2, #4]
        __HAL_RCC_PLL_ENABLE();
 80007a6:	4b2d      	ldr	r3, [pc, #180]	; (800085c <HAL_RCC_OscConfig+0x40c>)
 80007a8:	2201      	movs	r2, #1
 80007aa:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80007ac:	f000 f8d6 	bl	800095c <HAL_GetTick>
 80007b0:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80007b2:	4b29      	ldr	r3, [pc, #164]	; (8000858 <HAL_RCC_OscConfig+0x408>)
 80007b4:	681b      	ldr	r3, [r3, #0]
 80007b6:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80007ba:	d13a      	bne.n	8000832 <HAL_RCC_OscConfig+0x3e2>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80007bc:	f000 f8ce 	bl	800095c <HAL_GetTick>
 80007c0:	1b00      	subs	r0, r0, r4
 80007c2:	2802      	cmp	r0, #2
 80007c4:	d9f5      	bls.n	80007b2 <HAL_RCC_OscConfig+0x362>
            return HAL_TIMEOUT;
 80007c6:	2003      	movs	r0, #3
 80007c8:	e031      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80007ca:	2b01      	cmp	r3, #1
 80007cc:	d035      	beq.n	800083a <HAL_RCC_OscConfig+0x3ea>
        return HAL_ERROR;
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 80007ce:	4b22      	ldr	r3, [pc, #136]	; (8000858 <HAL_RCC_OscConfig+0x408>)
 80007d0:	685b      	ldr	r3, [r3, #4]
#if defined (RCC_PLLCFGR_PLLR)
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80007d2:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 80007d6:	69e2      	ldr	r2, [r4, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80007d8:	4291      	cmp	r1, r2
 80007da:	d130      	bne.n	800083e <HAL_RCC_OscConfig+0x3ee>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80007dc:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80007e0:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80007e2:	428a      	cmp	r2, r1
 80007e4:	d12d      	bne.n	8000842 <HAL_RCC_OscConfig+0x3f2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80007e6:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80007e8:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 80007ec:	401a      	ands	r2, r3
 80007ee:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80007f2:	d128      	bne.n	8000846 <HAL_RCC_OscConfig+0x3f6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80007f4:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 80007f8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80007fa:	0852      	lsrs	r2, r2, #1
 80007fc:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80007fe:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8000802:	d122      	bne.n	800084a <HAL_RCC_OscConfig+0x3fa>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8000804:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8000808:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800080a:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800080e:	d11e      	bne.n	800084e <HAL_RCC_OscConfig+0x3fe>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 8000810:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8000814:	6b22      	ldr	r2, [r4, #48]	; 0x30
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8000816:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 800081a:	d11a      	bne.n	8000852 <HAL_RCC_OscConfig+0x402>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800081c:	2000      	movs	r0, #0
 800081e:	e006      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
    return HAL_ERROR;
 8000820:	2001      	movs	r0, #1
}
 8000822:	4770      	bx	lr
        return HAL_ERROR;
 8000824:	2001      	movs	r0, #1
 8000826:	e002      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
        return HAL_ERROR;
 8000828:	2001      	movs	r0, #1
 800082a:	e000      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
  return HAL_OK;
 800082c:	2000      	movs	r0, #0
}
 800082e:	b002      	add	sp, #8
 8000830:	bd70      	pop	{r4, r5, r6, pc}
  return HAL_OK;
 8000832:	2000      	movs	r0, #0
 8000834:	e7fb      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
 8000836:	2000      	movs	r0, #0
 8000838:	e7f9      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
        return HAL_ERROR;
 800083a:	2001      	movs	r0, #1
 800083c:	e7f7      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
          return HAL_ERROR;
 800083e:	2001      	movs	r0, #1
 8000840:	e7f5      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
 8000842:	2001      	movs	r0, #1
 8000844:	e7f3      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
 8000846:	2001      	movs	r0, #1
 8000848:	e7f1      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
 800084a:	2001      	movs	r0, #1
 800084c:	e7ef      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
 800084e:	2001      	movs	r0, #1
 8000850:	e7ed      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
 8000852:	2001      	movs	r0, #1
 8000854:	e7eb      	b.n	800082e <HAL_RCC_OscConfig+0x3de>
 8000856:	bf00      	nop
 8000858:	40023800 	andmi	r3, r2, r0, lsl #16
 800085c:	42470000 	submi	r0, r7, #0

08000860 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8000860:	b500      	push	{lr}
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8000862:	4b19      	ldr	r3, [pc, #100]	; (80008c8 <HAL_NVIC_SetPriority+0x68>)
 8000864:	68db      	ldr	r3, [r3, #12]
 8000866:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800086a:	f1c3 0c07 	rsb	ip, r3, #7
 800086e:	f1bc 0f04 	cmp.w	ip, #4
 8000872:	bf28      	it	cs
 8000874:	f04f 0c04 	movcs.w	ip, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8000878:	f103 0e04 	add.w	lr, r3, #4
 800087c:	f1be 0f06 	cmp.w	lr, #6
 8000880:	d918      	bls.n	80008b4 <HAL_NVIC_SetPriority+0x54>
 8000882:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000884:	f04f 3eff 	mov.w	lr, #4294967295	; 0xffffffff
 8000888:	fa0e fc0c 	lsl.w	ip, lr, ip
 800088c:	ea21 010c 	bic.w	r1, r1, ip
 8000890:	4099      	lsls	r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8000892:	fa0e f303 	lsl.w	r3, lr, r3
 8000896:	ea22 0303 	bic.w	r3, r2, r3
         );
 800089a:	4319      	orrs	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800089c:	2800      	cmp	r0, #0
 800089e:	db0b      	blt.n	80008b8 <HAL_NVIC_SetPriority+0x58>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80008a0:	0109      	lsls	r1, r1, #4
 80008a2:	b2c9      	uxtb	r1, r1
 80008a4:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 80008a8:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 80008ac:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80008b0:	f85d fb04 	ldr.w	pc, [sp], #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80008b4:	2300      	movs	r3, #0
 80008b6:	e7e5      	b.n	8000884 <HAL_NVIC_SetPriority+0x24>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80008b8:	f000 000f 	and.w	r0, r0, #15
 80008bc:	0109      	lsls	r1, r1, #4
 80008be:	b2c9      	uxtb	r1, r1
 80008c0:	4b02      	ldr	r3, [pc, #8]	; (80008cc <HAL_NVIC_SetPriority+0x6c>)
 80008c2:	5419      	strb	r1, [r3, r0]
 80008c4:	e7f4      	b.n	80008b0 <HAL_NVIC_SetPriority+0x50>
 80008c6:	bf00      	nop
 80008c8:	e000ed00 	and	lr, r0, r0, lsl #26
 80008cc:	e000ed14 	and	lr, r0, r4, lsl sp

080008d0 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80008d0:	3801      	subs	r0, #1
 80008d2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80008d6:	d20b      	bcs.n	80008f0 <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80008d8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80008dc:	6158      	str	r0, [r3, #20]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80008de:	4a05      	ldr	r2, [pc, #20]	; (80008f4 <HAL_SYSTICK_Config+0x24>)
 80008e0:	21f0      	movs	r1, #240	; 0xf0
 80008e2:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80008e6:	2000      	movs	r0, #0
 80008e8:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80008ea:	2207      	movs	r2, #7
 80008ec:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80008ee:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80008f0:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 80008f2:	4770      	bx	lr
 80008f4:	e000ed00 	and	lr, r0, r0, lsl #26

080008f8 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80008f8:	b510      	push	{r4, lr}
 80008fa:	4604      	mov	r4, r0
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80008fc:	4b0e      	ldr	r3, [pc, #56]	; (8000938 <HAL_InitTick+0x40>)
 80008fe:	7818      	ldrb	r0, [r3, #0]
 8000900:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000904:	fbb3 f3f0 	udiv	r3, r3, r0
 8000908:	4a0c      	ldr	r2, [pc, #48]	; (800093c <HAL_InitTick+0x44>)
 800090a:	6810      	ldr	r0, [r2, #0]
 800090c:	fbb0 f0f3 	udiv	r0, r0, r3
 8000910:	f7ff ffde 	bl	80008d0 <HAL_SYSTICK_Config>
 8000914:	b968      	cbnz	r0, 8000932 <HAL_InitTick+0x3a>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000916:	2c0f      	cmp	r4, #15
 8000918:	d901      	bls.n	800091e <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 800091a:	2001      	movs	r0, #1
 800091c:	e00a      	b.n	8000934 <HAL_InitTick+0x3c>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800091e:	2200      	movs	r2, #0
 8000920:	4621      	mov	r1, r4
 8000922:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000926:	f7ff ff9b 	bl	8000860 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 800092a:	4b05      	ldr	r3, [pc, #20]	; (8000940 <HAL_InitTick+0x48>)
 800092c:	601c      	str	r4, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800092e:	2000      	movs	r0, #0
 8000930:	e000      	b.n	8000934 <HAL_InitTick+0x3c>
    return HAL_ERROR;
 8000932:	2001      	movs	r0, #1
}
 8000934:	bd10      	pop	{r4, pc}
 8000936:	bf00      	nop
 8000938:	20000000 	andcs	r0, r0, r0
 800093c:	20000008 	andcs	r0, r0, r8
 8000940:	20000004 	andcs	r0, r0, r4

08000944 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8000944:	4b03      	ldr	r3, [pc, #12]	; (8000954 <HAL_IncTick+0x10>)
 8000946:	781b      	ldrb	r3, [r3, #0]
 8000948:	4a03      	ldr	r2, [pc, #12]	; (8000958 <HAL_IncTick+0x14>)
 800094a:	6811      	ldr	r1, [r2, #0]
 800094c:	440b      	add	r3, r1
 800094e:	6013      	str	r3, [r2, #0]
}
 8000950:	4770      	bx	lr
 8000952:	bf00      	nop
 8000954:	20000000 	andcs	r0, r0, r0
 8000958:	20000458 	andcs	r0, r0, r8, asr r4

0800095c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800095c:	4b01      	ldr	r3, [pc, #4]	; (8000964 <HAL_GetTick+0x8>)
 800095e:	6818      	ldr	r0, [r3, #0]
}
 8000960:	4770      	bx	lr
 8000962:	bf00      	nop
 8000964:	20000458 	andcs	r0, r0, r8, asr r4

08000968 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8000968:	b538      	push	{r3, r4, r5, lr}
 800096a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800096c:	f7ff fff6 	bl	800095c <HAL_GetTick>
 8000970:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8000972:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
 8000976:	d002      	beq.n	800097e <HAL_Delay+0x16>
  {
    wait += (uint32_t)(uwTickFreq);
 8000978:	4b04      	ldr	r3, [pc, #16]	; (800098c <HAL_Delay+0x24>)
 800097a:	781b      	ldrb	r3, [r3, #0]
 800097c:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800097e:	f7ff ffed 	bl	800095c <HAL_GetTick>
 8000982:	1b40      	subs	r0, r0, r5
 8000984:	42a0      	cmp	r0, r4
 8000986:	d3fa      	bcc.n	800097e <HAL_Delay+0x16>
  {
  }
}
 8000988:	bd38      	pop	{r3, r4, r5, pc}
 800098a:	bf00      	nop
 800098c:	20000000 	andcs	r0, r0, r0

08000990 <Reset_Handler>:
{
 8000990:	b508      	push	{r3, lr}
    for (uint32_t* bss_ptr = &_sbss; bss_ptr < &_ebss;)
 8000992:	4b0f      	ldr	r3, [pc, #60]	; (80009d0 <Reset_Handler+0x40>)
 8000994:	4a0f      	ldr	r2, [pc, #60]	; (80009d4 <Reset_Handler+0x44>)
 8000996:	4293      	cmp	r3, r2
 8000998:	d203      	bcs.n	80009a2 <Reset_Handler+0x12>
        *bss_ptr++ = 0;
 800099a:	2200      	movs	r2, #0
 800099c:	f843 2b04 	str.w	r2, [r3], #4
    for (uint32_t* bss_ptr = &_sbss; bss_ptr < &_ebss;)
 80009a0:	e7f8      	b.n	8000994 <Reset_Handler+0x4>
    if (init_values_ptr != data_ptr)
 80009a2:	4a0d      	ldr	r2, [pc, #52]	; (80009d8 <Reset_Handler+0x48>)
 80009a4:	4b0d      	ldr	r3, [pc, #52]	; (80009dc <Reset_Handler+0x4c>)
 80009a6:	429a      	cmp	r2, r3
 80009a8:	d104      	bne.n	80009b4 <Reset_Handler+0x24>
 80009aa:	e006      	b.n	80009ba <Reset_Handler+0x2a>
            *data_ptr++ = *init_values_ptr++;
 80009ac:	f852 1b04 	ldr.w	r1, [r2], #4
 80009b0:	f843 1b04 	str.w	r1, [r3], #4
        for (; data_ptr < &_edata;)
 80009b4:	490a      	ldr	r1, [pc, #40]	; (80009e0 <Reset_Handler+0x50>)
 80009b6:	428b      	cmp	r3, r1
 80009b8:	d3f8      	bcc.n	80009ac <Reset_Handler+0x1c>
    *CPACR = (3 << 20) | (3 << 22);
 80009ba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80009be:	f44f 0270 	mov.w	r2, #15728640	; 0xf00000
 80009c2:	f8c3 2d88 	str.w	r2, [r3, #3464]	; 0xd88
    __libc_init_array();
 80009c6:	f000 f999 	bl	8000cfc <__libc_init_array>
    main();
 80009ca:	f000 f94d 	bl	8000c68 <main>
    while (1);
 80009ce:	e7fe      	b.n	80009ce <Reset_Handler+0x3e>
 80009d0:	2000043c 	andcs	r0, r0, ip, lsr r4
 80009d4:	20000464 	andcs	r0, r0, r4, ror #8
 80009d8:	08002404 	stmdaeq	r0, {r2, sl, sp}
 80009dc:	20000000 	andcs	r0, r0, r0
 80009e0:	2000043c 	andcs	r0, r0, ip, lsr r4

080009e4 <Default_Handler>:
    while (1);
 80009e4:	e7fe      	b.n	80009e4 <Default_Handler>

080009e6 <WWDG_IRQHandler>:
__weak void WWDG_IRQHandler(void)                { Default_Handler(); }   /* Window WatchDog                             */
 80009e6:	b508      	push	{r3, lr}
 80009e8:	f7ff fffc 	bl	80009e4 <Default_Handler>

080009ec <PVD_IRQHandler>:
__weak void PVD_IRQHandler(void)                 { Default_Handler(); }   /* PVD through EXTI Line detection             */
 80009ec:	b508      	push	{r3, lr}
 80009ee:	f7ff fff9 	bl	80009e4 <Default_Handler>

080009f2 <TAMP_STAMP_IRQHandler>:
__weak void TAMP_STAMP_IRQHandler(void)          { Default_Handler(); }   /* Tamper and TimeStamps through the EXTI line */
 80009f2:	b508      	push	{r3, lr}
 80009f4:	f7ff fff6 	bl	80009e4 <Default_Handler>

080009f8 <RTC_WKUP_IRQHandler>:
__weak void RTC_WKUP_IRQHandler(void)            { Default_Handler(); }   /* RTC Wakeup through the EXTI line            */
 80009f8:	b508      	push	{r3, lr}
 80009fa:	f7ff fff3 	bl	80009e4 <Default_Handler>

080009fe <FLASH_IRQHandler>:
__weak void FLASH_IRQHandler(void)               { Default_Handler(); }   /* FLASH                                       */
 80009fe:	b508      	push	{r3, lr}
 8000a00:	f7ff fff0 	bl	80009e4 <Default_Handler>

08000a04 <RCC_IRQHandler>:
__weak void RCC_IRQHandler(void)                 { Default_Handler(); }   /* RCC                                         */
 8000a04:	b508      	push	{r3, lr}
 8000a06:	f7ff ffed 	bl	80009e4 <Default_Handler>

08000a0a <EXTI0_IRQHandler>:
__weak void EXTI0_IRQHandler(void)               { Default_Handler(); }   /* EXTI Line0                                  */
 8000a0a:	b508      	push	{r3, lr}
 8000a0c:	f7ff ffea 	bl	80009e4 <Default_Handler>

08000a10 <EXTI1_IRQHandler>:
__weak void EXTI1_IRQHandler(void)               { Default_Handler(); }   /* EXTI Line1                                  */
 8000a10:	b508      	push	{r3, lr}
 8000a12:	f7ff ffe7 	bl	80009e4 <Default_Handler>

08000a16 <EXTI2_IRQHandler>:
__weak void EXTI2_IRQHandler(void)               { Default_Handler(); }   /* EXTI Line2                                  */
 8000a16:	b508      	push	{r3, lr}
 8000a18:	f7ff ffe4 	bl	80009e4 <Default_Handler>

08000a1c <EXTI3_IRQHandler>:
__weak void EXTI3_IRQHandler(void)               { Default_Handler(); }   /* EXTI Line3                                  */
 8000a1c:	b508      	push	{r3, lr}
 8000a1e:	f7ff ffe1 	bl	80009e4 <Default_Handler>

08000a22 <EXTI4_IRQHandler>:
__weak void EXTI4_IRQHandler(void)               { Default_Handler(); }   /* EXTI Line4                                  */
 8000a22:	b508      	push	{r3, lr}
 8000a24:	f7ff ffde 	bl	80009e4 <Default_Handler>

08000a28 <DMA1_Stream0_IRQHandler>:
__weak void DMA1_Stream0_IRQHandler(void)        { Default_Handler(); }   /* DMA1 Stream 0                               */
 8000a28:	b508      	push	{r3, lr}
 8000a2a:	f7ff ffdb 	bl	80009e4 <Default_Handler>

08000a2e <DMA1_Stream1_IRQHandler>:
__weak void DMA1_Stream1_IRQHandler(void)        { Default_Handler(); }   /* DMA1 Stream 1                               */
 8000a2e:	b508      	push	{r3, lr}
 8000a30:	f7ff ffd8 	bl	80009e4 <Default_Handler>

08000a34 <DMA1_Stream2_IRQHandler>:
__weak void DMA1_Stream2_IRQHandler(void)        { Default_Handler(); }   /* DMA1 Stream 2                               */
 8000a34:	b508      	push	{r3, lr}
 8000a36:	f7ff ffd5 	bl	80009e4 <Default_Handler>

08000a3a <DMA1_Stream3_IRQHandler>:
__weak void DMA1_Stream3_IRQHandler(void)        { Default_Handler(); }   /* DMA1 Stream 3                               */
 8000a3a:	b508      	push	{r3, lr}
 8000a3c:	f7ff ffd2 	bl	80009e4 <Default_Handler>

08000a40 <DMA1_Stream4_IRQHandler>:
__weak void DMA1_Stream4_IRQHandler(void)        { Default_Handler(); }   /* DMA1 Stream 4                               */
 8000a40:	b508      	push	{r3, lr}
 8000a42:	f7ff ffcf 	bl	80009e4 <Default_Handler>

08000a46 <DMA1_Stream5_IRQHandler>:
__weak void DMA1_Stream5_IRQHandler(void)        { Default_Handler(); }   /* DMA1 Stream 5                               */
 8000a46:	b508      	push	{r3, lr}
 8000a48:	f7ff ffcc 	bl	80009e4 <Default_Handler>

08000a4c <DMA1_Stream6_IRQHandler>:
__weak void DMA1_Stream6_IRQHandler(void)        { Default_Handler(); }   /* DMA1 Stream 6                               */
 8000a4c:	b508      	push	{r3, lr}
 8000a4e:	f7ff ffc9 	bl	80009e4 <Default_Handler>

08000a52 <ADC_IRQHandler>:
__weak void ADC_IRQHandler(void)                 { Default_Handler(); }   /* ADC1, ADC2 and ADC3s                        */
 8000a52:	b508      	push	{r3, lr}
 8000a54:	f7ff ffc6 	bl	80009e4 <Default_Handler>

08000a58 <CAN1_TX_IRQHandler>:
__weak void CAN1_TX_IRQHandler(void)             { Default_Handler(); }   /* CAN1 TX                                     */
 8000a58:	b508      	push	{r3, lr}
 8000a5a:	f7ff ffc3 	bl	80009e4 <Default_Handler>

08000a5e <CAN1_RX1_IRQHandler>:
__weak void CAN1_RX1_IRQHandler(void)            { Default_Handler(); }   /* CAN1 RX1                                    */
 8000a5e:	b508      	push	{r3, lr}
 8000a60:	f7ff ffc0 	bl	80009e4 <Default_Handler>

08000a64 <CAN1_SCE_IRQHandler>:
__weak void CAN1_SCE_IRQHandler(void)            { Default_Handler(); }   /* CAN1 SCE                                    */
 8000a64:	b508      	push	{r3, lr}
 8000a66:	f7ff ffbd 	bl	80009e4 <Default_Handler>

08000a6a <CAN1_RX0_IRQHandler>:
__weak void CAN1_RX0_IRQHandler(void)            { Default_Handler(); }   /* CAN1 RX0                                    */
 8000a6a:	b508      	push	{r3, lr}
 8000a6c:	f7ff ffba 	bl	80009e4 <Default_Handler>

08000a70 <EXTI9_5_IRQHandler>:
__weak void EXTI9_5_IRQHandler(void)             { Default_Handler(); }   /* External Line[9:5]s                         */
 8000a70:	b508      	push	{r3, lr}
 8000a72:	f7ff ffb7 	bl	80009e4 <Default_Handler>

08000a76 <TIM1_BRK_TIM9_IRQHandler>:
__weak void TIM1_BRK_TIM9_IRQHandler(void)       { Default_Handler(); }   /* TIM1 Break and TIM9                         */
 8000a76:	b508      	push	{r3, lr}
 8000a78:	f7ff ffb4 	bl	80009e4 <Default_Handler>

08000a7c <TIM1_UP_TIM10_IRQHandler>:
__weak void TIM1_UP_TIM10_IRQHandler(void)       { Default_Handler(); }   /* TIM1 Update and TIM10                       */
 8000a7c:	b508      	push	{r3, lr}
 8000a7e:	f7ff ffb1 	bl	80009e4 <Default_Handler>

08000a82 <TIM1_TRG_COM_TIM11_IRQHandler>:
__weak void TIM1_TRG_COM_TIM11_IRQHandler(void)  { Default_Handler(); }   /* TIM1 Trigger and Commutation and TIM11      */
 8000a82:	b508      	push	{r3, lr}
 8000a84:	f7ff ffae 	bl	80009e4 <Default_Handler>

08000a88 <TIM1_CC_IRQHandler>:
__weak void TIM1_CC_IRQHandler(void)             { Default_Handler(); }   /* TIM1 Capture Compare                        */
 8000a88:	b508      	push	{r3, lr}
 8000a8a:	f7ff ffab 	bl	80009e4 <Default_Handler>

08000a8e <TIM2_IRQHandler>:
__weak void TIM2_IRQHandler(void)                { Default_Handler(); }   /* TIM2                                        */
 8000a8e:	b508      	push	{r3, lr}
 8000a90:	f7ff ffa8 	bl	80009e4 <Default_Handler>

08000a94 <TIM3_IRQHandler>:
__weak void TIM3_IRQHandler(void)                { Default_Handler(); }   /* TIM3                                        */
 8000a94:	b508      	push	{r3, lr}
 8000a96:	f7ff ffa5 	bl	80009e4 <Default_Handler>

08000a9a <TIM4_IRQHandler>:
__weak void TIM4_IRQHandler(void)                { Default_Handler(); }   /* TIM4                                        */
 8000a9a:	b508      	push	{r3, lr}
 8000a9c:	f7ff ffa2 	bl	80009e4 <Default_Handler>

08000aa0 <I2C1_EV_IRQHandler>:
__weak void I2C1_EV_IRQHandler(void)             { Default_Handler(); }   /* I2C1 Event                                  */
 8000aa0:	b508      	push	{r3, lr}
 8000aa2:	f7ff ff9f 	bl	80009e4 <Default_Handler>

08000aa6 <I2C1_ER_IRQHandler>:
__weak void I2C1_ER_IRQHandler(void)             { Default_Handler(); }   /* I2C1 Error                                  */
 8000aa6:	b508      	push	{r3, lr}
 8000aa8:	f7ff ff9c 	bl	80009e4 <Default_Handler>

08000aac <I2C2_EV_IRQHandler>:
__weak void I2C2_EV_IRQHandler(void)             { Default_Handler(); }   /* I2C2 Event                                  */
 8000aac:	b508      	push	{r3, lr}
 8000aae:	f7ff ff99 	bl	80009e4 <Default_Handler>

08000ab2 <I2C2_ER_IRQHandler>:
__weak void I2C2_ER_IRQHandler(void)             { Default_Handler(); }   /* I2C2 Error                                  */
 8000ab2:	b508      	push	{r3, lr}
 8000ab4:	f7ff ff96 	bl	80009e4 <Default_Handler>

08000ab8 <SPI1_IRQHandler>:
__weak void SPI1_IRQHandler(void)                { Default_Handler(); }   /* SPI1                                        */
 8000ab8:	b508      	push	{r3, lr}
 8000aba:	f7ff ff93 	bl	80009e4 <Default_Handler>

08000abe <SPI2_IRQHandler>:
__weak void SPI2_IRQHandler(void)                { Default_Handler(); }   /* SPI2                                        */
 8000abe:	b508      	push	{r3, lr}
 8000ac0:	f7ff ff90 	bl	80009e4 <Default_Handler>

08000ac4 <USART1_IRQHandler>:
__weak void USART1_IRQHandler(void)              { Default_Handler(); }   /* USART1                                      */
 8000ac4:	b508      	push	{r3, lr}
 8000ac6:	f7ff ff8d 	bl	80009e4 <Default_Handler>

08000aca <USART2_IRQHandler>:
__weak void USART2_IRQHandler(void)              { Default_Handler(); }   /* USART2                                      */
 8000aca:	b508      	push	{r3, lr}
 8000acc:	f7ff ff8a 	bl	80009e4 <Default_Handler>

08000ad0 <USART3_IRQHandler>:
__weak void USART3_IRQHandler(void)              { Default_Handler(); }   /* USART3                                      */
 8000ad0:	b508      	push	{r3, lr}
 8000ad2:	f7ff ff87 	bl	80009e4 <Default_Handler>

08000ad6 <EXTI15_10_IRQHandler>:
__weak void EXTI15_10_IRQHandler(void)           { Default_Handler(); }   /* External Line[15:10]s                       */
 8000ad6:	b508      	push	{r3, lr}
 8000ad8:	f7ff ff84 	bl	80009e4 <Default_Handler>

08000adc <RTC_Alarm_IRQHandler>:
__weak void RTC_Alarm_IRQHandler(void)           { Default_Handler(); }   /* RTC Alarm (A and B) through EXTI Line       */
 8000adc:	b508      	push	{r3, lr}
 8000ade:	f7ff ff81 	bl	80009e4 <Default_Handler>

08000ae2 <OTG_FS_WKUP_IRQHandler>:
__weak void OTG_FS_WKUP_IRQHandler(void)         { Default_Handler(); }   /* USB OTG FS Wakeup through EXTI line         */
 8000ae2:	b508      	push	{r3, lr}
 8000ae4:	f7ff ff7e 	bl	80009e4 <Default_Handler>

08000ae8 <TIM8_BRK_TIM12_IRQHandler>:
__weak void TIM8_BRK_TIM12_IRQHandler(void)      { Default_Handler(); }   /* TIM8 Break and TIM12                        */
 8000ae8:	b508      	push	{r3, lr}
 8000aea:	f7ff ff7b 	bl	80009e4 <Default_Handler>

08000aee <TIM8_UP_TIM13_IRQHandler>:
__weak void TIM8_UP_TIM13_IRQHandler(void)       { Default_Handler(); }   /* TIM8 Update and TIM13                       */
 8000aee:	b508      	push	{r3, lr}
 8000af0:	f7ff ff78 	bl	80009e4 <Default_Handler>

08000af4 <TIM8_TRG_COM_TIM14_IRQHandler>:
__weak void TIM8_TRG_COM_TIM14_IRQHandler(void)  { Default_Handler(); }   /* TIM8 Trigger and Commutation and TIM14      */
 8000af4:	b508      	push	{r3, lr}
 8000af6:	f7ff ff75 	bl	80009e4 <Default_Handler>

08000afa <TIM8_CC_IRQHandler>:
__weak void TIM8_CC_IRQHandler(void)             { Default_Handler(); }   /* TIM8 Capture Compare                        */
 8000afa:	b508      	push	{r3, lr}
 8000afc:	f7ff ff72 	bl	80009e4 <Default_Handler>

08000b00 <DMA1_Stream7_IRQHandler>:
__weak void DMA1_Stream7_IRQHandler(void)        { Default_Handler(); }   /* DMA1 Stream7                                */
 8000b00:	b508      	push	{r3, lr}
 8000b02:	f7ff ff6f 	bl	80009e4 <Default_Handler>

08000b06 <SDIO_IRQHandler>:
__weak void SDIO_IRQHandler(void)                { Default_Handler(); }   /* SDIO                                        */
 8000b06:	b508      	push	{r3, lr}
 8000b08:	f7ff ff6c 	bl	80009e4 <Default_Handler>

08000b0c <TIM5_IRQHandler>:
__weak void TIM5_IRQHandler(void)                { Default_Handler(); }   /* TIM5                                        */
 8000b0c:	b508      	push	{r3, lr}
 8000b0e:	f7ff ff69 	bl	80009e4 <Default_Handler>

08000b12 <SPI3_IRQHandler>:
__weak void SPI3_IRQHandler(void)                { Default_Handler(); }   /* SPI3                                        */
 8000b12:	b508      	push	{r3, lr}
 8000b14:	f7ff ff66 	bl	80009e4 <Default_Handler>

08000b18 <TIM6_IRQHandler>:
__weak void TIM6_IRQHandler(void)                { Default_Handler(); }   /* TIM6                                        */
 8000b18:	b508      	push	{r3, lr}
 8000b1a:	f7ff ff63 	bl	80009e4 <Default_Handler>

08000b1e <TIM7_IRQHandler>:
__weak void TIM7_IRQHandler(void)                { Default_Handler(); }   /* TIM7                                        */
 8000b1e:	b508      	push	{r3, lr}
 8000b20:	f7ff ff60 	bl	80009e4 <Default_Handler>

08000b24 <DMA2_Stream0_IRQHandler>:
__weak void DMA2_Stream0_IRQHandler(void)        { Default_Handler(); }   /* DMA2 Stream 0                               */
 8000b24:	b508      	push	{r3, lr}
 8000b26:	f7ff ff5d 	bl	80009e4 <Default_Handler>

08000b2a <DMA2_Stream1_IRQHandler>:
__weak void DMA2_Stream1_IRQHandler(void)        { Default_Handler(); }   /* DMA2 Stream 1                               */
 8000b2a:	b508      	push	{r3, lr}
 8000b2c:	f7ff ff5a 	bl	80009e4 <Default_Handler>

08000b30 <DMA2_Stream2_IRQHandler>:
__weak void DMA2_Stream2_IRQHandler(void)        { Default_Handler(); }   /* DMA2 Stream 2                               */
 8000b30:	b508      	push	{r3, lr}
 8000b32:	f7ff ff57 	bl	80009e4 <Default_Handler>

08000b36 <DMA2_Stream3_IRQHandler>:
__weak void DMA2_Stream3_IRQHandler(void)        { Default_Handler(); }   /* DMA2 Stream 3                               */
 8000b36:	b508      	push	{r3, lr}
 8000b38:	f7ff ff54 	bl	80009e4 <Default_Handler>

08000b3c <DMA2_Stream4_IRQHandler>:
__weak void DMA2_Stream4_IRQHandler(void)        { Default_Handler(); }   /* DMA2 Stream 4                               */
 8000b3c:	b508      	push	{r3, lr}
 8000b3e:	f7ff ff51 	bl	80009e4 <Default_Handler>

08000b42 <DFSDM1_FLT0_IRQHandler>:
__weak void DFSDM1_FLT0_IRQHandler(void)         { Default_Handler(); }   /* DFSDM1 Filter0                              */
 8000b42:	b508      	push	{r3, lr}
 8000b44:	f7ff ff4e 	bl	80009e4 <Default_Handler>

08000b48 <DFSDM1_FLT1_IRQHandler>:
__weak void DFSDM1_FLT1_IRQHandler(void)         { Default_Handler(); }   /* DFSDM1 Filter1                              */
 8000b48:	b508      	push	{r3, lr}
 8000b4a:	f7ff ff4b 	bl	80009e4 <Default_Handler>

08000b4e <CAN2_TX_IRQHandler>:
__weak void CAN2_TX_IRQHandler(void)             { Default_Handler(); }   /* CAN2 TX                                     */
 8000b4e:	b508      	push	{r3, lr}
 8000b50:	f7ff ff48 	bl	80009e4 <Default_Handler>

08000b54 <CAN2_RX0_IRQHandler>:
__weak void CAN2_RX0_IRQHandler(void)            { Default_Handler(); }   /* CAN2 RX0                                    */
 8000b54:	b508      	push	{r3, lr}
 8000b56:	f7ff ff45 	bl	80009e4 <Default_Handler>

08000b5a <CAN2_RX1_IRQHandler>:
__weak void CAN2_RX1_IRQHandler(void)            { Default_Handler(); }   /* CAN2 RX1                                    */
 8000b5a:	b508      	push	{r3, lr}
 8000b5c:	f7ff ff42 	bl	80009e4 <Default_Handler>

08000b60 <CAN2_SCE_IRQHandler>:
__weak void CAN2_SCE_IRQHandler(void)            { Default_Handler(); }   /* CAN2 SCE                                    */
 8000b60:	b508      	push	{r3, lr}
 8000b62:	f7ff ff3f 	bl	80009e4 <Default_Handler>

08000b66 <OTG_FS_IRQHandler>:
__weak void OTG_FS_IRQHandler(void)              { Default_Handler(); }   /* USB OTG FS                                  */
 8000b66:	b508      	push	{r3, lr}
 8000b68:	f7ff ff3c 	bl	80009e4 <Default_Handler>

08000b6c <DMA2_Stream5_IRQHandler>:
__weak void DMA2_Stream5_IRQHandler(void)        { Default_Handler(); }   /* DMA2 Stream 5                               */
 8000b6c:	b508      	push	{r3, lr}
 8000b6e:	f7ff ff39 	bl	80009e4 <Default_Handler>

08000b72 <DMA2_Stream6_IRQHandler>:
__weak void DMA2_Stream6_IRQHandler(void)        { Default_Handler(); }   /* DMA2 Stream 6                               */
 8000b72:	b508      	push	{r3, lr}
 8000b74:	f7ff ff36 	bl	80009e4 <Default_Handler>

08000b78 <DMA2_Stream7_IRQHandler>:
__weak void DMA2_Stream7_IRQHandler(void)        { Default_Handler(); }   /* DMA2 Stream 7                               */
 8000b78:	b508      	push	{r3, lr}
 8000b7a:	f7ff ff33 	bl	80009e4 <Default_Handler>

08000b7e <USART6_IRQHandler>:
__weak void USART6_IRQHandler(void)              { Default_Handler(); }   /* USART6                                      */
 8000b7e:	b508      	push	{r3, lr}
 8000b80:	f7ff ff30 	bl	80009e4 <Default_Handler>

08000b84 <I2C3_EV_IRQHandler>:
__weak void I2C3_EV_IRQHandler(void)             { Default_Handler(); }   /* I2C3 event                                  */
 8000b84:	b508      	push	{r3, lr}
 8000b86:	f7ff ff2d 	bl	80009e4 <Default_Handler>

08000b8a <I2C3_ER_IRQHandler>:
__weak void I2C3_ER_IRQHandler(void)             { Default_Handler(); }   /* I2C3 error                                  */
 8000b8a:	b508      	push	{r3, lr}
 8000b8c:	f7ff ff2a 	bl	80009e4 <Default_Handler>

08000b90 <RNG_IRQHandler>:
__weak void RNG_IRQHandler(void)                 { Default_Handler(); }   /* RNG                                         */
 8000b90:	b508      	push	{r3, lr}
 8000b92:	f7ff ff27 	bl	80009e4 <Default_Handler>

08000b96 <FPU_IRQHandler>:
__weak void FPU_IRQHandler(void)                 { Default_Handler(); }   /* FPU                                         */
 8000b96:	b508      	push	{r3, lr}
 8000b98:	f7ff ff24 	bl	80009e4 <Default_Handler>

08000b9c <SPI4_IRQHandler>:
__weak void SPI4_IRQHandler(void)                { Default_Handler(); }   /* SPI4                                        */
 8000b9c:	b508      	push	{r3, lr}
 8000b9e:	f7ff ff21 	bl	80009e4 <Default_Handler>

08000ba2 <SPI5_IRQHandler>:
__weak void SPI5_IRQHandler(void)                { Default_Handler(); }   /* SPI5                                        */
 8000ba2:	b508      	push	{r3, lr}
 8000ba4:	f7ff ff1e 	bl	80009e4 <Default_Handler>

08000ba8 <QUADSPI_IRQHandler>:
__weak void QUADSPI_IRQHandler(void)             { Default_Handler(); }   /* QuadSPI                                     */
 8000ba8:	b508      	push	{r3, lr}
 8000baa:	f7ff ff1b 	bl	80009e4 <Default_Handler>

08000bae <FMPI2C1_EV_IRQHandler>:
__weak void FMPI2C1_EV_IRQHandler(void)          { Default_Handler(); }   /* FMPI2C1 Event                               */
 8000bae:	b508      	push	{r3, lr}
 8000bb0:	f7ff ff18 	bl	80009e4 <Default_Handler>

08000bb4 <FMPI2C1_ER_IRQHandler>:
__weak void FMPI2C1_ER_IRQHandler(void)          { Default_Handler(); }   /* FMPI2C1 Error                               */
 8000bb4:	b508      	push	{r3, lr}
 8000bb6:	f7ff ff15 	bl	80009e4 <Default_Handler>

08000bba <Error_Handler>:
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000bba:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000bbc:	e7fe      	b.n	8000bbc <Error_Handler+0x2>
	...

08000bc0 <_Z18SystemClock_Configv>:
{
 8000bc0:	b500      	push	{lr}
 8000bc2:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000bc4:	2234      	movs	r2, #52	; 0x34
 8000bc6:	2100      	movs	r1, #0
 8000bc8:	a807      	add	r0, sp, #28
 8000bca:	f000 f8bb 	bl	8000d44 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000bce:	2300      	movs	r3, #0
 8000bd0:	9302      	str	r3, [sp, #8]
 8000bd2:	9303      	str	r3, [sp, #12]
 8000bd4:	9304      	str	r3, [sp, #16]
 8000bd6:	9305      	str	r3, [sp, #20]
 8000bd8:	9306      	str	r3, [sp, #24]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000bda:	9300      	str	r3, [sp, #0]
 8000bdc:	4a20      	ldr	r2, [pc, #128]	; (8000c60 <_Z18SystemClock_Configv+0xa0>)
 8000bde:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8000be0:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000be4:	6411      	str	r1, [r2, #64]	; 0x40
 8000be6:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000be8:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000bec:	9200      	str	r2, [sp, #0]
 8000bee:	9a00      	ldr	r2, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000bf0:	9301      	str	r3, [sp, #4]
 8000bf2:	4b1c      	ldr	r3, [pc, #112]	; (8000c64 <_Z18SystemClock_Configv+0xa4>)
 8000bf4:	681a      	ldr	r2, [r3, #0]
 8000bf6:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000bfa:	601a      	str	r2, [r3, #0]
 8000bfc:	681b      	ldr	r3, [r3, #0]
 8000bfe:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000c02:	9301      	str	r3, [sp, #4]
 8000c04:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000c06:	2301      	movs	r3, #1
 8000c08:	9307      	str	r3, [sp, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 8000c0a:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 8000c0e:	9308      	str	r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000c10:	2302      	movs	r3, #2
 8000c12:	930d      	str	r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000c14:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8000c18:	920e      	str	r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000c1a:	2208      	movs	r2, #8
 8000c1c:	920f      	str	r2, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 384;
 8000c1e:	f44f 71c0 	mov.w	r1, #384	; 0x180
 8000c22:	9110      	str	r1, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 8000c24:	2104      	movs	r1, #4
 8000c26:	9111      	str	r1, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 8;
 8000c28:	9212      	str	r2, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000c2a:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000c2c:	a807      	add	r0, sp, #28
 8000c2e:	f7ff fc0f 	bl	8000450 <HAL_RCC_OscConfig>
 8000c32:	b988      	cbnz	r0, 8000c58 <_Z18SystemClock_Configv+0x98>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000c34:	230f      	movs	r3, #15
 8000c36:	9302      	str	r3, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000c38:	2302      	movs	r3, #2
 8000c3a:	9303      	str	r3, [sp, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000c3c:	2300      	movs	r3, #0
 8000c3e:	9304      	str	r3, [sp, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000c40:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000c44:	9205      	str	r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000c46:	9306      	str	r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8000c48:	2103      	movs	r1, #3
 8000c4a:	a802      	add	r0, sp, #8
 8000c4c:	f7ff fb50 	bl	80002f0 <HAL_RCC_ClockConfig>
 8000c50:	b920      	cbnz	r0, 8000c5c <_Z18SystemClock_Configv+0x9c>
}
 8000c52:	b015      	add	sp, #84	; 0x54
 8000c54:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8000c58:	f7ff ffaf 	bl	8000bba <Error_Handler>
    Error_Handler();
 8000c5c:	f7ff ffad 	bl	8000bba <Error_Handler>
 8000c60:	40023800 	andmi	r3, r2, r0, lsl #16
 8000c64:	40007000 	andmi	r7, r0, r0

08000c68 <main>:
{
 8000c68:	b508      	push	{r3, lr}
  SystemClock_Config();
 8000c6a:	f7ff ffa9 	bl	8000bc0 <_Z18SystemClock_Configv>
  *RCC_AHB1 |= (1 << 1); // Enable clock to Port B
 8000c6e:	4a1f      	ldr	r2, [pc, #124]	; (8000cec <main+0x84>)
 8000c70:	f8d2 3830 	ldr.w	r3, [r2, #2096]	; 0x830
 8000c74:	f043 0302 	orr.w	r3, r3, #2
 8000c78:	f8c2 3830 	str.w	r3, [r2, #2096]	; 0x830
  *MODERB &= ~((0b11 << 28) | (0b11 << 14) | 0b11); // Clear
 8000c7c:	4b1c      	ldr	r3, [pc, #112]	; (8000cf0 <main+0x88>)
 8000c7e:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8000c82:	491c      	ldr	r1, [pc, #112]	; (8000cf4 <main+0x8c>)
 8000c84:	400a      	ands	r2, r1
 8000c86:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  *MODERB |= (0b01 << 28) | (0b01 << 14) | 0b01;  // Set I/O as output
 8000c8a:	f8d3 0400 	ldr.w	r0, [r3, #1024]	; 0x400
 8000c8e:	4a1a      	ldr	r2, [pc, #104]	; (8000cf8 <main+0x90>)
 8000c90:	4302      	orrs	r2, r0
 8000c92:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  *OTYPERB &= ~((1 << 14) | (1 << 7) | 1);   // Clear -> Pull-Push
 8000c96:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8000c9a:	f422 4281 	bic.w	r2, r2, #16512	; 0x4080
 8000c9e:	f022 0201 	bic.w	r2, r2, #1
 8000ca2:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
  *OSPEEDRB &= ~((0b11 << 28) | (0b11 << 14) | 0b11); // Clear -> Low speed
 8000ca6:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8000caa:	400a      	ands	r2, r1
 8000cac:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
  *PUPDRB &= ~((0b11 << 28) | (0b11 << 14) | 0b11); // Clear -> No pull up/down
 8000cb0:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8000cb4:	400a      	ands	r2, r1
 8000cb6:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
  *ODR_B |= (1 << 14) | (1 << 7) | 1;
 8000cba:	4c0d      	ldr	r4, [pc, #52]	; (8000cf0 <main+0x88>)
 8000cbc:	f8d4 3414 	ldr.w	r3, [r4, #1044]	; 0x414
 8000cc0:	f443 4381 	orr.w	r3, r3, #16512	; 0x4080
 8000cc4:	f043 0301 	orr.w	r3, r3, #1
 8000cc8:	f8c4 3414 	str.w	r3, [r4, #1044]	; 0x414
    HAL_Delay(100);
 8000ccc:	2064      	movs	r0, #100	; 0x64
 8000cce:	f7ff fe4b 	bl	8000968 <HAL_Delay>
  *ODR_B &= ~((1 << 14) | (1 << 7) | 1);
 8000cd2:	f8d4 3414 	ldr.w	r3, [r4, #1044]	; 0x414
 8000cd6:	f423 4381 	bic.w	r3, r3, #16512	; 0x4080
 8000cda:	f023 0301 	bic.w	r3, r3, #1
 8000cde:	f8c4 3414 	str.w	r3, [r4, #1044]	; 0x414
    HAL_Delay(100);
 8000ce2:	2064      	movs	r0, #100	; 0x64
 8000ce4:	f7ff fe40 	bl	8000968 <HAL_Delay>
  while (1)
 8000ce8:	e7e7      	b.n	8000cba <main+0x52>
 8000cea:	bf00      	nop
 8000cec:	40023000 	andmi	r3, r2, r0
 8000cf0:	40020000 	andmi	r0, r2, r0
 8000cf4:	cfff3ffc 	svcgt	0x00ff3ffc
 8000cf8:	10004001 	andne	r4, r0, r1

08000cfc <__libc_init_array>:
 8000cfc:	b570      	push	{r4, r5, r6, lr}
 8000cfe:	4e0d      	ldr	r6, [pc, #52]	; (8000d34 <__libc_init_array+0x38>)
 8000d00:	4d0d      	ldr	r5, [pc, #52]	; (8000d38 <__libc_init_array+0x3c>)
 8000d02:	1b76      	subs	r6, r6, r5
 8000d04:	10b6      	asrs	r6, r6, #2
 8000d06:	d006      	beq.n	8000d16 <__libc_init_array+0x1a>
 8000d08:	2400      	movs	r4, #0
 8000d0a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d0e:	3401      	adds	r4, #1
 8000d10:	4798      	blx	r3
 8000d12:	42a6      	cmp	r6, r4
 8000d14:	d1f9      	bne.n	8000d0a <__libc_init_array+0xe>
 8000d16:	4e09      	ldr	r6, [pc, #36]	; (8000d3c <__libc_init_array+0x40>)
 8000d18:	4d09      	ldr	r5, [pc, #36]	; (8000d40 <__libc_init_array+0x44>)
 8000d1a:	1b76      	subs	r6, r6, r5
 8000d1c:	f001 faba 	bl	8002294 <_init>
 8000d20:	10b6      	asrs	r6, r6, #2
 8000d22:	d006      	beq.n	8000d32 <__libc_init_array+0x36>
 8000d24:	2400      	movs	r4, #0
 8000d26:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d2a:	3401      	adds	r4, #1
 8000d2c:	4798      	blx	r3
 8000d2e:	42a6      	cmp	r6, r4
 8000d30:	d1f9      	bne.n	8000d26 <__libc_init_array+0x2a>
 8000d32:	bd70      	pop	{r4, r5, r6, pc}
 8000d34:	080023f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sp}
 8000d38:	080023f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sp}
 8000d3c:	08002400 	stmdaeq	r0, {sl, sp}
 8000d40:	080023f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sp}

08000d44 <memset>:
 8000d44:	0783      	lsls	r3, r0, #30
 8000d46:	b530      	push	{r4, r5, lr}
 8000d48:	d048      	beq.n	8000ddc <memset+0x98>
 8000d4a:	1e54      	subs	r4, r2, #1
 8000d4c:	2a00      	cmp	r2, #0
 8000d4e:	d03f      	beq.n	8000dd0 <memset+0x8c>
 8000d50:	b2ca      	uxtb	r2, r1
 8000d52:	4603      	mov	r3, r0
 8000d54:	e001      	b.n	8000d5a <memset+0x16>
 8000d56:	3c01      	subs	r4, #1
 8000d58:	d33a      	bcc.n	8000dd0 <memset+0x8c>
 8000d5a:	f803 2b01 	strb.w	r2, [r3], #1
 8000d5e:	079d      	lsls	r5, r3, #30
 8000d60:	d1f9      	bne.n	8000d56 <memset+0x12>
 8000d62:	2c03      	cmp	r4, #3
 8000d64:	d92d      	bls.n	8000dc2 <memset+0x7e>
 8000d66:	b2cd      	uxtb	r5, r1
 8000d68:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 8000d6c:	2c0f      	cmp	r4, #15
 8000d6e:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 8000d72:	d936      	bls.n	8000de2 <memset+0x9e>
 8000d74:	f1a4 0210 	sub.w	r2, r4, #16
 8000d78:	f022 0c0f 	bic.w	ip, r2, #15
 8000d7c:	f103 0e20 	add.w	lr, r3, #32
 8000d80:	44e6      	add	lr, ip
 8000d82:	ea4f 1c12 	mov.w	ip, r2, lsr #4
 8000d86:	f103 0210 	add.w	r2, r3, #16
 8000d8a:	e942 5504 	strd	r5, r5, [r2, #-16]
 8000d8e:	e942 5502 	strd	r5, r5, [r2, #-8]
 8000d92:	3210      	adds	r2, #16
 8000d94:	4572      	cmp	r2, lr
 8000d96:	d1f8      	bne.n	8000d8a <memset+0x46>
 8000d98:	f10c 0201 	add.w	r2, ip, #1
 8000d9c:	f014 0f0c 	tst.w	r4, #12
 8000da0:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 8000da4:	f004 0c0f 	and.w	ip, r4, #15
 8000da8:	d013      	beq.n	8000dd2 <memset+0x8e>
 8000daa:	f1ac 0304 	sub.w	r3, ip, #4
 8000dae:	f023 0303 	bic.w	r3, r3, #3
 8000db2:	3304      	adds	r3, #4
 8000db4:	4413      	add	r3, r2
 8000db6:	f842 5b04 	str.w	r5, [r2], #4
 8000dba:	4293      	cmp	r3, r2
 8000dbc:	d1fb      	bne.n	8000db6 <memset+0x72>
 8000dbe:	f00c 0403 	and.w	r4, ip, #3
 8000dc2:	b12c      	cbz	r4, 8000dd0 <memset+0x8c>
 8000dc4:	b2ca      	uxtb	r2, r1
 8000dc6:	441c      	add	r4, r3
 8000dc8:	f803 2b01 	strb.w	r2, [r3], #1
 8000dcc:	429c      	cmp	r4, r3
 8000dce:	d1fb      	bne.n	8000dc8 <memset+0x84>
 8000dd0:	bd30      	pop	{r4, r5, pc}
 8000dd2:	4664      	mov	r4, ip
 8000dd4:	4613      	mov	r3, r2
 8000dd6:	2c00      	cmp	r4, #0
 8000dd8:	d1f4      	bne.n	8000dc4 <memset+0x80>
 8000dda:	e7f9      	b.n	8000dd0 <memset+0x8c>
 8000ddc:	4603      	mov	r3, r0
 8000dde:	4614      	mov	r4, r2
 8000de0:	e7bf      	b.n	8000d62 <memset+0x1e>
 8000de2:	461a      	mov	r2, r3
 8000de4:	46a4      	mov	ip, r4
 8000de6:	e7e0      	b.n	8000daa <memset+0x66>

08000de8 <register_fini>:
 8000de8:	4b02      	ldr	r3, [pc, #8]	; (8000df4 <register_fini+0xc>)
 8000dea:	b113      	cbz	r3, 8000df2 <register_fini+0xa>
 8000dec:	4802      	ldr	r0, [pc, #8]	; (8000df8 <register_fini+0x10>)
 8000dee:	f000 b805 	b.w	8000dfc <atexit>
 8000df2:	4770      	bx	lr
 8000df4:	00000000 	andeq	r0, r0, r0
 8000df8:	08000e09 	stmdaeq	r0, {r0, r3, r9, sl, fp}

08000dfc <atexit>:
 8000dfc:	2300      	movs	r3, #0
 8000dfe:	4601      	mov	r1, r0
 8000e00:	461a      	mov	r2, r3
 8000e02:	4618      	mov	r0, r3
 8000e04:	f000 b81a 	b.w	8000e3c <__register_exitproc>

08000e08 <__libc_fini_array>:
 8000e08:	b538      	push	{r3, r4, r5, lr}
 8000e0a:	4b08      	ldr	r3, [pc, #32]	; (8000e2c <__libc_fini_array+0x24>)
 8000e0c:	4d08      	ldr	r5, [pc, #32]	; (8000e30 <__libc_fini_array+0x28>)
 8000e0e:	1b5b      	subs	r3, r3, r5
 8000e10:	109c      	asrs	r4, r3, #2
 8000e12:	d007      	beq.n	8000e24 <__libc_fini_array+0x1c>
 8000e14:	3b04      	subs	r3, #4
 8000e16:	441d      	add	r5, r3
 8000e18:	3c01      	subs	r4, #1
 8000e1a:	f855 3904 	ldr.w	r3, [r5], #-4
 8000e1e:	4798      	blx	r3
 8000e20:	2c00      	cmp	r4, #0
 8000e22:	d1f9      	bne.n	8000e18 <__libc_fini_array+0x10>
 8000e24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000e28:	f001 ba3a 	b.w	80022a0 <_fini>
 8000e2c:	08002404 	stmdaeq	r0, {r2, sl, sp}
 8000e30:	08002400 	stmdaeq	r0, {sl, sp}

08000e34 <__retarget_lock_acquire_recursive>:
 8000e34:	4770      	bx	lr
 8000e36:	bf00      	nop

08000e38 <__retarget_lock_release_recursive>:
 8000e38:	4770      	bx	lr
 8000e3a:	bf00      	nop

08000e3c <__register_exitproc>:
 8000e3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e40:	f8df a080 	ldr.w	sl, [pc, #128]	; 8000ec4 <__register_exitproc+0x88>
 8000e44:	4606      	mov	r6, r0
 8000e46:	f8da 0000 	ldr.w	r0, [sl]
 8000e4a:	4698      	mov	r8, r3
 8000e4c:	460f      	mov	r7, r1
 8000e4e:	4691      	mov	r9, r2
 8000e50:	f7ff fff0 	bl	8000e34 <__retarget_lock_acquire_recursive>
 8000e54:	4b1a      	ldr	r3, [pc, #104]	; (8000ec0 <__register_exitproc+0x84>)
 8000e56:	681b      	ldr	r3, [r3, #0]
 8000e58:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
 8000e5c:	b324      	cbz	r4, 8000ea8 <__register_exitproc+0x6c>
 8000e5e:	6865      	ldr	r5, [r4, #4]
 8000e60:	2d1f      	cmp	r5, #31
 8000e62:	dc26      	bgt.n	8000eb2 <__register_exitproc+0x76>
 8000e64:	b95e      	cbnz	r6, 8000e7e <__register_exitproc+0x42>
 8000e66:	1c6b      	adds	r3, r5, #1
 8000e68:	3502      	adds	r5, #2
 8000e6a:	f8da 0000 	ldr.w	r0, [sl]
 8000e6e:	6063      	str	r3, [r4, #4]
 8000e70:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 8000e74:	f7ff ffe0 	bl	8000e38 <__retarget_lock_release_recursive>
 8000e78:	2000      	movs	r0, #0
 8000e7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e7e:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 8000e82:	2301      	movs	r3, #1
 8000e84:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 8000e88:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
 8000e8c:	40ab      	lsls	r3, r5
 8000e8e:	431a      	orrs	r2, r3
 8000e90:	2e02      	cmp	r6, #2
 8000e92:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
 8000e96:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 8000e9a:	d1e4      	bne.n	8000e66 <__register_exitproc+0x2a>
 8000e9c:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
 8000ea0:	4313      	orrs	r3, r2
 8000ea2:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
 8000ea6:	e7de      	b.n	8000e66 <__register_exitproc+0x2a>
 8000ea8:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 8000eac:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
 8000eb0:	e7d5      	b.n	8000e5e <__register_exitproc+0x22>
 8000eb2:	f8da 0000 	ldr.w	r0, [sl]
 8000eb6:	f7ff ffbf 	bl	8000e38 <__retarget_lock_release_recursive>
 8000eba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ebe:	e7dc      	b.n	8000e7a <__register_exitproc+0x3e>
 8000ec0:	080022bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sp}
 8000ec4:	20000438 	andcs	r0, r0, r8, lsr r4

08000ec8 <__aeabi_uldivmod>:
 8000ec8:	b953      	cbnz	r3, 8000ee0 <__aeabi_uldivmod+0x18>
 8000eca:	b94a      	cbnz	r2, 8000ee0 <__aeabi_uldivmod+0x18>
 8000ecc:	2900      	cmp	r1, #0
 8000ece:	bf08      	it	eq
 8000ed0:	2800      	cmpeq	r0, #0
 8000ed2:	bf1c      	itt	ne
 8000ed4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000ed8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000edc:	f001 b8de 	b.w	800209c <__aeabi_idiv0>
 8000ee0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ee4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ee8:	f000 f806 	bl	8000ef8 <__udivmoddi4>
 8000eec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000ef0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000ef4:	b004      	add	sp, #16
 8000ef6:	4770      	bx	lr

08000ef8 <__udivmoddi4>:
 8000ef8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000efc:	9d08      	ldr	r5, [sp, #32]
 8000efe:	4604      	mov	r4, r0
 8000f00:	468e      	mov	lr, r1
 8000f02:	2b00      	cmp	r3, #0
 8000f04:	d14d      	bne.n	8000fa2 <__udivmoddi4+0xaa>
 8000f06:	428a      	cmp	r2, r1
 8000f08:	4694      	mov	ip, r2
 8000f0a:	d969      	bls.n	8000fe0 <__udivmoddi4+0xe8>
 8000f0c:	fab2 f282 	clz	r2, r2
 8000f10:	b152      	cbz	r2, 8000f28 <__udivmoddi4+0x30>
 8000f12:	fa01 f302 	lsl.w	r3, r1, r2
 8000f16:	f1c2 0120 	rsb	r1, r2, #32
 8000f1a:	fa20 f101 	lsr.w	r1, r0, r1
 8000f1e:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f22:	ea41 0e03 	orr.w	lr, r1, r3
 8000f26:	4094      	lsls	r4, r2
 8000f28:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000f2c:	0c21      	lsrs	r1, r4, #16
 8000f2e:	fbbe f6f8 	udiv	r6, lr, r8
 8000f32:	fa1f f78c 	uxth.w	r7, ip
 8000f36:	fb08 e316 	mls	r3, r8, r6, lr
 8000f3a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000f3e:	fb06 f107 	mul.w	r1, r6, r7
 8000f42:	4299      	cmp	r1, r3
 8000f44:	d90a      	bls.n	8000f5c <__udivmoddi4+0x64>
 8000f46:	eb1c 0303 	adds.w	r3, ip, r3
 8000f4a:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8000f4e:	f080 811f 	bcs.w	8001190 <__udivmoddi4+0x298>
 8000f52:	4299      	cmp	r1, r3
 8000f54:	f240 811c 	bls.w	8001190 <__udivmoddi4+0x298>
 8000f58:	3e02      	subs	r6, #2
 8000f5a:	4463      	add	r3, ip
 8000f5c:	1a5b      	subs	r3, r3, r1
 8000f5e:	b2a4      	uxth	r4, r4
 8000f60:	fbb3 f0f8 	udiv	r0, r3, r8
 8000f64:	fb08 3310 	mls	r3, r8, r0, r3
 8000f68:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000f6c:	fb00 f707 	mul.w	r7, r0, r7
 8000f70:	42a7      	cmp	r7, r4
 8000f72:	d90a      	bls.n	8000f8a <__udivmoddi4+0x92>
 8000f74:	eb1c 0404 	adds.w	r4, ip, r4
 8000f78:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000f7c:	f080 810a 	bcs.w	8001194 <__udivmoddi4+0x29c>
 8000f80:	42a7      	cmp	r7, r4
 8000f82:	f240 8107 	bls.w	8001194 <__udivmoddi4+0x29c>
 8000f86:	4464      	add	r4, ip
 8000f88:	3802      	subs	r0, #2
 8000f8a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000f8e:	1be4      	subs	r4, r4, r7
 8000f90:	2600      	movs	r6, #0
 8000f92:	b11d      	cbz	r5, 8000f9c <__udivmoddi4+0xa4>
 8000f94:	40d4      	lsrs	r4, r2
 8000f96:	2300      	movs	r3, #0
 8000f98:	e9c5 4300 	strd	r4, r3, [r5]
 8000f9c:	4631      	mov	r1, r6
 8000f9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fa2:	428b      	cmp	r3, r1
 8000fa4:	d909      	bls.n	8000fba <__udivmoddi4+0xc2>
 8000fa6:	2d00      	cmp	r5, #0
 8000fa8:	f000 80ef 	beq.w	800118a <__udivmoddi4+0x292>
 8000fac:	2600      	movs	r6, #0
 8000fae:	e9c5 0100 	strd	r0, r1, [r5]
 8000fb2:	4630      	mov	r0, r6
 8000fb4:	4631      	mov	r1, r6
 8000fb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fba:	fab3 f683 	clz	r6, r3
 8000fbe:	2e00      	cmp	r6, #0
 8000fc0:	d14a      	bne.n	8001058 <__udivmoddi4+0x160>
 8000fc2:	428b      	cmp	r3, r1
 8000fc4:	d302      	bcc.n	8000fcc <__udivmoddi4+0xd4>
 8000fc6:	4282      	cmp	r2, r0
 8000fc8:	f200 80f9 	bhi.w	80011be <__udivmoddi4+0x2c6>
 8000fcc:	1a84      	subs	r4, r0, r2
 8000fce:	eb61 0303 	sbc.w	r3, r1, r3
 8000fd2:	2001      	movs	r0, #1
 8000fd4:	469e      	mov	lr, r3
 8000fd6:	2d00      	cmp	r5, #0
 8000fd8:	d0e0      	beq.n	8000f9c <__udivmoddi4+0xa4>
 8000fda:	e9c5 4e00 	strd	r4, lr, [r5]
 8000fde:	e7dd      	b.n	8000f9c <__udivmoddi4+0xa4>
 8000fe0:	b902      	cbnz	r2, 8000fe4 <__udivmoddi4+0xec>
 8000fe2:	deff      	udf	#255	; 0xff
 8000fe4:	fab2 f282 	clz	r2, r2
 8000fe8:	2a00      	cmp	r2, #0
 8000fea:	f040 8092 	bne.w	8001112 <__udivmoddi4+0x21a>
 8000fee:	eba1 010c 	sub.w	r1, r1, ip
 8000ff2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ff6:	fa1f fe8c 	uxth.w	lr, ip
 8000ffa:	2601      	movs	r6, #1
 8000ffc:	0c20      	lsrs	r0, r4, #16
 8000ffe:	fbb1 f3f7 	udiv	r3, r1, r7
 8001002:	fb07 1113 	mls	r1, r7, r3, r1
 8001006:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800100a:	fb0e f003 	mul.w	r0, lr, r3
 800100e:	4288      	cmp	r0, r1
 8001010:	d908      	bls.n	8001024 <__udivmoddi4+0x12c>
 8001012:	eb1c 0101 	adds.w	r1, ip, r1
 8001016:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 800101a:	d202      	bcs.n	8001022 <__udivmoddi4+0x12a>
 800101c:	4288      	cmp	r0, r1
 800101e:	f200 80cb 	bhi.w	80011b8 <__udivmoddi4+0x2c0>
 8001022:	4643      	mov	r3, r8
 8001024:	1a09      	subs	r1, r1, r0
 8001026:	b2a4      	uxth	r4, r4
 8001028:	fbb1 f0f7 	udiv	r0, r1, r7
 800102c:	fb07 1110 	mls	r1, r7, r0, r1
 8001030:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8001034:	fb0e fe00 	mul.w	lr, lr, r0
 8001038:	45a6      	cmp	lr, r4
 800103a:	d908      	bls.n	800104e <__udivmoddi4+0x156>
 800103c:	eb1c 0404 	adds.w	r4, ip, r4
 8001040:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8001044:	d202      	bcs.n	800104c <__udivmoddi4+0x154>
 8001046:	45a6      	cmp	lr, r4
 8001048:	f200 80bb 	bhi.w	80011c2 <__udivmoddi4+0x2ca>
 800104c:	4608      	mov	r0, r1
 800104e:	eba4 040e 	sub.w	r4, r4, lr
 8001052:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8001056:	e79c      	b.n	8000f92 <__udivmoddi4+0x9a>
 8001058:	f1c6 0720 	rsb	r7, r6, #32
 800105c:	40b3      	lsls	r3, r6
 800105e:	fa22 fc07 	lsr.w	ip, r2, r7
 8001062:	ea4c 0c03 	orr.w	ip, ip, r3
 8001066:	fa20 f407 	lsr.w	r4, r0, r7
 800106a:	fa01 f306 	lsl.w	r3, r1, r6
 800106e:	431c      	orrs	r4, r3
 8001070:	40f9      	lsrs	r1, r7
 8001072:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8001076:	fa00 f306 	lsl.w	r3, r0, r6
 800107a:	fbb1 f8f9 	udiv	r8, r1, r9
 800107e:	0c20      	lsrs	r0, r4, #16
 8001080:	fa1f fe8c 	uxth.w	lr, ip
 8001084:	fb09 1118 	mls	r1, r9, r8, r1
 8001088:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800108c:	fb08 f00e 	mul.w	r0, r8, lr
 8001090:	4288      	cmp	r0, r1
 8001092:	fa02 f206 	lsl.w	r2, r2, r6
 8001096:	d90b      	bls.n	80010b0 <__udivmoddi4+0x1b8>
 8001098:	eb1c 0101 	adds.w	r1, ip, r1
 800109c:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80010a0:	f080 8088 	bcs.w	80011b4 <__udivmoddi4+0x2bc>
 80010a4:	4288      	cmp	r0, r1
 80010a6:	f240 8085 	bls.w	80011b4 <__udivmoddi4+0x2bc>
 80010aa:	f1a8 0802 	sub.w	r8, r8, #2
 80010ae:	4461      	add	r1, ip
 80010b0:	1a09      	subs	r1, r1, r0
 80010b2:	b2a4      	uxth	r4, r4
 80010b4:	fbb1 f0f9 	udiv	r0, r1, r9
 80010b8:	fb09 1110 	mls	r1, r9, r0, r1
 80010bc:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80010c0:	fb00 fe0e 	mul.w	lr, r0, lr
 80010c4:	458e      	cmp	lr, r1
 80010c6:	d908      	bls.n	80010da <__udivmoddi4+0x1e2>
 80010c8:	eb1c 0101 	adds.w	r1, ip, r1
 80010cc:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
 80010d0:	d26c      	bcs.n	80011ac <__udivmoddi4+0x2b4>
 80010d2:	458e      	cmp	lr, r1
 80010d4:	d96a      	bls.n	80011ac <__udivmoddi4+0x2b4>
 80010d6:	3802      	subs	r0, #2
 80010d8:	4461      	add	r1, ip
 80010da:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80010de:	fba0 9402 	umull	r9, r4, r0, r2
 80010e2:	eba1 010e 	sub.w	r1, r1, lr
 80010e6:	42a1      	cmp	r1, r4
 80010e8:	46c8      	mov	r8, r9
 80010ea:	46a6      	mov	lr, r4
 80010ec:	d356      	bcc.n	800119c <__udivmoddi4+0x2a4>
 80010ee:	d053      	beq.n	8001198 <__udivmoddi4+0x2a0>
 80010f0:	b15d      	cbz	r5, 800110a <__udivmoddi4+0x212>
 80010f2:	ebb3 0208 	subs.w	r2, r3, r8
 80010f6:	eb61 010e 	sbc.w	r1, r1, lr
 80010fa:	fa01 f707 	lsl.w	r7, r1, r7
 80010fe:	fa22 f306 	lsr.w	r3, r2, r6
 8001102:	40f1      	lsrs	r1, r6
 8001104:	431f      	orrs	r7, r3
 8001106:	e9c5 7100 	strd	r7, r1, [r5]
 800110a:	2600      	movs	r6, #0
 800110c:	4631      	mov	r1, r6
 800110e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001112:	f1c2 0320 	rsb	r3, r2, #32
 8001116:	40d8      	lsrs	r0, r3
 8001118:	fa0c fc02 	lsl.w	ip, ip, r2
 800111c:	fa21 f303 	lsr.w	r3, r1, r3
 8001120:	4091      	lsls	r1, r2
 8001122:	4301      	orrs	r1, r0
 8001124:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8001128:	fa1f fe8c 	uxth.w	lr, ip
 800112c:	fbb3 f0f7 	udiv	r0, r3, r7
 8001130:	fb07 3610 	mls	r6, r7, r0, r3
 8001134:	0c0b      	lsrs	r3, r1, #16
 8001136:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 800113a:	fb00 f60e 	mul.w	r6, r0, lr
 800113e:	429e      	cmp	r6, r3
 8001140:	fa04 f402 	lsl.w	r4, r4, r2
 8001144:	d908      	bls.n	8001158 <__udivmoddi4+0x260>
 8001146:	eb1c 0303 	adds.w	r3, ip, r3
 800114a:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 800114e:	d22f      	bcs.n	80011b0 <__udivmoddi4+0x2b8>
 8001150:	429e      	cmp	r6, r3
 8001152:	d92d      	bls.n	80011b0 <__udivmoddi4+0x2b8>
 8001154:	3802      	subs	r0, #2
 8001156:	4463      	add	r3, ip
 8001158:	1b9b      	subs	r3, r3, r6
 800115a:	b289      	uxth	r1, r1
 800115c:	fbb3 f6f7 	udiv	r6, r3, r7
 8001160:	fb07 3316 	mls	r3, r7, r6, r3
 8001164:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8001168:	fb06 f30e 	mul.w	r3, r6, lr
 800116c:	428b      	cmp	r3, r1
 800116e:	d908      	bls.n	8001182 <__udivmoddi4+0x28a>
 8001170:	eb1c 0101 	adds.w	r1, ip, r1
 8001174:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 8001178:	d216      	bcs.n	80011a8 <__udivmoddi4+0x2b0>
 800117a:	428b      	cmp	r3, r1
 800117c:	d914      	bls.n	80011a8 <__udivmoddi4+0x2b0>
 800117e:	3e02      	subs	r6, #2
 8001180:	4461      	add	r1, ip
 8001182:	1ac9      	subs	r1, r1, r3
 8001184:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8001188:	e738      	b.n	8000ffc <__udivmoddi4+0x104>
 800118a:	462e      	mov	r6, r5
 800118c:	4628      	mov	r0, r5
 800118e:	e705      	b.n	8000f9c <__udivmoddi4+0xa4>
 8001190:	4606      	mov	r6, r0
 8001192:	e6e3      	b.n	8000f5c <__udivmoddi4+0x64>
 8001194:	4618      	mov	r0, r3
 8001196:	e6f8      	b.n	8000f8a <__udivmoddi4+0x92>
 8001198:	454b      	cmp	r3, r9
 800119a:	d2a9      	bcs.n	80010f0 <__udivmoddi4+0x1f8>
 800119c:	ebb9 0802 	subs.w	r8, r9, r2
 80011a0:	eb64 0e0c 	sbc.w	lr, r4, ip
 80011a4:	3801      	subs	r0, #1
 80011a6:	e7a3      	b.n	80010f0 <__udivmoddi4+0x1f8>
 80011a8:	4646      	mov	r6, r8
 80011aa:	e7ea      	b.n	8001182 <__udivmoddi4+0x28a>
 80011ac:	4620      	mov	r0, r4
 80011ae:	e794      	b.n	80010da <__udivmoddi4+0x1e2>
 80011b0:	4640      	mov	r0, r8
 80011b2:	e7d1      	b.n	8001158 <__udivmoddi4+0x260>
 80011b4:	46d0      	mov	r8, sl
 80011b6:	e77b      	b.n	80010b0 <__udivmoddi4+0x1b8>
 80011b8:	3b02      	subs	r3, #2
 80011ba:	4461      	add	r1, ip
 80011bc:	e732      	b.n	8001024 <__udivmoddi4+0x12c>
 80011be:	4630      	mov	r0, r6
 80011c0:	e709      	b.n	8000fd6 <__udivmoddi4+0xde>
 80011c2:	4464      	add	r4, ip
 80011c4:	3802      	subs	r0, #2
 80011c6:	e742      	b.n	800104e <__udivmoddi4+0x156>

080011c8 <selfrel_offset31>:
 80011c8:	6803      	ldr	r3, [r0, #0]
 80011ca:	005a      	lsls	r2, r3, #1
 80011cc:	bf4c      	ite	mi
 80011ce:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 80011d2:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 80011d6:	4418      	add	r0, r3
 80011d8:	4770      	bx	lr
 80011da:	bf00      	nop

080011dc <search_EIT_table>:
 80011dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80011e0:	b329      	cbz	r1, 800122e <search_EIT_table+0x52>
 80011e2:	1e4f      	subs	r7, r1, #1
 80011e4:	4604      	mov	r4, r0
 80011e6:	4615      	mov	r5, r2
 80011e8:	463e      	mov	r6, r7
 80011ea:	f04f 0800 	mov.w	r8, #0
 80011ee:	eb08 0106 	add.w	r1, r8, r6
 80011f2:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80011f6:	1049      	asrs	r1, r1, #1
 80011f8:	eb04 09c1 	add.w	r9, r4, r1, lsl #3
 80011fc:	4648      	mov	r0, r9
 80011fe:	f7ff ffe3 	bl	80011c8 <selfrel_offset31>
 8001202:	4603      	mov	r3, r0
 8001204:	00c8      	lsls	r0, r1, #3
 8001206:	3008      	adds	r0, #8
 8001208:	428f      	cmp	r7, r1
 800120a:	4420      	add	r0, r4
 800120c:	d009      	beq.n	8001222 <search_EIT_table+0x46>
 800120e:	42ab      	cmp	r3, r5
 8001210:	d809      	bhi.n	8001226 <search_EIT_table+0x4a>
 8001212:	f7ff ffd9 	bl	80011c8 <selfrel_offset31>
 8001216:	3801      	subs	r0, #1
 8001218:	42a8      	cmp	r0, r5
 800121a:	d20a      	bcs.n	8001232 <search_EIT_table+0x56>
 800121c:	f101 0801 	add.w	r8, r1, #1
 8001220:	e7e5      	b.n	80011ee <search_EIT_table+0x12>
 8001222:	42ab      	cmp	r3, r5
 8001224:	d905      	bls.n	8001232 <search_EIT_table+0x56>
 8001226:	4588      	cmp	r8, r1
 8001228:	d001      	beq.n	800122e <search_EIT_table+0x52>
 800122a:	1e4e      	subs	r6, r1, #1
 800122c:	e7df      	b.n	80011ee <search_EIT_table+0x12>
 800122e:	f04f 0900 	mov.w	r9, #0
 8001232:	4648      	mov	r0, r9
 8001234:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08001238 <__gnu_unwind_get_pr_addr>:
 8001238:	2801      	cmp	r0, #1
 800123a:	d007      	beq.n	800124c <__gnu_unwind_get_pr_addr+0x14>
 800123c:	2802      	cmp	r0, #2
 800123e:	d007      	beq.n	8001250 <__gnu_unwind_get_pr_addr+0x18>
 8001240:	4b04      	ldr	r3, [pc, #16]	; (8001254 <__gnu_unwind_get_pr_addr+0x1c>)
 8001242:	2800      	cmp	r0, #0
 8001244:	bf0c      	ite	eq
 8001246:	4618      	moveq	r0, r3
 8001248:	2000      	movne	r0, #0
 800124a:	4770      	bx	lr
 800124c:	4802      	ldr	r0, [pc, #8]	; (8001258 <__gnu_unwind_get_pr_addr+0x20>)
 800124e:	4770      	bx	lr
 8001250:	4802      	ldr	r0, [pc, #8]	; (800125c <__gnu_unwind_get_pr_addr+0x24>)
 8001252:	4770      	bx	lr
 8001254:	08001911 	stmdaeq	r0, {r0, r4, r8, fp, ip}
 8001258:	08001915 	stmdaeq	r0, {r0, r2, r4, r8, fp, ip}
 800125c:	08001919 	stmdaeq	r0, {r0, r3, r4, r8, fp, ip}

08001260 <get_eit_entry>:
 8001260:	b530      	push	{r4, r5, lr}
 8001262:	4b23      	ldr	r3, [pc, #140]	; (80012f0 <get_eit_entry+0x90>)
 8001264:	b083      	sub	sp, #12
 8001266:	4604      	mov	r4, r0
 8001268:	1e8d      	subs	r5, r1, #2
 800126a:	b33b      	cbz	r3, 80012bc <get_eit_entry+0x5c>
 800126c:	a901      	add	r1, sp, #4
 800126e:	4628      	mov	r0, r5
 8001270:	f3af 8000 	nop.w
 8001274:	b1e8      	cbz	r0, 80012b2 <get_eit_entry+0x52>
 8001276:	9901      	ldr	r1, [sp, #4]
 8001278:	462a      	mov	r2, r5
 800127a:	f7ff ffaf 	bl	80011dc <search_EIT_table>
 800127e:	4601      	mov	r1, r0
 8001280:	b1b8      	cbz	r0, 80012b2 <get_eit_entry+0x52>
 8001282:	f7ff ffa1 	bl	80011c8 <selfrel_offset31>
 8001286:	684b      	ldr	r3, [r1, #4]
 8001288:	64a0      	str	r0, [r4, #72]	; 0x48
 800128a:	2b01      	cmp	r3, #1
 800128c:	d02c      	beq.n	80012e8 <get_eit_entry+0x88>
 800128e:	2b00      	cmp	r3, #0
 8001290:	f101 0004 	add.w	r0, r1, #4
 8001294:	db24      	blt.n	80012e0 <get_eit_entry+0x80>
 8001296:	f7ff ff97 	bl	80011c8 <selfrel_offset31>
 800129a:	2300      	movs	r3, #0
 800129c:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 80012a0:	6803      	ldr	r3, [r0, #0]
 80012a2:	2b00      	cmp	r3, #0
 80012a4:	db11      	blt.n	80012ca <get_eit_entry+0x6a>
 80012a6:	f7ff ff8f 	bl	80011c8 <selfrel_offset31>
 80012aa:	6120      	str	r0, [r4, #16]
 80012ac:	2000      	movs	r0, #0
 80012ae:	b003      	add	sp, #12
 80012b0:	bd30      	pop	{r4, r5, pc}
 80012b2:	2300      	movs	r3, #0
 80012b4:	2009      	movs	r0, #9
 80012b6:	6123      	str	r3, [r4, #16]
 80012b8:	b003      	add	sp, #12
 80012ba:	bd30      	pop	{r4, r5, pc}
 80012bc:	4b0d      	ldr	r3, [pc, #52]	; (80012f4 <get_eit_entry+0x94>)
 80012be:	490e      	ldr	r1, [pc, #56]	; (80012f8 <get_eit_entry+0x98>)
 80012c0:	1ac9      	subs	r1, r1, r3
 80012c2:	10c9      	asrs	r1, r1, #3
 80012c4:	4618      	mov	r0, r3
 80012c6:	9101      	str	r1, [sp, #4]
 80012c8:	e7d6      	b.n	8001278 <get_eit_entry+0x18>
 80012ca:	f3c3 6003 	ubfx	r0, r3, #24, #4
 80012ce:	f7ff ffb3 	bl	8001238 <__gnu_unwind_get_pr_addr>
 80012d2:	2800      	cmp	r0, #0
 80012d4:	6120      	str	r0, [r4, #16]
 80012d6:	bf14      	ite	ne
 80012d8:	2000      	movne	r0, #0
 80012da:	2009      	moveq	r0, #9
 80012dc:	b003      	add	sp, #12
 80012de:	bd30      	pop	{r4, r5, pc}
 80012e0:	2301      	movs	r3, #1
 80012e2:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 80012e6:	e7db      	b.n	80012a0 <get_eit_entry+0x40>
 80012e8:	2300      	movs	r3, #0
 80012ea:	6123      	str	r3, [r4, #16]
 80012ec:	2005      	movs	r0, #5
 80012ee:	e7de      	b.n	80012ae <get_eit_entry+0x4e>
 80012f0:	00000000 	andeq	r0, r0, r0
 80012f4:	080022f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sp}
 80012f8:	080023f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sp}

080012fc <restore_non_core_regs>:
 80012fc:	6803      	ldr	r3, [r0, #0]
 80012fe:	07da      	lsls	r2, r3, #31
 8001300:	b510      	push	{r4, lr}
 8001302:	4604      	mov	r4, r0
 8001304:	d406      	bmi.n	8001314 <restore_non_core_regs+0x18>
 8001306:	079b      	lsls	r3, r3, #30
 8001308:	f100 0048 	add.w	r0, r0, #72	; 0x48
 800130c:	d509      	bpl.n	8001322 <restore_non_core_regs+0x26>
 800130e:	f000 fc5b 	bl	8001bc8 <__gnu_Unwind_Restore_VFP_D>
 8001312:	6823      	ldr	r3, [r4, #0]
 8001314:	0759      	lsls	r1, r3, #29
 8001316:	d509      	bpl.n	800132c <restore_non_core_regs+0x30>
 8001318:	071a      	lsls	r2, r3, #28
 800131a:	d50e      	bpl.n	800133a <restore_non_core_regs+0x3e>
 800131c:	06db      	lsls	r3, r3, #27
 800131e:	d513      	bpl.n	8001348 <restore_non_core_regs+0x4c>
 8001320:	bd10      	pop	{r4, pc}
 8001322:	f000 fc49 	bl	8001bb8 <__gnu_Unwind_Restore_VFP>
 8001326:	6823      	ldr	r3, [r4, #0]
 8001328:	0759      	lsls	r1, r3, #29
 800132a:	d4f5      	bmi.n	8001318 <restore_non_core_regs+0x1c>
 800132c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8001330:	f000 fc52 	bl	8001bd8 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8001334:	6823      	ldr	r3, [r4, #0]
 8001336:	071a      	lsls	r2, r3, #28
 8001338:	d4f0      	bmi.n	800131c <restore_non_core_regs+0x20>
 800133a:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 800133e:	f000 fc53 	bl	8001be8 <__gnu_Unwind_Restore_WMMXD>
 8001342:	6823      	ldr	r3, [r4, #0]
 8001344:	06db      	lsls	r3, r3, #27
 8001346:	d4eb      	bmi.n	8001320 <restore_non_core_regs+0x24>
 8001348:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 800134c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001350:	f000 bc8e 	b.w	8001c70 <__gnu_Unwind_Restore_WMMXC>

08001354 <__gnu_unwind_24bit.constprop.0>:
 8001354:	2009      	movs	r0, #9
 8001356:	4770      	bx	lr

08001358 <_Unwind_decode_typeinfo_ptr.constprop.0>:
 8001358:	4603      	mov	r3, r0
 800135a:	6800      	ldr	r0, [r0, #0]
 800135c:	b100      	cbz	r0, 8001360 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
 800135e:	4418      	add	r0, r3
 8001360:	4770      	bx	lr
 8001362:	bf00      	nop

08001364 <_Unwind_DebugHook>:
 8001364:	4770      	bx	lr
 8001366:	bf00      	nop

08001368 <unwind_phase2>:
 8001368:	b570      	push	{r4, r5, r6, lr}
 800136a:	4604      	mov	r4, r0
 800136c:	460e      	mov	r6, r1
 800136e:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8001370:	4620      	mov	r0, r4
 8001372:	f7ff ff75 	bl	8001260 <get_eit_entry>
 8001376:	4605      	mov	r5, r0
 8001378:	b988      	cbnz	r0, 800139e <unwind_phase2+0x36>
 800137a:	6c32      	ldr	r2, [r6, #64]	; 0x40
 800137c:	6162      	str	r2, [r4, #20]
 800137e:	6923      	ldr	r3, [r4, #16]
 8001380:	4632      	mov	r2, r6
 8001382:	4621      	mov	r1, r4
 8001384:	2001      	movs	r0, #1
 8001386:	4798      	blx	r3
 8001388:	2808      	cmp	r0, #8
 800138a:	d0f0      	beq.n	800136e <unwind_phase2+0x6>
 800138c:	2807      	cmp	r0, #7
 800138e:	d106      	bne.n	800139e <unwind_phase2+0x36>
 8001390:	4628      	mov	r0, r5
 8001392:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8001394:	f7ff ffe6 	bl	8001364 <_Unwind_DebugHook>
 8001398:	1d30      	adds	r0, r6, #4
 800139a:	f000 fc01 	bl	8001ba0 <__restore_core_regs>
 800139e:	f000 fe7f 	bl	80020a0 <abort>
 80013a2:	bf00      	nop

080013a4 <unwind_phase2_forced>:
 80013a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80013a8:	1d0d      	adds	r5, r1, #4
 80013aa:	f8d0 800c 	ldr.w	r8, [r0, #12]
 80013ae:	f8d0 9018 	ldr.w	r9, [r0, #24]
 80013b2:	4607      	mov	r7, r0
 80013b4:	4614      	mov	r4, r2
 80013b6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80013b8:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 80013bc:	f10d 0c0c 	add.w	ip, sp, #12
 80013c0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80013c4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80013c6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80013ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80013cc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80013d0:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80013d4:	ae02      	add	r6, sp, #8
 80013d6:	f04f 0e00 	mov.w	lr, #0
 80013da:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 80013de:	f8c6 e000 	str.w	lr, [r6]
 80013e2:	e020      	b.n	8001426 <unwind_phase2_forced+0x82>
 80013e4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80013e6:	617b      	str	r3, [r7, #20]
 80013e8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80013ec:	4631      	mov	r1, r6
 80013ee:	a87a      	add	r0, sp, #488	; 0x1e8
 80013f0:	f000 fe5e 	bl	80020b0 <memcpy>
 80013f4:	693b      	ldr	r3, [r7, #16]
 80013f6:	aa7a      	add	r2, sp, #488	; 0x1e8
 80013f8:	4639      	mov	r1, r7
 80013fa:	4650      	mov	r0, sl
 80013fc:	4798      	blx	r3
 80013fe:	9b88      	ldr	r3, [sp, #544]	; 0x220
 8001400:	6473      	str	r3, [r6, #68]	; 0x44
 8001402:	4621      	mov	r1, r4
 8001404:	e9cd 6900 	strd	r6, r9, [sp]
 8001408:	4605      	mov	r5, r0
 800140a:	463b      	mov	r3, r7
 800140c:	463a      	mov	r2, r7
 800140e:	2001      	movs	r0, #1
 8001410:	47c0      	blx	r8
 8001412:	4604      	mov	r4, r0
 8001414:	b9e0      	cbnz	r0, 8001450 <unwind_phase2_forced+0xac>
 8001416:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800141a:	a97a      	add	r1, sp, #488	; 0x1e8
 800141c:	4630      	mov	r0, r6
 800141e:	f000 fe47 	bl	80020b0 <memcpy>
 8001422:	2d08      	cmp	r5, #8
 8001424:	d11a      	bne.n	800145c <unwind_phase2_forced+0xb8>
 8001426:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8001428:	4638      	mov	r0, r7
 800142a:	f7ff ff19 	bl	8001260 <get_eit_entry>
 800142e:	3409      	adds	r4, #9
 8001430:	fa5f fa84 	uxtb.w	sl, r4
 8001434:	4605      	mov	r5, r0
 8001436:	2800      	cmp	r0, #0
 8001438:	d0d4      	beq.n	80013e4 <unwind_phase2_forced+0x40>
 800143a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800143c:	6473      	str	r3, [r6, #68]	; 0x44
 800143e:	463a      	mov	r2, r7
 8001440:	e9cd 6900 	strd	r6, r9, [sp]
 8001444:	463b      	mov	r3, r7
 8001446:	f04a 0110 	orr.w	r1, sl, #16
 800144a:	2001      	movs	r0, #1
 800144c:	47c0      	blx	r8
 800144e:	b100      	cbz	r0, 8001452 <unwind_phase2_forced+0xae>
 8001450:	2509      	movs	r5, #9
 8001452:	4628      	mov	r0, r5
 8001454:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 8001458:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800145c:	2d07      	cmp	r5, #7
 800145e:	d1f7      	bne.n	8001450 <unwind_phase2_forced+0xac>
 8001460:	4620      	mov	r0, r4
 8001462:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8001464:	f7ff ff7e 	bl	8001364 <_Unwind_DebugHook>
 8001468:	a803      	add	r0, sp, #12
 800146a:	f000 fb99 	bl	8001ba0 <__restore_core_regs>
 800146e:	bf00      	nop

08001470 <_Unwind_GetCFA>:
 8001470:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8001472:	4770      	bx	lr

08001474 <__gnu_Unwind_RaiseException>:
 8001474:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001476:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8001478:	640b      	str	r3, [r1, #64]	; 0x40
 800147a:	f101 0c04 	add.w	ip, r1, #4
 800147e:	460e      	mov	r6, r1
 8001480:	4605      	mov	r5, r0
 8001482:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8001486:	b0f9      	sub	sp, #484	; 0x1e4
 8001488:	ac01      	add	r4, sp, #4
 800148a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800148c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8001490:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001492:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8001496:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001498:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
 800149c:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80014a0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80014a4:	9700      	str	r7, [sp, #0]
 80014a6:	e006      	b.n	80014b6 <__gnu_Unwind_RaiseException+0x42>
 80014a8:	692b      	ldr	r3, [r5, #16]
 80014aa:	466a      	mov	r2, sp
 80014ac:	4629      	mov	r1, r5
 80014ae:	4798      	blx	r3
 80014b0:	2808      	cmp	r0, #8
 80014b2:	4604      	mov	r4, r0
 80014b4:	d108      	bne.n	80014c8 <__gnu_Unwind_RaiseException+0x54>
 80014b6:	9910      	ldr	r1, [sp, #64]	; 0x40
 80014b8:	4628      	mov	r0, r5
 80014ba:	f7ff fed1 	bl	8001260 <get_eit_entry>
 80014be:	2800      	cmp	r0, #0
 80014c0:	d0f2      	beq.n	80014a8 <__gnu_Unwind_RaiseException+0x34>
 80014c2:	2009      	movs	r0, #9
 80014c4:	b079      	add	sp, #484	; 0x1e4
 80014c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014c8:	4668      	mov	r0, sp
 80014ca:	f7ff ff17 	bl	80012fc <restore_non_core_regs>
 80014ce:	2c06      	cmp	r4, #6
 80014d0:	d1f7      	bne.n	80014c2 <__gnu_Unwind_RaiseException+0x4e>
 80014d2:	4631      	mov	r1, r6
 80014d4:	4628      	mov	r0, r5
 80014d6:	f7ff ff47 	bl	8001368 <unwind_phase2>
 80014da:	bf00      	nop

080014dc <__gnu_Unwind_ForcedUnwind>:
 80014dc:	60c1      	str	r1, [r0, #12]
 80014de:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80014e0:	6182      	str	r2, [r0, #24]
 80014e2:	6419      	str	r1, [r3, #64]	; 0x40
 80014e4:	2200      	movs	r2, #0
 80014e6:	4619      	mov	r1, r3
 80014e8:	e75c      	b.n	80013a4 <unwind_phase2_forced>
 80014ea:	bf00      	nop

080014ec <__gnu_Unwind_Resume>:
 80014ec:	b570      	push	{r4, r5, r6, lr}
 80014ee:	68c6      	ldr	r6, [r0, #12]
 80014f0:	6943      	ldr	r3, [r0, #20]
 80014f2:	640b      	str	r3, [r1, #64]	; 0x40
 80014f4:	b9ae      	cbnz	r6, 8001522 <__gnu_Unwind_Resume+0x36>
 80014f6:	6903      	ldr	r3, [r0, #16]
 80014f8:	460a      	mov	r2, r1
 80014fa:	4604      	mov	r4, r0
 80014fc:	460d      	mov	r5, r1
 80014fe:	4601      	mov	r1, r0
 8001500:	2002      	movs	r0, #2
 8001502:	4798      	blx	r3
 8001504:	2807      	cmp	r0, #7
 8001506:	d005      	beq.n	8001514 <__gnu_Unwind_Resume+0x28>
 8001508:	2808      	cmp	r0, #8
 800150a:	d10f      	bne.n	800152c <__gnu_Unwind_Resume+0x40>
 800150c:	4629      	mov	r1, r5
 800150e:	4620      	mov	r0, r4
 8001510:	f7ff ff2a 	bl	8001368 <unwind_phase2>
 8001514:	4630      	mov	r0, r6
 8001516:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8001518:	f7ff ff24 	bl	8001364 <_Unwind_DebugHook>
 800151c:	1d28      	adds	r0, r5, #4
 800151e:	f000 fb3f 	bl	8001ba0 <__restore_core_regs>
 8001522:	2201      	movs	r2, #1
 8001524:	f7ff ff3e 	bl	80013a4 <unwind_phase2_forced>
 8001528:	f000 fdba 	bl	80020a0 <abort>
 800152c:	f000 fdb8 	bl	80020a0 <abort>

08001530 <__gnu_Unwind_Resume_or_Rethrow>:
 8001530:	68c2      	ldr	r2, [r0, #12]
 8001532:	b11a      	cbz	r2, 800153c <__gnu_Unwind_Resume_or_Rethrow+0xc>
 8001534:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 8001536:	640a      	str	r2, [r1, #64]	; 0x40
 8001538:	2200      	movs	r2, #0
 800153a:	e733      	b.n	80013a4 <unwind_phase2_forced>
 800153c:	e79a      	b.n	8001474 <__gnu_Unwind_RaiseException>
 800153e:	bf00      	nop

08001540 <_Unwind_Complete>:
 8001540:	4770      	bx	lr
 8001542:	bf00      	nop

08001544 <_Unwind_DeleteException>:
 8001544:	6883      	ldr	r3, [r0, #8]
 8001546:	4601      	mov	r1, r0
 8001548:	b10b      	cbz	r3, 800154e <_Unwind_DeleteException+0xa>
 800154a:	2001      	movs	r0, #1
 800154c:	4718      	bx	r3
 800154e:	4770      	bx	lr

08001550 <_Unwind_VRS_Get>:
 8001550:	2901      	cmp	r1, #1
 8001552:	d012      	beq.n	800157a <_Unwind_VRS_Get+0x2a>
 8001554:	d809      	bhi.n	800156a <_Unwind_VRS_Get+0x1a>
 8001556:	b973      	cbnz	r3, 8001576 <_Unwind_VRS_Get+0x26>
 8001558:	2a0f      	cmp	r2, #15
 800155a:	d80c      	bhi.n	8001576 <_Unwind_VRS_Get+0x26>
 800155c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8001560:	4618      	mov	r0, r3
 8001562:	6853      	ldr	r3, [r2, #4]
 8001564:	9a00      	ldr	r2, [sp, #0]
 8001566:	6013      	str	r3, [r2, #0]
 8001568:	4770      	bx	lr
 800156a:	3903      	subs	r1, #3
 800156c:	2901      	cmp	r1, #1
 800156e:	bf94      	ite	ls
 8001570:	2001      	movls	r0, #1
 8001572:	2002      	movhi	r0, #2
 8001574:	4770      	bx	lr
 8001576:	2002      	movs	r0, #2
 8001578:	4770      	bx	lr
 800157a:	4608      	mov	r0, r1
 800157c:	4770      	bx	lr
 800157e:	bf00      	nop

08001580 <_Unwind_GetGR>:
 8001580:	b500      	push	{lr}
 8001582:	b085      	sub	sp, #20
 8001584:	460a      	mov	r2, r1
 8001586:	2300      	movs	r3, #0
 8001588:	a903      	add	r1, sp, #12
 800158a:	9100      	str	r1, [sp, #0]
 800158c:	4619      	mov	r1, r3
 800158e:	f7ff ffdf 	bl	8001550 <_Unwind_VRS_Get>
 8001592:	9803      	ldr	r0, [sp, #12]
 8001594:	b005      	add	sp, #20
 8001596:	f85d fb04 	ldr.w	pc, [sp], #4
 800159a:	bf00      	nop

0800159c <_Unwind_VRS_Set>:
 800159c:	2901      	cmp	r1, #1
 800159e:	d012      	beq.n	80015c6 <_Unwind_VRS_Set+0x2a>
 80015a0:	d809      	bhi.n	80015b6 <_Unwind_VRS_Set+0x1a>
 80015a2:	b973      	cbnz	r3, 80015c2 <_Unwind_VRS_Set+0x26>
 80015a4:	2a0f      	cmp	r2, #15
 80015a6:	d80c      	bhi.n	80015c2 <_Unwind_VRS_Set+0x26>
 80015a8:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 80015ac:	9a00      	ldr	r2, [sp, #0]
 80015ae:	6812      	ldr	r2, [r2, #0]
 80015b0:	6042      	str	r2, [r0, #4]
 80015b2:	4618      	mov	r0, r3
 80015b4:	4770      	bx	lr
 80015b6:	3903      	subs	r1, #3
 80015b8:	2901      	cmp	r1, #1
 80015ba:	bf94      	ite	ls
 80015bc:	2001      	movls	r0, #1
 80015be:	2002      	movhi	r0, #2
 80015c0:	4770      	bx	lr
 80015c2:	2002      	movs	r0, #2
 80015c4:	4770      	bx	lr
 80015c6:	4608      	mov	r0, r1
 80015c8:	4770      	bx	lr
 80015ca:	bf00      	nop

080015cc <_Unwind_SetGR>:
 80015cc:	b510      	push	{r4, lr}
 80015ce:	b084      	sub	sp, #16
 80015d0:	2300      	movs	r3, #0
 80015d2:	ac03      	add	r4, sp, #12
 80015d4:	9203      	str	r2, [sp, #12]
 80015d6:	9400      	str	r4, [sp, #0]
 80015d8:	460a      	mov	r2, r1
 80015da:	4619      	mov	r1, r3
 80015dc:	f7ff ffde 	bl	800159c <_Unwind_VRS_Set>
 80015e0:	b004      	add	sp, #16
 80015e2:	bd10      	pop	{r4, pc}

080015e4 <__gnu_Unwind_Backtrace>:
 80015e4:	b570      	push	{r4, r5, r6, lr}
 80015e6:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 80015e8:	6413      	str	r3, [r2, #64]	; 0x40
 80015ea:	f102 0c04 	add.w	ip, r2, #4
 80015ee:	4605      	mov	r5, r0
 80015f0:	460c      	mov	r4, r1
 80015f2:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80015f6:	f5ad 7d0e 	sub.w	sp, sp, #568	; 0x238
 80015fa:	f10d 0e5c 	add.w	lr, sp, #92	; 0x5c
 80015fe:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8001602:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8001606:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800160a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 800160e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8001612:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
 8001616:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 800161a:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
 800161e:	9616      	str	r6, [sp, #88]	; 0x58
 8001620:	e010      	b.n	8001644 <__gnu_Unwind_Backtrace+0x60>
 8001622:	f7ff ffd3 	bl	80015cc <_Unwind_SetGR>
 8001626:	4621      	mov	r1, r4
 8001628:	a816      	add	r0, sp, #88	; 0x58
 800162a:	47a8      	blx	r5
 800162c:	4603      	mov	r3, r0
 800162e:	aa16      	add	r2, sp, #88	; 0x58
 8001630:	4669      	mov	r1, sp
 8001632:	2008      	movs	r0, #8
 8001634:	b983      	cbnz	r3, 8001658 <__gnu_Unwind_Backtrace+0x74>
 8001636:	9b04      	ldr	r3, [sp, #16]
 8001638:	4798      	blx	r3
 800163a:	2805      	cmp	r0, #5
 800163c:	4606      	mov	r6, r0
 800163e:	d00c      	beq.n	800165a <__gnu_Unwind_Backtrace+0x76>
 8001640:	2809      	cmp	r0, #9
 8001642:	d009      	beq.n	8001658 <__gnu_Unwind_Backtrace+0x74>
 8001644:	9926      	ldr	r1, [sp, #152]	; 0x98
 8001646:	4668      	mov	r0, sp
 8001648:	f7ff fe0a 	bl	8001260 <get_eit_entry>
 800164c:	4603      	mov	r3, r0
 800164e:	466a      	mov	r2, sp
 8001650:	210c      	movs	r1, #12
 8001652:	a816      	add	r0, sp, #88	; 0x58
 8001654:	2b00      	cmp	r3, #0
 8001656:	d0e4      	beq.n	8001622 <__gnu_Unwind_Backtrace+0x3e>
 8001658:	2609      	movs	r6, #9
 800165a:	a816      	add	r0, sp, #88	; 0x58
 800165c:	f7ff fe4e 	bl	80012fc <restore_non_core_regs>
 8001660:	4630      	mov	r0, r6
 8001662:	f50d 7d0e 	add.w	sp, sp, #568	; 0x238
 8001666:	bd70      	pop	{r4, r5, r6, pc}

08001668 <__gnu_unwind_pr_common>:
 8001668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800166c:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
 800166e:	b089      	sub	sp, #36	; 0x24
 8001670:	461e      	mov	r6, r3
 8001672:	f854 3b04 	ldr.w	r3, [r4], #4
 8001676:	9406      	str	r4, [sp, #24]
 8001678:	460d      	mov	r5, r1
 800167a:	4617      	mov	r7, r2
 800167c:	f000 0803 	and.w	r8, r0, #3
 8001680:	2e00      	cmp	r6, #0
 8001682:	d079      	beq.n	8001778 <__gnu_unwind_pr_common+0x110>
 8001684:	0c1a      	lsrs	r2, r3, #16
 8001686:	041b      	lsls	r3, r3, #16
 8001688:	9305      	str	r3, [sp, #20]
 800168a:	f88d 201d 	strb.w	r2, [sp, #29]
 800168e:	2302      	movs	r3, #2
 8001690:	b2d2      	uxtb	r2, r2
 8001692:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8001696:	f88d 301c 	strb.w	r3, [sp, #28]
 800169a:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 800169c:	f1b8 0f02 	cmp.w	r8, #2
 80016a0:	bf08      	it	eq
 80016a2:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 80016a4:	f013 0301 	ands.w	r3, r3, #1
 80016a8:	d00c      	beq.n	80016c4 <__gnu_unwind_pr_common+0x5c>
 80016aa:	a905      	add	r1, sp, #20
 80016ac:	4638      	mov	r0, r7
 80016ae:	f000 fb79 	bl	8001da4 <__gnu_unwind_execute>
 80016b2:	b918      	cbnz	r0, 80016bc <__gnu_unwind_pr_common+0x54>
 80016b4:	2008      	movs	r0, #8
 80016b6:	b009      	add	sp, #36	; 0x24
 80016b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80016bc:	2009      	movs	r0, #9
 80016be:	b009      	add	sp, #36	; 0x24
 80016c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80016c4:	f8d4 a000 	ldr.w	sl, [r4]
 80016c8:	f1ba 0f00 	cmp.w	sl, #0
 80016cc:	d0ed      	beq.n	80016aa <__gnu_unwind_pr_common+0x42>
 80016ce:	9301      	str	r3, [sp, #4]
 80016d0:	f000 0308 	and.w	r3, r0, #8
 80016d4:	9302      	str	r3, [sp, #8]
 80016d6:	2e02      	cmp	r6, #2
 80016d8:	d04a      	beq.n	8001770 <__gnu_unwind_pr_common+0x108>
 80016da:	f8b4 a000 	ldrh.w	sl, [r4]
 80016de:	f8b4 9002 	ldrh.w	r9, [r4, #2]
 80016e2:	3404      	adds	r4, #4
 80016e4:	6cab      	ldr	r3, [r5, #72]	; 0x48
 80016e6:	f029 0b01 	bic.w	fp, r9, #1
 80016ea:	210f      	movs	r1, #15
 80016ec:	4638      	mov	r0, r7
 80016ee:	449b      	add	fp, r3
 80016f0:	f7ff ff46 	bl	8001580 <_Unwind_GetGR>
 80016f4:	4583      	cmp	fp, r0
 80016f6:	d839      	bhi.n	800176c <__gnu_unwind_pr_common+0x104>
 80016f8:	f02a 0301 	bic.w	r3, sl, #1
 80016fc:	449b      	add	fp, r3
 80016fe:	4583      	cmp	fp, r0
 8001700:	bf94      	ite	ls
 8001702:	2000      	movls	r0, #0
 8001704:	2001      	movhi	r0, #1
 8001706:	ea4f 0349 	mov.w	r3, r9, lsl #1
 800170a:	f003 0302 	and.w	r3, r3, #2
 800170e:	f00a 0a01 	and.w	sl, sl, #1
 8001712:	ea43 030a 	orr.w	r3, r3, sl
 8001716:	2b01      	cmp	r3, #1
 8001718:	d049      	beq.n	80017ae <__gnu_unwind_pr_common+0x146>
 800171a:	2b02      	cmp	r3, #2
 800171c:	d032      	beq.n	8001784 <__gnu_unwind_pr_common+0x11c>
 800171e:	2b00      	cmp	r3, #0
 8001720:	d1cc      	bne.n	80016bc <__gnu_unwind_pr_common+0x54>
 8001722:	f1b8 0f00 	cmp.w	r8, #0
 8001726:	d002      	beq.n	800172e <__gnu_unwind_pr_common+0xc6>
 8001728:	2800      	cmp	r0, #0
 800172a:	f040 80cd 	bne.w	80018c8 <__gnu_unwind_pr_common+0x260>
 800172e:	3404      	adds	r4, #4
 8001730:	f8d4 a000 	ldr.w	sl, [r4]
 8001734:	f1ba 0f00 	cmp.w	sl, #0
 8001738:	d1cd      	bne.n	80016d6 <__gnu_unwind_pr_common+0x6e>
 800173a:	a905      	add	r1, sp, #20
 800173c:	4638      	mov	r0, r7
 800173e:	f000 fb31 	bl	8001da4 <__gnu_unwind_execute>
 8001742:	2800      	cmp	r0, #0
 8001744:	d1ba      	bne.n	80016bc <__gnu_unwind_pr_common+0x54>
 8001746:	9b01      	ldr	r3, [sp, #4]
 8001748:	2b00      	cmp	r3, #0
 800174a:	d0b3      	beq.n	80016b4 <__gnu_unwind_pr_common+0x4c>
 800174c:	210f      	movs	r1, #15
 800174e:	4638      	mov	r0, r7
 8001750:	f7ff ff16 	bl	8001580 <_Unwind_GetGR>
 8001754:	210e      	movs	r1, #14
 8001756:	4602      	mov	r2, r0
 8001758:	4638      	mov	r0, r7
 800175a:	f7ff ff37 	bl	80015cc <_Unwind_SetGR>
 800175e:	4638      	mov	r0, r7
 8001760:	4a6a      	ldr	r2, [pc, #424]	; (800190c <__gnu_unwind_pr_common+0x2a4>)
 8001762:	210f      	movs	r1, #15
 8001764:	f7ff ff32 	bl	80015cc <_Unwind_SetGR>
 8001768:	2007      	movs	r0, #7
 800176a:	e7a8      	b.n	80016be <__gnu_unwind_pr_common+0x56>
 800176c:	2000      	movs	r0, #0
 800176e:	e7ca      	b.n	8001706 <__gnu_unwind_pr_common+0x9e>
 8001770:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8001774:	3408      	adds	r4, #8
 8001776:	e7b5      	b.n	80016e4 <__gnu_unwind_pr_common+0x7c>
 8001778:	021b      	lsls	r3, r3, #8
 800177a:	9305      	str	r3, [sp, #20]
 800177c:	2303      	movs	r3, #3
 800177e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8001782:	e78a      	b.n	800169a <__gnu_unwind_pr_common+0x32>
 8001784:	6823      	ldr	r3, [r4, #0]
 8001786:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
 800178a:	f1b8 0f00 	cmp.w	r8, #0
 800178e:	d145      	bne.n	800181c <__gnu_unwind_pr_common+0x1b4>
 8001790:	b128      	cbz	r0, 800179e <__gnu_unwind_pr_common+0x136>
 8001792:	9a02      	ldr	r2, [sp, #8]
 8001794:	2a00      	cmp	r2, #0
 8001796:	d05c      	beq.n	8001852 <__gnu_unwind_pr_common+0x1ea>
 8001798:	f1bb 0f00 	cmp.w	fp, #0
 800179c:	d074      	beq.n	8001888 <__gnu_unwind_pr_common+0x220>
 800179e:	2b00      	cmp	r3, #0
 80017a0:	da00      	bge.n	80017a4 <__gnu_unwind_pr_common+0x13c>
 80017a2:	3404      	adds	r4, #4
 80017a4:	f10b 0b01 	add.w	fp, fp, #1
 80017a8:	eb04 048b 	add.w	r4, r4, fp, lsl #2
 80017ac:	e7c0      	b.n	8001730 <__gnu_unwind_pr_common+0xc8>
 80017ae:	f1b8 0f00 	cmp.w	r8, #0
 80017b2:	d119      	bne.n	80017e8 <__gnu_unwind_pr_common+0x180>
 80017b4:	b1b0      	cbz	r0, 80017e4 <__gnu_unwind_pr_common+0x17c>
 80017b6:	6863      	ldr	r3, [r4, #4]
 80017b8:	6822      	ldr	r2, [r4, #0]
 80017ba:	1c99      	adds	r1, r3, #2
 80017bc:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 80017c0:	f43f af7c 	beq.w	80016bc <__gnu_unwind_pr_common+0x54>
 80017c4:	f105 0158 	add.w	r1, r5, #88	; 0x58
 80017c8:	3301      	adds	r3, #1
 80017ca:	9104      	str	r1, [sp, #16]
 80017cc:	f000 8090 	beq.w	80018f0 <__gnu_unwind_pr_common+0x288>
 80017d0:	1d20      	adds	r0, r4, #4
 80017d2:	f7ff fdc1 	bl	8001358 <_Unwind_decode_typeinfo_ptr.constprop.0>
 80017d6:	ab04      	add	r3, sp, #16
 80017d8:	4601      	mov	r1, r0
 80017da:	4628      	mov	r0, r5
 80017dc:	f3af 8000 	nop.w
 80017e0:	2800      	cmp	r0, #0
 80017e2:	d15b      	bne.n	800189c <__gnu_unwind_pr_common+0x234>
 80017e4:	3408      	adds	r4, #8
 80017e6:	e7a3      	b.n	8001730 <__gnu_unwind_pr_common+0xc8>
 80017e8:	210d      	movs	r1, #13
 80017ea:	4638      	mov	r0, r7
 80017ec:	f8d5 9020 	ldr.w	r9, [r5, #32]
 80017f0:	f7ff fec6 	bl	8001580 <_Unwind_GetGR>
 80017f4:	4581      	cmp	r9, r0
 80017f6:	d1f5      	bne.n	80017e4 <__gnu_unwind_pr_common+0x17c>
 80017f8:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80017fa:	429c      	cmp	r4, r3
 80017fc:	d1f2      	bne.n	80017e4 <__gnu_unwind_pr_common+0x17c>
 80017fe:	4620      	mov	r0, r4
 8001800:	f7ff fce2 	bl	80011c8 <selfrel_offset31>
 8001804:	210f      	movs	r1, #15
 8001806:	4602      	mov	r2, r0
 8001808:	4638      	mov	r0, r7
 800180a:	f7ff fedf 	bl	80015cc <_Unwind_SetGR>
 800180e:	4638      	mov	r0, r7
 8001810:	462a      	mov	r2, r5
 8001812:	2100      	movs	r1, #0
 8001814:	f7ff feda 	bl	80015cc <_Unwind_SetGR>
 8001818:	2007      	movs	r0, #7
 800181a:	e750      	b.n	80016be <__gnu_unwind_pr_common+0x56>
 800181c:	210d      	movs	r1, #13
 800181e:	4638      	mov	r0, r7
 8001820:	f8d5 9020 	ldr.w	r9, [r5, #32]
 8001824:	f7ff feac 	bl	8001580 <_Unwind_GetGR>
 8001828:	4581      	cmp	r9, r0
 800182a:	d001      	beq.n	8001830 <__gnu_unwind_pr_common+0x1c8>
 800182c:	6823      	ldr	r3, [r4, #0]
 800182e:	e7b6      	b.n	800179e <__gnu_unwind_pr_common+0x136>
 8001830:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8001832:	429c      	cmp	r4, r3
 8001834:	d1fa      	bne.n	800182c <__gnu_unwind_pr_common+0x1c4>
 8001836:	2304      	movs	r3, #4
 8001838:	2200      	movs	r2, #0
 800183a:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
 800183e:	18e3      	adds	r3, r4, r3
 8001840:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
 8001844:	636b      	str	r3, [r5, #52]	; 0x34
 8001846:	6823      	ldr	r3, [r4, #0]
 8001848:	2b00      	cmp	r3, #0
 800184a:	db59      	blt.n	8001900 <__gnu_unwind_pr_common+0x298>
 800184c:	2301      	movs	r3, #1
 800184e:	9301      	str	r3, [sp, #4]
 8001850:	e7a8      	b.n	80017a4 <__gnu_unwind_pr_common+0x13c>
 8001852:	f105 0358 	add.w	r3, r5, #88	; 0x58
 8001856:	f8cd 800c 	str.w	r8, [sp, #12]
 800185a:	f104 0a04 	add.w	sl, r4, #4
 800185e:	46b0      	mov	r8, r6
 8001860:	4691      	mov	r9, r2
 8001862:	461e      	mov	r6, r3
 8001864:	e00e      	b.n	8001884 <__gnu_unwind_pr_common+0x21c>
 8001866:	4650      	mov	r0, sl
 8001868:	9604      	str	r6, [sp, #16]
 800186a:	f7ff fd75 	bl	8001358 <_Unwind_decode_typeinfo_ptr.constprop.0>
 800186e:	2200      	movs	r2, #0
 8001870:	4601      	mov	r1, r0
 8001872:	ab04      	add	r3, sp, #16
 8001874:	4628      	mov	r0, r5
 8001876:	f109 0901 	add.w	r9, r9, #1
 800187a:	f10a 0a04 	add.w	sl, sl, #4
 800187e:	f3af 8000 	nop.w
 8001882:	b9e0      	cbnz	r0, 80018be <__gnu_unwind_pr_common+0x256>
 8001884:	45d9      	cmp	r9, fp
 8001886:	d1ee      	bne.n	8001866 <__gnu_unwind_pr_common+0x1fe>
 8001888:	210d      	movs	r1, #13
 800188a:	4638      	mov	r0, r7
 800188c:	f7ff fe78 	bl	8001580 <_Unwind_GetGR>
 8001890:	9b04      	ldr	r3, [sp, #16]
 8001892:	62ac      	str	r4, [r5, #40]	; 0x28
 8001894:	e9c5 0308 	strd	r0, r3, [r5, #32]
 8001898:	2006      	movs	r0, #6
 800189a:	e710      	b.n	80016be <__gnu_unwind_pr_common+0x56>
 800189c:	4681      	mov	r9, r0
 800189e:	210d      	movs	r1, #13
 80018a0:	4638      	mov	r0, r7
 80018a2:	f7ff fe6d 	bl	8001580 <_Unwind_GetGR>
 80018a6:	f1b9 0f02 	cmp.w	r9, #2
 80018aa:	6228      	str	r0, [r5, #32]
 80018ac:	d125      	bne.n	80018fa <__gnu_unwind_pr_common+0x292>
 80018ae:	462b      	mov	r3, r5
 80018b0:	9a04      	ldr	r2, [sp, #16]
 80018b2:	f843 2f2c 	str.w	r2, [r3, #44]!
 80018b6:	626b      	str	r3, [r5, #36]	; 0x24
 80018b8:	62ac      	str	r4, [r5, #40]	; 0x28
 80018ba:	2006      	movs	r0, #6
 80018bc:	e6ff      	b.n	80016be <__gnu_unwind_pr_common+0x56>
 80018be:	4646      	mov	r6, r8
 80018c0:	6823      	ldr	r3, [r4, #0]
 80018c2:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80018c6:	e76a      	b.n	800179e <__gnu_unwind_pr_common+0x136>
 80018c8:	4620      	mov	r0, r4
 80018ca:	f7ff fc7d 	bl	80011c8 <selfrel_offset31>
 80018ce:	3404      	adds	r4, #4
 80018d0:	4602      	mov	r2, r0
 80018d2:	63ac      	str	r4, [r5, #56]	; 0x38
 80018d4:	4628      	mov	r0, r5
 80018d6:	4614      	mov	r4, r2
 80018d8:	f3af 8000 	nop.w
 80018dc:	2800      	cmp	r0, #0
 80018de:	f43f aeed 	beq.w	80016bc <__gnu_unwind_pr_common+0x54>
 80018e2:	4638      	mov	r0, r7
 80018e4:	4622      	mov	r2, r4
 80018e6:	210f      	movs	r1, #15
 80018e8:	f7ff fe70 	bl	80015cc <_Unwind_SetGR>
 80018ec:	2007      	movs	r0, #7
 80018ee:	e6e6      	b.n	80016be <__gnu_unwind_pr_common+0x56>
 80018f0:	210d      	movs	r1, #13
 80018f2:	4638      	mov	r0, r7
 80018f4:	f7ff fe44 	bl	8001580 <_Unwind_GetGR>
 80018f8:	6228      	str	r0, [r5, #32]
 80018fa:	9b04      	ldr	r3, [sp, #16]
 80018fc:	626b      	str	r3, [r5, #36]	; 0x24
 80018fe:	e7db      	b.n	80018b8 <__gnu_unwind_pr_common+0x250>
 8001900:	f10b 0001 	add.w	r0, fp, #1
 8001904:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8001908:	e77a      	b.n	8001800 <__gnu_unwind_pr_common+0x198>
 800190a:	bf00      	nop
 800190c:	00000000 	andeq	r0, r0, r0

08001910 <__aeabi_unwind_cpp_pr0>:
 8001910:	2300      	movs	r3, #0
 8001912:	e6a9      	b.n	8001668 <__gnu_unwind_pr_common>

08001914 <__aeabi_unwind_cpp_pr1>:
 8001914:	2301      	movs	r3, #1
 8001916:	e6a7      	b.n	8001668 <__gnu_unwind_pr_common>

08001918 <__aeabi_unwind_cpp_pr2>:
 8001918:	2302      	movs	r3, #2
 800191a:	e6a5      	b.n	8001668 <__gnu_unwind_pr_common>

0800191c <_Unwind_VRS_Pop>:
 800191c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001920:	4606      	mov	r6, r0
 8001922:	b0c3      	sub	sp, #268	; 0x10c
 8001924:	4615      	mov	r5, r2
 8001926:	461c      	mov	r4, r3
 8001928:	2904      	cmp	r1, #4
 800192a:	f200 80bf 	bhi.w	8001aac <_Unwind_VRS_Pop+0x190>
 800192e:	e8df f001 	tbb	[pc, r1]
 8001932:	2dbd579e 	ldccs	7, cr5, [sp, #632]!	; 0x278
 8001936:	2c000003 	stccs	0, cr0, [r0], {3}
 800193a:	f040 80b7 	bne.w	8001aac <_Unwind_VRS_Pop+0x190>
 800193e:	2a10      	cmp	r2, #16
 8001940:	f200 80b4 	bhi.w	8001aac <_Unwind_VRS_Pop+0x190>
 8001944:	6803      	ldr	r3, [r0, #0]
 8001946:	06d8      	lsls	r0, r3, #27
 8001948:	f100 80f9 	bmi.w	8001b3e <_Unwind_VRS_Pop+0x222>
 800194c:	af20      	add	r7, sp, #128	; 0x80
 800194e:	4638      	mov	r0, r7
 8001950:	f000 f998 	bl	8001c84 <__gnu_Unwind_Save_WMMXC>
 8001954:	6bb4      	ldr	r4, [r6, #56]	; 0x38
 8001956:	4639      	mov	r1, r7
 8001958:	2300      	movs	r3, #0
 800195a:	f04f 0c01 	mov.w	ip, #1
 800195e:	fa0c f203 	lsl.w	r2, ip, r3
 8001962:	422a      	tst	r2, r5
 8001964:	4620      	mov	r0, r4
 8001966:	f103 0301 	add.w	r3, r3, #1
 800196a:	d003      	beq.n	8001974 <_Unwind_VRS_Pop+0x58>
 800196c:	f850 2b04 	ldr.w	r2, [r0], #4
 8001970:	600a      	str	r2, [r1, #0]
 8001972:	4604      	mov	r4, r0
 8001974:	2b04      	cmp	r3, #4
 8001976:	f101 0104 	add.w	r1, r1, #4
 800197a:	d1f0      	bne.n	800195e <_Unwind_VRS_Pop+0x42>
 800197c:	4638      	mov	r0, r7
 800197e:	63b4      	str	r4, [r6, #56]	; 0x38
 8001980:	f000 f976 	bl	8001c70 <__gnu_Unwind_Restore_WMMXC>
 8001984:	2000      	movs	r0, #0
 8001986:	b043      	add	sp, #268	; 0x10c
 8001988:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800198c:	2c03      	cmp	r4, #3
 800198e:	f040 808d 	bne.w	8001aac <_Unwind_VRS_Pop+0x190>
 8001992:	b294      	uxth	r4, r2
 8001994:	eb04 4312 	add.w	r3, r4, r2, lsr #16
 8001998:	2b10      	cmp	r3, #16
 800199a:	ea4f 4512 	mov.w	r5, r2, lsr #16
 800199e:	f200 8085 	bhi.w	8001aac <_Unwind_VRS_Pop+0x190>
 80019a2:	6803      	ldr	r3, [r0, #0]
 80019a4:	071f      	lsls	r7, r3, #28
 80019a6:	f100 80d2 	bmi.w	8001b4e <_Unwind_VRS_Pop+0x232>
 80019aa:	af20      	add	r7, sp, #128	; 0x80
 80019ac:	4638      	mov	r0, r7
 80019ae:	f000 f93d 	bl	8001c2c <__gnu_Unwind_Save_WMMXD>
 80019b2:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 80019b4:	eb07 01c5 	add.w	r1, r7, r5, lsl #3
 80019b8:	b154      	cbz	r4, 80019d0 <_Unwind_VRS_Pop+0xb4>
 80019ba:	460b      	mov	r3, r1
 80019bc:	1ad0      	subs	r0, r2, r3
 80019be:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
 80019c2:	00e4      	lsls	r4, r4, #3
 80019c4:	581d      	ldr	r5, [r3, r0]
 80019c6:	f843 5b04 	str.w	r5, [r3], #4
 80019ca:	428b      	cmp	r3, r1
 80019cc:	d1fa      	bne.n	80019c4 <_Unwind_VRS_Pop+0xa8>
 80019ce:	4422      	add	r2, r4
 80019d0:	4638      	mov	r0, r7
 80019d2:	63b2      	str	r2, [r6, #56]	; 0x38
 80019d4:	f000 f908 	bl	8001be8 <__gnu_Unwind_Restore_WMMXD>
 80019d8:	2000      	movs	r0, #0
 80019da:	b043      	add	sp, #268	; 0x10c
 80019dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80019e0:	2c01      	cmp	r4, #1
 80019e2:	ea4f 4812 	mov.w	r8, r2, lsr #16
 80019e6:	b295      	uxth	r5, r2
 80019e8:	d05c      	beq.n	8001aa4 <_Unwind_VRS_Pop+0x188>
 80019ea:	2c05      	cmp	r4, #5
 80019ec:	d15e      	bne.n	8001aac <_Unwind_VRS_Pop+0x190>
 80019ee:	eb08 0905 	add.w	r9, r8, r5
 80019f2:	f1b9 0f20 	cmp.w	r9, #32
 80019f6:	d859      	bhi.n	8001aac <_Unwind_VRS_Pop+0x190>
 80019f8:	f1b8 0f0f 	cmp.w	r8, #15
 80019fc:	d979      	bls.n	8001af2 <_Unwind_VRS_Pop+0x1d6>
 80019fe:	46a9      	mov	r9, r5
 8001a00:	2d00      	cmp	r5, #0
 8001a02:	f040 808a 	bne.w	8001b1a <_Unwind_VRS_Pop+0x1fe>
 8001a06:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001a08:	b36d      	cbz	r5, 8001a66 <_Unwind_VRS_Pop+0x14a>
 8001a0a:	af20      	add	r7, sp, #128	; 0x80
 8001a0c:	f04f 0900 	mov.w	r9, #0
 8001a10:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
 8001a14:	3f04      	subs	r7, #4
 8001a16:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8001a1a:	f853 1b04 	ldr.w	r1, [r3], #4
 8001a1e:	f847 1f04 	str.w	r1, [r7, #4]!
 8001a22:	42ab      	cmp	r3, r5
 8001a24:	d1f9      	bne.n	8001a1a <_Unwind_VRS_Pop+0xfe>
 8001a26:	f1b9 0f00 	cmp.w	r9, #0
 8001a2a:	d00f      	beq.n	8001a4c <_Unwind_VRS_Pop+0x130>
 8001a2c:	466f      	mov	r7, sp
 8001a2e:	4641      	mov	r1, r8
 8001a30:	2910      	cmp	r1, #16
 8001a32:	bf38      	it	cc
 8001a34:	2110      	movcc	r1, #16
 8001a36:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
 8001a3a:	3984      	subs	r1, #132	; 0x84
 8001a3c:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
 8001a40:	f853 0b04 	ldr.w	r0, [r3], #4
 8001a44:	f841 0f04 	str.w	r0, [r1, #4]!
 8001a48:	42ab      	cmp	r3, r5
 8001a4a:	d1f9      	bne.n	8001a40 <_Unwind_VRS_Pop+0x124>
 8001a4c:	2c01      	cmp	r4, #1
 8001a4e:	f000 8086 	beq.w	8001b5e <_Unwind_VRS_Pop+0x242>
 8001a52:	f1b8 0f0f 	cmp.w	r8, #15
 8001a56:	63b5      	str	r5, [r6, #56]	; 0x38
 8001a58:	d947      	bls.n	8001aea <_Unwind_VRS_Pop+0x1ce>
 8001a5a:	f1b9 0f00 	cmp.w	r9, #0
 8001a5e:	d002      	beq.n	8001a66 <_Unwind_VRS_Pop+0x14a>
 8001a60:	4668      	mov	r0, sp
 8001a62:	f000 f8b9 	bl	8001bd8 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8001a66:	2000      	movs	r0, #0
 8001a68:	b043      	add	sp, #268	; 0x10c
 8001a6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001a6e:	b9ec      	cbnz	r4, 8001aac <_Unwind_VRS_Pop+0x190>
 8001a70:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8001a72:	4623      	mov	r3, r4
 8001a74:	fa1f fc82 	uxth.w	ip, r2
 8001a78:	2401      	movs	r4, #1
 8001a7a:	1d37      	adds	r7, r6, #4
 8001a7c:	fa04 f203 	lsl.w	r2, r4, r3
 8001a80:	ea12 0f0c 	tst.w	r2, ip
 8001a84:	4601      	mov	r1, r0
 8001a86:	d004      	beq.n	8001a92 <_Unwind_VRS_Pop+0x176>
 8001a88:	f851 2b04 	ldr.w	r2, [r1], #4
 8001a8c:	f847 2023 	str.w	r2, [r7, r3, lsl #2]
 8001a90:	4608      	mov	r0, r1
 8001a92:	3301      	adds	r3, #1
 8001a94:	2b10      	cmp	r3, #16
 8001a96:	d1f1      	bne.n	8001a7c <_Unwind_VRS_Pop+0x160>
 8001a98:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
 8001a9c:	d1e3      	bne.n	8001a66 <_Unwind_VRS_Pop+0x14a>
 8001a9e:	63b0      	str	r0, [r6, #56]	; 0x38
 8001aa0:	4628      	mov	r0, r5
 8001aa2:	e004      	b.n	8001aae <_Unwind_VRS_Pop+0x192>
 8001aa4:	eb08 0305 	add.w	r3, r8, r5
 8001aa8:	2b10      	cmp	r3, #16
 8001aaa:	d903      	bls.n	8001ab4 <_Unwind_VRS_Pop+0x198>
 8001aac:	2002      	movs	r0, #2
 8001aae:	b043      	add	sp, #268	; 0x10c
 8001ab0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001ab4:	f1b8 0f0f 	cmp.w	r8, #15
 8001ab8:	d8f8      	bhi.n	8001aac <_Unwind_VRS_Pop+0x190>
 8001aba:	6833      	ldr	r3, [r6, #0]
 8001abc:	07da      	lsls	r2, r3, #31
 8001abe:	d506      	bpl.n	8001ace <_Unwind_VRS_Pop+0x1b2>
 8001ac0:	4630      	mov	r0, r6
 8001ac2:	f023 0303 	bic.w	r3, r3, #3
 8001ac6:	f840 3b48 	str.w	r3, [r0], #72
 8001aca:	f000 f879 	bl	8001bc0 <__gnu_Unwind_Save_VFP>
 8001ace:	af20      	add	r7, sp, #128	; 0x80
 8001ad0:	4638      	mov	r0, r7
 8001ad2:	f000 f875 	bl	8001bc0 <__gnu_Unwind_Save_VFP>
 8001ad6:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001ad8:	2d00      	cmp	r5, #0
 8001ada:	d197      	bne.n	8001a0c <_Unwind_VRS_Pop+0xf0>
 8001adc:	461d      	mov	r5, r3
 8001ade:	3504      	adds	r5, #4
 8001ae0:	63b5      	str	r5, [r6, #56]	; 0x38
 8001ae2:	4638      	mov	r0, r7
 8001ae4:	f000 f868 	bl	8001bb8 <__gnu_Unwind_Restore_VFP>
 8001ae8:	e7bd      	b.n	8001a66 <_Unwind_VRS_Pop+0x14a>
 8001aea:	a820      	add	r0, sp, #128	; 0x80
 8001aec:	f000 f86c 	bl	8001bc8 <__gnu_Unwind_Restore_VFP_D>
 8001af0:	e7b3      	b.n	8001a5a <_Unwind_VRS_Pop+0x13e>
 8001af2:	f1b9 0f10 	cmp.w	r9, #16
 8001af6:	d940      	bls.n	8001b7a <_Unwind_VRS_Pop+0x25e>
 8001af8:	f1a9 0910 	sub.w	r9, r9, #16
 8001afc:	6833      	ldr	r3, [r6, #0]
 8001afe:	07d9      	lsls	r1, r3, #31
 8001b00:	d508      	bpl.n	8001b14 <_Unwind_VRS_Pop+0x1f8>
 8001b02:	f023 0301 	bic.w	r3, r3, #1
 8001b06:	4630      	mov	r0, r6
 8001b08:	f043 0302 	orr.w	r3, r3, #2
 8001b0c:	f840 3b48 	str.w	r3, [r0], #72
 8001b10:	f000 f85e 	bl	8001bd0 <__gnu_Unwind_Save_VFP_D>
 8001b14:	f1b9 0f00 	cmp.w	r9, #0
 8001b18:	d032      	beq.n	8001b80 <_Unwind_VRS_Pop+0x264>
 8001b1a:	6833      	ldr	r3, [r6, #0]
 8001b1c:	075a      	lsls	r2, r3, #29
 8001b1e:	d420      	bmi.n	8001b62 <_Unwind_VRS_Pop+0x246>
 8001b20:	f1b8 0f0f 	cmp.w	r8, #15
 8001b24:	d925      	bls.n	8001b72 <_Unwind_VRS_Pop+0x256>
 8001b26:	466f      	mov	r7, sp
 8001b28:	4638      	mov	r0, r7
 8001b2a:	f1c8 0510 	rsb	r5, r8, #16
 8001b2e:	f000 f857 	bl	8001be0 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8001b32:	2d00      	cmp	r5, #0
 8001b34:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001b36:	f77f af7a 	ble.w	8001a2e <_Unwind_VRS_Pop+0x112>
 8001b3a:	af20      	add	r7, sp, #128	; 0x80
 8001b3c:	e768      	b.n	8001a10 <_Unwind_VRS_Pop+0xf4>
 8001b3e:	f023 0310 	bic.w	r3, r3, #16
 8001b42:	6033      	str	r3, [r6, #0]
 8001b44:	f506 70e8 	add.w	r0, r6, #464	; 0x1d0
 8001b48:	f000 f89c 	bl	8001c84 <__gnu_Unwind_Save_WMMXC>
 8001b4c:	e6fe      	b.n	800194c <_Unwind_VRS_Pop+0x30>
 8001b4e:	f023 0308 	bic.w	r3, r3, #8
 8001b52:	6003      	str	r3, [r0, #0]
 8001b54:	f500 70a8 	add.w	r0, r0, #336	; 0x150
 8001b58:	f000 f868 	bl	8001c2c <__gnu_Unwind_Save_WMMXD>
 8001b5c:	e725      	b.n	80019aa <_Unwind_VRS_Pop+0x8e>
 8001b5e:	af20      	add	r7, sp, #128	; 0x80
 8001b60:	e7bd      	b.n	8001ade <_Unwind_VRS_Pop+0x1c2>
 8001b62:	4630      	mov	r0, r6
 8001b64:	f023 0304 	bic.w	r3, r3, #4
 8001b68:	f840 3bd0 	str.w	r3, [r0], #208
 8001b6c:	f000 f838 	bl	8001be0 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8001b70:	e7d6      	b.n	8001b20 <_Unwind_VRS_Pop+0x204>
 8001b72:	a820      	add	r0, sp, #128	; 0x80
 8001b74:	f000 f82c 	bl	8001bd0 <__gnu_Unwind_Save_VFP_D>
 8001b78:	e7d5      	b.n	8001b26 <_Unwind_VRS_Pop+0x20a>
 8001b7a:	f04f 0900 	mov.w	r9, #0
 8001b7e:	e7bd      	b.n	8001afc <_Unwind_VRS_Pop+0x1e0>
 8001b80:	f1b8 0f0f 	cmp.w	r8, #15
 8001b84:	f63f af3f 	bhi.w	8001a06 <_Unwind_VRS_Pop+0xea>
 8001b88:	af20      	add	r7, sp, #128	; 0x80
 8001b8a:	4638      	mov	r0, r7
 8001b8c:	f000 f820 	bl	8001bd0 <__gnu_Unwind_Save_VFP_D>
 8001b90:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001b92:	2d00      	cmp	r5, #0
 8001b94:	f47f af3a 	bne.w	8001a0c <_Unwind_VRS_Pop+0xf0>
 8001b98:	4638      	mov	r0, r7
 8001b9a:	f000 f815 	bl	8001bc8 <__gnu_Unwind_Restore_VFP_D>
 8001b9e:	e762      	b.n	8001a66 <_Unwind_VRS_Pop+0x14a>

08001ba0 <__restore_core_regs>:
 8001ba0:	f100 0134 	add.w	r1, r0, #52	; 0x34
 8001ba4:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 8001ba8:	469c      	mov	ip, r3
 8001baa:	46a6      	mov	lr, r4
 8001bac:	f84c 5d04 	str.w	r5, [ip, #-4]!
 8001bb0:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8001bb4:	46e5      	mov	sp, ip
 8001bb6:	bd00      	pop	{pc}

08001bb8 <__gnu_Unwind_Restore_VFP>:
 8001bb8:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 8001bbc:	4770      	bx	lr
 8001bbe:	bf00      	nop

08001bc0 <__gnu_Unwind_Save_VFP>:
 8001bc0:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 8001bc4:	4770      	bx	lr
 8001bc6:	bf00      	nop

08001bc8 <__gnu_Unwind_Restore_VFP_D>:
 8001bc8:	ec90 0b20 	vldmia	r0, {d0-d15}
 8001bcc:	4770      	bx	lr
 8001bce:	bf00      	nop

08001bd0 <__gnu_Unwind_Save_VFP_D>:
 8001bd0:	ec80 0b20 	vstmia	r0, {d0-d15}
 8001bd4:	4770      	bx	lr
 8001bd6:	bf00      	nop

08001bd8 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 8001bd8:	ecd0 0b20 	vldmia	r0, {d16-d31}
 8001bdc:	4770      	bx	lr
 8001bde:	bf00      	nop

08001be0 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 8001be0:	ecc0 0b20 	vstmia	r0, {d16-d31}
 8001be4:	4770      	bx	lr
 8001be6:	bf00      	nop

08001be8 <__gnu_Unwind_Restore_WMMXD>:
 8001be8:	ecf0 0102 	ldfe	f0, [r0], #8
 8001bec:	ecf0 1102 	ldfe	f1, [r0], #8
 8001bf0:	ecf0 2102 	ldfe	f2, [r0], #8
 8001bf4:	ecf0 3102 	ldfe	f3, [r0], #8
 8001bf8:	ecf0 4102 	ldfe	f4, [r0], #8
 8001bfc:	ecf0 5102 	ldfe	f5, [r0], #8
 8001c00:	ecf0 6102 	ldfe	f6, [r0], #8
 8001c04:	ecf0 7102 	ldfe	f7, [r0], #8
 8001c08:	ecf0 8102 	ldfp	f0, [r0], #8
 8001c0c:	ecf0 9102 	ldfp	f1, [r0], #8
 8001c10:	ecf0 a102 	ldfp	f2, [r0], #8
 8001c14:	ecf0 b102 	ldfp	f3, [r0], #8
 8001c18:	ecf0 c102 	ldfp	f4, [r0], #8
 8001c1c:	ecf0 d102 	ldfp	f5, [r0], #8
 8001c20:	ecf0 e102 	ldfp	f6, [r0], #8
 8001c24:	ecf0 f102 	ldfp	f7, [r0], #8
 8001c28:	4770      	bx	lr
 8001c2a:	bf00      	nop

08001c2c <__gnu_Unwind_Save_WMMXD>:
 8001c2c:	ece0 0102 	stfe	f0, [r0], #8
 8001c30:	ece0 1102 	stfe	f1, [r0], #8
 8001c34:	ece0 2102 	stfe	f2, [r0], #8
 8001c38:	ece0 3102 	stfe	f3, [r0], #8
 8001c3c:	ece0 4102 	stfe	f4, [r0], #8
 8001c40:	ece0 5102 	stfe	f5, [r0], #8
 8001c44:	ece0 6102 	stfe	f6, [r0], #8
 8001c48:	ece0 7102 	stfe	f7, [r0], #8
 8001c4c:	ece0 8102 	stfp	f0, [r0], #8
 8001c50:	ece0 9102 	stfp	f1, [r0], #8
 8001c54:	ece0 a102 	stfp	f2, [r0], #8
 8001c58:	ece0 b102 	stfp	f3, [r0], #8
 8001c5c:	ece0 c102 	stfp	f4, [r0], #8
 8001c60:	ece0 d102 	stfp	f5, [r0], #8
 8001c64:	ece0 e102 	stfp	f6, [r0], #8
 8001c68:	ece0 f102 	stfp	f7, [r0], #8
 8001c6c:	4770      	bx	lr
 8001c6e:	bf00      	nop

08001c70 <__gnu_Unwind_Restore_WMMXC>:
 8001c70:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 8001c74:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 8001c78:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 8001c7c:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 8001c80:	4770      	bx	lr
 8001c82:	bf00      	nop

08001c84 <__gnu_Unwind_Save_WMMXC>:
 8001c84:	fca0 8101 	stc2	1, cr8, [r0], #4
 8001c88:	fca0 9101 	stc2	1, cr9, [r0], #4
 8001c8c:	fca0 a101 	stc2	1, cr10, [r0], #4
 8001c90:	fca0 b101 	stc2	1, cr11, [r0], #4
 8001c94:	4770      	bx	lr
 8001c96:	bf00      	nop

08001c98 <_Unwind_RaiseException>:
 8001c98:	46ec      	mov	ip, sp
 8001c9a:	b500      	push	{lr}
 8001c9c:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001ca0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8001ca4:	f04f 0300 	mov.w	r3, #0
 8001ca8:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001cac:	a901      	add	r1, sp, #4
 8001cae:	f7ff fbe1 	bl	8001474 <__gnu_Unwind_RaiseException>
 8001cb2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8001cb6:	b012      	add	sp, #72	; 0x48
 8001cb8:	4770      	bx	lr
 8001cba:	bf00      	nop

08001cbc <_Unwind_Resume>:
 8001cbc:	46ec      	mov	ip, sp
 8001cbe:	b500      	push	{lr}
 8001cc0:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001cc4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8001cc8:	f04f 0300 	mov.w	r3, #0
 8001ccc:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001cd0:	a901      	add	r1, sp, #4
 8001cd2:	f7ff fc0b 	bl	80014ec <__gnu_Unwind_Resume>
 8001cd6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8001cda:	b012      	add	sp, #72	; 0x48
 8001cdc:	4770      	bx	lr
 8001cde:	bf00      	nop

08001ce0 <_Unwind_Resume_or_Rethrow>:
 8001ce0:	46ec      	mov	ip, sp
 8001ce2:	b500      	push	{lr}
 8001ce4:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001ce8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8001cec:	f04f 0300 	mov.w	r3, #0
 8001cf0:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001cf4:	a901      	add	r1, sp, #4
 8001cf6:	f7ff fc1b 	bl	8001530 <__gnu_Unwind_Resume_or_Rethrow>
 8001cfa:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8001cfe:	b012      	add	sp, #72	; 0x48
 8001d00:	4770      	bx	lr
 8001d02:	bf00      	nop

08001d04 <_Unwind_ForcedUnwind>:
 8001d04:	46ec      	mov	ip, sp
 8001d06:	b500      	push	{lr}
 8001d08:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001d0c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8001d10:	f04f 0300 	mov.w	r3, #0
 8001d14:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001d18:	ab01      	add	r3, sp, #4
 8001d1a:	f7ff fbdf 	bl	80014dc <__gnu_Unwind_ForcedUnwind>
 8001d1e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8001d22:	b012      	add	sp, #72	; 0x48
 8001d24:	4770      	bx	lr
 8001d26:	bf00      	nop

08001d28 <_Unwind_Backtrace>:
 8001d28:	46ec      	mov	ip, sp
 8001d2a:	b500      	push	{lr}
 8001d2c:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001d30:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8001d34:	f04f 0300 	mov.w	r3, #0
 8001d38:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001d3c:	aa01      	add	r2, sp, #4
 8001d3e:	f7ff fc51 	bl	80015e4 <__gnu_Unwind_Backtrace>
 8001d42:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8001d46:	b012      	add	sp, #72	; 0x48
 8001d48:	4770      	bx	lr
 8001d4a:	bf00      	nop

08001d4c <next_unwind_byte>:
 8001d4c:	7a02      	ldrb	r2, [r0, #8]
 8001d4e:	4603      	mov	r3, r0
 8001d50:	b97a      	cbnz	r2, 8001d72 <next_unwind_byte+0x26>
 8001d52:	7a42      	ldrb	r2, [r0, #9]
 8001d54:	b1a2      	cbz	r2, 8001d80 <next_unwind_byte+0x34>
 8001d56:	6841      	ldr	r1, [r0, #4]
 8001d58:	3a01      	subs	r2, #1
 8001d5a:	b410      	push	{r4}
 8001d5c:	7242      	strb	r2, [r0, #9]
 8001d5e:	6808      	ldr	r0, [r1, #0]
 8001d60:	2203      	movs	r2, #3
 8001d62:	1d0c      	adds	r4, r1, #4
 8001d64:	721a      	strb	r2, [r3, #8]
 8001d66:	0202      	lsls	r2, r0, #8
 8001d68:	605c      	str	r4, [r3, #4]
 8001d6a:	0e00      	lsrs	r0, r0, #24
 8001d6c:	bc10      	pop	{r4}
 8001d6e:	601a      	str	r2, [r3, #0]
 8001d70:	4770      	bx	lr
 8001d72:	6800      	ldr	r0, [r0, #0]
 8001d74:	3a01      	subs	r2, #1
 8001d76:	721a      	strb	r2, [r3, #8]
 8001d78:	0202      	lsls	r2, r0, #8
 8001d7a:	601a      	str	r2, [r3, #0]
 8001d7c:	0e00      	lsrs	r0, r0, #24
 8001d7e:	4770      	bx	lr
 8001d80:	20b0      	movs	r0, #176	; 0xb0
 8001d82:	4770      	bx	lr

08001d84 <_Unwind_GetGR.constprop.0>:
 8001d84:	b500      	push	{lr}
 8001d86:	b085      	sub	sp, #20
 8001d88:	2300      	movs	r3, #0
 8001d8a:	aa03      	add	r2, sp, #12
 8001d8c:	9200      	str	r2, [sp, #0]
 8001d8e:	4619      	mov	r1, r3
 8001d90:	220c      	movs	r2, #12
 8001d92:	f7ff fbdd 	bl	8001550 <_Unwind_VRS_Get>
 8001d96:	9803      	ldr	r0, [sp, #12]
 8001d98:	b005      	add	sp, #20
 8001d9a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d9e:	bf00      	nop

08001da0 <unwind_UCB_from_context>:
 8001da0:	e7f0      	b.n	8001d84 <_Unwind_GetGR.constprop.0>
 8001da2:	bf00      	nop

08001da4 <__gnu_unwind_execute>:
 8001da4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001da8:	4605      	mov	r5, r0
 8001daa:	b085      	sub	sp, #20
 8001dac:	460e      	mov	r6, r1
 8001dae:	f04f 0800 	mov.w	r8, #0
 8001db2:	4630      	mov	r0, r6
 8001db4:	f7ff ffca 	bl	8001d4c <next_unwind_byte>
 8001db8:	28b0      	cmp	r0, #176	; 0xb0
 8001dba:	4604      	mov	r4, r0
 8001dbc:	f000 80ba 	beq.w	8001f34 <__gnu_unwind_execute+0x190>
 8001dc0:	0607      	lsls	r7, r0, #24
 8001dc2:	d520      	bpl.n	8001e06 <__gnu_unwind_execute+0x62>
 8001dc4:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 8001dc8:	2b80      	cmp	r3, #128	; 0x80
 8001dca:	d04d      	beq.n	8001e68 <__gnu_unwind_execute+0xc4>
 8001dcc:	2b90      	cmp	r3, #144	; 0x90
 8001dce:	d036      	beq.n	8001e3e <__gnu_unwind_execute+0x9a>
 8001dd0:	2ba0      	cmp	r3, #160	; 0xa0
 8001dd2:	d060      	beq.n	8001e96 <__gnu_unwind_execute+0xf2>
 8001dd4:	2bb0      	cmp	r3, #176	; 0xb0
 8001dd6:	d074      	beq.n	8001ec2 <__gnu_unwind_execute+0x11e>
 8001dd8:	2bc0      	cmp	r3, #192	; 0xc0
 8001dda:	f000 808b 	beq.w	8001ef4 <__gnu_unwind_execute+0x150>
 8001dde:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8001de2:	2bd0      	cmp	r3, #208	; 0xd0
 8001de4:	d10b      	bne.n	8001dfe <__gnu_unwind_execute+0x5a>
 8001de6:	f000 0207 	and.w	r2, r0, #7
 8001dea:	3201      	adds	r2, #1
 8001dec:	2305      	movs	r3, #5
 8001dee:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8001df2:	2101      	movs	r1, #1
 8001df4:	4628      	mov	r0, r5
 8001df6:	f7ff fd91 	bl	800191c <_Unwind_VRS_Pop>
 8001dfa:	2800      	cmp	r0, #0
 8001dfc:	d0d9      	beq.n	8001db2 <__gnu_unwind_execute+0xe>
 8001dfe:	2009      	movs	r0, #9
 8001e00:	b005      	add	sp, #20
 8001e02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001e06:	0083      	lsls	r3, r0, #2
 8001e08:	b2db      	uxtb	r3, r3
 8001e0a:	1d1f      	adds	r7, r3, #4
 8001e0c:	f10d 090c 	add.w	r9, sp, #12
 8001e10:	2300      	movs	r3, #0
 8001e12:	4619      	mov	r1, r3
 8001e14:	f8cd 9000 	str.w	r9, [sp]
 8001e18:	220d      	movs	r2, #13
 8001e1a:	4628      	mov	r0, r5
 8001e1c:	f7ff fb98 	bl	8001550 <_Unwind_VRS_Get>
 8001e20:	9b03      	ldr	r3, [sp, #12]
 8001e22:	f8cd 9000 	str.w	r9, [sp]
 8001e26:	0660      	lsls	r0, r4, #25
 8001e28:	bf4c      	ite	mi
 8001e2a:	1bdf      	submi	r7, r3, r7
 8001e2c:	18ff      	addpl	r7, r7, r3
 8001e2e:	2300      	movs	r3, #0
 8001e30:	220d      	movs	r2, #13
 8001e32:	4619      	mov	r1, r3
 8001e34:	4628      	mov	r0, r5
 8001e36:	9703      	str	r7, [sp, #12]
 8001e38:	f7ff fbb0 	bl	800159c <_Unwind_VRS_Set>
 8001e3c:	e7b9      	b.n	8001db2 <__gnu_unwind_execute+0xe>
 8001e3e:	f000 030d 	and.w	r3, r0, #13
 8001e42:	2b0d      	cmp	r3, #13
 8001e44:	d0db      	beq.n	8001dfe <__gnu_unwind_execute+0x5a>
 8001e46:	af03      	add	r7, sp, #12
 8001e48:	2300      	movs	r3, #0
 8001e4a:	f000 020f 	and.w	r2, r0, #15
 8001e4e:	4619      	mov	r1, r3
 8001e50:	9700      	str	r7, [sp, #0]
 8001e52:	4628      	mov	r0, r5
 8001e54:	f7ff fb7c 	bl	8001550 <_Unwind_VRS_Get>
 8001e58:	2300      	movs	r3, #0
 8001e5a:	9700      	str	r7, [sp, #0]
 8001e5c:	220d      	movs	r2, #13
 8001e5e:	4619      	mov	r1, r3
 8001e60:	4628      	mov	r0, r5
 8001e62:	f7ff fb9b 	bl	800159c <_Unwind_VRS_Set>
 8001e66:	e7a4      	b.n	8001db2 <__gnu_unwind_execute+0xe>
 8001e68:	4630      	mov	r0, r6
 8001e6a:	f7ff ff6f 	bl	8001d4c <next_unwind_byte>
 8001e6e:	0224      	lsls	r4, r4, #8
 8001e70:	4320      	orrs	r0, r4
 8001e72:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8001e76:	d0c2      	beq.n	8001dfe <__gnu_unwind_execute+0x5a>
 8001e78:	0104      	lsls	r4, r0, #4
 8001e7a:	2300      	movs	r3, #0
 8001e7c:	b2a2      	uxth	r2, r4
 8001e7e:	4619      	mov	r1, r3
 8001e80:	4628      	mov	r0, r5
 8001e82:	f7ff fd4b 	bl	800191c <_Unwind_VRS_Pop>
 8001e86:	2800      	cmp	r0, #0
 8001e88:	d1b9      	bne.n	8001dfe <__gnu_unwind_execute+0x5a>
 8001e8a:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8001e8e:	bf18      	it	ne
 8001e90:	f04f 0801 	movne.w	r8, #1
 8001e94:	e78d      	b.n	8001db2 <__gnu_unwind_execute+0xe>
 8001e96:	43c2      	mvns	r2, r0
 8001e98:	f002 0307 	and.w	r3, r2, #7
 8001e9c:	f44f 627f 	mov.w	r2, #4080	; 0xff0
 8001ea0:	411a      	asrs	r2, r3
 8001ea2:	0701      	lsls	r1, r0, #28
 8001ea4:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
 8001ea8:	f04f 0300 	mov.w	r3, #0
 8001eac:	bf48      	it	mi
 8001eae:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 8001eb2:	4619      	mov	r1, r3
 8001eb4:	4628      	mov	r0, r5
 8001eb6:	f7ff fd31 	bl	800191c <_Unwind_VRS_Pop>
 8001eba:	2800      	cmp	r0, #0
 8001ebc:	f43f af79 	beq.w	8001db2 <__gnu_unwind_execute+0xe>
 8001ec0:	e79d      	b.n	8001dfe <__gnu_unwind_execute+0x5a>
 8001ec2:	28b1      	cmp	r0, #177	; 0xb1
 8001ec4:	d03b      	beq.n	8001f3e <__gnu_unwind_execute+0x19a>
 8001ec6:	28b2      	cmp	r0, #178	; 0xb2
 8001ec8:	f000 8093 	beq.w	8001ff2 <__gnu_unwind_execute+0x24e>
 8001ecc:	28b3      	cmp	r0, #179	; 0xb3
 8001ece:	d041      	beq.n	8001f54 <__gnu_unwind_execute+0x1b0>
 8001ed0:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 8001ed4:	2bb4      	cmp	r3, #180	; 0xb4
 8001ed6:	d092      	beq.n	8001dfe <__gnu_unwind_execute+0x5a>
 8001ed8:	f000 0207 	and.w	r2, r0, #7
 8001edc:	3201      	adds	r2, #1
 8001ede:	2301      	movs	r3, #1
 8001ee0:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8001ee4:	4619      	mov	r1, r3
 8001ee6:	4628      	mov	r0, r5
 8001ee8:	f7ff fd18 	bl	800191c <_Unwind_VRS_Pop>
 8001eec:	2800      	cmp	r0, #0
 8001eee:	f43f af60 	beq.w	8001db2 <__gnu_unwind_execute+0xe>
 8001ef2:	e784      	b.n	8001dfe <__gnu_unwind_execute+0x5a>
 8001ef4:	28c6      	cmp	r0, #198	; 0xc6
 8001ef6:	d04a      	beq.n	8001f8e <__gnu_unwind_execute+0x1ea>
 8001ef8:	28c7      	cmp	r0, #199	; 0xc7
 8001efa:	d054      	beq.n	8001fa6 <__gnu_unwind_execute+0x202>
 8001efc:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8001f00:	2bc0      	cmp	r3, #192	; 0xc0
 8001f02:	d063      	beq.n	8001fcc <__gnu_unwind_execute+0x228>
 8001f04:	28c8      	cmp	r0, #200	; 0xc8
 8001f06:	d068      	beq.n	8001fda <__gnu_unwind_execute+0x236>
 8001f08:	28c9      	cmp	r0, #201	; 0xc9
 8001f0a:	f47f af78 	bne.w	8001dfe <__gnu_unwind_execute+0x5a>
 8001f0e:	4630      	mov	r0, r6
 8001f10:	f7ff ff1c 	bl	8001d4c <next_unwind_byte>
 8001f14:	0302      	lsls	r2, r0, #12
 8001f16:	f000 000f 	and.w	r0, r0, #15
 8001f1a:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8001f1e:	3001      	adds	r0, #1
 8001f20:	4302      	orrs	r2, r0
 8001f22:	2101      	movs	r1, #1
 8001f24:	2305      	movs	r3, #5
 8001f26:	4628      	mov	r0, r5
 8001f28:	f7ff fcf8 	bl	800191c <_Unwind_VRS_Pop>
 8001f2c:	2800      	cmp	r0, #0
 8001f2e:	f43f af40 	beq.w	8001db2 <__gnu_unwind_execute+0xe>
 8001f32:	e764      	b.n	8001dfe <__gnu_unwind_execute+0x5a>
 8001f34:	f1b8 0f00 	cmp.w	r8, #0
 8001f38:	d018      	beq.n	8001f6c <__gnu_unwind_execute+0x1c8>
 8001f3a:	2000      	movs	r0, #0
 8001f3c:	e760      	b.n	8001e00 <__gnu_unwind_execute+0x5c>
 8001f3e:	4630      	mov	r0, r6
 8001f40:	f7ff ff04 	bl	8001d4c <next_unwind_byte>
 8001f44:	4602      	mov	r2, r0
 8001f46:	2800      	cmp	r0, #0
 8001f48:	f43f af59 	beq.w	8001dfe <__gnu_unwind_execute+0x5a>
 8001f4c:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8001f50:	d0c8      	beq.n	8001ee4 <__gnu_unwind_execute+0x140>
 8001f52:	e754      	b.n	8001dfe <__gnu_unwind_execute+0x5a>
 8001f54:	4630      	mov	r0, r6
 8001f56:	f7ff fef9 	bl	8001d4c <next_unwind_byte>
 8001f5a:	0302      	lsls	r2, r0, #12
 8001f5c:	f000 030f 	and.w	r3, r0, #15
 8001f60:	3301      	adds	r3, #1
 8001f62:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8001f66:	431a      	orrs	r2, r3
 8001f68:	2301      	movs	r3, #1
 8001f6a:	e7bb      	b.n	8001ee4 <__gnu_unwind_execute+0x140>
 8001f6c:	ac03      	add	r4, sp, #12
 8001f6e:	4643      	mov	r3, r8
 8001f70:	220e      	movs	r2, #14
 8001f72:	4641      	mov	r1, r8
 8001f74:	9400      	str	r4, [sp, #0]
 8001f76:	4628      	mov	r0, r5
 8001f78:	f7ff faea 	bl	8001550 <_Unwind_VRS_Get>
 8001f7c:	9400      	str	r4, [sp, #0]
 8001f7e:	4643      	mov	r3, r8
 8001f80:	220f      	movs	r2, #15
 8001f82:	4641      	mov	r1, r8
 8001f84:	4628      	mov	r0, r5
 8001f86:	f7ff fb09 	bl	800159c <_Unwind_VRS_Set>
 8001f8a:	4640      	mov	r0, r8
 8001f8c:	e738      	b.n	8001e00 <__gnu_unwind_execute+0x5c>
 8001f8e:	4630      	mov	r0, r6
 8001f90:	f7ff fedc 	bl	8001d4c <next_unwind_byte>
 8001f94:	0302      	lsls	r2, r0, #12
 8001f96:	f000 030f 	and.w	r3, r0, #15
 8001f9a:	3301      	adds	r3, #1
 8001f9c:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8001fa0:	431a      	orrs	r2, r3
 8001fa2:	2303      	movs	r3, #3
 8001fa4:	e79e      	b.n	8001ee4 <__gnu_unwind_execute+0x140>
 8001fa6:	4630      	mov	r0, r6
 8001fa8:	f7ff fed0 	bl	8001d4c <next_unwind_byte>
 8001fac:	4602      	mov	r2, r0
 8001fae:	2800      	cmp	r0, #0
 8001fb0:	f43f af25 	beq.w	8001dfe <__gnu_unwind_execute+0x5a>
 8001fb4:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8001fb8:	f47f af21 	bne.w	8001dfe <__gnu_unwind_execute+0x5a>
 8001fbc:	2104      	movs	r1, #4
 8001fbe:	4628      	mov	r0, r5
 8001fc0:	f7ff fcac 	bl	800191c <_Unwind_VRS_Pop>
 8001fc4:	2800      	cmp	r0, #0
 8001fc6:	f43f aef4 	beq.w	8001db2 <__gnu_unwind_execute+0xe>
 8001fca:	e718      	b.n	8001dfe <__gnu_unwind_execute+0x5a>
 8001fcc:	f000 020f 	and.w	r2, r0, #15
 8001fd0:	3201      	adds	r2, #1
 8001fd2:	2303      	movs	r3, #3
 8001fd4:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 8001fd8:	e784      	b.n	8001ee4 <__gnu_unwind_execute+0x140>
 8001fda:	4630      	mov	r0, r6
 8001fdc:	f7ff feb6 	bl	8001d4c <next_unwind_byte>
 8001fe0:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
 8001fe4:	f000 030f 	and.w	r3, r0, #15
 8001fe8:	3210      	adds	r2, #16
 8001fea:	3301      	adds	r3, #1
 8001fec:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 8001ff0:	e797      	b.n	8001f22 <__gnu_unwind_execute+0x17e>
 8001ff2:	2300      	movs	r3, #0
 8001ff4:	f10d 090c 	add.w	r9, sp, #12
 8001ff8:	220d      	movs	r2, #13
 8001ffa:	4619      	mov	r1, r3
 8001ffc:	f8cd 9000 	str.w	r9, [sp]
 8002000:	4628      	mov	r0, r5
 8002002:	f7ff faa5 	bl	8001550 <_Unwind_VRS_Get>
 8002006:	4630      	mov	r0, r6
 8002008:	f7ff fea0 	bl	8001d4c <next_unwind_byte>
 800200c:	0602      	lsls	r2, r0, #24
 800200e:	f04f 0402 	mov.w	r4, #2
 8002012:	d50c      	bpl.n	800202e <__gnu_unwind_execute+0x28a>
 8002014:	9b03      	ldr	r3, [sp, #12]
 8002016:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800201a:	40a0      	lsls	r0, r4
 800201c:	4418      	add	r0, r3
 800201e:	9003      	str	r0, [sp, #12]
 8002020:	4630      	mov	r0, r6
 8002022:	f7ff fe93 	bl	8001d4c <next_unwind_byte>
 8002026:	0603      	lsls	r3, r0, #24
 8002028:	f104 0407 	add.w	r4, r4, #7
 800202c:	d4f2      	bmi.n	8002014 <__gnu_unwind_execute+0x270>
 800202e:	9b03      	ldr	r3, [sp, #12]
 8002030:	f8cd 9000 	str.w	r9, [sp]
 8002034:	f000 027f 	and.w	r2, r0, #127	; 0x7f
 8002038:	40a2      	lsls	r2, r4
 800203a:	f503 7301 	add.w	r3, r3, #516	; 0x204
 800203e:	441a      	add	r2, r3
 8002040:	2300      	movs	r3, #0
 8002042:	9203      	str	r2, [sp, #12]
 8002044:	4619      	mov	r1, r3
 8002046:	220d      	movs	r2, #13
 8002048:	4628      	mov	r0, r5
 800204a:	f7ff faa7 	bl	800159c <_Unwind_VRS_Set>
 800204e:	e6b0      	b.n	8001db2 <__gnu_unwind_execute+0xe>

08002050 <__gnu_unwind_frame>:
 8002050:	b510      	push	{r4, lr}
 8002052:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8002054:	6853      	ldr	r3, [r2, #4]
 8002056:	b084      	sub	sp, #16
 8002058:	f04f 0c03 	mov.w	ip, #3
 800205c:	3208      	adds	r2, #8
 800205e:	021c      	lsls	r4, r3, #8
 8002060:	4608      	mov	r0, r1
 8002062:	0e1b      	lsrs	r3, r3, #24
 8002064:	a901      	add	r1, sp, #4
 8002066:	9401      	str	r4, [sp, #4]
 8002068:	9202      	str	r2, [sp, #8]
 800206a:	f88d c00c 	strb.w	ip, [sp, #12]
 800206e:	f88d 300d 	strb.w	r3, [sp, #13]
 8002072:	f7ff fe97 	bl	8001da4 <__gnu_unwind_execute>
 8002076:	b004      	add	sp, #16
 8002078:	bd10      	pop	{r4, pc}
 800207a:	bf00      	nop

0800207c <_Unwind_GetRegionStart>:
 800207c:	b508      	push	{r3, lr}
 800207e:	f7ff fe8f 	bl	8001da0 <unwind_UCB_from_context>
 8002082:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002084:	bd08      	pop	{r3, pc}
 8002086:	bf00      	nop

08002088 <_Unwind_GetLanguageSpecificData>:
 8002088:	b508      	push	{r3, lr}
 800208a:	f7ff fe89 	bl	8001da0 <unwind_UCB_from_context>
 800208e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8002090:	79c3      	ldrb	r3, [r0, #7]
 8002092:	3302      	adds	r3, #2
 8002094:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8002098:	bd08      	pop	{r3, pc}
 800209a:	bf00      	nop

0800209c <__aeabi_idiv0>:
 800209c:	4770      	bx	lr
 800209e:	bf00      	nop

080020a0 <abort>:
 80020a0:	b508      	push	{r3, lr}
 80020a2:	2006      	movs	r0, #6
 80020a4:	f000 f89e 	bl	80021e4 <raise>
 80020a8:	2001      	movs	r0, #1
 80020aa:	f000 f8f1 	bl	8002290 <_exit>
 80020ae:	bf00      	nop

080020b0 <memcpy>:
 80020b0:	4684      	mov	ip, r0
 80020b2:	ea41 0300 	orr.w	r3, r1, r0
 80020b6:	f013 0303 	ands.w	r3, r3, #3
 80020ba:	d16d      	bne.n	8002198 <memcpy+0xe8>
 80020bc:	3a40      	subs	r2, #64	; 0x40
 80020be:	d341      	bcc.n	8002144 <memcpy+0x94>
 80020c0:	f851 3b04 	ldr.w	r3, [r1], #4
 80020c4:	f840 3b04 	str.w	r3, [r0], #4
 80020c8:	f851 3b04 	ldr.w	r3, [r1], #4
 80020cc:	f840 3b04 	str.w	r3, [r0], #4
 80020d0:	f851 3b04 	ldr.w	r3, [r1], #4
 80020d4:	f840 3b04 	str.w	r3, [r0], #4
 80020d8:	f851 3b04 	ldr.w	r3, [r1], #4
 80020dc:	f840 3b04 	str.w	r3, [r0], #4
 80020e0:	f851 3b04 	ldr.w	r3, [r1], #4
 80020e4:	f840 3b04 	str.w	r3, [r0], #4
 80020e8:	f851 3b04 	ldr.w	r3, [r1], #4
 80020ec:	f840 3b04 	str.w	r3, [r0], #4
 80020f0:	f851 3b04 	ldr.w	r3, [r1], #4
 80020f4:	f840 3b04 	str.w	r3, [r0], #4
 80020f8:	f851 3b04 	ldr.w	r3, [r1], #4
 80020fc:	f840 3b04 	str.w	r3, [r0], #4
 8002100:	f851 3b04 	ldr.w	r3, [r1], #4
 8002104:	f840 3b04 	str.w	r3, [r0], #4
 8002108:	f851 3b04 	ldr.w	r3, [r1], #4
 800210c:	f840 3b04 	str.w	r3, [r0], #4
 8002110:	f851 3b04 	ldr.w	r3, [r1], #4
 8002114:	f840 3b04 	str.w	r3, [r0], #4
 8002118:	f851 3b04 	ldr.w	r3, [r1], #4
 800211c:	f840 3b04 	str.w	r3, [r0], #4
 8002120:	f851 3b04 	ldr.w	r3, [r1], #4
 8002124:	f840 3b04 	str.w	r3, [r0], #4
 8002128:	f851 3b04 	ldr.w	r3, [r1], #4
 800212c:	f840 3b04 	str.w	r3, [r0], #4
 8002130:	f851 3b04 	ldr.w	r3, [r1], #4
 8002134:	f840 3b04 	str.w	r3, [r0], #4
 8002138:	f851 3b04 	ldr.w	r3, [r1], #4
 800213c:	f840 3b04 	str.w	r3, [r0], #4
 8002140:	3a40      	subs	r2, #64	; 0x40
 8002142:	d2bd      	bcs.n	80020c0 <memcpy+0x10>
 8002144:	3230      	adds	r2, #48	; 0x30
 8002146:	d311      	bcc.n	800216c <memcpy+0xbc>
 8002148:	f851 3b04 	ldr.w	r3, [r1], #4
 800214c:	f840 3b04 	str.w	r3, [r0], #4
 8002150:	f851 3b04 	ldr.w	r3, [r1], #4
 8002154:	f840 3b04 	str.w	r3, [r0], #4
 8002158:	f851 3b04 	ldr.w	r3, [r1], #4
 800215c:	f840 3b04 	str.w	r3, [r0], #4
 8002160:	f851 3b04 	ldr.w	r3, [r1], #4
 8002164:	f840 3b04 	str.w	r3, [r0], #4
 8002168:	3a10      	subs	r2, #16
 800216a:	d2ed      	bcs.n	8002148 <memcpy+0x98>
 800216c:	320c      	adds	r2, #12
 800216e:	d305      	bcc.n	800217c <memcpy+0xcc>
 8002170:	f851 3b04 	ldr.w	r3, [r1], #4
 8002174:	f840 3b04 	str.w	r3, [r0], #4
 8002178:	3a04      	subs	r2, #4
 800217a:	d2f9      	bcs.n	8002170 <memcpy+0xc0>
 800217c:	3204      	adds	r2, #4
 800217e:	d008      	beq.n	8002192 <memcpy+0xe2>
 8002180:	07d2      	lsls	r2, r2, #31
 8002182:	bf1c      	itt	ne
 8002184:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8002188:	f800 3b01 	strbne.w	r3, [r0], #1
 800218c:	d301      	bcc.n	8002192 <memcpy+0xe2>
 800218e:	880b      	ldrh	r3, [r1, #0]
 8002190:	8003      	strh	r3, [r0, #0]
 8002192:	4660      	mov	r0, ip
 8002194:	4770      	bx	lr
 8002196:	bf00      	nop
 8002198:	2a08      	cmp	r2, #8
 800219a:	d313      	bcc.n	80021c4 <memcpy+0x114>
 800219c:	078b      	lsls	r3, r1, #30
 800219e:	d08d      	beq.n	80020bc <memcpy+0xc>
 80021a0:	f010 0303 	ands.w	r3, r0, #3
 80021a4:	d08a      	beq.n	80020bc <memcpy+0xc>
 80021a6:	f1c3 0304 	rsb	r3, r3, #4
 80021aa:	1ad2      	subs	r2, r2, r3
 80021ac:	07db      	lsls	r3, r3, #31
 80021ae:	bf1c      	itt	ne
 80021b0:	f811 3b01 	ldrbne.w	r3, [r1], #1
 80021b4:	f800 3b01 	strbne.w	r3, [r0], #1
 80021b8:	d380      	bcc.n	80020bc <memcpy+0xc>
 80021ba:	f831 3b02 	ldrh.w	r3, [r1], #2
 80021be:	f820 3b02 	strh.w	r3, [r0], #2
 80021c2:	e77b      	b.n	80020bc <memcpy+0xc>
 80021c4:	3a04      	subs	r2, #4
 80021c6:	d3d9      	bcc.n	800217c <memcpy+0xcc>
 80021c8:	3a01      	subs	r2, #1
 80021ca:	f811 3b01 	ldrb.w	r3, [r1], #1
 80021ce:	f800 3b01 	strb.w	r3, [r0], #1
 80021d2:	d2f9      	bcs.n	80021c8 <memcpy+0x118>
 80021d4:	780b      	ldrb	r3, [r1, #0]
 80021d6:	7003      	strb	r3, [r0, #0]
 80021d8:	784b      	ldrb	r3, [r1, #1]
 80021da:	7043      	strb	r3, [r0, #1]
 80021dc:	788b      	ldrb	r3, [r1, #2]
 80021de:	7083      	strb	r3, [r0, #2]
 80021e0:	4660      	mov	r0, ip
 80021e2:	4770      	bx	lr

080021e4 <raise>:
 80021e4:	b538      	push	{r3, r4, r5, lr}
 80021e6:	4b15      	ldr	r3, [pc, #84]	; (800223c <raise+0x58>)
 80021e8:	281f      	cmp	r0, #31
 80021ea:	681d      	ldr	r5, [r3, #0]
 80021ec:	d820      	bhi.n	8002230 <raise+0x4c>
 80021ee:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
 80021f2:	4604      	mov	r4, r0
 80021f4:	b162      	cbz	r2, 8002210 <raise+0x2c>
 80021f6:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
 80021fa:	b14b      	cbz	r3, 8002210 <raise+0x2c>
 80021fc:	2b01      	cmp	r3, #1
 80021fe:	d015      	beq.n	800222c <raise+0x48>
 8002200:	1c59      	adds	r1, r3, #1
 8002202:	d00f      	beq.n	8002224 <raise+0x40>
 8002204:	2500      	movs	r5, #0
 8002206:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
 800220a:	4798      	blx	r3
 800220c:	4628      	mov	r0, r5
 800220e:	bd38      	pop	{r3, r4, r5, pc}
 8002210:	4628      	mov	r0, r5
 8002212:	f000 f82b 	bl	800226c <_getpid_r>
 8002216:	4622      	mov	r2, r4
 8002218:	4601      	mov	r1, r0
 800221a:	4628      	mov	r0, r5
 800221c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002220:	f000 b80e 	b.w	8002240 <_kill_r>
 8002224:	2316      	movs	r3, #22
 8002226:	602b      	str	r3, [r5, #0]
 8002228:	2001      	movs	r0, #1
 800222a:	bd38      	pop	{r3, r4, r5, pc}
 800222c:	2000      	movs	r0, #0
 800222e:	bd38      	pop	{r3, r4, r5, pc}
 8002230:	2316      	movs	r3, #22
 8002232:	602b      	str	r3, [r5, #0]
 8002234:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002238:	bd38      	pop	{r3, r4, r5, pc}
 800223a:	bf00      	nop
 800223c:	2000000c 	andcs	r0, r0, ip

08002240 <_kill_r>:
 8002240:	b570      	push	{r4, r5, r6, lr}
 8002242:	460c      	mov	r4, r1
 8002244:	4d08      	ldr	r5, [pc, #32]	; (8002268 <_kill_r+0x28>)
 8002246:	4603      	mov	r3, r0
 8002248:	2600      	movs	r6, #0
 800224a:	4620      	mov	r0, r4
 800224c:	4611      	mov	r1, r2
 800224e:	461c      	mov	r4, r3
 8002250:	602e      	str	r6, [r5, #0]
 8002252:	f000 f815 	bl	8002280 <_kill>
 8002256:	1c43      	adds	r3, r0, #1
 8002258:	d000      	beq.n	800225c <_kill_r+0x1c>
 800225a:	bd70      	pop	{r4, r5, r6, pc}
 800225c:	682b      	ldr	r3, [r5, #0]
 800225e:	2b00      	cmp	r3, #0
 8002260:	d0fb      	beq.n	800225a <_kill_r+0x1a>
 8002262:	6023      	str	r3, [r4, #0]
 8002264:	bd70      	pop	{r4, r5, r6, pc}
 8002266:	bf00      	nop
 8002268:	20000460 	andcs	r0, r0, r0, ror #8

0800226c <_getpid_r>:
 800226c:	f000 b800 	b.w	8002270 <_getpid>

08002270 <_getpid>:
 8002270:	4b02      	ldr	r3, [pc, #8]	; (800227c <_getpid+0xc>)
 8002272:	2258      	movs	r2, #88	; 0x58
 8002274:	601a      	str	r2, [r3, #0]
 8002276:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800227a:	4770      	bx	lr
 800227c:	20000460 	andcs	r0, r0, r0, ror #8

08002280 <_kill>:
 8002280:	4b02      	ldr	r3, [pc, #8]	; (800228c <_kill+0xc>)
 8002282:	2258      	movs	r2, #88	; 0x58
 8002284:	601a      	str	r2, [r3, #0]
 8002286:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800228a:	4770      	bx	lr
 800228c:	20000460 	andcs	r0, r0, r0, ror #8

08002290 <_exit>:
 8002290:	e7fe      	b.n	8002290 <_exit>
 8002292:	bf00      	nop

08002294 <_init>:
 8002294:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002296:	bf00      	nop
 8002298:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800229a:	bc08      	pop	{r3}
 800229c:	469e      	mov	lr, r3
 800229e:	4770      	bx	lr

080022a0 <_fini>:
 80022a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80022a2:	bf00      	nop
 80022a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80022a6:	bc08      	pop	{r3}
 80022a8:	469e      	mov	lr, r3
 80022aa:	4770      	bx	lr

Disassembly of section .rodata:

080022ac <AHBPrescTable>:
	...
 80022b4:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80022b8:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}

080022bc <_global_impure_ptr>:
 80022bc:	20000010 	andcs	r0, r0, r0, lsl r0

Disassembly of section .ARM.extab:

080022c0 <.ARM.extab>:
 80022c0:	8101b108 	tsthi	r1, r8, lsl #2
 80022c4:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
 80022c8:	00000000 	andeq	r0, r0, r0
 80022cc:	8101b108 	tsthi	r1, r8, lsl #2
 80022d0:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
 80022d4:	00000000 	andeq	r0, r0, r0
 80022d8:	8101b108 	tsthi	r1, r8, lsl #2
 80022dc:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
 80022e0:	00000000 	andeq	r0, r0, r0
 80022e4:	8101b108 	tsthi	r1, r8, lsl #2
 80022e8:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
 80022ec:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM:

080022f0 <__exidx_start>:
 80022f0:	7fffdf14 	svcvc	0x00ffdf14
 80022f4:	00000001 	andeq	r0, r0, r1
 80022f8:	7fffdf1c 	svcvc	0x00ffdf1c
 80022fc:	7fffffc4 	svcvc	0x00ffffc4
 8002300:	7fffdf1c 	svcvc	0x00ffdf1c
 8002304:	00000001 	andeq	r0, r0, r1
 8002308:	7fffdfe8 	svcvc	0x00ffdfe8
 800230c:	80aab0b0 	strhthi	fp, [sl], r0
 8002310:	7fffe140 	svcvc	0x00ffe140
 8002314:	8001aab0 			; <UNDEFINED> instruction: 0x8001aab0
 8002318:	7fffe548 	svcvc	0x00ffe548
 800231c:	00000001 	andeq	r0, r0, r1
 8002320:	7fffe5d8 	svcvc	0x00ffe5d8
 8002324:	80a8b0b0 	strhthi	fp, [r8], r0
 8002328:	7fffe61c 	svcvc	0x00ffe61c
 800232c:	00000001 	andeq	r0, r0, r1
 8002330:	7fffe638 	svcvc	0x00ffe638
 8002334:	80b108a9 	adcshi	r0, r1, r9, lsr #17
 8002338:	7fffe658 	svcvc	0x00ffe658
 800233c:	7fffff90 	svcvc	0x00ffff90
 8002340:	7fffe6a4 	svcvc	0x00ffe6a4
 8002344:	00000001 	andeq	r0, r0, r1
 8002348:	7fffef18 	svcvc	0x00ffef18
 800234c:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
 8002350:	7fffefac 	svcvc	0x00ffefac
 8002354:	80a8b0b0 	strhthi	fp, [r8], r0
 8002358:	7fffeffc 	svcvc	0x00ffeffc
 800235c:	00000001 	andeq	r0, r0, r1
 8002360:	7ffff008 	svcvc	0x00fff008
 8002364:	80aab0b0 	strhthi	fp, [sl], r0
 8002368:	7ffff03c 	svcvc	0x00fff03c
 800236c:	80b271ae 	adcshi	r7, r2, lr, lsr #3
 8002370:	7ffff100 	svcvc	0x00fff100
 8002374:	00000001 	andeq	r0, r0, r1
 8002378:	7ffff0fc 	svcvc	0x00fff0fc
 800237c:	80383fab 	eorshi	r3, r8, fp, lsr #31
 8002380:	7ffff15c 	svcvc	0x00fff15c
 8002384:	00000001 	andeq	r0, r0, r1
 8002388:	7ffff164 	svcvc	0x00fff164
 800238c:	80aab0b0 	strhthi	fp, [sl], r0
 8002390:	7ffff1a0 	svcvc	0x00fff1a0
 8002394:	00000001 	andeq	r0, r0, r1
 8002398:	7ffff24c 	svcvc	0x00fff24c
 800239c:	80b20daa 	adcshi	r0, r2, sl, lsr #27
 80023a0:	7ffff2c8 	svcvc	0x00fff2c8
 80023a4:	8008afb0 			; <UNDEFINED> instruction: 0x8008afb0
 80023a8:	7ffff568 	svcvc	0x00fff568
 80023ac:	00000001 	andeq	r0, r0, r1
 80023b0:	7ffff56c 	svcvc	0x00fff56c
 80023b4:	80023fad 	andhi	r3, r2, sp, lsr #31
 80023b8:	7ffff7e8 	svcvc	0x00fff7e8
 80023bc:	00000001 	andeq	r0, r0, r1
 80023c0:	7ffff9c4 	svcvc	0x00fff9c4
 80023c4:	80048400 	andhi	r8, r4, r0, lsl #8
 80023c8:	7ffff9d8 	svcvc	0x00fff9d8
 80023cc:	00000001 	andeq	r0, r0, r1
 80023d0:	7ffff9d4 	svcvc	0x00fff9d4
 80023d4:	8004adb0 			; <UNDEFINED> instruction: 0x8004adb0
 80023d8:	7ffffc78 	svcvc	0x00fffc78
 80023dc:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
 80023e0:	7ffffc9c 	svcvc	0x00fffc9c
 80023e4:	7ffffef4 	svcvc	0x00fffef4
 80023e8:	7ffffca0 	svcvc	0x00fffca0
 80023ec:	7ffffef8 	svcvc	0x00fffef8
 80023f0:	7ffffcac 	svcvc	0x00fffcac
 80023f4:	00000001 	andeq	r0, r0, r1

Disassembly of section .init_array:

080023f8 <__init_array_start>:
 80023f8:	08000de9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sl, fp}

080023fc <__frame_dummy_init_array_entry>:
 80023fc:	080001e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8}

Disassembly of section .fini_array:

08002400 <__do_global_dtors_aux_fini_array_entry>:
 8002400:	080001c5 	stmdaeq	r0, {r0, r2, r6, r7, r8}

Disassembly of section .data:

20000000 <uwTickFreq>:
HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
20000000:	00000001 	andeq	r0, r0, r1

20000004 <uwTickPrio>:
uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
20000004:	00000010 	andeq	r0, r0, r0, lsl r0

20000008 <SystemCoreClock>:
      3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
         Note: If you use this function to configure the system clock; then there
               is no need to call the 2 first functions listed above, since SystemCoreClock
               variable is updated automatically.
  */
uint32_t SystemCoreClock = 16000000;
20000008:	00f42400 	rscseq	r2, r4, r0, lsl #8

2000000c <_impure_ptr>:
2000000c:	20000010 	andcs	r0, r0, r0, lsl r0

20000010 <impure_data>:
20000010:	00000000 	andeq	r0, r0, r0
20000014:	200002fc 	strdcs	r0, [r0], -ip
20000018:	20000364 	andcs	r0, r0, r4, ror #6
2000001c:	200003cc 	andcs	r0, r0, ip, asr #7
	...
200000b8:	00000001 	andeq	r0, r0, r1
200000bc:	00000000 	andeq	r0, r0, r0
200000c0:	abcd330e 	blge	1f34cd00 <_sidata+0x1734a8fc>
200000c4:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
200000c8:	0005deec 	andeq	sp, r5, ip, ror #29
200000cc:	0000000b 	andeq	r0, r0, fp
	...

20000438 <__atexit_recursive_mutex>:
20000438:	2000045c 	andcs	r0, r0, ip, asr r4

Disassembly of section .bss:

2000043c <__bss_start>:
2000043c:	00000000 	andeq	r0, r0, r0

20000440 <object.0>:
	...

20000458 <uwTick>:
__IO uint32_t uwTick;
20000458:	00000000 	andeq	r0, r0, r0

2000045c <__lock___atexit_recursive_mutex>:
2000045c:	00000000 	andeq	r0, r0, r0

20000460 <errno>:
20000460:	00000000 	andeq	r0, r0, r0

Disassembly of section ._user_heap_stack:

20000464 <end-0x4>:
20000464:	00000000 	andeq	r0, r0, r0

20000468 <end>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
__weak void SysTick_Handler(void)       { Default_Handler(); }
   0:	00002f41 	andeq	r2, r0, r1, asr #30
   4:	61656100 	cmnvs	r5, r0, lsl #2
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
   8:	01006962 	tsteq	r0, r2, ror #18
  __HAL_FLASH_DATA_CACHE_ENABLE();
   c:	00000025 	andeq	r0, r0, r5, lsr #32
  10:	2d453705 	stclcs	7, cr3, [r5, #-20]	; 0xffffffec
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  14:	0d06004d 	stceq	0, cr0, [r6, #-308]	; 0xfffffecc
  18:	02094d07 	andeq	r4, r9, #448	; 0x1c0
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  1c:	0412060a 	ldreq	r0, [r2], #-1546	; 0xfffff9f6
  20:	01150114 	tsteq	r5, r4, lsl r1
  HAL_InitTick(TICK_INT_PRIORITY);
  24:	01180317 	tsteq	r8, r7, lsl r3
  HAL_MspInit();
  28:	011b011a 	tsteq	fp, sl, lsl r1
}
  2c:	0122011c 			; <UNDEFINED> instruction: 0x0122011c

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000152 	andeq	r0, r0, r2, asr r1
       4:	00000002 	andeq	r0, r0, r2
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
       8:	01040000 	mrseq	r0, (UNDEF: 4)
  __HAL_FLASH_DATA_CACHE_ENABLE();
       c:	00000104 	andeq	r0, r0, r4, lsl #2
      10:	0000ec04 	andeq	lr, r0, r4, lsl #24
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
      14:	00002f00 	andeq	r2, r0, r0, lsl #30
	...
  HAL_MspInit();
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
}
      2c:	000000be 	strheq	r0, [r0], -lr
      30:	bc080102 	stflts	f0, [r8], {2}
  *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL);
      34:	02000000 	andeq	r0, r0, #0
      38:	01e70502 	mvneq	r0, r2, lsl #10
      3c:	02020000 	andeq	r0, r2, #0
  *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL);
      40:	0001ab07 	andeq	sl, r1, r7, lsl #22
      44:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      48:	00000005 	andeq	r0, r0, r5
    return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
      4c:	8c070402 	cfstrshi	mvf0, [r7], {2}
      50:	02000000 	andeq	r0, r0, #0
      54:	00000508 	andeq	r0, r0, r8, lsl #10
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
      58:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      5c:	00008707 	andeq	r8, r0, r7, lsl #14
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
      64:	00746e69 	rsbseq	r6, r4, r9, ror #28
      68:	91070402 	tstls	r7, r2, lsl #8
      SystemCoreClock = pllvco/pllp;
      6c:	02000000 	andeq	r0, r0, #0
      70:	01be0408 			; <UNDEFINED> instruction: 0x01be0408
      break;
      74:	1d040000 	stcne	0, cr0, [r4, #-0]
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	05000000 	streq	r0, [r0, #-0]
      7c:	0000dc01 	andeq	sp, r0, r1, lsl #24
      80:	06b80100 	ldrteq	r0, [r8], r0, lsl #2
      84:	08000214 	stmdaeq	r0, {r2, r4, r9}
      88:	0800021c 	stmdaeq	r0, {r2, r3, r4, r9}
      8c:	00000000 	andeq	r0, r0, r0
      90:	00009f01 	andeq	r9, r0, r1, lsl #30
      94:	021a0600 	andseq	r0, sl, #0, 12
      98:	01470800 	cmpeq	r7, r0, lsl #16
      9c:	07000000 	streq	r0, [r0, -r0]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
      a0:	00000e01 	andeq	r0, r0, r1, lsl #28
      a4:	06ab0100 	strteq	r0, [fp], r0, lsl #2
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
      a8:	08000212 	stmdaeq	r0, {r1, r4, r9}
      ac:	08000214 	stmdaeq	r0, {r2, r4, r9}
      b0:	01007d02 	tsteq	r0, r2, lsl #26
      b4:	01d60107 	bicseq	r0, r6, r7, lsl #2
      b8:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
  if((plli2sused == 1U) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
      bc:	00021006 	andeq	r1, r2, r6
      c0:	00021208 	andeq	r1, r2, r8, lsl #4
      c4:	007d0208 	rsbseq	r0, sp, r8, lsl #4
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
      c8:	ca010701 	bgt	41cd4 <_Min_Stack_Size+0x418d4>
      cc:	01000001 	tsteq	r0, r1
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
      d0:	020e0691 	andeq	r0, lr, #152043520	; 0x9100000
      d4:	02100800 	andseq	r0, r0, #0, 16
      d8:	7d020800 	stcvc	8, cr0, [r2, #-0]
      dc:	01070100 	mrseq	r0, (UNDEF: 23)
      e0:	00000063 	andeq	r0, r0, r3, rrx
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1_AUDIO) == RCC_PERIPHCLK_DFSDM1_AUDIO)
      e4:	0c068201 	sfmeq	f0, 1, [r6], {1}
      e8:	0e080002 	cdpeq	0, 0, cr0, cr8, cr2, {0}
    __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
      ec:	02080002 	andeq	r0, r8, #2
      f0:	0701007d 	smlsdxeq	r1, sp, r0, r0
      f4:	00007601 	andeq	r7, r0, r1, lsl #12
      f8:	06730100 	ldrbteq	r0, [r3], -r0, lsl #2
      fc:	0800020a 	stmdaeq	r0, {r1, r3, r9}
}
     100:	0800020c 	stmdaeq	r0, {r2, r3, r9}
      plli2sused = 1U;
     104:	01007d02 	tsteq	r0, r2, lsl #26
    __HAL_RCC_PWR_CLK_ENABLE();
     108:	00ca0107 	sbceq	r0, sl, r7, lsl #2
     10c:	64010000 	strvs	r0, [r1], #-0
     110:	00020806 	andeq	r0, r2, r6, lsl #16
     114:	00020a08 	andeq	r0, r2, r8, lsl #20
     118:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     11c:	9e010701 	cdpls	7, 0, cr0, cr1, cr1, {0}
    PWR->CR |= PWR_CR_DBP;
     120:	01000000 	mrseq	r0, (UNDEF: 0)
     124:	02060655 	andeq	r0, r6, #89128960	; 0x5500000
     128:	02080800 	andeq	r0, r8, #0, 16
    tickstart = HAL_GetTick();
     12c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    while((PWR->CR & PWR_CR_DBP) == RESET)
     130:	01070100 	mrseq	r0, (UNDEF: 23)
     134:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     138:	04064601 	streq	r4, [r6], #-1537	; 0xfffff9ff
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
     13c:	06080002 	streq	r0, [r8], -r2
     140:	02080002 	andeq	r0, r8, #2
        return HAL_TIMEOUT;
     144:	0801007d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6}
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
     148:	00570101 	subseq	r0, r7, r1, lsl #2
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
     14c:	00570000 	subseq	r0, r7, r0
     150:	e9020000 	stmdb	r2, {}	; <UNPREDICTABLE>
     154:	0c690006 	stcleq	0, cr0, [r9], #-24	; 0xffffffe8
     158:	00020000 	andeq	r0, r2, r0
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
     15c:	00000084 	andeq	r0, r0, r4, lsl #1
     160:	01040104 	tsteq	r4, r4, lsl #2
      __HAL_RCC_BACKUPRESET_FORCE();
     164:	eb040000 	bl	10016c <_Min_Stack_Size+0xffd6c>
     168:	2f000005 	svccs	0x00000005
      __HAL_RCC_BACKUPRESET_RELEASE();
     16c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
	...
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
     178:	5a000000 	bpl	180 <_Min_Heap_Size-0x80>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
     17c:	02000001 	andeq	r0, r0, #1
     180:	00be0601 	adcseq	r0, lr, r1, lsl #12
     184:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
     188:	02000002 	andeq	r0, r0, #2
     18c:	003c182b 	eorseq	r1, ip, fp, lsr #16
     190:	01020000 	mrseq	r0, (UNDEF: 2)
     194:	0000bc08 	andeq	fp, r0, r8, lsl #24
     198:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
     19c:	000001e7 	andeq	r0, r0, r7, ror #3
     1a0:	0005c403 	andeq	ip, r5, r3, lsl #8
        tickstart = HAL_GetTick();
     1a4:	19390200 	ldmdbne	r9!, {r9}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     1a8:	00000056 	andeq	r0, r0, r6, asr r0
     1ac:	ab070202 	blge	1c09bc <_Min_Stack_Size+0x1c05bc>
     1b0:	02000001 	andeq	r0, r0, #1
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     1b4:	00050504 	andeq	r0, r5, r4, lsl #10
     1b8:	53030000 	movwpl	r0, #12288	; 0x3000
     1bc:	02000003 	andeq	r0, r0, #3
            return HAL_TIMEOUT;
     1c0:	0070194f 	rsbseq	r1, r0, pc, asr #18
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
     1c4:	04020000 	streq	r0, [r2], #-0
     1c8:	00008c07 	andeq	r8, r0, r7, lsl #24
     1cc:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
     1d0:	00000000 	andeq	r0, r0, r0
     1d4:	0004bc03 	andeq	fp, r4, r3, lsl #24
     1d8:	19690200 	stmdbne	r9!, {r9}^
      plli2sused = 1U;
     1dc:	0000008a 	andeq	r0, r0, sl, lsl #1
    __HAL_RCC_PLLI2S_DISABLE();
     1e0:	87070802 	strhi	r0, [r7, -r2, lsl #16]
    tickstart = HAL_GetTick();
     1e4:	04000000 	streq	r0, [r0], #-0
     1e8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
     1ec:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
     1f0:	00009107 	andeq	r9, r0, r7, lsl #2
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
     1f4:	02300300 	eorseq	r0, r0, #0, 6
     1f8:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
     1fc:	00003013 	andeq	r3, r0, r3, lsl r0
        return HAL_TIMEOUT;
     200:	009f0500 	addseq	r0, pc, r0, lsl #10
    __HAL_RCC_PLL_I2S_CONFIG(PeriphClkInit->PLLI2SSelection);
     204:	9f060000 	svcls	0x00060000
     208:	03000000 	movweq	r0, #0
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB1) == RCC_PERIPHCLK_I2S_APB1) && (PeriphClkInit->I2sApb1ClockSelection == RCC_I2SAPB1CLKSOURCE_PLLI2S)) ||
     20c:	000005c6 	andeq	r0, r0, r6, asr #11
     210:	4a142403 	bmi	509224 <_Min_Stack_Size+0x508e24>
     214:	03000000 	movweq	r0, #0
     218:	00000355 	andeq	r0, r0, r5, asr r3
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB2) == RCC_PERIPHCLK_I2S_APB2) && (PeriphClkInit->I2sApb2ClockSelection == RCC_I2SAPB2CLKSOURCE_PLLI2S)) ||
     21c:	64143003 	ldrvs	r3, [r4], #-3
     220:	05000000 	streq	r0, [r0, #-0]
     224:	000000c1 	andeq	r0, r0, r1, asr #1
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)) ||
     228:	0004be03 	andeq	fp, r4, r3, lsl #28
     22c:	143c0300 	ldrtne	r0, [ip], #-768	; 0xfffffd00
     230:	0000007e 	andeq	r0, r0, lr, ror r0
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO) && (PeriphClkInit->SdioClockSelection == RCC_SDIOCLKSOURCE_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)))
     234:	0000c107 	andeq	ip, r0, r7, lsl #2
     238:	0000ee00 	andeq	lr, r0, r0, lsl #28
     23c:	00980800 	addseq	r0, r8, r0, lsl #16
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
     240:	00010000 	andeq	r0, r1, r0
     244:	0004c709 	andeq	ip, r4, r9, lsl #14
     248:	114a0400 	cmpne	sl, r0, lsl #8
     24c:	000000c1 	andeq	r0, r0, r1, asr #1
     250:	b0070101 	andlt	r0, r7, r1, lsl #2
     254:	0c000000 	stceq	0, cr0, [r0], {-0}
     258:	08000001 	stmdaeq	r0, {r0}
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
     25c:	00000098 	muleq	r0, r8, r0
     260:	fc06000f 	stc2	0, cr0, [r6], {15}
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
     264:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     268:	0000041e 	andeq	r0, r0, lr, lsl r4
     26c:	0c174c04 	ldceq	12, cr4, [r7], {4}
     270:	01000001 	tsteq	r0, r1
     274:	00b00701 	adcseq	r0, r0, r1, lsl #14
     278:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    __HAL_RCC_PLLI2S_ENABLE();
     27c:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
     280:	07000000 	streq	r0, [r0, -r0]
    tickstart = HAL_GetTick();
     284:	011f0600 	tsteq	pc, r0, lsl #12
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
     288:	56090000 	strpl	r0, [r9], -r0
     28c:	04000002 	streq	r0, [r0], #-2
     290:	012f174d 			; <UNDEFINED> instruction: 0x012f174d
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
     294:	01010000 	mrseq	r0, (UNDEF: 1)
     298:	75051c0a 	strvc	r1, [r5, #-3082]	; 0xfffff3f6
     29c:	020a0101 	andeq	r0, sl, #1073741824	; 0x40000000
        return HAL_TIMEOUT;
     2a0:	01bf0000 			; <UNDEFINED> instruction: 0x01bf0000
  return HAL_OK;
     2a4:	410b0000 	mrsmi	r0, (UNDEF: 11)
     2a8:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
     2ac:	cd110176 	ldfgts	f0, [r1, #-472]	; 0xfffffe28
     2b0:	02000000 	andeq	r0, r0, #0
     2b4:	2c0c0023 	stccs	0, cr0, [ip], {35}	; 0x23
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2b8:	05000003 	streq	r0, [r0, #-3]
     2bc:	cd110177 	ldfgts	f0, [r1, #-476]	; 0xfffffe24
          return HAL_TIMEOUT;
     2c0:	02000000 	andeq	r0, r0, #0
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     2c4:	290c0423 	stmdbcs	ip, {r0, r1, r5, sl}
     2c8:	05000003 	streq	r0, [r0, #-3]
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     2cc:	cd110178 	ldfgts	f0, [r1, #-480]	; 0xfffffe20
     2d0:	02000000 	andeq	r0, r0, #0
     2d4:	530b0823 	movwpl	r0, #47139	; 0xb823
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     2d8:	79050052 	stmdbvc	r5, {r1, r4, r6}
        __HAL_RCC_PLL_DISABLE();
     2dc:	00cd1101 	sbceq	r1, sp, r1, lsl #2
     2e0:	23020000 	movwcs	r0, #8192	; 0x2000
        tickstart = HAL_GetTick();
     2e4:	52430b0c 	subpl	r0, r3, #12, 22	; 0x3000
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     2e8:	017a0500 	cmneq	sl, r0, lsl #10
     2ec:	0000cd11 	andeq	ip, r0, r1, lsl sp
     2f0:	10230200 	eorne	r0, r3, r0, lsl #4
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     2f4:	00026e0c 	andeq	r6, r2, ip, lsl #28
     2f8:	017b0500 	cmneq	fp, r0, lsl #10
            return HAL_TIMEOUT;
     2fc:	0000cd11 	andeq	ip, r0, r1, lsl sp
      __HAL_RCC_PWR_CLK_DISABLE();
     300:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     304:	0003880c 	andeq	r8, r3, ip, lsl #16
     308:	017c0500 	cmneq	ip, r0, lsl #10
        __HAL_RCC_PLL_DISABLE();
     30c:	0000cd11 	andeq	ip, r0, r1, lsl sp
     310:	18230200 	stmdane	r3!, {r9}
        tickstart = HAL_GetTick();
     314:	020c0d00 	andeq	r0, ip, #0, 26
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     318:	7d050000 	stcvc	0, cr0, [r5, #-0]
     31c:	01420301 	cmpeq	r2, r1, lsl #6
     320:	280a0000 	stmdacs	sl, {}	; <UNPREDICTABLE>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     324:	01019705 	tsteq	r1, r5, lsl #14
     328:	000002dd 	ldrdeq	r0, [r0], -sp
            return HAL_TIMEOUT;
     32c:	0000026b 	andeq	r0, r0, fp, ror #4
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     330:	0002830c 	andeq	r8, r2, ip, lsl #6
     334:	01980500 	orrseq	r0, r8, r0, lsl #10
     338:	0000cd11 	andeq	ip, r0, r1, lsl sp
     33c:	00230200 	eoreq	r0, r3, r0, lsl #4
     340:	0002380c 	andeq	r3, r2, ip, lsl #16
     344:	01990500 	orrseq	r0, r9, r0, lsl #10
     348:	0000cd11 	andeq	ip, r0, r1, lsl sp
     34c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
        __HAL_RCC_PLL_ENABLE();
     350:	00034b0c 	andeq	r4, r3, ip, lsl #22
     354:	019a0500 	orrseq	r0, sl, r0, lsl #10
        tickstart = HAL_GetTick();
     358:	0000cd11 	andeq	ip, r0, r1, lsl sp
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     35c:	08230200 	stmdaeq	r3!, {r9}
     360:	0002890c 	andeq	r8, r2, ip, lsl #18
     364:	019b0500 	orrseq	r0, fp, r0, lsl #10
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     368:	0000cd11 	andeq	ip, r0, r1, lsl sp
     36c:	0c230200 	sfmeq	f0, 4, [r3], #-0
            return HAL_TIMEOUT;
     370:	5244490b 	subpl	r4, r4, #180224	; 0x2c000
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     374:	019c0500 	orrseq	r0, ip, r0, lsl #10
        pll_config = RCC->PLLCFGR;
     378:	0000cd11 	andeq	ip, r0, r1, lsl sp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     37c:	10230200 	eorne	r0, r3, r0, lsl #4
     380:	52444f0b 	subpl	r4, r4, #11, 30	; 0x2c
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     384:	019d0500 	orrseq	r0, sp, r0, lsl #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     388:	0000cd11 	andeq	ip, r0, r1, lsl sp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     38c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     390:	0002c60c 	andeq	ip, r2, ip, lsl #12
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     394:	019e0500 	orrseq	r0, lr, r0, lsl #10
     398:	0000cd11 	andeq	ip, r0, r1, lsl sp
     39c:	18230200 	stmdane	r3!, {r9}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     3a0:	0002050c 	andeq	r0, r2, ip, lsl #10
     3a4:	019f0500 	orrseq	r0, pc, r0, lsl #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     3a8:	0000cd11 	andeq	ip, r0, r1, lsl sp
     3ac:	1c230200 	sfmne	f0, 4, [r3], #-0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
     3b0:	5246410b 	subpl	r4, r6, #-1073741822	; 0xc0000002
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     3b4:	01a00500 	lsleq	r0, r0, #10
     3b8:	00027b11 	andeq	r7, r2, r1, lsl fp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
     3bc:	20230200 	eorcs	r0, r3, r0, lsl #4
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
     3c0:	00cd0700 	sbceq	r0, sp, r0, lsl #14
     3c4:	027b0000 	rsbseq	r0, fp, #0
  return HAL_OK;
     3c8:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
}
     3cc:	01000000 	mrseq	r0, (UNDEF: 0)
        return HAL_ERROR;
     3d0:	026b0500 	rsbeq	r0, fp, #0, 10
        return HAL_ERROR;
     3d4:	df0d0000 	svcle	0x000d0000
}
     3d8:	05000002 	streq	r0, [r0, #-2]
  return HAL_OK;
     3dc:	cc0301a1 	stfgts	f0, [r3], {161}	; 0xa1
     3e0:	0a000001 	beq	3ec <_Min_Heap_Size+0x1ec>
        return HAL_ERROR;
     3e4:	01e90508 	mvneq	r0, r8, lsl #10
          return HAL_ERROR;
     3e8:	0006e501 	andeq	lr, r6, r1, lsl #10
     3ec:	0002bb00 	andeq	fp, r2, r0, lsl #22
     3f0:	52430b00 	subpl	r0, r3, #0, 22
     3f4:	01ea0500 	mvneq	r0, r0, lsl #10
     3f8:	0000cd11 	andeq	ip, r0, r1, lsl sp
     3fc:	00230200 	eoreq	r0, r3, r0, lsl #4
     400:	5253430b 	subspl	r4, r3, #738197504	; 0x2c000000
     404:	01eb0500 	mvneq	r0, r0, lsl #10
     408:	0000cd11 	andeq	ip, r0, r1, lsl sp
     40c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     410:	06e70d00 	strbteq	r0, [r7], r0, lsl #26
     414:	ec050000 	stc	0, cr0, [r5], {-0}
     418:	028d0301 	addeq	r0, sp, #67108864	; 0x4000000
     41c:	980a0000 	stmdals	sl, {}	; <UNPREDICTABLE>
     420:	0101f305 	tsteq	r1, r5, lsl #6	; <UNPREDICTABLE>
     424:	000003e7 	andeq	r0, r0, r7, ror #7
     428:	000004fc 	strdeq	r0, [r0], -ip
     42c:	0052430b 	subseq	r4, r2, fp, lsl #6
     430:	1101f405 	tstne	r1, r5, lsl #8	; <UNPREDICTABLE>
     434:	000000cd 	andeq	r0, r0, sp, asr #1
     438:	0c002302 	stceq	3, cr2, [r0], {2}
     43c:	00000343 	andeq	r0, r0, r3, asr #6
     440:	1101f505 	tstne	r1, r5, lsl #10	; <UNPREDICTABLE>
     444:	000000cd 	andeq	r0, r0, sp, asr #1
     448:	0c042302 	stceq	3, cr2, [r4], {2}
     44c:	000002c1 	andeq	r0, r0, r1, asr #5
     450:	1101f605 	tstne	r1, r5, lsl #12	; <UNPREDICTABLE>
     454:	000000cd 	andeq	r0, r0, sp, asr #1
     458:	0b082302 	bleq	209068 <_Min_Stack_Size+0x208c68>
     45c:	00524943 	subseq	r4, r2, r3, asr #18
     460:	1101f705 	tstne	r1, r5, lsl #14	; <UNPREDICTABLE>
     464:	000000cd 	andeq	r0, r0, sp, asr #1
     468:	0c0c2302 	stceq	3, cr2, [ip], {2}
     46c:	000002cb 	andeq	r0, r0, fp, asr #5
     470:	1101f805 	tstne	r1, r5, lsl #16	; <UNPREDICTABLE>
     474:	000000cd 	andeq	r0, r0, sp, asr #1
     478:	0c102302 	ldceq	3, cr2, [r0], {2}
     47c:	000005cf 	andeq	r0, r0, pc, asr #11
     480:	1101f905 	tstne	r1, r5, lsl #18	; <UNPREDICTABLE>
     484:	000000cd 	andeq	r0, r0, sp, asr #1
     488:	0c142302 	ldceq	3, cr2, [r4], {2}
     48c:	0000057b 	andeq	r0, r0, fp, ror r5
     490:	1101fa05 	tstne	r1, r5, lsl #20	; <UNPREDICTABLE>
     494:	000000cd 	andeq	r0, r0, sp, asr #1
     498:	0c182302 	ldceq	3, cr2, [r8], {2}
     49c:	000004e4 	andeq	r0, r0, r4, ror #9
     4a0:	1101fb05 	tstne	r1, r5, lsl #22	; <UNPREDICTABLE>
     4a4:	000000c1 	andeq	r0, r0, r1, asr #1
     4a8:	0c1c2302 	ldceq	3, cr2, [ip], {2}
     4ac:	000004b3 			; <UNDEFINED> instruction: 0x000004b3
     4b0:	1101fc05 	tstne	r1, r5, lsl #24	; <UNPREDICTABLE>
     4b4:	000000cd 	andeq	r0, r0, sp, asr #1
     4b8:	0c202302 	stceq	3, cr2, [r0], #-8
     4bc:	00000307 	andeq	r0, r0, r7, lsl #6
     4c0:	1101fd05 	tstne	r1, r5, lsl #26	; <UNPREDICTABLE>
     4c4:	000000cd 	andeq	r0, r0, sp, asr #1
     4c8:	0c242302 	stceq	3, cr2, [r4], #-8
     4cc:	00000584 	andeq	r0, r0, r4, lsl #11
     4d0:	1101fe05 	tstne	r1, r5, lsl #28	; <UNPREDICTABLE>
     4d4:	000000de 	ldrdeq	r0, [r0], -lr
     4d8:	0c282302 	stceq	3, cr2, [r8], #-8
     4dc:	00000702 	andeq	r0, r0, r2, lsl #14
     4e0:	1101ff05 	tstne	r1, r5, lsl #30	; <UNPREDICTABLE>
     4e4:	000000cd 	andeq	r0, r0, sp, asr #1
     4e8:	0c302302 	ldceq	3, cr2, [r0], #-8
     4ec:	0000065c 	andeq	r0, r0, ip, asr r6
     4f0:	11020005 	tstne	r2, r5
     4f4:	000000cd 	andeq	r0, r0, sp, asr #1
     4f8:	0c342302 	ldceq	3, cr2, [r4], #-8
     4fc:	00000459 	andeq	r0, r0, r9, asr r4
     500:	11020105 	tstne	r2, r5, lsl #2
     504:	000000cd 	andeq	r0, r0, sp, asr #1
     508:	0c382302 	ldceq	3, cr2, [r8], #-8
     50c:	00000503 	andeq	r0, r0, r3, lsl #10
     510:	11020205 	tstne	r2, r5, lsl #4
     514:	000000c1 	andeq	r0, r0, r1, asr #1
     518:	0c3c2302 	ldceq	3, cr2, [ip], #-8
     51c:	00000654 	andeq	r0, r0, r4, asr r6
     520:	11020305 	tstne	r2, r5, lsl #6
     524:	000000cd 	andeq	r0, r0, sp, asr #1
     528:	0c402302 	mcrreq	3, 0, r2, r0, cr2
     52c:	00000573 	andeq	r0, r0, r3, ror r5
     530:	11020405 	tstne	r2, r5, lsl #8
     534:	000000cd 	andeq	r0, r0, sp, asr #1
     538:	0c442302 	mcrreq	3, 0, r2, r4, cr2
     53c:	0000058e 	andeq	r0, r0, lr, lsl #11
     540:	11020505 	tstne	r2, r5, lsl #10
     544:	000000de 	ldrdeq	r0, [r0], -lr
     548:	0c482302 	mcrreq	3, 0, r2, r8, cr2
     54c:	000002aa 	andeq	r0, r0, sl, lsr #5
     550:	11020605 	tstne	r2, r5, lsl #12
     554:	000000cd 	andeq	r0, r0, sp, asr #1
     558:	0c502302 	mrrceq	3, 0, r2, r0, cr2
     55c:	00000497 	muleq	r0, r7, r4
     560:	11020705 	tstne	r2, r5, lsl #14
     564:	000000cd 	andeq	r0, r0, sp, asr #1
     568:	0c542302 	mrrceq	3, 0, r2, r4, cr2
     56c:	00000555 	andeq	r0, r0, r5, asr r5
     570:	11020805 	tstne	r2, r5, lsl #16
     574:	000000cd 	andeq	r0, r0, sp, asr #1
     578:	0c582302 	mrrceq	3, 0, r2, r8, cr2
     57c:	0000050d 	andeq	r0, r0, sp, lsl #10
     580:	11020905 	tstne	r2, r5, lsl #18
     584:	000000c1 	andeq	r0, r0, r1, asr #1
     588:	0c5c2302 	mrrceq	3, 0, r2, ip, cr2
     58c:	000003d2 	ldrdeq	r0, [r0], -r2
     590:	11020a05 	tstne	r2, r5, lsl #20
     594:	000000cd 	andeq	r0, r0, sp, asr #1
     598:	0c602302 	stcleq	3, cr2, [r0], #-8
     59c:	00000414 	andeq	r0, r0, r4, lsl r4
     5a0:	11020b05 	tstne	r2, r5, lsl #22
     5a4:	000000cd 	andeq	r0, r0, sp, asr #1
     5a8:	0c642302 	stcleq	3, cr2, [r4], #-8
     5ac:	00000517 	andeq	r0, r0, r7, lsl r5
     5b0:	11020c05 	tstne	r2, r5, lsl #24
     5b4:	000000de 	ldrdeq	r0, [r0], -lr
     5b8:	0c682302 	stcleq	3, cr2, [r8], #-8
     5bc:	000006c7 	andeq	r0, r0, r7, asr #13
     5c0:	11020d05 	tstne	r2, r5, lsl #26
     5c4:	000000cd 	andeq	r0, r0, sp, asr #1
     5c8:	0b702302 	bleq	1c091d8 <_Min_Stack_Size+0x1c08dd8>
     5cc:	00525343 	subseq	r5, r2, r3, asr #6
     5d0:	11020e05 	tstne	r2, r5, lsl #28
     5d4:	000000cd 	andeq	r0, r0, sp, asr #1
     5d8:	0c742302 	ldcleq	3, cr2, [r4], #-8
     5dc:	00000521 	andeq	r0, r0, r1, lsr #10
     5e0:	11020f05 	tstne	r2, r5, lsl #30
     5e4:	000000de 	ldrdeq	r0, [r0], -lr
     5e8:	0c782302 	ldcleq	3, cr2, [r8], #-8
     5ec:	00000690 	muleq	r0, r0, r6
     5f0:	11021005 	tstne	r2, r5
     5f4:	000000cd 	andeq	r0, r0, sp, asr #1
     5f8:	01802303 	orreq	r2, r0, r3, lsl #6
     5fc:	0003dc0c 	andeq	sp, r3, ip, lsl #24
     600:	02110500 	andseq	r0, r1, #0, 10
     604:	0000cd11 	andeq	ip, r0, r1, lsl sp
     608:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     60c:	052b0c01 	streq	r0, [fp, #-3073]!	; 0xfffff3ff
     610:	12050000 	andne	r0, r5, #0
     614:	00c11102 	sbceq	r1, r1, r2, lsl #2
     618:	23030000 	movwcs	r0, #12288	; 0x3000
     61c:	be0c0188 	adflt<illegal precision>	f0, f4, #0.0
     620:	05000002 	streq	r0, [r0, #-2]
     624:	cd110213 	lfmgt	f0, 4, [r1, #-76]	; 0xffffffb4
     628:	03000000 	movweq	r0, #0
     62c:	0c018c23 	stceq	12, cr8, [r1], {35}	; 0x23
     630:	000006be 			; <UNDEFINED> instruction: 0x000006be
     634:	11021405 	tstne	r2, r5, lsl #8
     638:	000000cd 	andeq	r0, r0, sp, asr #1
     63c:	01902303 	orrseq	r2, r0, r3, lsl #6
     640:	0002d40c 	andeq	sp, r2, ip, lsl #8
     644:	02150500 	andseq	r0, r5, #0, 10
     648:	0000cd11 	andeq	ip, r0, r1, lsl sp
     64c:	94230300 	strtls	r0, [r3], #-768	; 0xfffffd00
     650:	e90d0001 	stmdb	sp, {r0}
     654:	05000003 	streq	r0, [r0, #-3]
     658:	c8030216 	stmdagt	r3, {r1, r2, r4, r9}
     65c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
     660:	003c0107 	eorseq	r0, ip, r7, lsl #2
     664:	ba060000 	blt	18066c <_Min_Stack_Size+0x18026c>
     668:	0003f501 	andeq	pc, r3, r1, lsl #10
     66c:	00052800 	andeq	r2, r5, r0, lsl #16
     670:	23a30f00 			; <UNDEFINED> instruction: 0x23a30f00
     674:	10000000 	andne	r0, r0, r0
     678:	00544553 	subseq	r4, r4, r3, asr r5
     67c:	f7030001 			; <UNDEFINED> instruction: 0xf7030001
     680:	06000003 	streq	r0, [r0], -r3
     684:	050903bd 	streq	r0, [r9, #-957]	; 0xfffffc43
     688:	070e0000 	streq	r0, [lr, -r0]
     68c:	00003c01 	andeq	r3, r0, r1, lsl #24
     690:	01c00600 	biceq	r0, r0, r0, lsl #12
     694:	00000331 	andeq	r0, r0, r1, lsr r3
     698:	00000553 	andeq	r0, r0, r3, asr r5
     69c:	0003800f 	andeq	r8, r3, pc
     6a0:	190f0000 	stmdbne	pc, {}	; <UNPREDICTABLE>
     6a4:	01000003 	tsteq	r0, r3
     6a8:	03330300 	teqeq	r3, #0, 6
     6ac:	c3060000 	movwgt	r0, #24576	; 0x6000
     6b0:	00053403 	andeq	r3, r5, r3, lsl #8
     6b4:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
     6b8:	000001be 			; <UNDEFINED> instruction: 0x000001be
     6bc:	00001d11 	andeq	r1, r0, r1, lsl sp
     6c0:	01070e00 	tsteq	r7, r0, lsl #28
     6c4:	0000003c 	andeq	r0, r0, ip, lsr r0
     6c8:	aa012807 	bge	4a6ec <_Min_Stack_Size+0x4a2ec>
     6cc:	96000006 	strls	r0, [r0], -r6
     6d0:	0f000005 	svceq	0x00000005
     6d4:	000003cb 	andeq	r0, r0, fp, asr #7
     6d8:	05980f00 	ldreq	r0, [r8, #3840]	; 0xf00
     6dc:	0f010000 	svceq	0x00010000
     6e0:	00000722 	andeq	r0, r0, r2, lsr #14
     6e4:	03bf0f02 			; <UNDEFINED> instruction: 0x03bf0f02
     6e8:	00030000 	andeq	r0, r3, r0
     6ec:	0006ac03 	andeq	sl, r6, r3, lsl #24
     6f0:	032d0700 			; <UNDEFINED> instruction: 0x032d0700
     6f4:	0000056b 	andeq	r0, r0, fp, ror #10
     6f8:	30081c12 	andcc	r1, r8, r2, lsl ip
     6fc:	00048201 	andeq	r8, r4, r1, lsl #4
     700:	00061900 	andeq	r1, r6, r0, lsl #18
     704:	023f1300 	eorseq	r1, pc, #0, 6
     708:	31080000 	mrscc	r0, (UNDEF: 8)
     70c:	0000c10c 	andeq	ip, r0, ip, lsl #2
     710:	00230200 	eoreq	r0, r3, r0, lsl #4
     714:	00056913 	andeq	r6, r5, r3, lsl r9
     718:	0c340800 	ldceq	8, cr0, [r4], #-0
     71c:	000000c1 	andeq	r0, r0, r1, asr #1
     720:	13042302 	movwne	r2, #17154	; 0x4302
     724:	00000264 	andeq	r0, r0, r4, ror #4
     728:	c10c3708 	tstgt	ip, r8, lsl #14
     72c:	02000000 	andeq	r0, r0, #0
     730:	69130823 	ldmdbvs	r3, {r0, r1, r5, fp}
     734:	08000002 	stmdaeq	r0, {r1}
     738:	00c10c3a 	sbceq	r0, r1, sl, lsr ip
     73c:	23020000 	movwcs	r0, #8192	; 0x2000
     740:	0274130c 	rsbseq	r1, r4, #12, 6	; 0x30000000
     744:	3e080000 	cdpcc	0, 0, cr0, cr8, cr0, {0}
     748:	0000c10c 	andeq	ip, r0, ip, lsl #2
     74c:	10230200 	eorne	r0, r3, r0, lsl #4
     750:	00027913 	andeq	r7, r2, r3, lsl r9
     754:	0c410800 	mcrreq	8, 0, r0, r1, cr0
     758:	000000c1 	andeq	r0, r0, r1, asr #1
     75c:	13142302 	tstne	r4, #134217728	; 0x8000000
     760:	0000027e 	andeq	r0, r0, lr, ror r2
     764:	c10c4608 	tstgt	ip, r8, lsl #12
     768:	02000000 	andeq	r0, r0, #0
     76c:	03001823 	movweq	r1, #2083	; 0x823
     770:	00000484 	andeq	r0, r0, r4, lsl #9
     774:	a2024b08 	andge	r4, r2, #8, 22	; 0x2000
     778:	12000005 	andne	r0, r0, #5
     77c:	01340934 	teqeq	r4, r4, lsr r9
     780:	000004ee 	andeq	r0, r0, lr, ror #9
     784:	0000069c 	muleq	r0, ip, r6
     788:	0006cc13 	andeq	ip, r6, r3, lsl ip
     78c:	0c350900 			; <UNDEFINED> instruction: 0x0c350900
     790:	000000c1 	andeq	r0, r0, r1, asr #1
     794:	13002302 	movwne	r2, #770	; 0x302
     798:	00000377 	andeq	r0, r0, r7, ror r3
     79c:	c10c3809 	tstgt	ip, r9, lsl #16
     7a0:	02000000 	andeq	r0, r0, #0
     7a4:	8f130423 	svchi	0x00130423
     7a8:	09000002 	stmdbeq	r0, {r1}
     7ac:	00c10c3b 	sbceq	r0, r1, fp, lsr ip
     7b0:	23020000 	movwcs	r0, #8192	; 0x2000
     7b4:	03201308 			; <UNDEFINED> instruction: 0x03201308
     7b8:	3e090000 	cdpcc	0, 0, cr0, cr9, cr0, {0}
     7bc:	0000c10c 	andeq	ip, r0, ip, lsl #2
     7c0:	0c230200 	sfmeq	f0, 4, [r3], #-0
     7c4:	0002ec13 	andeq	lr, r2, r3, lsl ip
     7c8:	0c410900 	mcrreq	9, 0, r0, r1, cr0	; <UNPREDICTABLE>
     7cc:	000000c1 	andeq	r0, r0, r1, asr #1
     7d0:	13102302 	tstne	r0, #134217728	; 0x8000000
     7d4:	00000310 	andeq	r0, r0, r0, lsl r3
     7d8:	c10c4409 	tstgt	ip, r9, lsl #8
     7dc:	02000000 	andeq	r0, r0, #0
     7e0:	50141423 	andspl	r1, r4, r3, lsr #8
     7e4:	09004c4c 	stmdbeq	r0, {r2, r3, r6, sl, fp, lr}
     7e8:	06191647 	ldreq	r1, [r9], -r7, asr #12
     7ec:	23020000 	movwcs	r0, #8192	; 0x2000
     7f0:	f0030018 			; <UNDEFINED> instruction: 0xf0030018
     7f4:	09000004 	stmdbeq	r0, {r2}
     7f8:	06250248 	strteq	r0, [r5], -r8, asr #4
     7fc:	14120000 	ldrne	r0, [r2], #-0
     800:	9f014e09 	svcls	0x00014e09
     804:	01000003 	tsteq	r0, r3
     808:	13000007 	movwne	r0, #7
     80c:	000006db 	ldrdeq	r0, [r0], -fp
     810:	c10c4f09 	tstgt	ip, r9, lsl #30
     814:	02000000 	andeq	r0, r0, #0
     818:	7d130023 	ldcvc	0, cr0, [r3, #-140]	; 0xffffff74
     81c:	09000007 	stmdbeq	r0, {r0, r1, r2}
     820:	00c10c52 	sbceq	r0, r1, r2, asr ip
     824:	23020000 	movwcs	r0, #8192	; 0x2000
     828:	042c1304 	strteq	r1, [ip], #-772	; 0xfffffcfc
     82c:	55090000 	strpl	r0, [r9, #-0]
     830:	0000c10c 	andeq	ip, r0, ip, lsl #2
     834:	08230200 	stmdaeq	r3!, {r9}
     838:	00021a13 	andeq	r1, r2, r3, lsl sl
     83c:	0c580900 	mrrceq	9, 0, r0, r8, cr0	; <UNPREDICTABLE>
     840:	000000c1 	andeq	r0, r0, r1, asr #1
     844:	130c2302 	movwne	r2, #49922	; 0xc302
     848:	00000620 	andeq	r0, r0, r0, lsr #12
     84c:	c10c5b09 	tstgt	ip, r9, lsl #22
     850:	02000000 	andeq	r0, r0, #0
     854:	03001023 	movweq	r1, #35	; 0x23
     858:	000003a1 	andeq	r0, r0, r1, lsr #7
     85c:	a8025e09 	stmdage	r2, {r0, r3, r9, sl, fp, ip, lr}
     860:	12000006 	andne	r0, r0, #6
     864:	01300a14 	teqeq	r0, r4, lsl sl
     868:	000005d8 	ldrdeq	r0, [r0], -r8
     86c:	00000766 	andeq	r0, r0, r6, ror #14
     870:	6e695014 	mcrvs	0, 3, r5, cr9, cr4, {0}
     874:	0c310a00 			; <UNDEFINED> instruction: 0x0c310a00
     878:	000000c1 	andeq	r0, r0, r1, asr #1
     87c:	13002302 	movwne	r2, #770	; 0x302
     880:	000008dc 	ldrdeq	r0, [r0], -ip
     884:	c10c340a 	tstgt	ip, sl, lsl #8
     888:	02000000 	andeq	r0, r0, #0
     88c:	0a130423 	beq	4c1920 <_Min_Stack_Size+0x4c1520>
     890:	0a000007 	beq	8b4 <_Min_Stack_Size+0x4b4>
     894:	00c10c37 	sbceq	r0, r1, r7, lsr ip
     898:	23020000 	movwcs	r0, #8192	; 0x2000
     89c:	04531308 	ldrbeq	r1, [r3], #-776	; 0xfffffcf8
     8a0:	3a0a0000 	bcc	2808a8 <_Min_Stack_Size+0x2804a8>
     8a4:	0000c10c 	andeq	ip, r0, ip, lsl #2
     8a8:	0c230200 	sfmeq	f0, 4, [r3], #-0
     8ac:	0002b413 	andeq	fp, r2, r3, lsl r4
     8b0:	0c3d0a00 			; <UNDEFINED> instruction: 0x0c3d0a00
     8b4:	000000c1 	andeq	r0, r0, r1, asr #1
     8b8:	00102302 	andseq	r2, r0, r2, lsl #6
     8bc:	0005da03 	andeq	sp, r5, r3, lsl #20
     8c0:	023f0a00 	eorseq	r0, pc, #0, 20
     8c4:	0000070d 	andeq	r0, r0, sp, lsl #14
     8c8:	0005b409 	andeq	fp, r5, r9, lsl #8
     8cc:	11ce0b00 	bicne	r0, lr, r0, lsl #22
     8d0:	000000c1 	andeq	r0, r0, r1, asr #1
     8d4:	01150101 	tsteq	r5, r1, lsl #2
     8d8:	000001f1 	strdeq	r0, [r0], -r1
     8dc:	0d044d01 	stceq	13, cr4, [r4, #-4]
	...
     8e8:	01007d02 	tsteq	r0, r2, lsl #26
     8ec:	07510116 	smmlaeq	r1, r6, r1, r0
     8f0:	3c010000 	stccc	0, cr0, [r1], {-0}
     8f4:	00000604 	andeq	r0, r0, r4, lsl #12
     8f8:	00000000 	andeq	r0, r0, r0
     8fc:	00200000 	eoreq	r0, r0, r0
     900:	bb010000 	bllt	40908 <_Min_Stack_Size+0x40508>
     904:	17000007 	strne	r0, [r0, -r7]
     908:	00000000 	andeq	r0, r0, r0
     90c:	00000780 	andeq	r0, r0, r0, lsl #15
     910:	3d011800 	stccc	8, cr1, [r1, #-0]
     914:	01000006 	tsteq	r0, r6
     918:	00060422 	andeq	r0, r6, r2, lsr #8
     91c:	00000000 	andeq	r0, r0, r0
     920:	02000000 	andeq	r0, r0, #0
     924:	f401007d 	vst4.16	{d0-d3}, [r1 :256]!
     928:	19000007 	stmdbne	r0, {r0, r1, r2}
     92c:	0000035e 	andeq	r0, r0, lr, asr r3
     930:	32042201 	andcc	r2, r4, #268435456	; 0x10000000
     934:	000007f4 	strdeq	r0, [r0], -r4
     938:	18195001 	ldmdane	r9, {r0, ip, lr}
     93c:	01000007 	tsteq	r0, r7
     940:	fa4f0422 	blx	13c19d0 <_Min_Stack_Size+0x13c15d0>
     944:	01000007 	tsteq	r0, r7
     948:	041a0051 	ldreq	r0, [sl], #-81	; 0xffffffaf
     94c:	00000701 	andeq	r0, r0, r1, lsl #14
     950:	00c1041a 	sbceq	r0, r1, sl, lsl r4
     954:	01180000 	tsteq	r8, r0
     958:	0000073c 	andeq	r0, r0, ip, lsr r7
     95c:	0d03d301 	stceq	3, cr13, [r3, #-4]
	...
     968:	01007d02 	tsteq	r0, r2, lsl #26
     96c:	0000082a 	andeq	r0, r0, sl, lsr #16
     970:	00029819 	andeq	r9, r2, r9, lsl r8
     974:	03d30100 	bicseq	r0, r3, #0, 2
     978:	00082a37 	andeq	r2, r8, r7, lsr sl
     97c:	00500100 	subseq	r0, r0, r0, lsl #2
     980:	069c041a 			; <UNDEFINED> instruction: 0x069c041a
     984:	011b0000 	tsteq	fp, r0
     988:	00000535 	andeq	r0, r0, r5, lsr r5
     98c:	0a03c601 	beq	f2198 <_Min_Stack_Size+0xf1d98>
     990:	000000c1 	andeq	r0, r0, r1, asr #1
	...
     99c:	00000040 	andeq	r0, r0, r0, asr #32
     9a0:	00085901 	andeq	r5, r8, r1, lsl #18
     9a4:	00001700 	andeq	r1, r0, r0, lsl #14
     9a8:	08820000 	stmeq	r2, {}	; <UNPREDICTABLE>
     9ac:	1b000000 	blne	9b4 <_Min_Stack_Size+0x5b4>
     9b0:	00076801 	andeq	r6, r7, r1, lsl #16
     9b4:	03ba0100 			; <UNDEFINED> instruction: 0x03ba0100
     9b8:	0000c10a 	andeq	ip, r0, sl, lsl #2
	...
     9c4:	00006000 	andeq	r6, r0, r0
     9c8:	08820100 	stmeq	r2, {r8}
     9cc:	00170000 	andseq	r0, r7, r0
     9d0:	82000000 	andhi	r0, r0, #0
     9d4:	00000008 	andeq	r0, r0, r8
     9d8:	067c011c 			; <UNDEFINED> instruction: 0x067c011c
     9dc:	af010000 	svcge	0x00010000
     9e0:	00c10a03 	sbceq	r0, r1, r3, lsl #20
	...
     9ec:	7d020000 	stcvc	0, cr0, [r2, #-0]
     9f0:	011b0100 	tsteq	fp, r0, lsl #2
     9f4:	00000664 	andeq	r0, r0, r4, ror #12
     9f8:	11037701 	tstne	r3, r1, lsl #14
     9fc:	000000c1 	andeq	r0, r0, r1, asr #1
     a00:	0800021c 	stmdaeq	r0, {r2, r3, r4, r9}
     a04:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
     a08:	00000080 	andeq	r0, r0, r0, lsl #1
     a0c:	00092201 	andeq	r2, r9, r1, lsl #4
     a10:	05bf1d00 	ldreq	r1, [pc, #3328]!	; 1718 <_Min_Stack_Size+0x1318>
     a14:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
     a18:	00c10c03 	sbceq	r0, r1, r3, lsl #24
     a1c:	00a80000 	adceq	r0, r8, r0
     a20:	00a00000 	adceq	r0, r0, r0
     a24:	701d0000 	andsvc	r0, sp, r0
     a28:	01000003 	tsteq	r0, r3
     a2c:	c1170379 	tstgt	r7, r9, ror r3
     a30:	e6000000 	str	r0, [r0], -r0
     a34:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
     a38:	1d000000 	stcne	0, cr0, [r0, #-0]
     a3c:	00000229 	andeq	r0, r0, r9, lsr #4
     a40:	24037901 	strcs	r7, [r3], #-2305	; 0xfffff6ff
     a44:	000000c1 	andeq	r0, r0, r1, asr #1
     a48:	00000123 	andeq	r0, r0, r3, lsr #2
     a4c:	0000011d 	andeq	r0, r0, sp, lsl r1
     a50:	00043a1d 	andeq	r3, r4, sp, lsl sl
     a54:	037a0100 	cmneq	sl, #0, 2
     a58:	0000c10c 	andeq	ip, r0, ip, lsl #2
     a5c:	00015600 	andeq	r5, r1, r0, lsl #12
     a60:	00014e00 	andeq	r4, r1, r0, lsl #28
     a64:	02821700 	addeq	r1, r2, #0, 14
     a68:	0c370800 	ldceq	8, cr0, [r7], #-0
     a6c:	d8170000 	ldmdale	r7, {}	; <UNPREDICTABLE>
     a70:	37080002 	strcc	r0, [r8, -r2]
     a74:	0000000c 	andeq	r0, r0, ip
     a78:	04610115 	strbteq	r0, [r1], #-277	; 0xfffffeeb
     a7c:	54010000 	strpl	r0, [r1], #-0
     a80:	00000603 	andeq	r0, r0, r3, lsl #12
     a84:	00000000 	andeq	r0, r0, r0
     a88:	7d020000 	stcvc	0, cr0, [r2, #-0]
     a8c:	01150100 	tsteq	r5, r0, lsl #2
     a90:	00000402 	andeq	r0, r0, r2, lsl #8
     a94:	06034b01 	streq	r4, [r3], -r1, lsl #22
	...
     aa0:	01007d02 	tsteq	r0, r2, lsl #26
     aa4:	04a10116 	strteq	r0, [r1], #278	; 0x116
     aa8:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
     aac:	00000603 	andeq	r0, r0, r3, lsl #12
     ab0:	00000000 	andeq	r0, r0, r0
     ab4:	01910000 	orrseq	r0, r1, r0
     ab8:	2b010000 	blcs	40ac0 <_Min_Stack_Size+0x406c0>
     abc:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
     ac0:	0000070f 	andeq	r0, r0, pc, lsl #14
     ac4:	21030901 	tstcs	r3, r1, lsl #18
     ac8:	000000c1 	andeq	r0, r0, r1, asr #1
     acc:	000001dd 	ldrdeq	r0, [r0], -sp
     ad0:	000001d5 	ldrdeq	r0, [r0], -r5
     ad4:	00062f1e 	andeq	r2, r6, lr, lsl pc
     ad8:	03090100 	movweq	r0, #37120	; 0x9100
     adc:	0000c134 	andeq	ip, r0, r4, lsr r1
     ae0:	00022300 	andeq	r2, r2, r0, lsl #6
     ae4:	00021700 	andeq	r1, r2, r0, lsl #14
     ae8:	03b41e00 			; <UNDEFINED> instruction: 0x03b41e00
     aec:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
     af0:	00c14c03 	sbceq	r4, r1, r3, lsl #24
     af4:	027d0000 	rsbseq	r0, sp, #0
     af8:	02730000 	rsbseq	r0, r3, #0
     afc:	8f1f0000 	svchi	0x001f0000
     b00:	01000003 	tsteq	r0, r3
     b04:	6614030b 	ldrvs	r0, [r4], -fp, lsl #6
     b08:	02000007 	andeq	r0, r0, #7
     b0c:	00205c91 	mlaeq	r0, r1, ip, r5
     b10:	00000000 	andeq	r0, r0, r0
     b14:	d6000000 	strle	r0, [r0], -r0
     b18:	1f000009 	svcne	0x00000009
     b1c:	00000300 	andeq	r0, r0, r0, lsl #6
     b20:	05031501 	streq	r1, [r3, #-1281]	; 0xfffffaff
     b24:	000000cd 	andeq	r0, r0, sp, asr #1
     b28:	00549102 	subseq	r9, r4, r2, lsl #2
     b2c:	00000020 	andeq	r0, r0, r0, lsr #32
     b30:	00000000 	andeq	r0, r0, r0
     b34:	0009f400 	andeq	pc, r9, r0, lsl #8
     b38:	03001f00 	movweq	r1, #3840	; 0xf00
     b3c:	2d010000 	stccs	0, cr0, [r1, #-0]
     b40:	00cd0503 	sbceq	r0, sp, r3, lsl #10
     b44:	91020000 	mrsls	r0, (UNDEF: 2)
     b48:	00210058 	eoreq	r0, r1, r8, asr r0
     b4c:	42000000 	andmi	r0, r0, #0
     b50:	1100000c 	tstne	r0, ip
     b54:	2200000a 	andcs	r0, r0, #10
     b58:	0c055001 	stceq	0, cr5, [r5], {1}
     b5c:	40020000 	andmi	r0, r2, r0
     b60:	02510122 	subseq	r0, r1, #-2147483640	; 0x80000008
     b64:	23005c91 	movwcs	r5, #3217	; 0xc91
     b68:	00000000 	andeq	r0, r0, r0
     b6c:	00000c42 	andeq	r0, r0, r2, asr #24
     b70:	05500122 	ldrbeq	r0, [r0, #-290]	; 0xfffffede
     b74:	0208000c 	andeq	r0, r8, #12
     b78:	51012240 	tstpl	r1, r0, asr #4
     b7c:	005c9102 	subseq	r9, ip, r2, lsl #2
     b80:	96011b00 	strls	r1, [r1], -r0, lsl #22
     b84:	01000006 	tsteq	r0, r6
     b88:	96130251 			; <UNDEFINED> instruction: 0x96130251
     b8c:	f0000005 			; <UNDEFINED> instruction: 0xf0000005
     b90:	50080002 	andpl	r0, r8, r2
     b94:	bf080004 	svclt	0x00080004
     b98:	01000002 	tsteq	r0, r2
     b9c:	00000aae 	andeq	r0, r0, lr, lsr #21
     ba0:	00035e1e 	andeq	r5, r3, lr, lsl lr
     ba4:	02510100 	subseq	r0, r1, #0, 2
     ba8:	0007f43c 	andeq	pc, r7, ip, lsr r4	; <UNPREDICTABLE>
     bac:	00030f00 	andeq	r0, r3, r0, lsl #30
     bb0:	0002f700 	andeq	pc, r2, r0, lsl #14
     bb4:	07191e00 	ldreq	r1, [r9, -r0, lsl #28]
     bb8:	51010000 	mrspl	r0, (UNDEF: 1)
     bbc:	00c15802 	sbceq	r5, r1, r2, lsl #16
     bc0:	03a60000 			; <UNDEFINED> instruction: 0x03a60000
     bc4:	039e0000 	orrseq	r0, lr, #0
     bc8:	5f1d0000 	svcpl	0x001d0000
     bcc:	01000005 	tsteq	r0, r5
     bd0:	c10c0253 	tstgt	ip, r3, asr r2
     bd4:	dc000000 	stcle	0, cr0, [r0], {-0}
     bd8:	da000003 	ble	bec <_Min_Stack_Size+0x7ec>
     bdc:	17000003 	strne	r0, [r0, -r3]
     be0:	08000380 	stmdaeq	r0, {r7, r8, r9}
     be4:	00000c50 	andeq	r0, r0, r0, asr ip
     be8:	00039617 	andeq	r9, r3, r7, lsl r6
     bec:	000c5008 	andeq	r5, ip, r8
     bf0:	040e1700 	streq	r1, [lr], #-1792	; 0xfffff900
     bf4:	089c0800 	ldmeq	ip, {fp}
     bf8:	28170000 	ldmdacs	r7, {}	; <UNPREDICTABLE>
     bfc:	5e080004 	cdppl	0, 0, cr0, cr8, cr4, {0}
     c00:	0000000c 	andeq	r0, r0, ip
     c04:	05a20124 	streq	r0, [r2, #292]!	; 0x124
     c08:	dd010000 	stcle	0, cr0, [r1, #-0]
     c0c:	0005961a 	andeq	r9, r5, sl, lsl r6
	...
     c18:	0003ef00 	andeq	lr, r3, r0, lsl #30
     c1c:	0c1e0100 	ldfeqs	f0, [lr], {-0}
     c20:	98250000 	stmdals	r5!, {}	; <UNPREDICTABLE>
     c24:	01000002 	tsteq	r0, r2
     c28:	082a41dd 	stmdaeq	sl!, {r0, r2, r3, r4, r6, r7, r8, lr}
     c2c:	046b0000 	strbteq	r0, [fp], #-0
     c30:	044b0000 	strbeq	r0, [fp], #-0
     c34:	5f260000 	svcpl	0x00260000
     c38:	01000005 	tsteq	r0, r5
     c3c:	00c10cdf 	ldrdeq	r0, [r1], #207	; 0xcf
     c40:	054b0000 	strbeq	r0, [fp, #-0]
     c44:	052f0000 	streq	r0, [pc, #-0]!	; c4c <_Min_Stack_Size+0x84c>
     c48:	4a260000 	bmi	980c50 <_Min_Stack_Size+0x980850>
     c4c:	01000005 	tsteq	r0, r5
     c50:	00c117df 	ldrdeq	r1, [r1], #127	; 0x7f
     c54:	05f10000 	ldrbeq	r0, [r1, #0]!
     c58:	05ed0000 	strbeq	r0, [sp, #0]!
     c5c:	50270000 	eorpl	r0, r7, r0
     c60:	7b000000 	blvc	c68 <_Min_Stack_Size+0x868>
     c64:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
     c68:	00000248 	andeq	r0, r0, r8, asr #4
     c6c:	16018901 	strne	r8, [r1], -r1, lsl #18
     c70:	00000528 	andeq	r0, r0, r8, lsr #10
     c74:	0000061b 	andeq	r0, r0, fp, lsl r6
     c78:	0000060f 	andeq	r0, r0, pc, lsl #12
     c7c:	00000020 	andeq	r0, r0, r0, lsr #32
     c80:	00000000 	andeq	r0, r0, r0
     c84:	000b4400 	andeq	r4, fp, r0, lsl #8
     c88:	03001f00 	movweq	r1, #3840	; 0xf00
     c8c:	92010000 	andls	r0, r1, #0
     c90:	00cd0701 	sbceq	r0, sp, r1, lsl #14
     c94:	91020000 	mrsls	r0, (UNDEF: 2)
     c98:	0017006c 	andseq	r0, r7, ip, rrx
     c9c:	50000000 	andpl	r0, r0, r0
     ca0:	1700000c 	strne	r0, [r0, -ip]
     ca4:	00000000 	andeq	r0, r0, r0
     ca8:	00000c50 	andeq	r0, r0, r0, asr ip
     cac:	00000017 	andeq	r0, r0, r7, lsl r0
     cb0:	000c5000 	andeq	r5, ip, r0
     cb4:	00001700 	andeq	r1, r0, r0, lsl #14
     cb8:	0c500000 	mraeq	r0, r0, acc0
     cbc:	00170000 	andseq	r0, r7, r0
     cc0:	50000000 	andpl	r0, r0, r0
     cc4:	1700000c 	strne	r0, [r0, -ip]
     cc8:	00000000 	andeq	r0, r0, r0
     ccc:	00000c50 	andeq	r0, r0, r0, asr ip
     cd0:	00001700 	andeq	r1, r0, r0, lsl #14
     cd4:	0c500000 	mraeq	r0, r0, acc0
     cd8:	00170000 	andseq	r0, r7, r0
     cdc:	50000000 	andpl	r0, r0, r0
     ce0:	1700000c 	strne	r0, [r0, -ip]
     ce4:	00000000 	andeq	r0, r0, r0
     ce8:	00000c50 	andeq	r0, r0, r0, asr ip
     cec:	00000017 	andeq	r0, r0, r7, lsl r0
     cf0:	000c5000 	andeq	r5, ip, r0
     cf4:	00001700 	andeq	r1, r0, r0, lsl #14
     cf8:	0c500000 	mraeq	r0, r0, acc0
     cfc:	00170000 	andseq	r0, r7, r0
     d00:	50000000 	andpl	r0, r0, r0
     d04:	1700000c 	strne	r0, [r0, -ip]
     d08:	00000000 	andeq	r0, r0, r0
     d0c:	00000c50 	andeq	r0, r0, r0, asr ip
     d10:	00000017 	andeq	r0, r0, r7, lsl r0
     d14:	000c5000 	andeq	r5, ip, r0
     d18:	00001700 	andeq	r1, r0, r0, lsl #14
     d1c:	0c500000 	mraeq	r0, r0, acc0
     d20:	00170000 	andseq	r0, r7, r0
     d24:	50000000 	andpl	r0, r0, r0
     d28:	1700000c 	strne	r0, [r0, -ip]
     d2c:	00000000 	andeq	r0, r0, r0
     d30:	00000c50 	andeq	r0, r0, r0, asr ip
     d34:	00000017 	andeq	r0, r0, r7, lsl r0
     d38:	000c5000 	andeq	r5, ip, r0
     d3c:	00001700 	andeq	r1, r0, r0, lsl #14
     d40:	0c500000 	mraeq	r0, r0, acc0
     d44:	00170000 	andseq	r0, r7, r0
     d48:	50000000 	andpl	r0, r0, r0
     d4c:	1700000c 	strne	r0, [r0, -ip]
     d50:	00000000 	andeq	r0, r0, r0
     d54:	00000c50 	andeq	r0, r0, r0, asr ip
     d58:	00000017 	andeq	r0, r0, r7, lsl r0
     d5c:	000c5000 	andeq	r5, ip, r0
     d60:	00001700 	andeq	r1, r0, r0, lsl #14
     d64:	0c500000 	mraeq	r0, r0, acc0
     d68:	00170000 	andseq	r0, r7, r0
     d6c:	50000000 	andpl	r0, r0, r0
     d70:	0000000c 	andeq	r0, r0, ip
     d74:	06f30128 	ldrbteq	r0, [r3], r8, lsr #2
     d78:	ca010000 	bgt	40d80 <_Min_Stack_Size+0x40980>
     d7c:	0005961a 	andeq	r9, r5, sl, lsl r6
	...
     d88:	007d0200 	rsbseq	r0, sp, r0, lsl #4
     d8c:	01012901 	tsteq	r1, r1, lsl #18
     d90:	0000072b 	andeq	r0, r0, fp, lsr #14
     d94:	0000072b 	andeq	r0, r0, fp, lsr #14
     d98:	7401012a 	strvc	r0, [r1], #-298	; 0xfffffed6
     d9c:	74000004 	strvc	r0, [r0], #-4
     da0:	0a000004 	beq	db8 <_Min_Stack_Size+0x9b8>
     da4:	012a07e1 	smulwteq	sl, r1, r7
     da8:	00044701 	andeq	r4, r4, r1, lsl #14
     dac:	00044700 	andeq	r4, r4, r0, lsl #14
     db0:	0aeb0b00 	beq	ffac39b8 <_estack+0xdfa839b8>
     db4:	d701012a 	strle	r0, [r1, -sl, lsr #2]
     db8:	d7000004 	strle	r0, [r0, -r4]
     dbc:	0b000004 	bleq	dd4 <_Min_Stack_Size+0x9d4>
     dc0:	f70013e0 			; <UNDEFINED> instruction: 0xf70013e0
     dc4:	0200000a 	andeq	r0, r0, #10
     dc8:	00033000 	andeq	r3, r3, r0
     dcc:	04010400 	streq	r0, [r1], #-1024	; 0xfffffc00
     dd0:	04000001 	streq	r0, [r0], #-1
     dd4:	0000082e 	andeq	r0, r0, lr, lsr #16
     dd8:	0000002f 	andeq	r0, r0, pc, lsr #32
     ddc:	000000f8 	strdeq	r0, [r0], -r8
	...
     de8:	00000c69 	andeq	r0, r0, r9, ror #24
     dec:	be060102 	adflts	f0, f6, f2
     df0:	03000000 	movweq	r0, #0
     df4:	0000022e 	andeq	r0, r0, lr, lsr #4
     df8:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
     dfc:	02000000 	andeq	r0, r0, #0
     e00:	00bc0801 	adcseq	r0, ip, r1, lsl #16
     e04:	02020000 	andeq	r0, r2, #0
     e08:	0001e705 	andeq	lr, r1, r5, lsl #14
     e0c:	07020200 	streq	r0, [r2, -r0, lsl #4]
     e10:	000001ab 	andeq	r0, r0, fp, lsr #3
     e14:	05050402 	streq	r0, [r5, #-1026]	; 0xfffffbfe
     e18:	03000000 	movweq	r0, #0
     e1c:	00000353 	andeq	r0, r0, r3, asr r3
     e20:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
     e24:	02000000 	andeq	r0, r0, #0
     e28:	008c0704 	addeq	r0, ip, r4, lsl #14
     e2c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     e30:	00000005 	andeq	r0, r0, r5
     e34:	07080200 	streq	r0, [r8, -r0, lsl #4]
     e38:	00000087 	andeq	r0, r0, r7, lsl #1
     e3c:	69050404 	stmdbvs	r5, {r2, sl}
     e40:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
     e44:	00910704 	addseq	r0, r1, r4, lsl #14
     e48:	30030000 	andcc	r0, r3, r0
     e4c:	03000002 	movweq	r0, #2
     e50:	00301318 	eorseq	r1, r0, r8, lsl r3
     e54:	55030000 	strpl	r0, [r3, #-0]
     e58:	03000003 	movweq	r0, #3
     e5c:	00581430 	subseq	r1, r8, r0, lsr r4
     e60:	93050000 	movwls	r0, #20480	; 0x5000
     e64:	06000000 	streq	r0, [r0], -r0
     e68:	00000093 	muleq	r0, r3, r0
     e6c:	000000b4 	strheq	r0, [r0], -r4
     e70:	00008007 	andeq	r8, r0, r7
     e74:	08000100 	stmdaeq	r0, {r8}
     e78:	000004c7 	andeq	r0, r0, r7, asr #9
     e7c:	93114a09 	tstls	r1, #36864	; 0x9000
     e80:	01000000 	mrseq	r0, (UNDEF: 0)
     e84:	04080901 	streq	r0, [r8], #-2305	; 0xfffff6ff
     e88:	e50101e9 	str	r0, [r1, #-489]	; 0xfffffe17
     e8c:	f0000006 			; <UNDEFINED> instruction: 0xf0000006
     e90:	0a000000 	beq	e98 <_Min_Stack_Size+0xa98>
     e94:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
     e98:	9f1101ea 	svcls	0x001101ea
     e9c:	02000000 	andeq	r0, r0, #0
     ea0:	430a0023 	movwmi	r0, #40995	; 0xa023
     ea4:	04005253 	streq	r5, [r0], #-595	; 0xfffffdad
     ea8:	9f1101eb 	svcls	0x001101eb
     eac:	02000000 	andeq	r0, r0, #0
     eb0:	0b000423 	bleq	1f44 <_Min_Stack_Size+0x1b44>
     eb4:	000006e7 	andeq	r0, r0, r7, ror #13
     eb8:	0301ec04 	movweq	lr, #7172	; 0x1c04
     ebc:	000000c2 	andeq	r0, r0, r2, asr #1
     ec0:	f3049809 	vsub.i8	d9, d4, d9
     ec4:	03e70101 	mvneq	r0, #1073741824	; 0x40000000
     ec8:	03310000 	teqeq	r1, #0
     ecc:	430a0000 	movwmi	r0, #40960	; 0xa000
     ed0:	f4040052 	vst4.16	{d0-d3}, [r4 :64], r2
     ed4:	009f1101 	addseq	r1, pc, r1, lsl #2
     ed8:	23020000 	movwcs	r0, #8192	; 0x2000
     edc:	03430c00 	movteq	r0, #15360	; 0x3c00
     ee0:	f5040000 			; <UNDEFINED> instruction: 0xf5040000
     ee4:	009f1101 	addseq	r1, pc, r1, lsl #2
     ee8:	23020000 	movwcs	r0, #8192	; 0x2000
     eec:	02c10c04 	sbceq	r0, r1, #4, 24	; 0x400
     ef0:	f6040000 			; <UNDEFINED> instruction: 0xf6040000
     ef4:	009f1101 	addseq	r1, pc, r1, lsl #2
     ef8:	23020000 	movwcs	r0, #8192	; 0x2000
     efc:	49430a08 	stmdbmi	r3, {r3, r9, fp}^
     f00:	f7040052 			; <UNDEFINED> instruction: 0xf7040052
     f04:	009f1101 	addseq	r1, pc, r1, lsl #2
     f08:	23020000 	movwcs	r0, #8192	; 0x2000
     f0c:	02cb0c0c 	sbceq	r0, fp, #12, 24	; 0xc00
     f10:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
     f14:	009f1101 	addseq	r1, pc, r1, lsl #2
     f18:	23020000 	movwcs	r0, #8192	; 0x2000
     f1c:	05cf0c10 	strbeq	r0, [pc, #3088]	; 1b34 <_Min_Stack_Size+0x1734>
     f20:	f9040000 			; <UNDEFINED> instruction: 0xf9040000
     f24:	009f1101 	addseq	r1, pc, r1, lsl #2
     f28:	23020000 	movwcs	r0, #8192	; 0x2000
     f2c:	057b0c14 	ldrbeq	r0, [fp, #-3092]!	; 0xfffff3ec
     f30:	fa040000 	blx	100f38 <_Min_Stack_Size+0x100b38>
     f34:	009f1101 	addseq	r1, pc, r1, lsl #2
     f38:	23020000 	movwcs	r0, #8192	; 0x2000
     f3c:	04e40c18 	strbteq	r0, [r4], #3096	; 0xc18
     f40:	fb040000 	blx	100f4a <_Min_Stack_Size+0x100b4a>
     f44:	00931101 	addseq	r1, r3, r1, lsl #2
     f48:	23020000 	movwcs	r0, #8192	; 0x2000
     f4c:	04b30c1c 	ldrteq	r0, [r3], #3100	; 0xc1c
     f50:	fc040000 	stc2	0, cr0, [r4], {-0}
     f54:	009f1101 	addseq	r1, pc, r1, lsl #2
     f58:	23020000 	movwcs	r0, #8192	; 0x2000
     f5c:	03070c20 	movweq	r0, #31776	; 0x7c20
     f60:	fd040000 	stc2	0, cr0, [r4, #-0]
     f64:	009f1101 	addseq	r1, pc, r1, lsl #2
     f68:	23020000 	movwcs	r0, #8192	; 0x2000
     f6c:	05840c24 	streq	r0, [r4, #3108]	; 0xc24
     f70:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
     f74:	00a41101 	adceq	r1, r4, r1, lsl #2
     f78:	23020000 	movwcs	r0, #8192	; 0x2000
     f7c:	07020c28 	streq	r0, [r2, -r8, lsr #24]
     f80:	ff040000 			; <UNDEFINED> instruction: 0xff040000
     f84:	009f1101 	addseq	r1, pc, r1, lsl #2
     f88:	23020000 	movwcs	r0, #8192	; 0x2000
     f8c:	065c0c30 			; <UNDEFINED> instruction: 0x065c0c30
     f90:	00040000 	andeq	r0, r4, r0
     f94:	009f1102 	addseq	r1, pc, r2, lsl #2
     f98:	23020000 	movwcs	r0, #8192	; 0x2000
     f9c:	04590c34 	ldrbeq	r0, [r9], #-3124	; 0xfffff3cc
     fa0:	01040000 	mrseq	r0, (UNDEF: 4)
     fa4:	009f1102 	addseq	r1, pc, r2, lsl #2
     fa8:	23020000 	movwcs	r0, #8192	; 0x2000
     fac:	05030c38 	streq	r0, [r3, #-3128]	; 0xfffff3c8
     fb0:	02040000 	andeq	r0, r4, #0
     fb4:	00931102 	addseq	r1, r3, r2, lsl #2
     fb8:	23020000 	movwcs	r0, #8192	; 0x2000
     fbc:	06540c3c 			; <UNDEFINED> instruction: 0x06540c3c
     fc0:	03040000 	movweq	r0, #16384	; 0x4000
     fc4:	009f1102 	addseq	r1, pc, r2, lsl #2
     fc8:	23020000 	movwcs	r0, #8192	; 0x2000
     fcc:	05730c40 	ldrbeq	r0, [r3, #-3136]!	; 0xfffff3c0
     fd0:	04040000 	streq	r0, [r4], #-0
     fd4:	009f1102 	addseq	r1, pc, r2, lsl #2
     fd8:	23020000 	movwcs	r0, #8192	; 0x2000
     fdc:	058e0c44 	streq	r0, [lr, #3140]	; 0xc44
     fe0:	05040000 	streq	r0, [r4, #-0]
     fe4:	00a41102 	adceq	r1, r4, r2, lsl #2
     fe8:	23020000 	movwcs	r0, #8192	; 0x2000
     fec:	02aa0c48 	adceq	r0, sl, #72, 24	; 0x4800
     ff0:	06040000 	streq	r0, [r4], -r0
     ff4:	009f1102 	addseq	r1, pc, r2, lsl #2
     ff8:	23020000 	movwcs	r0, #8192	; 0x2000
     ffc:	04970c50 	ldreq	r0, [r7], #3152	; 0xc50
    1000:	07040000 	streq	r0, [r4, -r0]
    1004:	009f1102 	addseq	r1, pc, r2, lsl #2
    1008:	23020000 	movwcs	r0, #8192	; 0x2000
    100c:	05550c54 	ldrbeq	r0, [r5, #-3156]	; 0xfffff3ac
    1010:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    1014:	009f1102 	addseq	r1, pc, r2, lsl #2
    1018:	23020000 	movwcs	r0, #8192	; 0x2000
    101c:	050d0c58 	streq	r0, [sp, #-3160]	; 0xfffff3a8
    1020:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    1024:	00931102 	addseq	r1, r3, r2, lsl #2
    1028:	23020000 	movwcs	r0, #8192	; 0x2000
    102c:	03d20c5c 	bicseq	r0, r2, #92, 24	; 0x5c00
    1030:	0a040000 	beq	101038 <_Min_Stack_Size+0x100c38>
    1034:	009f1102 	addseq	r1, pc, r2, lsl #2
    1038:	23020000 	movwcs	r0, #8192	; 0x2000
    103c:	04140c60 	ldreq	r0, [r4], #-3168	; 0xfffff3a0
    1040:	0b040000 	bleq	101048 <_Min_Stack_Size+0x100c48>
    1044:	009f1102 	addseq	r1, pc, r2, lsl #2
    1048:	23020000 	movwcs	r0, #8192	; 0x2000
    104c:	05170c64 	ldreq	r0, [r7, #-3172]	; 0xfffff39c
    1050:	0c040000 	stceq	0, cr0, [r4], {-0}
    1054:	00a41102 	adceq	r1, r4, r2, lsl #2
    1058:	23020000 	movwcs	r0, #8192	; 0x2000
    105c:	06c70c68 	strbeq	r0, [r7], r8, ror #24
    1060:	0d040000 	stceq	0, cr0, [r4, #-0]
    1064:	009f1102 	addseq	r1, pc, r2, lsl #2
    1068:	23020000 	movwcs	r0, #8192	; 0x2000
    106c:	53430a70 	movtpl	r0, #14960	; 0x3a70
    1070:	0e040052 	mcreq	0, 0, r0, cr4, cr2, {2}
    1074:	009f1102 	addseq	r1, pc, r2, lsl #2
    1078:	23020000 	movwcs	r0, #8192	; 0x2000
    107c:	05210c74 	streq	r0, [r1, #-3188]!	; 0xfffff38c
    1080:	0f040000 	svceq	0x00040000
    1084:	00a41102 	adceq	r1, r4, r2, lsl #2
    1088:	23020000 	movwcs	r0, #8192	; 0x2000
    108c:	06900c78 			; <UNDEFINED> instruction: 0x06900c78
    1090:	10040000 	andne	r0, r4, r0
    1094:	009f1102 	addseq	r1, pc, r2, lsl #2
    1098:	23030000 	movwcs	r0, #12288	; 0x3000
    109c:	dc0c0180 	stfles	f0, [ip], {128}	; 0x80
    10a0:	04000003 	streq	r0, [r0], #-3
    10a4:	9f110211 	svcls	0x00110211
    10a8:	03000000 	movweq	r0, #0
    10ac:	0c018423 	cfstrseq	mvf8, [r1], {35}	; 0x23
    10b0:	0000052b 	andeq	r0, r0, fp, lsr #10
    10b4:	11021204 	tstne	r2, r4, lsl #4
    10b8:	00000093 	muleq	r0, r3, r0
    10bc:	01882303 	orreq	r2, r8, r3, lsl #6
    10c0:	0002be0c 	andeq	fp, r2, ip, lsl #28
    10c4:	02130400 	andseq	r0, r3, #0, 8
    10c8:	00009f11 	andeq	r9, r0, r1, lsl pc
    10cc:	8c230300 	stchi	3, cr0, [r3], #-0
    10d0:	06be0c01 	ldrteq	r0, [lr], r1, lsl #24
    10d4:	14040000 	strne	r0, [r4], #-0
    10d8:	009f1102 	addseq	r1, pc, r2, lsl #2
    10dc:	23030000 	movwcs	r0, #12288	; 0x3000
    10e0:	d40c0190 	strle	r0, [ip], #-400	; 0xfffffe70
    10e4:	04000002 	streq	r0, [r0], #-2
    10e8:	9f110215 	svcls	0x00110215
    10ec:	03000000 	movweq	r0, #0
    10f0:	00019423 	andeq	r9, r1, r3, lsr #8
    10f4:	0003e90b 	andeq	lr, r3, fp, lsl #18
    10f8:	02160400 	andseq	r0, r6, #0, 8
    10fc:	0000fd03 	andeq	pc, r0, r3, lsl #26
    1100:	01070d00 	tsteq	r7, r0, lsl #26
    1104:	0000003c 	andeq	r0, r0, ip, lsr r0
    1108:	f501ba05 			; <UNDEFINED> instruction: 0xf501ba05
    110c:	5d000003 	stcpl	0, cr0, [r0, #-12]
    1110:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    1114:	000023a3 	andeq	r2, r0, r3, lsr #7
    1118:	45530f00 	ldrbmi	r0, [r3, #-3840]	; 0xfffff100
    111c:	00010054 	andeq	r0, r1, r4, asr r0
    1120:	0003f703 	andeq	pc, r3, r3, lsl #14
    1124:	03bd0500 			; <UNDEFINED> instruction: 0x03bd0500
    1128:	0000033e 	andeq	r0, r0, lr, lsr r3
    112c:	3c01070d 	stccc	7, cr0, [r1], {13}
    1130:	05000000 	streq	r0, [r0, #-0]
    1134:	033101c0 	teqeq	r1, #192, 2	; 0x30
    1138:	03880000 	orreq	r0, r8, #0
    113c:	800e0000 	andhi	r0, lr, r0
    1140:	00000003 	andeq	r0, r0, r3
    1144:	0003190e 	andeq	r1, r3, lr, lsl #18
    1148:	03000100 	movweq	r0, #256	; 0x100
    114c:	00000333 	andeq	r0, r0, r3, lsr r3
    1150:	6903c305 	stmdbvs	r3, {r0, r2, r8, r9, lr, pc}
    1154:	02000003 	andeq	r0, r0, #3
    1158:	01be0408 			; <UNDEFINED> instruction: 0x01be0408
    115c:	1d100000 	ldcne	0, cr0, [r0, #-0]
    1160:	0d000000 	stceq	0, cr0, [r0, #-0]
    1164:	003c0107 	eorseq	r0, ip, r7, lsl #2
    1168:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
    116c:	0006aa01 	andeq	sl, r6, r1, lsl #20
    1170:	0003cb00 	andeq	ip, r3, r0, lsl #22
    1174:	03cb0e00 	biceq	r0, fp, #0, 28
    1178:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    117c:	00000598 	muleq	r0, r8, r5
    1180:	07220e01 	streq	r0, [r2, -r1, lsl #28]!
    1184:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
    1188:	000003bf 			; <UNDEFINED> instruction: 0x000003bf
    118c:	ac030003 	stcge	0, cr0, [r3], {3}
    1190:	06000006 	streq	r0, [r0], -r6
    1194:	03a0032d 	moveq	r0, #-1275068416	; 0xb4000000
    1198:	1c110000 	ldcne	0, cr0, [r1], {-0}
    119c:	82013007 	andhi	r3, r1, #7
    11a0:	4e000004 	cdpmi	0, 0, cr0, cr0, cr4, {0}
    11a4:	12000004 	andne	r0, r0, #4
    11a8:	0000023f 	andeq	r0, r0, pc, lsr r2
    11ac:	930c3107 	movwls	r3, #49415	; 0xc107
    11b0:	02000000 	andeq	r0, r0, #0
    11b4:	69120023 	ldmdbvs	r2, {r0, r1, r5}
    11b8:	07000005 	streq	r0, [r0, -r5]
    11bc:	00930c34 	addseq	r0, r3, r4, lsr ip
    11c0:	23020000 	movwcs	r0, #8192	; 0x2000
    11c4:	02641204 	rsbeq	r1, r4, #4, 4	; 0x40000000
    11c8:	37070000 	strcc	r0, [r7, -r0]
    11cc:	0000930c 	andeq	r9, r0, ip, lsl #6
    11d0:	08230200 	stmdaeq	r3!, {r9}
    11d4:	00026912 	andeq	r6, r2, r2, lsl r9
    11d8:	0c3a0700 	ldceq	7, cr0, [sl], #-0
    11dc:	00000093 	muleq	r0, r3, r0
    11e0:	120c2302 	andne	r2, ip, #134217728	; 0x8000000
    11e4:	00000274 	andeq	r0, r0, r4, ror r2
    11e8:	930c3e07 	movwls	r3, #52743	; 0xce07
    11ec:	02000000 	andeq	r0, r0, #0
    11f0:	79121023 	ldmdbvc	r2, {r0, r1, r5, ip}
    11f4:	07000002 	streq	r0, [r0, -r2]
    11f8:	00930c41 	addseq	r0, r3, r1, asr #24
    11fc:	23020000 	movwcs	r0, #8192	; 0x2000
    1200:	027e1214 	rsbseq	r1, lr, #20, 4	; 0x40000001
    1204:	46070000 	strmi	r0, [r7], -r0
    1208:	0000930c 	andeq	r9, r0, ip, lsl #6
    120c:	18230200 	stmdane	r3!, {r9}
    1210:	04840300 	streq	r0, [r4], #768	; 0x300
    1214:	4b070000 	blmi	1c121c <_Min_Stack_Size+0x1c0e1c>
    1218:	0003d702 	andeq	sp, r3, r2, lsl #14
    121c:	07101100 	ldreq	r1, [r0, -r0, lsl #2]
    1220:	07fc01d0 	ubfxeq	r0, r0, #3, #29
    1224:	04a40000 	strteq	r0, [r4], #0
    1228:	ac120000 	ldcge	0, cr0, [r2], {-0}
    122c:	07000009 	streq	r0, [r0, -r9]
    1230:	00930cd1 			; <UNDEFINED> instruction: 0x00930cd1
    1234:	23020000 	movwcs	r0, #8192	; 0x2000
    1238:	099b1200 	ldmibeq	fp, {r9, ip}
    123c:	d4070000 	strle	r0, [r7], #-0
    1240:	0000930c 	andeq	r9, r0, ip, lsl #6
    1244:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1248:	0009b412 	andeq	fp, r9, r2, lsl r4
    124c:	0cd70700 	ldcleq	7, cr0, [r7], {0}
    1250:	00000093 	muleq	r0, r3, r0
    1254:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    1258:	000009bc 			; <UNDEFINED> instruction: 0x000009bc
    125c:	930cdb07 	movwls	sp, #51975	; 0xcb07
    1260:	02000000 	andeq	r0, r0, #0
    1264:	03000c23 	movweq	r0, #3107	; 0xc23
    1268:	000007fe 	strdeq	r0, [r0], -lr
    126c:	5a02de07 	bpl	b8a90 <_Min_Stack_Size+0xb8690>
    1270:	11000004 	tstne	r0, r4
    1274:	01e4073c 	mvneq	r0, ip, lsr r7
    1278:	00000980 	andeq	r0, r0, r0, lsl #19
    127c:	00000578 	andeq	r0, r0, r8, ror r5
    1280:	0008b412 	andeq	fp, r8, r2, lsl r4
    1284:	0ce50700 	stcleq	7, cr0, [r5]
    1288:	00000093 	muleq	r0, r3, r0
    128c:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    1290:	0000087d 	andeq	r0, r0, sp, ror r8
    1294:	a419e807 	ldrge	lr, [r9], #-2055	; 0xfffff7f9
    1298:	02000004 	andeq	r0, r0, #4
    129c:	da120423 	ble	482330 <_Min_Stack_Size+0x481f30>
    12a0:	07000009 	streq	r0, [r0, -r9]
    12a4:	00930cf5 			; <UNDEFINED> instruction: 0x00930cf5
    12a8:	23020000 	movwcs	r0, #8192	; 0x2000
    12ac:	089e1214 	ldmeq	lr, {r2, r4, r9, ip}
    12b0:	f8070000 			; <UNDEFINED> instruction: 0xf8070000
    12b4:	0000930c 	andeq	r9, r0, ip, lsl #6
    12b8:	18230200 	stmdane	r3!, {r9}
    12bc:	00094112 	andeq	r4, r9, r2, lsl r1
    12c0:	0cfb0700 	ldcleq	7, cr0, [fp]
    12c4:	00000093 	muleq	r0, r3, r0
    12c8:	121c2302 	andsne	r2, ip, #134217728	; 0x8000000
    12cc:	0000092e 	andeq	r0, r0, lr, lsr #18
    12d0:	930cfe07 	movwls	pc, #52743	; 0xce07	; <UNPREDICTABLE>
    12d4:	02000000 	andeq	r0, r0, #0
    12d8:	c40c2023 	strgt	r2, [ip], #-35	; 0xffffffdd
    12dc:	07000009 	streq	r0, [r0, -r9]
    12e0:	930c0101 	movwls	r0, #49409	; 0xc101
    12e4:	02000000 	andeq	r0, r0, #0
    12e8:	090c2423 	stmdbeq	ip, {r0, r1, r5, sl, sp}
    12ec:	07000009 	streq	r0, [r0, -r9]
    12f0:	930c0104 	movwls	r0, #49412	; 0xc104
    12f4:	02000000 	andeq	r0, r0, #0
    12f8:	ec0c2823 	stc	8, cr2, [ip], {35}	; 0x23
    12fc:	07000008 	streq	r0, [r0, -r8]
    1300:	930c0107 	movwls	r0, #49415	; 0xc107
    1304:	02000000 	andeq	r0, r0, #0
    1308:	140c2c23 	strne	r2, [ip], #-3107	; 0xfffff3dd
    130c:	07000008 	streq	r0, [r0, -r8]
    1310:	930c010a 	movwls	r0, #49418	; 0xc10a
    1314:	02000000 	andeq	r0, r0, #0
    1318:	8a0c3023 	bhi	30d3ac <_Min_Stack_Size+0x30cfac>
    131c:	07000007 	streq	r0, [r0, -r7]
    1320:	930c011e 	movwls	r0, #49438	; 0xc11e
    1324:	02000000 	andeq	r0, r0, #0
    1328:	1d0c3423 	cfstrsne	mvf3, [ip, #-140]	; 0xffffff74
    132c:	07000009 	streq	r0, [r0, -r9]
    1330:	870b0121 	strhi	r0, [fp, -r1, lsr #2]
    1334:	02000000 	andeq	r0, r0, #0
    1338:	0b003823 	bleq	f3cc <_Min_Stack_Size+0xefcc>
    133c:	00000982 	andeq	r0, r0, r2, lsl #19
    1340:	02012307 	andeq	r2, r1, #469762048	; 0x1c000000
    1344:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
    1348:	34083411 	strcc	r3, [r8], #-1041	; 0xfffffbef
    134c:	0004ee01 	andeq	lr, r4, r1, lsl #28
    1350:	0005fc00 	andeq	pc, r5, r0, lsl #24
    1354:	06cc1200 	strbeq	r1, [ip], r0, lsl #4
    1358:	35080000 	strcc	r0, [r8, #-0]
    135c:	0000930c 	andeq	r9, r0, ip, lsl #6
    1360:	00230200 	eoreq	r0, r3, r0, lsl #4
    1364:	00037712 	andeq	r7, r3, r2, lsl r7
    1368:	0c380800 	ldceq	8, cr0, [r8], #-0
    136c:	00000093 	muleq	r0, r3, r0
    1370:	12042302 	andne	r2, r4, #134217728	; 0x8000000
    1374:	0000028f 	andeq	r0, r0, pc, lsl #5
    1378:	930c3b08 	movwls	r3, #51976	; 0xcb08
    137c:	02000000 	andeq	r0, r0, #0
    1380:	20120823 	andscs	r0, r2, r3, lsr #16
    1384:	08000003 	stmdaeq	r0, {r0, r1}
    1388:	00930c3e 	addseq	r0, r3, lr, lsr ip
    138c:	23020000 	movwcs	r0, #8192	; 0x2000
    1390:	02ec120c 	rsceq	r1, ip, #12, 4	; 0xc0000000
    1394:	41080000 	mrsmi	r0, (UNDEF: 8)
    1398:	0000930c 	andeq	r9, r0, ip, lsl #6
    139c:	10230200 	eorne	r0, r3, r0, lsl #4
    13a0:	00031012 	andeq	r1, r3, r2, lsl r0
    13a4:	0c440800 	mcrreq	8, 0, r0, r4, cr0
    13a8:	00000093 	muleq	r0, r3, r0
    13ac:	13142302 	tstne	r4, #134217728	; 0x8000000
    13b0:	004c4c50 	subeq	r4, ip, r0, asr ip
    13b4:	4e164708 	cdpmi	7, 1, cr4, cr6, cr8, {0}
    13b8:	02000004 	andeq	r0, r0, #4
    13bc:	03001823 	movweq	r1, #2083	; 0x823
    13c0:	000004f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    13c4:	85024808 	strhi	r4, [r2, #-2056]	; 0xfffff7f8
    13c8:	08000005 	stmdaeq	r0, {r0, r2}
    13cc:	000005b4 			; <UNDEFINED> instruction: 0x000005b4
    13d0:	9311ce0a 	tstls	r1, #10, 28	; 0xa0
    13d4:	01000000 	mrseq	r0, (UNDEF: 0)
    13d8:	3c011401 	cfstrscc	mvf1, [r1], {1}
    13dc:	01000007 	tsteq	r0, r7
    13e0:	00060e79 	andeq	r0, r6, r9, ror lr
    13e4:	00000000 	andeq	r0, r0, r0
    13e8:	02000000 	andeq	r0, r0, #0
    13ec:	4001007d 	andmi	r0, r1, sp, ror r0
    13f0:	15000006 	strne	r0, [r0, #-6]
    13f4:	00000298 	muleq	r0, r8, r2
    13f8:	300e7901 	andcc	r7, lr, r1, lsl #18
    13fc:	00000640 	andeq	r0, r0, r0, asr #12
    1400:	16005001 	strne	r5, [r0], -r1
    1404:	0005fc04 	andeq	pc, r5, r4, lsl #24
    1408:	a2011700 	andge	r1, r1, #0, 14
    140c:	01000005 	tsteq	r0, r5
    1410:	cb130d07 	blgt	4c4834 <_Min_Stack_Size+0x4c4434>
    1414:	50000003 	andpl	r0, r0, r3
    1418:	60080004 	andvs	r0, r8, r4
    141c:	68080008 	stmdavs	r8, {r3}
    1420:	01000006 	tsteq	r0, r6
    1424:	000007ba 			; <UNDEFINED> instruction: 0x000007ba
    1428:	00029818 	andeq	r9, r2, r8, lsl r8
    142c:	0d070100 	stfeqs	f0, [r7, #-0]
    1430:	0006403a 	andeq	r4, r6, sl, lsr r0
    1434:	0006e400 	andeq	lr, r6, r0, lsl #8
    1438:	0006c400 	andeq	ip, r6, r0, lsl #8
    143c:	055f1900 	ldrbeq	r1, [pc, #-2304]	; b44 <_Min_Stack_Size+0x744>
    1440:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    1444:	00930c0d 	addseq	r0, r3, sp, lsl #24
    1448:	07c40000 	strbeq	r0, [r4, r0]
    144c:	07a80000 	streq	r0, [r8, r0]!
    1450:	4a190000 	bmi	641458 <_Min_Stack_Size+0x641058>
    1454:	01000005 	tsteq	r0, r5
    1458:	93170d09 	tstls	r7, #576	; 0x240
    145c:	6a000000 	bvs	1464 <_Min_Stack_Size+0x1064>
    1460:	66000008 	strvs	r0, [r0], -r8
    1464:	1a000008 	bne	148c <_Min_Stack_Size+0x108c>
    1468:	000000e0 	andeq	r0, r0, r0, ror #1
    146c:	00000717 	andeq	r0, r0, r7, lsl r7
    1470:	00024819 	andeq	r4, r2, r9, lsl r8
    1474:	0dbf0100 	ldfeqs	f0, [pc]	; 147c <_Min_Stack_Size+0x107c>
    1478:	00035d16 	andeq	r5, r3, r6, lsl sp
    147c:	00089400 	andeq	r9, r8, r0, lsl #8
    1480:	00088800 	andeq	r8, r8, r0, lsl #16
    1484:	062e1b00 	strteq	r1, [lr], -r0, lsl #22
    1488:	06460800 	strbeq	r0, [r6], -r0, lsl #16
    148c:	06e00800 	strbteq	r0, [r0], r0, lsl #16
    1490:	001c0000 	andseq	r0, ip, r0
    1494:	01000003 	tsteq	r0, r3
    1498:	9f070dc8 	svcls	0x00070dc8
    149c:	02000000 	andeq	r0, r0, #0
    14a0:	1d006c91 	stcne	12, cr6, [r0, #-580]	; 0xfffffdbc
    14a4:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
    14a8:	00000ade 	ldrdeq	r0, [r0], -lr
    14ac:	0006881d 	andeq	r8, r6, sp, lsl r8
    14b0:	000ade08 	andeq	sp, sl, r8, lsl #28
    14b4:	06a81d00 	strteq	r1, [r8], r0, lsl #26
    14b8:	0ade0800 	beq	ff7834c0 <_estack+0xdf7434c0>
    14bc:	b81d0000 	ldmdalt	sp, {}	; <UNPREDICTABLE>
    14c0:	de080006 	cdple	0, 0, cr0, cr8, cr6, {0}
    14c4:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    14c8:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
    14cc:	00000ade 	ldrdeq	r0, [r0], -lr
    14d0:	0007041d 	andeq	r0, r7, sp, lsl r4
    14d4:	000ade08 	andeq	sp, sl, r8, lsl #28
    14d8:	a61d0000 	ldrge	r0, [sp], -r0
    14dc:	de080004 	cdple	0, 0, cr0, cr8, cr4, {0}
    14e0:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    14e4:	080004b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, sl}
    14e8:	00000ade 	ldrdeq	r0, [r0], -lr
    14ec:	00050a1d 	andeq	r0, r5, sp, lsl sl
    14f0:	000ade08 	andeq	sp, sl, r8, lsl #28
    14f4:	051a1d00 	ldreq	r1, [sl, #-3328]	; 0xfffff300
    14f8:	0ade0800 	beq	ff783500 <_estack+0xdf743500>
    14fc:	481d0000 	ldmdami	sp, {}	; <UNPREDICTABLE>
    1500:	de080005 	cdple	0, 0, cr0, cr8, cr5, {0}
    1504:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    1508:	08000558 	stmdaeq	r0, {r3, r4, r6, r8, sl}
    150c:	00000ade 	ldrdeq	r0, [r0], -lr
    1510:	0005a61d 	andeq	sl, r5, sp, lsl r6
    1514:	000ade08 	andeq	sp, sl, r8, lsl #28
    1518:	05b61d00 	ldreq	r1, [r6, #3328]!	; 0xd00
    151c:	0ade0800 	beq	ff783524 <_estack+0xdf743524>
    1520:	ca1d0000 	bgt	741528 <_Min_Stack_Size+0x741128>
    1524:	de080005 	cdple	0, 0, cr0, cr8, cr5, {0}
    1528:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    152c:	080005da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, sl}
    1530:	00000ade 	ldrdeq	r0, [r0], -lr
    1534:	0006021d 	andeq	r0, r6, sp, lsl r2
    1538:	000ade08 	andeq	sp, sl, r8, lsl #28
    153c:	06121d00 	ldreq	r1, [r2], -r0, lsl #26
    1540:	0ade0800 	beq	ff783548 <_estack+0xdf743548>
    1544:	361d0000 	ldrcc	r0, [sp], -r0
    1548:	de080007 	cdple	0, 0, cr0, cr8, cr7, {0}
    154c:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    1550:	08000746 	stmdaeq	r0, {r1, r2, r6, r8, r9, sl}
    1554:	00000ade 	ldrdeq	r0, [r0], -lr
    1558:	0007661d 	andeq	r6, r7, sp, lsl r6
    155c:	000ade08 	andeq	sp, sl, r8, lsl #28
    1560:	07761d00 	ldrbeq	r1, [r6, -r0, lsl #26]!
    1564:	0ade0800 	beq	ff78356c <_estack+0xdf74356c>
    1568:	b01d0000 	andslt	r0, sp, r0
    156c:	de080007 	cdple	0, 0, cr0, cr8, cr7, {0}
    1570:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    1574:	080007c0 	stmdaeq	r0, {r6, r7, r8, r9, sl}
    1578:	00000ade 	ldrdeq	r0, [r0], -lr
    157c:	f3011700 	vabd.u8	d1, d1, d0
    1580:	01000006 	tsteq	r0, r6
    1584:	cb130c49 	blgt	4c46b0 <_Min_Stack_Size+0x4c42b0>
    1588:	00000003 	andeq	r0, r0, r3
    158c:	00000000 	andeq	r0, r0, r0
    1590:	e1000000 	mrs	r0, (UNDEF: 0)
    1594:	01000008 	tsteq	r0, r8
    1598:	00000852 	andeq	r0, r0, r2, asr r8
    159c:	00055f19 	andeq	r5, r5, r9, lsl pc
    15a0:	0c4b0100 	stfeqe	f0, [fp], {-0}
    15a4:	0000930c 	andeq	r9, r0, ip, lsl #6
    15a8:	00091500 	andeq	r1, r9, r0, lsl #10
    15ac:	00090100 	andeq	r0, r9, r0, lsl #2
    15b0:	00001d00 	andeq	r1, r0, r0, lsl #26
    15b4:	0ade0000 	beq	ff7815bc <_estack+0xdf7415bc>
    15b8:	001d0000 	andseq	r0, sp, r0
    15bc:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    15c0:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    15c4:	00000000 	andeq	r0, r0, r0
    15c8:	00000ade 	ldrdeq	r0, [r0], -lr
    15cc:	0000001d 	andeq	r0, r0, sp, lsl r0
    15d0:	000ade00 	andeq	sp, sl, r0, lsl #28
    15d4:	00001d00 	andeq	r1, r0, r0, lsl #26
    15d8:	0ade0000 	beq	ff7815e0 <_estack+0xdf7415e0>
    15dc:	001d0000 	andseq	r0, sp, r0
    15e0:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    15e4:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    15e8:	00000000 	andeq	r0, r0, r0
    15ec:	00000ade 	ldrdeq	r0, [r0], -lr
    15f0:	0000001d 	andeq	r0, r0, sp, lsl r0
    15f4:	000ade00 	andeq	sp, sl, r0, lsl #28
    15f8:	00001d00 	andeq	r1, r0, r0, lsl #26
    15fc:	0ade0000 	beq	ff781604 <_estack+0xdf741604>
    1600:	001d0000 	andseq	r0, sp, r0
    1604:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    1608:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    160c:	00000000 	andeq	r0, r0, r0
    1610:	00000aec 	andeq	r0, r0, ip, ror #21
    1614:	da011700 	ble	4721c <_Min_Stack_Size+0x46e1c>
    1618:	01000007 	tsteq	r0, r7
    161c:	cb130b48 	blgt	4c4344 <_Min_Stack_Size+0x4c3f44>
    1620:	00000003 	andeq	r0, r0, r3
    1624:	00000000 	andeq	r0, r0, r0
    1628:	8b000000 	blhi	1630 <_Min_Stack_Size+0x1230>
    162c:	01000009 	tsteq	r0, r9
    1630:	00000899 	muleq	r0, r9, r8
    1634:	00055f19 	andeq	r5, r5, r9, lsl pc
    1638:	0b4a0100 	bleq	1281a40 <_Min_Stack_Size+0x1281640>
    163c:	0000930c 	andeq	r9, r0, ip, lsl #6
    1640:	0009ad00 	andeq	sl, r9, r0, lsl #26
    1644:	0009ab00 	andeq	sl, r9, r0, lsl #22
    1648:	00001d00 	andeq	r1, r0, r0, lsl #26
    164c:	0ade0000 	beq	ff781654 <_estack+0xdf741654>
    1650:	001d0000 	andseq	r0, sp, r0
    1654:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    1658:	0000000a 	andeq	r0, r0, sl
    165c:	086d0117 	stmdaeq	sp!, {r0, r1, r2, r4, r8}^
    1660:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    1664:	03cb130a 	biceq	r1, fp, #671088640	; 0x28000000
	...
    1670:	09c00000 	stmibeq	r0, {}^	; <UNPREDICTABLE>
    1674:	07010000 	streq	r0, [r1, -r0]
    1678:	18000009 	stmdane	r0, {r0, r3}
    167c:	000007b2 			; <UNDEFINED> instruction: 0x000007b2
    1680:	420af501 	andmi	pc, sl, #4194304	; 0x400000
    1684:	00000907 	andeq	r0, r0, r7, lsl #18
    1688:	000009e4 	andeq	r0, r0, r4, ror #19
    168c:	000009e0 	andeq	r0, r0, r0, ror #19
    1690:	00055f19 	andeq	r5, r5, r9, lsl pc
    1694:	0af70100 	beq	ffdc1a9c <_estack+0xdfd81a9c>
    1698:	0000930c 	andeq	r9, r0, ip, lsl #6
    169c:	000a0400 	andeq	r0, sl, r0, lsl #8
    16a0:	000a0200 	andeq	r0, sl, r0, lsl #4
    16a4:	00001d00 	andeq	r1, r0, r0, lsl #26
    16a8:	0ade0000 	beq	ff7816b0 <_estack+0xdf7416b0>
    16ac:	001d0000 	andseq	r0, sp, r0
    16b0:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    16b4:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    16b8:	00000000 	andeq	r0, r0, r0
    16bc:	00000ade 	ldrdeq	r0, [r0], -lr
    16c0:	0000001d 	andeq	r0, r0, sp, lsl r0
    16c4:	000ade00 	andeq	sp, sl, r0, lsl #28
    16c8:	04160000 	ldreq	r0, [r6], #-0
    16cc:	000004a4 	andeq	r0, r0, r4, lsr #9
    16d0:	08c90114 	stmiaeq	r9, {r2, r4, r8}^
    16d4:	d0010000 	andle	r0, r1, r0
    16d8:	0000060a 	andeq	r0, r0, sl, lsl #12
    16dc:	00000000 	andeq	r0, r0, r0
    16e0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    16e4:	09370100 	ldmdbeq	r7!, {r8}
    16e8:	dc150000 	ldcle	0, cr0, [r5], {-0}
    16ec:	01000008 	tsteq	r0, r8
    16f0:	87260ad0 			; <UNDEFINED> instruction: 0x87260ad0
    16f4:	01000000 	mrseq	r0, (UNDEF: 0)
    16f8:	011e0050 	tsteq	lr, r0, asr r0
    16fc:	0000095b 	andeq	r0, r0, fp, asr r9
    1700:	0a06c401 	beq	1b270c <_Min_Stack_Size+0x1b230c>
    1704:	00000093 	muleq	r0, r3, r0
	...
    1710:	01007d02 	tsteq	r0, r2, lsl #26
    1714:	000009bf 			; <UNDEFINED> instruction: 0x000009bf
    1718:	0007a818 	andeq	sl, r7, r8, lsl r8
    171c:	06c40100 	strbeq	r0, [r4], r0, lsl #2
    1720:	0000932e 	andeq	r9, r0, lr, lsr #6
    1724:	000a6b00 	andeq	r6, sl, r0, lsl #22
    1728:	000a1700 	andeq	r1, sl, r0, lsl #14
    172c:	07f21900 	ldrbeq	r1, [r2, r0, lsl #18]!
    1730:	c7010000 	strgt	r0, [r1, -r0]
    1734:	00930c06 	addseq	r0, r3, r6, lsl #24
    1738:	0c940000 	ldceq	0, cr0, [r4], {0}
    173c:	0c800000 	stceq	0, cr0, [r0], {0}
    1740:	a3190000 	tstge	r9, #0
    1744:	01000009 	tsteq	r0, r9
    1748:	930c06c9 	movwls	r0, #50889	; 0xc6c9
    174c:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    1750:	1400000d 	strne	r0, [r0], #-13
    1754:	1900000d 	stmdbne	r0, {r0, r2, r3}
    1758:	00000866 	andeq	r0, r0, r6, ror #16
    175c:	0c06ca01 			; <UNDEFINED> instruction: 0x0c06ca01
    1760:	00000093 	muleq	r0, r3, r0
    1764:	00000e4c 	andeq	r0, r0, ip, asr #28
    1768:	00000e38 	andeq	r0, r0, r8, lsr lr
    176c:	00097619 	andeq	r7, r9, r9, lsl r6
    1770:	06cc0100 	strbeq	r0, [ip], r0, lsl #2
    1774:	0000930c 	andeq	r9, r0, ip, lsl #6
    1778:	000ed600 	andeq	sp, lr, r0, lsl #12
    177c:	000ec400 	andeq	ip, lr, r0, lsl #8
    1780:	01140000 	tsteq	r4, r0
    1784:	000007bd 			; <UNDEFINED> instruction: 0x000007bd
    1788:	06066401 	streq	r6, [r6], -r1, lsl #8
	...
    1794:	01007d02 	tsteq	r0, r2, lsl #26
    1798:	000009fe 	strdeq	r0, [r0], -lr
    179c:	00079a15 	andeq	r9, r7, r5, lsl sl
    17a0:	06640100 	strbteq	r0, [r4], -r0, lsl #2
    17a4:	0009fe3e 	andeq	pc, r9, lr, lsr lr	; <UNPREDICTABLE>
    17a8:	19500100 	ldmdbne	r0, {r8}^
    17ac:	00000953 	andeq	r0, r0, r3, asr r9
    17b0:	0c066601 	stceq	6, cr6, [r6], {1}
    17b4:	00000093 	muleq	r0, r3, r0
    17b8:	00000f48 	andeq	r0, r0, r8, asr #30
    17bc:	00000f46 	andeq	r0, r0, r6, asr #30
    17c0:	78041600 	stmdavc	r4, {r9, sl, ip}
    17c4:	17000005 	strne	r0, [r0, -r5]
    17c8:	00088401 	andeq	r8, r8, r1, lsl #8
    17cc:	04fe0100 	ldrbteq	r0, [lr], #256	; 0x100
    17d0:	0003cb13 	andeq	ip, r3, r3, lsl fp
	...
    17dc:	000f5b00 	andeq	r5, pc, r0, lsl #22
    17e0:	0ade0100 	beq	ff781be8 <_estack+0xdf741be8>
    17e4:	9a180000 	bls	6017ec <_Min_Stack_Size+0x6013ec>
    17e8:	01000007 	tsteq	r0, r7
    17ec:	fe4804fe 	mcr2	4, 2, r0, cr8, cr14, {7}
    17f0:	a7000009 	strge	r0, [r0, -r9]
    17f4:	9f00000f 	svcls	0x0000000f
    17f8:	1900000f 	stmdbne	r0, {r0, r1, r2, r3}
    17fc:	0000055f 	andeq	r0, r0, pc, asr r5
    1800:	0c050001 	stceq	0, cr0, [r5], {1}
    1804:	00000093 	muleq	r0, r3, r0
    1808:	00000fe3 	andeq	r0, r0, r3, ror #31
    180c:	00000fdb 	ldrdeq	r0, [r0], -fp
    1810:	00090119 	andeq	r0, r9, r9, lsl r1
    1814:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1818:	0000930c 	andeq	r9, r0, ip, lsl #6
    181c:	00102500 	andseq	r2, r0, r0, lsl #10
    1820:	00101900 	andseq	r1, r0, r0, lsl #18
    1824:	08e11900 	stmiaeq	r1!, {r8, fp, ip}^
    1828:	05010000 	streq	r0, [r1, #-0]
    182c:	00930c05 	addseq	r0, r3, r5, lsl #24
    1830:	10810000 	addne	r0, r1, r0
    1834:	10770000 	rsbsne	r0, r7, r0
    1838:	001b0000 	andseq	r0, fp, r0
    183c:	00000000 	andeq	r0, r0, r0
    1840:	95000000 	strls	r0, [r0, #-0]
    1844:	1c00000a 	stcne	0, cr0, [r0], {10}
    1848:	00000300 	andeq	r0, r0, r0, lsl #6
    184c:	05056501 	streq	r6, [r5, #-1281]	; 0xfffffaff
    1850:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1854:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    1858:	0000001d 	andeq	r0, r0, sp, lsl r0
    185c:	000ade00 	andeq	sp, sl, r0, lsl #28
    1860:	00001d00 	andeq	r1, r0, r0, lsl #26
    1864:	0ade0000 	beq	ff78186c <_estack+0xdf74186c>
    1868:	001d0000 	andseq	r0, sp, r0
    186c:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    1870:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    1874:	00000000 	andeq	r0, r0, r0
    1878:	00000ade 	ldrdeq	r0, [r0], -lr
    187c:	0000001d 	andeq	r0, r0, sp, lsl r0
    1880:	000ade00 	andeq	sp, sl, r0, lsl #28
    1884:	00001d00 	andeq	r1, r0, r0, lsl #26
    1888:	0ade0000 	beq	ff781890 <_estack+0xdf741890>
    188c:	001d0000 	andseq	r0, sp, r0
    1890:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    1894:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    1898:	00000000 	andeq	r0, r0, r0
    189c:	00000ade 	ldrdeq	r0, [r0], -lr
    18a0:	01011f00 	tsteq	r1, r0, lsl #30
    18a4:	00000447 	andeq	r0, r0, r7, asr #8
    18a8:	00000447 	andeq	r0, r0, r7, asr #8
    18ac:	1f0aeb0a 	svcne	0x000aeb0a
    18b0:	04d70101 	ldrbeq	r0, [r7], #257	; 0x101
    18b4:	04d70000 	ldrbeq	r0, [r7], #0
    18b8:	e00a0000 	and	r0, sl, r0
    18bc:	11680013 	cmnne	r8, r3, lsl r0
    18c0:	00020000 	andeq	r0, r2, r0
    18c4:	00000515 	andeq	r0, r0, r5, lsl r5
    18c8:	01040104 	tsteq	r4, r4, lsl #2
    18cc:	4b040000 	blmi	1018d4 <_Min_Stack_Size+0x1014d4>
    18d0:	2f00000b 	svccs	0x0000000b
    18d4:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    18d8:	00000001 	andeq	r0, r0, r1
    18dc:	00000000 	andeq	r0, r0, r0
    18e0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    18e4:	0200001b 	andeq	r0, r0, #27
    18e8:	02400105 	subeq	r0, r0, #1073741825	; 0x40000001
    18ec:	43040000 	movwmi	r0, #16384	; 0x4000
    18f0:	000a0201 	andeq	r0, sl, r1, lsl #4
    18f4:	00024000 	andeq	r4, r2, r0
    18f8:	11b20300 			; <UNDEFINED> instruction: 0x11b20300
    18fc:	03720000 	cmneq	r2, #0
    1900:	00000d3a 	andeq	r0, r0, sl, lsr sp
    1904:	0ca90374 	stceq	3, cr0, [r9], #464	; 0x1d0
    1908:	03750000 	cmneq	r5, #0
    190c:	00001128 	andeq	r1, r0, r8, lsr #2
    1910:	0d970376 	ldceq	3, cr0, [r7, #472]	; 0x1d8
    1914:	037b0000 	cmneq	fp, #0
    1918:	00001228 	andeq	r1, r0, r8, lsr #4
    191c:	0c73037c 	ldcleq	3, cr0, [r3], #-496	; 0xfffffe10
    1920:	037e0000 	cmneq	lr, #0
    1924:	00000e91 	muleq	r0, r1, lr
    1928:	0ac7047f 	beq	ff1c2b2c <_estack+0xdf182b2c>
    192c:	04000000 	streq	r0, [r0], #-0
    1930:	00000a1b 	andeq	r0, r0, fp, lsl sl
    1934:	11fb0401 	mvnsne	r0, r1, lsl #8
    1938:	04020000 	streq	r0, [r2], #-0
    193c:	00000ab9 			; <UNDEFINED> instruction: 0x00000ab9
    1940:	10fb0403 	rscsne	r0, fp, r3, lsl #8
    1944:	04040000 	streq	r0, [r4], #-0
    1948:	00001378 	andeq	r1, r0, r8, ror r3
    194c:	12940405 	addsne	r0, r4, #83886080	; 0x5000000
    1950:	04060000 	streq	r0, [r6], #-0
    1954:	0000139a 	muleq	r0, sl, r3
    1958:	10b00407 	adcsne	r0, r0, r7, lsl #8
    195c:	04080000 	streq	r0, [r8], #-0
    1960:	000012b8 			; <UNDEFINED> instruction: 0x000012b8
    1964:	10540409 	subsne	r0, r4, r9, lsl #8
    1968:	040a0000 	streq	r0, [sl], #-0
    196c:	000013a5 	andeq	r1, r0, r5, lsr #7
    1970:	0e0c040b 	cdpeq	4, 0, cr0, cr12, cr11, {0}
    1974:	040c0000 	streq	r0, [ip], #-0
    1978:	00000f92 	muleq	r0, r2, pc	; <UNPREDICTABLE>
    197c:	0cf5040d 	cfldrdeq	mvd0, [r5], #52	; 0x34
    1980:	040e0000 	streq	r0, [lr], #-0
    1984:	00000f2e 	andeq	r0, r0, lr, lsr #30
    1988:	0c02040f 	cfstrseq	mvf0, [r2], {15}
    198c:	04100000 	ldreq	r0, [r0], #-0
    1990:	00000d28 	andeq	r0, r0, r8, lsr #26
    1994:	13360411 	teqne	r6, #285212672	; 0x11000000
    1998:	04120000 	ldreq	r0, [r2], #-0
    199c:	00000dc6 	andeq	r0, r0, r6, asr #27
    19a0:	0a0d0413 	beq	3429f4 <_Min_Stack_Size+0x3425f4>
    19a4:	04140000 	ldreq	r0, [r4], #-0
    19a8:	00000a64 	andeq	r0, r0, r4, ror #20
    19ac:	135c0415 	cmpne	ip, #352321536	; 0x15000000
    19b0:	04160000 	ldreq	r0, [r6], #-0
    19b4:	00000c14 	andeq	r0, r0, r4, lsl ip
    19b8:	10410417 	subne	r0, r1, r7, lsl r4
    19bc:	04180000 	ldreq	r0, [r8], #-0
    19c0:	00000f03 	andeq	r0, r0, r3, lsl #30
    19c4:	107b0419 	rsbsne	r0, fp, r9, lsl r4
    19c8:	041a0000 	ldreq	r0, [sl], #-0
    19cc:	00000e9e 	muleq	r0, lr, lr
    19d0:	128a041b 	addne	r0, sl, #452984832	; 0x1b000000
    19d4:	041c0000 	ldreq	r0, [ip], #-0
    19d8:	00001390 	muleq	r0, r0, r3
    19dc:	0aa7041d 	beq	fe9c2a58 <_estack+0xde982a58>
    19e0:	041e0000 	ldreq	r0, [lr], #-0
    19e4:	00000d74 	andeq	r0, r0, r4, ror sp
    19e8:	10be041f 	adcsne	r0, lr, pc, lsl r4
    19ec:	04200000 	strteq	r0, [r0], #-0
    19f0:	00001271 	andeq	r1, r0, r1, ror r2
    19f4:	0a9a0421 	beq	fe682a80 <_estack+0xde642a80>
    19f8:	04220000 	strteq	r0, [r2], #-0
    19fc:	00000e02 	andeq	r0, r0, r2, lsl #28
    1a00:	0f880423 	svceq	0x00880423
    1a04:	04240000 	strteq	r0, [r4], #-0
    1a08:	000012ac 	andeq	r1, r0, ip, lsr #5
    1a0c:	111c0425 	tstne	ip, r5, lsr #8
    1a10:	04260000 	strteq	r0, [r6], #-0
    1a14:	0000127e 	andeq	r1, r0, lr, ror r2
    1a18:	0de30427 	cfstrdeq	mvd0, [r3, #156]!	; 0x9c
    1a1c:	04280000 	strteq	r0, [r8], #-0
    1a20:	00000a8b 	andeq	r0, r0, fp, lsl #21
    1a24:	0d070429 	cfstrseq	mvf0, [r7, #-164]	; 0xffffff5c
    1a28:	042a0000 	strteq	r0, [sl], #-0
    1a2c:	00000e4f 	andeq	r0, r0, pc, asr #28
    1a30:	0c7f042b 	cfldrdeq	mvd0, [pc], #-172	; 198c <_Min_Stack_Size+0x158c>
    1a34:	042c0000 	strteq	r0, [ip], #-0
    1a38:	00000eb1 			; <UNDEFINED> instruction: 0x00000eb1
    1a3c:	0afb042d 	beq	ffec2af8 <_estack+0xdfe82af8>
    1a40:	042e0000 	strteq	r0, [lr], #-0
    1a44:	00001138 	andeq	r1, r0, r8, lsr r1
    1a48:	0ad1042f 	beq	ff442b0c <_estack+0xdf402b0c>
    1a4c:	04310000 	ldrteq	r0, [r1], #-0
    1a50:	00000f6b 	andeq	r0, r0, fp, ror #30
    1a54:	101a0432 	andsne	r0, sl, r2, lsr r4
    1a58:	04330000 	ldrteq	r0, [r3], #-0
    1a5c:	000010e0 	andeq	r1, r0, r0, ror #1
    1a60:	118c0436 	orrne	r0, ip, r6, lsr r4
    1a64:	04370000 	ldrteq	r0, [r7], #-0
    1a68:	00001249 	andeq	r1, r0, r9, asr #4
    1a6c:	133f0438 	teqne	pc, #56, 8	; 0x38000000
    1a70:	04390000 	ldrteq	r0, [r9], #-0
    1a74:	00000da3 	andeq	r0, r0, r3, lsr #27
    1a78:	0f1c043a 	svceq	0x001c043a
    1a7c:	043b0000 	ldrteq	r0, [fp], #-0
    1a80:	00001024 	andeq	r1, r0, r4, lsr #32
    1a84:	11ea043c 	mvnne	r0, ip, lsr r4
    1a88:	043d0000 	ldrteq	r0, [sp], #-0
    1a8c:	0000114a 	andeq	r1, r0, sl, asr #2
    1a90:	129f043e 	addsne	r0, pc, #1040187392	; 0x3e000000
    1a94:	043f0000 	ldrteq	r0, [pc], #-0	; 1a9c <_Min_Stack_Size+0x169c>
    1a98:	00000a24 	andeq	r0, r0, r4, lsr #20
    1a9c:	0b0d0440 	bleq	342ba4 <_Min_Stack_Size+0x3427a4>
    1aa0:	04410000 	strbeq	r0, [r1], #-0
    1aa4:	0000136a 	andeq	r1, r0, sl, ror #6
    1aa8:	0fbe0442 	svceq	0x00be0442
    1aac:	04430000 	strbeq	r0, [r3], #-0
    1ab0:	00000a52 	andeq	r0, r0, r2, asr sl
    1ab4:	0b9b0444 	bleq	fe6c2bcc <_estack+0xde682bcc>
    1ab8:	04450000 	strbeq	r0, [r5], #-0
    1abc:	00000cce 	andeq	r0, r0, lr, asr #25
    1ac0:	0f4a0446 	svceq	0x004a0446
    1ac4:	04470000 	strbeq	r0, [r7], #-0
    1ac8:	00000d64 	andeq	r0, r0, r4, ror #26
    1acc:	0a320448 	beq	c82bf4 <_Min_Stack_Size+0xc827f4>
    1ad0:	04490000 	strbeq	r0, [r9], #-0
    1ad4:	00000c56 	andeq	r0, r0, r6, asr ip
    1ad8:	12f80450 	rscsne	r0, r8, #80, 8	; 0x50000000
    1adc:	04510000 	ldrbeq	r0, [r1], #-0
    1ae0:	00000a72 	andeq	r0, r0, r2, ror sl
    1ae4:	0bf80454 	bleq	ffe02c3c <_estack+0xdfdc2c3c>
    1ae8:	04550000 	ldrbeq	r0, [r5], #-0
    1aec:	0000115b 	andeq	r1, r0, fp, asr r1
    1af0:	0d71045c 	cfldrdeq	mvd0, [r1, #-368]!	; 0xfffffe90
    1af4:	045f0000 	ldrbeq	r0, [pc], #-0	; 1afc <_Min_Stack_Size+0x16fc>
    1af8:	000010bb 	strheq	r1, [r0], -fp
    1afc:	01050060 	tsteq	r5, r0, rrx
    1b00:	0000be06 	andeq	fp, r0, r6, lsl #28
    1b04:	0a030600 	beq	c330c <_Min_Stack_Size+0xc2f0c>
    1b08:	9c040000 	stcls	0, cr0, [r4], {-0}
    1b0c:	00002903 	andeq	r2, r0, r3, lsl #18
    1b10:	022e0600 	eoreq	r0, lr, #0, 12
    1b14:	2b050000 	blcs	141b1c <_Min_Stack_Size+0x14171c>
    1b18:	00025f18 	andeq	r5, r2, r8, lsl pc
    1b1c:	08010500 	stmdaeq	r1, {r8, sl}
    1b20:	000000bc 	strheq	r0, [r0], -ip
    1b24:	e7050205 	str	r0, [r5, -r5, lsl #4]
    1b28:	05000001 	streq	r0, [r0, #-1]
    1b2c:	01ab0702 			; <UNDEFINED> instruction: 0x01ab0702
    1b30:	45060000 	strmi	r0, [r6, #-0]
    1b34:	0500000e 	streq	r0, [r0, #-14]
    1b38:	0280184d 	addeq	r1, r0, #5046272	; 0x4d0000
    1b3c:	04050000 	streq	r0, [r5], #-0
    1b40:	00000505 	andeq	r0, r0, r5, lsl #10
    1b44:	03530600 	cmpeq	r3, #0, 12
    1b48:	4f050000 	svcmi	0x00050000
    1b4c:	00029319 	andeq	r9, r2, r9, lsl r3
    1b50:	07040500 	streq	r0, [r4, -r0, lsl #10]
    1b54:	0000008c 	andeq	r0, r0, ip, lsl #1
    1b58:	00050805 	andeq	r0, r5, r5, lsl #16
    1b5c:	05000000 	streq	r0, [r0, #-0]
    1b60:	00870708 	addeq	r0, r7, r8, lsl #14
    1b64:	04070000 	streq	r0, [r7], #-0
    1b68:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    1b6c:	07040500 	streq	r0, [r4, -r0, lsl #10]
    1b70:	00000091 	muleq	r0, r1, r0
    1b74:	00023006 	andeq	r3, r2, r6
    1b78:	13180600 	tstne	r8, #0, 12
    1b7c:	00000253 	andeq	r0, r0, r3, asr r2
    1b80:	0002b608 	andeq	fp, r2, r8, lsl #12
    1b84:	0e470600 	cdpeq	6, 4, cr0, cr7, cr0, {0}
    1b88:	2c060000 	stccs	0, cr0, [r6], {-0}
    1b8c:	00027413 	andeq	r7, r2, r3, lsl r4
    1b90:	03550600 	cmpeq	r5, #0, 12
    1b94:	30060000 	andcc	r0, r6, r0
    1b98:	00028714 	andeq	r8, r2, r4, lsl r7
    1b9c:	02d30800 	sbcseq	r0, r3, #0, 16
    1ba0:	df090000 	svcle	0x00090000
    1ba4:	0a000002 	beq	1bb4 <_Min_Stack_Size+0x17b4>
    1ba8:	97020e04 	strls	r0, [r2, -r4, lsl #28]
    1bac:	132b0101 			; <UNDEFINED> instruction: 0x132b0101
    1bb0:	03d30000 	bicseq	r0, r3, #0
    1bb4:	760b0000 	strvc	r0, [fp], -r0
    1bb8:	02000010 	andeq	r0, r0, #16
    1bbc:	e3120198 	tst	r2, #152, 2	; 0x26
    1bc0:	02000003 	andeq	r0, r0, #3
    1bc4:	e40b0023 	str	r0, [fp], #-35	; 0xffffffdd
    1bc8:	02000004 	andeq	r0, r0, #4
    1bcc:	e8120199 	ldmda	r2, {r0, r3, r4, r7, r8}
    1bd0:	02000003 	andeq	r0, r0, #3
    1bd4:	ca0b2023 	bgt	2c9c68 <_Min_Stack_Size+0x2c9868>
    1bd8:	0200000f 	andeq	r0, r0, #15
    1bdc:	e312019a 	tst	r2, #-2147483610	; 0x80000026
    1be0:	03000003 	movweq	r0, #3
    1be4:	0b018023 	bleq	61c78 <_Min_Stack_Size+0x61878>
    1be8:	000012de 	ldrdeq	r1, [r0], -lr
    1bec:	12019b02 	andne	r9, r1, #2048	; 0x800
    1bf0:	000003e8 	andeq	r0, r0, r8, ror #7
    1bf4:	01a02303 	lsleq	r2, r3, #6
    1bf8:	000adb0b 	andeq	sp, sl, fp, lsl #22
    1bfc:	019c0200 	orrseq	r0, ip, r0, lsl #4
    1c00:	0003e312 	andeq	lr, r3, r2, lsl r3
    1c04:	80230300 	eorhi	r0, r3, r0, lsl #6
    1c08:	05030b02 	streq	r0, [r3, #-2818]	; 0xfffff4fe
    1c0c:	9d020000 	stcls	0, cr0, [r2, #-0]
    1c10:	03e81201 	mvneq	r1, #268435456	; 0x10000000
    1c14:	23030000 	movwcs	r0, #12288	; 0x3000
    1c18:	f00b02a0 			; <UNDEFINED> instruction: 0xf00b02a0
    1c1c:	02000009 	andeq	r0, r0, #9
    1c20:	e312019e 	tst	r2, #-2147483609	; 0x80000027
    1c24:	03000003 	movweq	r0, #3
    1c28:	0b038023 	bleq	e1cbc <_Min_Stack_Size+0xe18bc>
    1c2c:	0000058e 	andeq	r0, r0, lr, lsl #11
    1c30:	12019f02 	andne	r9, r1, #2, 30
    1c34:	000003e8 	andeq	r0, r0, r8, ror #7
    1c38:	03a02303 	moveq	r2, #201326592	; 0xc000000
    1c3c:	000f450b 	andeq	r4, pc, fp, lsl #10
    1c40:	01a00200 	lsleq	r0, r0, #4
    1c44:	0003e312 	andeq	lr, r3, r2, lsl r3
    1c48:	80230300 	eorhi	r0, r3, r0, lsl #6
    1c4c:	050d0b04 	streq	r0, [sp, #-2820]	; 0xfffff4fc
    1c50:	a1020000 	mrsge	r0, (UNDEF: 2)
    1c54:	03f81201 	mvnseq	r1, #268435456	; 0x10000000
    1c58:	23030000 	movwcs	r0, #12288	; 0x3000
    1c5c:	490c04a0 	stmdbmi	ip, {r5, r7, sl}
    1c60:	a2020050 	andge	r0, r2, #80	; 0x50
    1c64:	04181201 	ldreq	r1, [r8], #-513	; 0xfffffdff
    1c68:	23030000 	movwcs	r0, #12288	; 0x3000
    1c6c:	170b0680 	strne	r0, [fp, -r0, lsl #13]
    1c70:	02000005 	andeq	r0, r0, #5
    1c74:	1d1201a3 	ldfnes	f0, [r2, #-652]	; 0xfffffd74
    1c78:	03000004 	movweq	r0, #4
    1c7c:	0b07f023 	bleq	1fdd10 <_Min_Stack_Size+0x1fd910>
    1c80:	000012e7 	andeq	r1, r0, r7, ror #5
    1c84:	1201a402 	andne	sl, r1, #33554432	; 0x2000000
    1c88:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1c8c:	1c802303 	stcne	3, cr2, [r0], {3}
    1c90:	02df0d00 	sbcseq	r0, pc, #0, 26
    1c94:	03e30000 	mvneq	r0, #0
    1c98:	af0e0000 	svcge	0x000e0000
    1c9c:	07000002 	streq	r0, [r0, -r2]
    1ca0:	03d30800 	bicseq	r0, r3, #0, 16
    1ca4:	d30d0000 	movwle	r0, #53248	; 0xd000
    1ca8:	f8000002 			; <UNDEFINED> instruction: 0xf8000002
    1cac:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    1cb0:	000002af 	andeq	r0, r0, pc, lsr #5
    1cb4:	d30d0017 	movwle	r0, #53271	; 0xd017
    1cb8:	08000002 	stmdaeq	r0, {r1}
    1cbc:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    1cc0:	000002af 	andeq	r0, r0, pc, lsr #5
    1cc4:	c20d0037 	andgt	r0, sp, #55	; 0x37
    1cc8:	18000002 	stmdane	r0, {r1}
    1ccc:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    1cd0:	000002af 	andeq	r0, r0, pc, lsr #5
    1cd4:	080800ef 	stmdaeq	r8, {r0, r1, r2, r3, r5, r6, r7}
    1cd8:	0d000004 	stceq	0, cr0, [r0, #-16]
    1cdc:	000002d3 	ldrdeq	r0, [r0], -r3
    1ce0:	0000042e 	andeq	r0, r0, lr, lsr #8
    1ce4:	0002af0f 	andeq	sl, r2, pc, lsl #30
    1ce8:	00028300 	andeq	r8, r2, r0, lsl #6
    1cec:	00132c10 	andseq	r2, r3, r0, lsl ip
    1cf0:	01a50200 			; <UNDEFINED> instruction: 0x01a50200
    1cf4:	0002e904 	andeq	lr, r2, r4, lsl #18
    1cf8:	028c1100 	addeq	r1, ip, #0, 2
    1cfc:	cb0101b9 	blgt	423e8 <_Min_Stack_Size+0x41fe8>
    1d00:	9b000011 	blls	1d4c <_Min_Stack_Size+0x194c>
    1d04:	0b000005 	bleq	1d20 <_Min_Stack_Size+0x1920>
    1d08:	00001008 	andeq	r1, r0, r8
    1d0c:	1201ba02 	andne	fp, r1, #8192	; 0x2000
    1d10:	000002e4 	andeq	r0, r0, r4, ror #5
    1d14:	0b002302 	bleq	a924 <_Min_Stack_Size+0xa524>
    1d18:	00000dd3 	ldrdeq	r0, [r0], -r3
    1d1c:	1201bb02 	andne	fp, r1, #2048	; 0x800
    1d20:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1d24:	0b042302 	bleq	10a934 <_Min_Stack_Size+0x10a534>
    1d28:	00000d92 	muleq	r0, r2, sp
    1d2c:	1201bc02 	andne	fp, r1, #512	; 0x200
    1d30:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1d34:	0b082302 	bleq	20a944 <_Min_Stack_Size+0x20a544>
    1d38:	00000dd8 	ldrdeq	r0, [r0], -r8
    1d3c:	1201bd02 	andne	fp, r1, #2, 26	; 0x80
    1d40:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1d44:	0c0c2302 	stceq	3, cr2, [ip], {2}
    1d48:	00524353 	subseq	r4, r2, r3, asr r3
    1d4c:	1201be02 	andne	fp, r1, #2, 28
    1d50:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1d54:	0c102302 	ldceq	3, cr2, [r0], {2}
    1d58:	00524343 	subseq	r4, r2, r3, asr #6
    1d5c:	1201bf02 	andne	fp, r1, #2, 30
    1d60:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1d64:	0c142302 	ldceq	3, cr2, [r4], {2}
    1d68:	00504853 	subseq	r4, r0, r3, asr r8
    1d6c:	1201c002 	andne	ip, r1, #2
    1d70:	000005ab 	andeq	r0, r0, fp, lsr #11
    1d74:	0b182302 	bleq	60a984 <_Min_Stack_Size+0x60a584>
    1d78:	0000103b 	andeq	r1, r0, fp, lsr r0
    1d7c:	1201c102 	andne	ip, r1, #-2147483648	; 0x80000000
    1d80:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1d84:	0b242302 	bleq	90a994 <_Min_Stack_Size+0x90a594>
    1d88:	00000f40 	andeq	r0, r0, r0, asr #30
    1d8c:	1201c202 	andne	ip, r1, #536870912	; 0x20000000
    1d90:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1d94:	0b282302 	bleq	a0a9a4 <_Min_Stack_Size+0xa0a5a4>
    1d98:	00001357 	andeq	r1, r0, r7, asr r3
    1d9c:	1201c302 	andne	ip, r1, #134217728	; 0x8000000
    1da0:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1da4:	0b2c2302 	bleq	b0a9b4 <_Min_Stack_Size+0xb0a5b4>
    1da8:	00000dde 	ldrdeq	r0, [r0], -lr
    1dac:	1201c402 	andne	ip, r1, #33554432	; 0x2000000
    1db0:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1db4:	0b302302 	bleq	c0a9c4 <_Min_Stack_Size+0xc0a5c4>
    1db8:	00000dfc 	strdeq	r0, [r0], -ip
    1dbc:	1201c502 	andne	ip, r1, #8388608	; 0x800000
    1dc0:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1dc4:	0b342302 	bleq	d0a9d4 <_Min_Stack_Size+0xd0a5d4>
    1dc8:	00001036 	andeq	r1, r0, r6, lsr r0
    1dcc:	1201c602 	andne	ip, r1, #2097152	; 0x200000
    1dd0:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1dd4:	0b382302 	bleq	e0a9e4 <_Min_Stack_Size+0xe0a5e4>
    1dd8:	00000ca4 	andeq	r0, r0, r4, lsr #25
    1ddc:	1201c702 	andne	ip, r1, #524288	; 0x80000
    1de0:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1de4:	0c3c2302 	ldceq	3, cr2, [ip], #-8
    1de8:	00524650 	subseq	r4, r2, r0, asr r6
    1dec:	1201c802 	andne	ip, r1, #131072	; 0x20000
    1df0:	000005c5 	andeq	r0, r0, r5, asr #11
    1df4:	0c402302 	mcrreq	3, 0, r2, r0, cr2
    1df8:	00524644 	subseq	r4, r2, r4, asr #12
    1dfc:	1201c902 	andne	ip, r1, #32768	; 0x8000
    1e00:	000002e4 	andeq	r0, r0, r4, ror #5
    1e04:	0c482302 	mcrreq	3, 0, r2, r8, cr2
    1e08:	00524441 	subseq	r4, r2, r1, asr #8
    1e0c:	1201ca02 	andne	ip, r1, #8192	; 0x2000
    1e10:	000002e4 	andeq	r0, r0, r4, ror #5
    1e14:	0b4c2302 	bleq	130aa24 <_Min_Stack_Size+0x130a624>
    1e18:	00000e40 	andeq	r0, r0, r0, asr #28
    1e1c:	1201cb02 	andne	ip, r1, #2048	; 0x800
    1e20:	000005df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1e24:	0b502302 	bleq	140aa34 <_Min_Stack_Size+0x140a634>
    1e28:	00000b08 	andeq	r0, r0, r8, lsl #22
    1e2c:	1201cc02 	andne	ip, r1, #512	; 0x200
    1e30:	000005f9 	strdeq	r0, [r0], -r9
    1e34:	0b602302 	bleq	180aa44 <_Min_Stack_Size+0x180a644>
    1e38:	000004e4 	andeq	r0, r0, r4, ror #9
    1e3c:	1201cd02 	andne	ip, r1, #2, 26	; 0x80
    1e40:	000005fe 	strdeq	r0, [r0], -lr
    1e44:	0b742302 	bleq	1d0aa54 <_Min_Stack_Size+0x1d0a654>
    1e48:	00001351 	andeq	r1, r0, r1, asr r3
    1e4c:	1201ce02 	andne	ip, r1, #2, 28
    1e50:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1e54:	01882303 	orreq	r2, r8, r3, lsl #6
    1e58:	02c20d00 	sbceq	r0, r2, #0, 26
    1e5c:	05ab0000 	streq	r0, [fp, #0]!
    1e60:	af0e0000 	svcge	0x000e0000
    1e64:	0b000002 	bleq	1e74 <_Min_Stack_Size+0x1a74>
    1e68:	059b0800 	ldreq	r0, [fp, #2048]	; 0x800
    1e6c:	e40d0000 	str	r0, [sp], #-0
    1e70:	c0000002 	andgt	r0, r0, r2
    1e74:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    1e78:	000002af 	andeq	r0, r0, pc, lsr #5
    1e7c:	b0090001 	andlt	r0, r9, r1
    1e80:	08000005 	stmdaeq	r0, {r0, r2}
    1e84:	000005c0 	andeq	r0, r0, r0, asr #11
    1e88:	0002e40d 	andeq	lr, r2, sp, lsl #8
    1e8c:	0005da00 	andeq	sp, r5, r0, lsl #20
    1e90:	02af0e00 	adceq	r0, pc, #0, 28
    1e94:	00030000 	andeq	r0, r3, r0
    1e98:	0005ca09 	andeq	ip, r5, r9, lsl #20
    1e9c:	05da0800 	ldrbeq	r0, [sl, #2048]	; 0x800
    1ea0:	e40d0000 	str	r0, [sp], #-0
    1ea4:	f4000002 	vst4.8	{d0-d3}, [r0], r2
    1ea8:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    1eac:	000002af 	andeq	r0, r0, pc, lsr #5
    1eb0:	e4090004 	str	r0, [r9], #-4
    1eb4:	08000005 	stmdaeq	r0, {r0, r2}
    1eb8:	000005f4 	strdeq	r0, [r0], -r4
    1ebc:	0002d30d 	andeq	sp, r2, sp, lsl #6
    1ec0:	00060e00 	andeq	r0, r6, r0, lsl #28
    1ec4:	02af0e00 	adceq	r0, pc, #0, 28
    1ec8:	00040000 	andeq	r0, r4, r0
    1ecc:	0011cc10 	andseq	ip, r1, r0, lsl ip
    1ed0:	01cf0200 	biceq	r0, pc, r0, lsl #4
    1ed4:	00043b03 	andeq	r3, r4, r3, lsl #22
    1ed8:	02101100 	andseq	r1, r0, #0, 2
    1edc:	7c0102f8 	sfmvc	f0, 4, [r1], {248}	; 0xf8
    1ee0:	6a00000a 	bvs	1f10 <_Min_Stack_Size+0x1b10>
    1ee4:	0b000006 	bleq	1f04 <_Min_Stack_Size+0x1b04>
    1ee8:	0000125b 	andeq	r1, r0, fp, asr r2
    1eec:	1202f902 	andne	pc, r2, #32768	; 0x8000
    1ef0:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1ef4:	0b002302 	bleq	ab04 <_Min_Stack_Size+0xa704>
    1ef8:	00000efe 	strdeq	r0, [r0], -lr
    1efc:	1202fa02 	andne	pc, r2, #8192	; 0x2000
    1f00:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1f04:	0c042302 	stceq	3, cr2, [r4], {2}
    1f08:	004c4156 	subeq	r4, ip, r6, asr r1
    1f0c:	1202fb02 	andne	pc, r2, #2048	; 0x800
    1f10:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1f14:	0b082302 	bleq	20ab24 <_Min_Stack_Size+0x20a724>
    1f18:	00000d22 	andeq	r0, r0, r2, lsr #26
    1f1c:	1202fc02 	andne	pc, r2, #512	; 0x200
    1f20:	000002e4 	andeq	r0, r0, r4, ror #5
    1f24:	000c2302 	andeq	r2, ip, r2, lsl #6
    1f28:	000a7e10 	andeq	r7, sl, r0, lsl lr
    1f2c:	02fd0200 	rscseq	r0, sp, #0, 4
    1f30:	00061b03 	andeq	r1, r6, r3, lsl #22
    1f34:	022c1100 	eoreq	r1, ip, #0, 2
    1f38:	f20104c8 	vshl.s8	q0, q4, <illegal reg q8.5>
    1f3c:	3600000d 	strcc	r0, [r0], -sp
    1f40:	0b000007 	bleq	1f64 <_Min_Stack_Size+0x1b64>
    1f44:	000011c6 	andeq	r1, r0, r6, asr #3
    1f48:	1204c902 	andne	ip, r4, #32768	; 0x8000
    1f4c:	000002e4 	andeq	r0, r0, r4, ror #5
    1f50:	0b002302 	bleq	ab60 <_Min_Stack_Size+0xa760>
    1f54:	0000125b 	andeq	r1, r0, fp, asr r2
    1f58:	1204ca02 	andne	ip, r4, #8192	; 0x2000
    1f5c:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1f60:	0c042302 	stceq	3, cr2, [r4], {2}
    1f64:	00524e52 	subseq	r4, r2, r2, asr lr
    1f68:	1204cb02 	andne	ip, r4, #2048	; 0x800
    1f6c:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1f70:	0b082302 	bleq	20ab80 <_Min_Stack_Size+0x20a780>
    1f74:	00001106 	andeq	r1, r0, r6, lsl #2
    1f78:	1204cc02 	andne	ip, r4, #512	; 0x200
    1f7c:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1f80:	0b0c2302 	bleq	30ab90 <_Min_Stack_Size+0x30a790>
    1f84:	00001187 	andeq	r1, r0, r7, lsl #3
    1f88:	1204cd02 	andne	ip, r4, #2, 26	; 0x80
    1f8c:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1f90:	0b102302 	bleq	40aba0 <_Min_Stack_Size+0x40a7a0>
    1f94:	00000c21 	andeq	r0, r0, r1, lsr #24
    1f98:	1204ce02 	andne	ip, r4, #2, 28
    1f9c:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1fa0:	0b142302 	bleq	50abb0 <_Min_Stack_Size+0x50a7b0>
    1fa4:	00000b93 	muleq	r0, r3, fp
    1fa8:	1204cf02 	andne	ip, r4, #2, 30
    1fac:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1fb0:	0b182302 	bleq	60abc0 <_Min_Stack_Size+0x60a7c0>
    1fb4:	00000c29 	andeq	r0, r0, r9, lsr #24
    1fb8:	1204d002 	andne	sp, r4, #2
    1fbc:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1fc0:	0b1c2302 	bleq	70abd0 <_Min_Stack_Size+0x70a7d0>
    1fc4:	00000c5f 	andeq	r0, r0, pc, asr ip
    1fc8:	1204d102 	andne	sp, r4, #-2147483648	; 0x80000000
    1fcc:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1fd0:	0b202302 	bleq	80abe0 <_Min_Stack_Size+0x80a7e0>
    1fd4:	00000c31 	andeq	r0, r0, r1, lsr ip
    1fd8:	1204d202 	andne	sp, r4, #536870912	; 0x20000000
    1fdc:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1fe0:	0b242302 	bleq	90abf0 <_Min_Stack_Size+0x90a7f0>
    1fe4:	00000ab1 			; <UNDEFINED> instruction: 0x00000ab1
    1fe8:	1204d302 	andne	sp, r4, #134217728	; 0x8000000
    1fec:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1ff0:	00282302 	eoreq	r2, r8, r2, lsl #6
    1ff4:	000df310 	andeq	pc, sp, r0, lsl r3	; <UNPREDICTABLE>
    1ff8:	04d40200 	ldrbeq	r0, [r4], #512	; 0x200
    1ffc:	00067703 	andeq	r7, r6, r3, lsl #14
    2000:	01070200 	mrseq	r0, (UNDEF: 39)
    2004:	0000025f 	andeq	r0, r0, pc, asr r2
    2008:	f501ba07 			; <UNDEFINED> instruction: 0xf501ba07
    200c:	62000003 	andvs	r0, r0, #3
    2010:	04000007 	streq	r0, [r0], #-7
    2014:	000023a3 	andeq	r2, r0, r3, lsr #7
    2018:	45531200 	ldrbmi	r1, [r3, #-512]	; 0xfffffe00
    201c:	00010054 	andeq	r0, r1, r4, asr r0
    2020:	0003f706 	andeq	pc, r3, r6, lsl #14
    2024:	03bd0700 			; <UNDEFINED> instruction: 0x03bd0700
    2028:	00000743 	andeq	r0, r0, r3, asr #14
    202c:	be040805 	cdplt	8, 0, cr0, cr4, cr5, {0}
    2030:	13000001 	movwne	r0, #1
    2034:	0000001d 	andeq	r0, r0, sp, lsl r0
    2038:	31081014 	tstcc	r8, r4, lsl r0
    203c:	000e2701 	andeq	r2, lr, r1, lsl #14
    2040:	00082d00 	andeq	r2, r8, r0, lsl #26
    2044:	12421500 	subne	r1, r2, #0, 10
    2048:	32080000 	andcc	r0, r8, #0
    204c:	0002b61a 	andeq	fp, r2, sl, lsl r6
    2050:	00230200 	eoreq	r0, r3, r0, lsl #4
    2054:	000ee915 	andeq	lr, lr, r5, lsl r9
    2058:	1a340800 	bne	d04060 <_Min_Stack_Size+0xd03c60>
    205c:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    2060:	15012302 	strne	r2, [r1, #-770]	; 0xfffffcfe
    2064:	00002529 	andeq	r2, r0, r9, lsr #10
    2068:	d31a3608 	tstle	sl, #8, 12	; 0x800000
    206c:	02000002 	andeq	r0, r0, #2
    2070:	a1150423 	tstge	r5, r3, lsr #8
    2074:	0800001d 	stmdaeq	r0, {r0, r2, r3, r4}
    2078:	02b61a37 	adcseq	r1, r6, #225280	; 0x37000
    207c:	23020000 	movwcs	r0, #8192	; 0x2000
    2080:	10651508 	rsbne	r1, r5, r8, lsl #10
    2084:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    2088:	0002b61a 	andeq	fp, r2, sl, lsl r6
    208c:	09230200 	stmdbeq	r3!, {r9}
    2090:	0009f515 	andeq	pc, r9, r5, lsl r5	; <UNPREDICTABLE>
    2094:	1a3b0800 	bne	ec409c <_Min_Stack_Size+0xec3c9c>
    2098:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    209c:	150a2302 	strne	r2, [sl, #-770]	; 0xfffffcfe
    20a0:	00000db5 			; <UNDEFINED> instruction: 0x00000db5
    20a4:	b61a3d08 	ldrlt	r3, [sl], -r8, lsl #26
    20a8:	02000002 	andeq	r0, r0, #2
    20ac:	0e150b23 	vnmlseq.f64	d0, d5, d19
    20b0:	08000010 	stmdaeq	r0, {r4}
    20b4:	02b61a3f 	adcseq	r1, r6, #258048	; 0x3f000
    20b8:	23020000 	movwcs	r0, #8192	; 0x2000
    20bc:	12ec150c 	rscne	r1, ip, #12, 10	; 0x3000000
    20c0:	41080000 	mrsmi	r0, (UNDEF: 8)
    20c4:	0002b61a 	andeq	fp, r2, sl, lsl r6
    20c8:	0d230200 	sfmeq	f0, 4, [r3, #-0]
    20cc:	000c6715 	andeq	r6, ip, r5, lsl r7
    20d0:	1a430800 	bne	10c40d8 <_Min_Stack_Size+0x10c3cd8>
    20d4:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    20d8:	150e2302 	strne	r2, [lr, #-770]	; 0xfffffcfe
    20dc:	00000ae0 	andeq	r0, r0, r0, ror #21
    20e0:	b61a4508 	ldrlt	r4, [sl], -r8, lsl #10
    20e4:	02000002 	andeq	r0, r0, #2
    20e8:	06000f23 	streq	r0, [r0], -r3, lsr #30
    20ec:	00000e29 	andeq	r0, r0, r9, lsr #28
    20f0:	7a024708 	bvc	93d18 <_Min_Stack_Size+0x93918>
    20f4:	16000007 	strne	r0, [r0], -r7
    20f8:	000ff301 	andeq	pc, pc, r1, lsl #6
    20fc:	01e10100 	mvneq	r0, r0, lsl #2
    2100:	0000000d 	andeq	r0, r0, sp
    2104:	00000000 	andeq	r0, r0, r0
    2108:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    210c:	1b011701 	blne	47d18 <_Min_Stack_Size+0x47918>
    2110:	0100000b 	tsteq	r0, fp
    2114:	000601d8 	ldrdeq	r0, [r6], -r8
    2118:	00000000 	andeq	r0, r0, r0
    211c:	c2000000 	andgt	r0, r0, #0
    2120:	01000010 	tsteq	r0, r0, lsl r0
    2124:	00000874 	andeq	r0, r0, r4, ror r8
    2128:	00000018 	andeq	r0, r0, r8, lsl r0
    212c:	00083900 	andeq	r3, r8, r0, lsl #18
    2130:	01190000 	tsteq	r9, r0
    2134:	00001196 	muleq	r0, r6, r1
    2138:	0601c601 	streq	ip, [r1], -r1, lsl #12
	...
    2144:	01007d02 	tsteq	r0, r2, lsl #26
    2148:	0000089e 	muleq	r0, lr, r8
    214c:	0007801a 	andeq	r8, r7, sl, lsl r0
    2150:	01c60100 	biceq	r0, r6, r0, lsl #2
    2154:	0002d32b 	andeq	sp, r2, fp, lsr #6
    2158:	00500100 	subseq	r0, r0, r0, lsl #2
    215c:	0e7e011b 	mrceq	1, 3, r0, cr14, cr11, {0}
    2160:	b5010000 	strlt	r0, [r1, #-0]
    2164:	02d30a01 	sbcseq	r0, r3, #4096	; 0x1000
	...
    2170:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2174:	08f60100 	ldmeq	r6!, {r8}^
    2178:	111c0000 	tstne	ip, r0
    217c:	0100000f 	tsteq	r0, pc
    2180:	472701b5 			; <UNDEFINED> instruction: 0x472701b5
    2184:	e6000002 	str	r0, [r0], -r2
    2188:	e2000010 	and	r0, r0, #16
    218c:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    2190:	00001059 	andeq	r1, r0, r9, asr r0
    2194:	00000000 	andeq	r0, r0, r0
    2198:	00000003 	andeq	r0, r0, r3
    219c:	00000000 	andeq	r0, r0, r0
    21a0:	01bb0100 			; <UNDEFINED> instruction: 0x01bb0100
    21a4:	106b1e18 	rsbne	r1, fp, r8, lsl lr
    21a8:	110b0000 	mrsne	r0, (UNDEF: 11)
    21ac:	11070000 	mrsne	r0, (UNDEF: 7)
    21b0:	00000000 	andeq	r0, r0, r0
    21b4:	0b320119 	bleq	c82620 <_Min_Stack_Size+0xc82220>
    21b8:	a4010000 	strge	r0, [r1], #-0
    21bc:	00000601 	andeq	r0, r0, r1, lsl #12
    21c0:	00000000 	andeq	r0, r0, r0
    21c4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    21c8:	094a0100 	stmdbeq	sl, {r8}^
    21cc:	111c0000 	tstne	ip, r0
    21d0:	0100000f 	tsteq	r0, pc
    21d4:	472901a4 	strmi	r0, [r9, -r4, lsr #3]!
    21d8:	30000002 	andcc	r0, r0, r2
    21dc:	2c000011 	stccs	0, cr0, [r0], {17}
    21e0:	1d000011 	stcne	0, cr0, [r0, #-68]	; 0xffffffbc
    21e4:	00001079 	andeq	r1, r0, r9, ror r0
    21e8:	00000000 	andeq	r0, r0, r0
    21ec:	00000003 	andeq	r0, r0, r3
    21f0:	00000000 	andeq	r0, r0, r0
    21f4:	01aa0100 			; <UNDEFINED> instruction: 0x01aa0100
    21f8:	10871e17 	addne	r1, r7, r7, lsl lr
    21fc:	11550000 	cmpne	r5, r0
    2200:	11510000 	cmpne	r1, r0
    2204:	00000000 	andeq	r0, r0, r0
    2208:	0cb7011b 	ldfeqs	f0, [r7], #108	; 0x6c
    220c:	94010000 	strls	r0, [r1], #-0
    2210:	02d30a01 	sbcseq	r0, r3, #4096	; 0x1000
	...
    221c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2220:	09a20100 	stmibeq	r2!, {r8}
    2224:	111c0000 	tstne	ip, r0
    2228:	0100000f 	tsteq	r0, pc
    222c:	472b0194 			; <UNDEFINED> instruction: 0x472b0194
    2230:	7a000002 	bvc	2240 <_Min_Stack_Size+0x1e40>
    2234:	76000011 			; <UNDEFINED> instruction: 0x76000011
    2238:	1d000011 	stcne	0, cr0, [r0, #-68]	; 0xffffffbc
    223c:	000010b1 	strheq	r1, [r0], -r1	; <UNPREDICTABLE>
    2240:	00000000 	andeq	r0, r0, r0
    2244:	00000003 	andeq	r0, r0, r3
    2248:	00000000 	andeq	r0, r0, r0
    224c:	019a0100 	orrseq	r0, sl, r0, lsl #2
    2250:	10c31e1c 	sbcne	r1, r3, ip, lsl lr
    2254:	119f0000 	orrsne	r0, pc, r0
    2258:	119b0000 	orrsne	r0, fp, r0
    225c:	00000000 	andeq	r0, r0, r0
    2260:	13140119 	tstne	r4, #1073741830	; 0x40000006
    2264:	82010000 	andhi	r0, r1, #0
    2268:	00000601 	andeq	r0, r0, r1, lsl #12
    226c:	00000000 	andeq	r0, r0, r0
    2270:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2274:	09f60100 	ldmibeq	r6!, {r8}^
    2278:	111c0000 	tstne	ip, r0
    227c:	0100000f 	tsteq	r0, pc
    2280:	47270182 	strmi	r0, [r7, -r2, lsl #3]!
    2284:	c4000002 	strgt	r0, [r0], #-2
    2288:	c0000011 	andgt	r0, r0, r1, lsl r0
    228c:	1d000011 	stcne	0, cr0, [r0, #-68]	; 0xffffffbc
    2290:	00001095 	muleq	r0, r5, r0
    2294:	00000000 	andeq	r0, r0, r0
    2298:	00000003 	andeq	r0, r0, r3
    229c:	00000000 	andeq	r0, r0, r0
    22a0:	01880100 	orreq	r0, r8, r0, lsl #2
    22a4:	10a31e15 	adcne	r1, r3, r5, lsl lr
    22a8:	11e90000 	mvnne	r0, r0
    22ac:	11e50000 	mvnne	r0, r0
    22b0:	00000000 	andeq	r0, r0, r0
    22b4:	0bb90117 	bleq	fee42718 <_estack+0xdee02718>
    22b8:	73010000 	movwvc	r0, #4096	; 0x1000
    22bc:	00000601 	andeq	r0, r0, r1, lsl #12
    22c0:	00000000 	andeq	r0, r0, r0
    22c4:	120a0000 	andne	r0, sl, #0
    22c8:	f2010000 	vhadd.s8	d0, d1, d0
    22cc:	1c00000a 	stcne	0, cr0, [r0], {10}
    22d0:	00000f11 	andeq	r0, r0, r1, lsl pc
    22d4:	25017301 	strcs	r7, [r1, #-769]	; 0xfffffcff
    22d8:	00000247 	andeq	r0, r0, r7, asr #4
    22dc:	0000122e 	andeq	r1, r0, lr, lsr #4
    22e0:	0000122a 	andeq	r1, r0, sl, lsr #4
    22e4:	000aed1c 	andeq	lr, sl, ip, lsl sp
    22e8:	01730100 	cmneq	r3, r0, lsl #2
    22ec:	0002d334 	andeq	sp, r2, r4, lsr r3
    22f0:	00125700 	andseq	r5, r2, r0, lsl #14
    22f4:	00124f00 	andseq	r4, r2, r0, lsl #30
    22f8:	0d811a00 	vstreq	s2, [r1]
    22fc:	73010000 	movwvc	r0, #4096	; 0x1000
    2300:	0af24d01 	beq	ffc9570c <_estack+0xdfc5570c>
    2304:	52010000 	andpl	r0, r1, #0
    2308:	000edc1a 	andeq	sp, lr, sl, lsl ip
    230c:	01730100 	cmneq	r3, r0, lsl #2
    2310:	000af269 	andeq	pc, sl, r9, ror #4
    2314:	1f530100 	svcne	0x00530100
    2318:	00001010 	andeq	r1, r0, r0, lsl r0
    231c:	00000000 	andeq	r0, r0, r0
    2320:	00017802 	andeq	r7, r1, r2, lsl #16
    2324:	01780100 	cmneq	r8, r0, lsl #2
    2328:	000a7d16 	andeq	r7, sl, r6, lsl sp
    232c:	10221e00 	eorne	r1, r2, r0, lsl #28
    2330:	12970000 	addsne	r0, r7, #0
    2334:	12910000 	addsne	r0, r1, #0
    2338:	20000000 	andcs	r0, r0, r0
    233c:	00000f45 	andeq	r0, r0, r5, asr #30
    2340:	00000000 	andeq	r0, r0, r0
    2344:	00019001 	andeq	r9, r1, r1
    2348:	01780100 	cmneq	r8, r0, lsl #2
    234c:	0f7a1e16 	svceq	0x007a1e16
    2350:	12ca0000 	sbcne	r0, sl, #0
    2354:	12c60000 	sbcne	r0, r6, #0
    2358:	6d1e0000 	ldcvs	0, cr0, [lr, #-0]
    235c:	ec00000f 	stc	0, cr0, [r0], {15}
    2360:	e8000012 	stmda	r0, {r1, r4}
    2364:	1e000012 	mcrne	0, 0, r0, cr0, cr2, {0}
    2368:	00000f60 	andeq	r0, r0, r0, ror #30
    236c:	00001310 	andeq	r1, r0, r0, lsl r3
    2370:	0000130a 	andeq	r1, r0, sl, lsl #6
    2374:	000f531e 	andeq	r5, pc, lr, lsl r3	; <UNPREDICTABLE>
    2378:	00134300 	andseq	r4, r3, r0, lsl #6
    237c:	00133f00 	andseq	r3, r3, r0, lsl #30
    2380:	01902100 	orrseq	r2, r0, r0, lsl #2
    2384:	87220000 	strhi	r0, [r2, -r0]!
    2388:	6b00000f 	blvs	23cc <_Min_Stack_Size+0x1fcc>
    238c:	61000013 	tstvs	r0, r3, lsl r0
    2390:	22000013 	andcs	r0, r0, #19
    2394:	00000f94 	muleq	r0, r4, pc	; <UNPREDICTABLE>
    2398:	000013b9 			; <UNDEFINED> instruction: 0x000013b9
    239c:	000013b3 			; <UNDEFINED> instruction: 0x000013b3
    23a0:	000fa122 	andeq	sl, pc, r2, lsr #2
    23a4:	00140000 	andseq	r0, r4, r0
    23a8:	0013fe00 	andseq	pc, r3, r0, lsl #28
    23ac:	00000000 	andeq	r0, r0, r0
    23b0:	02d30423 	sbcseq	r0, r3, #587202560	; 0x23000000
    23b4:	f2090000 	vhadd.s8	d0, d9, d0
    23b8:	1b00000a 	blne	23e8 <_Min_Stack_Size+0x1fe8>
    23bc:	00120b01 	andseq	r0, r2, r1, lsl #22
    23c0:	01580100 	cmpeq	r8, r0, lsl #2
    23c4:	0002d30a 	andeq	sp, r2, sl, lsl #6
	...
    23d0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    23d4:	000b3201 	andeq	r3, fp, r1, lsl #4
    23d8:	11092400 	tstne	r9, r0, lsl #8
    23dc:	00000000 	andeq	r0, r0, r0
    23e0:	00020000 	andeq	r0, r2, r0
    23e4:	00000000 	andeq	r0, r0, r0
    23e8:	01000000 	mrseq	r0, (UNDEF: 0)
    23ec:	0022015b 	eoreq	r0, r2, fp, asr r1
    23f0:	11d50119 	bicsne	r0, r5, r9, lsl r1
    23f4:	2c010000 	stccs	0, cr0, [r1], {-0}
    23f8:	00000601 	andeq	r0, r0, r1, lsl #12
    23fc:	00000000 	andeq	r0, r0, r0
    2400:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2404:	0b5c0100 	bleq	170280c <_Min_Stack_Size+0x170240c>
    2408:	391a0000 	ldmdbcc	sl, {}	; <UNPREDICTABLE>
    240c:	0100000c 	tsteq	r0, ip
    2410:	5c33012c 	ldfpls	f0, [r3], #-176	; 0xffffff50
    2414:	0100000b 	tsteq	r0, fp
    2418:	04230050 	strteq	r0, [r3], #-80	; 0xffffffb0
    241c:	0000082d 	andeq	r0, r0, sp, lsr #16
    2420:	123a0119 	eorsne	r0, sl, #1073741830	; 0x40000006
    2424:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2428:	00000601 	andeq	r0, r0, r1, lsl #12
    242c:	00000000 	andeq	r0, r0, r0
    2430:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2434:	0bbe0100 	bleq	fef8283c <_estack+0xdef4283c>
    2438:	ad1c0000 	ldcge	0, cr0, [ip, #-0]
    243c:	0100000b 	tsteq	r0, fp
    2440:	d31e0119 	tstle	lr, #1073741830	; 0x40000006
    2444:	17000002 	strne	r0, [r0, -r2]
    2448:	13000014 	movwne	r0, #20
    244c:	24000014 	strcs	r0, [r0], #-20	; 0xffffffec
    2450:	00001157 	andeq	r1, r0, r7, asr r1
    2454:	00000000 	andeq	r0, r0, r0
    2458:	00000001 	andeq	r0, r0, r1
    245c:	00000000 	andeq	r0, r0, r0
    2460:	01220100 			; <UNDEFINED> instruction: 0x01220100
    2464:	11612408 	cmnne	r1, r8, lsl #8
    2468:	00000000 	andeq	r0, r0, r0
    246c:	00010000 	andeq	r0, r1, r0
    2470:	00000000 	andeq	r0, r0, r0
    2474:	01000000 	mrseq	r0, (UNDEF: 0)
    2478:	00080123 	andeq	r0, r8, r3, lsr #2
    247c:	0b830119 	bleq	fe0c28e8 <_estack+0xde0828e8>
    2480:	02010000 	andeq	r0, r1, #0
    2484:	00000601 	andeq	r0, r0, r1, lsl #12
    2488:	00000000 	andeq	r0, r0, r0
    248c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2490:	0bef0100 	bleq	ffbc2898 <_estack+0xdfb82898>
    2494:	4d240000 	stcmi	0, cr0, [r4, #-0]
    2498:	00000011 	andeq	r0, r0, r1, lsl r0
    249c:	02000000 	andeq	r0, r0, #0
	...
    24a8:	08010501 	stmdaeq	r1, {r0, r8, sl}
    24ac:	3f012500 	svccc	0x00012500
    24b0:	0100000a 	tsteq	r0, sl
    24b4:	02d30ae5 	sbcseq	r0, r3, #937984	; 0xe5000
    24b8:	08d00000 	ldmeq	r0, {}^	; <UNPREDICTABLE>
    24bc:	08f80800 	ldmeq	r8!, {fp}^
    24c0:	7d020800 	stcvc	8, cr0, [r2, #-0]
    24c4:	0c750100 	ldfeqe	f0, [r5], #-0
    24c8:	7d260000 	stcvc	0, cr0, [r6, #-0]
    24cc:	01000011 	tsteq	r0, r1, lsl r0
    24d0:	02d326e5 	sbcseq	r2, r3, #240123904	; 0xe500000
    24d4:	143e0000 	ldrtne	r0, [lr], #-0
    24d8:	14380000 	ldrtne	r0, [r8], #-0
    24dc:	1a270000 	bne	9c24e4 <_Min_Stack_Size+0x9c20e4>
    24e0:	d000000f 	andle	r0, r0, pc
    24e4:	02080008 	andeq	r0, r8, #8
    24e8:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
    24ec:	080008f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, fp}
    24f0:	1e19e701 	cdpne	7, 1, cr14, cr9, cr1, {0}
    24f4:	00000f2c 	andeq	r0, r0, ip, lsr #30
    24f8:	00001472 	andeq	r1, r0, r2, ror r4
    24fc:	0000146c 	andeq	r1, r0, ip, ror #8
    2500:	0010301d 	andseq	r3, r0, sp, lsl r0
    2504:	0008de00 	andeq	sp, r8, r0, lsl #28
    2508:	08de0108 	ldmeq	lr, {r3, r8}^
    250c:	08e60800 	stmiaeq	r6!, {fp}^
    2510:	ee020800 	cdp	8, 0, cr0, cr2, cr0, {0}
    2514:	4b1e1407 	blmi	787538 <_Min_Stack_Size+0x787138>
    2518:	a2000010 	andge	r0, r0, #16
    251c:	a0000014 	andge	r0, r0, r4, lsl r0
    2520:	1e000014 	mcrne	0, 0, r0, cr0, cr4, {0}
    2524:	0000103e 	andeq	r1, r0, lr, lsr r0
    2528:	000014b8 			; <UNDEFINED> instruction: 0x000014b8
    252c:	000014b6 			; <UNDEFINED> instruction: 0x000014b6
    2530:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    2534:	000ce001 	andeq	lr, ip, r1
    2538:	06d80100 	ldrbeq	r0, [r8], r0, lsl #2
	...
    2544:	01007d02 	tsteq	r0, r2, lsl #26
    2548:	00000cd1 	ldrdeq	r0, [r0], -r1
    254c:	000f3a27 	andeq	r3, pc, r7, lsr #20
    2550:	00000000 	andeq	r0, r0, r0
    2554:	00000200 	andeq	r0, r0, r0, lsl #4
    2558:	00000000 	andeq	r0, r0, r0
    255c:	db010000 	blle	42564 <_Min_Stack_Size+0x42164>
    2560:	11572413 	cmpne	r7, r3, lsl r4
    2564:	00000000 	andeq	r0, r0, r0
    2568:	00040000 	andeq	r0, r4, r0
    256c:	00000000 	andeq	r0, r0, r0
    2570:	02000000 	andeq	r0, r0, #0
    2574:	24080795 	strcs	r0, [r8], #-1941	; 0xfffff86b
    2578:	00001157 	andeq	r1, r0, r7, asr r1
    257c:	00000000 	andeq	r0, r0, r0
    2580:	00000001 	andeq	r0, r0, r1
    2584:	00000000 	andeq	r0, r0, r0
    2588:	079a0200 	ldreq	r0, [sl, r0, lsl #4]
    258c:	28000008 	stmdacs	r0, {r3}
    2590:	000d5001 	andeq	r5, sp, r1
    2594:	06cb0100 	strbeq	r0, [fp], r0, lsl #2
	...
    25a0:	01007d02 	tsteq	r0, r2, lsl #26
    25a4:	00000d4e 	andeq	r0, r0, lr, asr #26
    25a8:	000f1126 	andeq	r1, pc, r6, lsr #2
    25ac:	24cb0100 	strbcs	r0, [fp], #256	; 0x100
    25b0:	00000247 	andeq	r0, r0, r7, asr #4
    25b4:	000014d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    25b8:	000014cd 	andeq	r1, r0, sp, asr #9
    25bc:	0010d127 	andseq	sp, r0, r7, lsr #2
    25c0:	00000000 	andeq	r0, r0, r0
    25c4:	00000300 	andeq	r0, r0, r0, lsl #6
    25c8:	00000000 	andeq	r0, r0, r0
    25cc:	d1010000 	mrsle	r0, (UNDEF: 1)
    25d0:	10df1e12 	sbcsne	r1, pc, r2, lsl lr	; <UNPREDICTABLE>
    25d4:	14f60000 	ldrbtne	r0, [r6], #0
    25d8:	14f20000 	ldrbtne	r0, [r2], #0
    25dc:	57240000 	strpl	r0, [r4, -r0]!
    25e0:	00000011 	andeq	r0, r0, r1, lsl r0
    25e4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    25f0:	0a06c102 	beq	1b2a00 <_Min_Stack_Size+0x1b2600>
    25f4:	00116124 	andseq	r6, r1, r4, lsr #2
    25f8:	00000000 	andeq	r0, r0, r0
    25fc:	00000100 	andeq	r0, r0, r0, lsl #2
    2600:	00000000 	andeq	r0, r0, r0
    2604:	c2020000 	andgt	r0, r2, #0
    2608:	00000a06 	andeq	r0, r0, r6, lsl #20
    260c:	0f750128 	svceq	0x00750128
    2610:	bb010000 	bllt	42618 <_Min_Stack_Size+0x42218>
    2614:	00000006 	andeq	r0, r0, r6
    2618:	00000000 	andeq	r0, r0, r0
    261c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    2620:	000d9f01 	andeq	r9, sp, r1, lsl #30
    2624:	0f112600 	svceq	0x00112600
    2628:	bb010000 	bllt	42630 <_Min_Stack_Size+0x42230>
    262c:	00024723 	andeq	r4, r2, r3, lsr #14
    2630:	00151b00 	andseq	r1, r5, r0, lsl #22
    2634:	00151700 	andseq	r1, r5, r0, lsl #14
    2638:	10ed2700 	rscne	r2, sp, r0, lsl #14
    263c:	00000000 	andeq	r0, r0, r0
    2640:	00030000 	andeq	r0, r3, r0
    2644:	00000000 	andeq	r0, r0, r0
    2648:	01000000 	mrseq	r0, (UNDEF: 0)
    264c:	fb1e11c1 	blx	786d5a <_Min_Stack_Size+0x78695a>
    2650:	40000010 	andmi	r0, r0, r0, lsl r0
    2654:	3c000015 	stccc	0, cr0, [r0], {21}
    2658:	00000015 	andeq	r0, r0, r5, lsl r0
    265c:	68012900 	stmdavs	r1, {r8, fp, sp}
    2660:	01000011 	tsteq	r0, r1, lsl r0
    2664:	086006a5 	stmdaeq	r0!, {r0, r2, r5, r7, r9, sl}^
    2668:	08d00800 	ldmeq	r0, {fp}^
    266c:	15610800 	strbne	r0, [r1, #-2048]!	; 0xfffff800
    2670:	af010000 	svcge	0x00010000
    2674:	2600000e 	strcs	r0, [r0], -lr
    2678:	00000f11 	andeq	r0, r0, r1, lsl pc
    267c:	4725a501 	strmi	sl, [r5, -r1, lsl #10]!
    2680:	89000002 	stmdbhi	r0, {r1}
    2684:	81000015 	tsthi	r0, r5, lsl r0
    2688:	26000015 			; <UNDEFINED> instruction: 0x26000015
    268c:	00000d82 	andeq	r0, r0, r2, lsl #27
    2690:	d334a501 	teqle	r4, #4194304	; 0x400000
    2694:	cb000002 	blgt	26a4 <_Min_Stack_Size+0x22a4>
    2698:	c3000015 	movwgt	r0, #21
    269c:	2a000015 	bcs	26f8 <_Min_Stack_Size+0x22f8>
    26a0:	00000edd 	ldrdeq	r0, [r0], -sp
    26a4:	d34ea501 	movtle	sl, #58625	; 0xe501
    26a8:	01000002 	tsteq	r0, r2
    26ac:	0ef02b52 	vmoveq.u8	r2, d0[6]
    26b0:	a7010000 	strge	r0, [r1, -r0]
    26b4:	0002d30c 	andeq	sp, r2, ip, lsl #6
    26b8:	00160f00 	andseq	r0, r6, r0, lsl #30
    26bc:	00160500 	andseq	r0, r6, r0, lsl #10
    26c0:	11092c00 	tstne	r9, r0, lsl #24
    26c4:	08620000 	stmdaeq	r2!, {}^	; <UNPREDICTABLE>
    26c8:	62040800 	andvs	r0, r4, #0, 16
    26cc:	6a080008 	bvs	2026f4 <_Min_Stack_Size+0x2022f4>
    26d0:	01080008 	tsteq	r8, r8
    26d4:	af2d2bad 	svcge	0x002d2bad
    26d8:	6a00000f 	bvs	271c <_Min_Stack_Size+0x231c>
    26dc:	02080008 	andeq	r0, r8, #8
    26e0:	00000148 	andeq	r0, r0, r8, asr #2
    26e4:	8213af01 	andshi	sl, r3, #1, 30
    26e8:	1e00000e 	cdpne	0, 0, cr0, cr0, cr14, {0}
    26ec:	00000fdb 	ldrdeq	r0, [r0], -fp
    26f0:	00001657 	andeq	r1, r0, r7, asr r6
    26f4:	00001653 	andeq	r1, r0, r3, asr r6
    26f8:	000fce1e 	andeq	ip, pc, lr, lsl lr	; <UNPREDICTABLE>
    26fc:	00167b00 	andseq	r7, r6, r0, lsl #22
    2700:	00167500 	andseq	r7, r6, r0, lsl #10
    2704:	0fc11e00 	svceq	0x00c11e00
    2708:	16af0000 	strtne	r0, [pc], r0
    270c:	16a70000 	strtne	r0, [r7], r0
    2710:	48210000 	stmdami	r1!, {}	; <UNPREDICTABLE>
    2714:	22000001 	andcs	r0, r0, #1
    2718:	00000fe8 	andeq	r0, r0, r8, ror #31
    271c:	000016ef 	andeq	r1, r0, pc, ror #13
    2720:	000016e7 	andeq	r1, r0, r7, ror #13
    2724:	000ff522 	andeq	pc, pc, r2, lsr #10
    2728:	00172b00 	andseq	r2, r7, r0, lsl #22
    272c:	00172700 	andseq	r2, r7, r0, lsl #14
    2730:	10022200 	andne	r2, r2, r0, lsl #4
    2734:	174b0000 	strbne	r0, [fp, -r0]
    2738:	17490000 	strbne	r0, [r9, -r0]
    273c:	00000000 	andeq	r0, r0, r0
    2740:	0010302e 	andseq	r3, r0, lr, lsr #32
    2744:	00089c00 	andeq	r9, r8, r0, lsl #24
    2748:	01600108 	cmneq	r0, r8, lsl #2
    274c:	af010000 	svcge	0x00010000
    2750:	104b1e13 	subne	r1, fp, r3, lsl lr
    2754:	17620000 	strbne	r0, [r2, -r0]!
    2758:	175e0000 	ldrbne	r0, [lr, -r0]
    275c:	3e1e0000 	cdpcc	0, 1, cr0, cr14, cr0, {0}
    2760:	88000010 	stmdahi	r0, {r4}
    2764:	80000017 	andhi	r0, r0, r7, lsl r0
    2768:	00000017 	andeq	r0, r0, r7, lsl r0
    276c:	93012800 	movwls	r2, #6144	; 0x1800
    2770:	01000010 	tsteq	r0, r0, lsl r0
    2774:	0000068f 	andeq	r0, r0, pc, lsl #13
    2778:	00000000 	andeq	r0, r0, r0
    277c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2780:	0f1a0100 	svceq	0x001a0100
    2784:	ed260000 	stc	0, cr0, [r6, #-0]
    2788:	0100000a 	tsteq	r0, sl
    278c:	02d32c8f 	sbcseq	r2, r3, #36608	; 0x8f00
    2790:	17c60000 	strbne	r0, [r6, r0]
    2794:	17c20000 	strbne	r0, [r2, r0]
    2798:	17270000 	strne	r0, [r7, -r0]!
    279c:	00000011 	andeq	r0, r0, r1, lsl r0
    27a0:	03000000 	movweq	r0, #0
	...
    27ac:	1e1b9501 	cfmul32ne	mvfx9, mvfx11, mvfx1
    27b0:	00001125 	andeq	r1, r0, r5, lsr #2
    27b4:	000017eb 	andeq	r1, r0, fp, ror #15
    27b8:	000017e7 	andeq	r1, r0, r7, ror #15
    27bc:	00113222 	andseq	r3, r1, r2, lsr #4
    27c0:	00181200 	andseq	r1, r8, r0, lsl #4
    27c4:	00180c00 	andseq	r0, r8, r0, lsl #24
    27c8:	113f2200 	teqne	pc, r0, lsl #4
    27cc:	183f0000 	ldmdane	pc!, {}	; <UNPREDICTABLE>
    27d0:	183b0000 	ldmdane	fp!, {}	; <UNPREDICTABLE>
    27d4:	00000000 	andeq	r0, r0, r0
    27d8:	0013812f 	andseq	r8, r3, pc, lsr #2
    27dc:	07e60200 	strbeq	r0, [r6, r0, lsl #4]!
    27e0:	0002d31a 	andeq	sp, r2, sl, lsl r3
    27e4:	0f3a0300 	svceq	0x003a0300
    27e8:	16300000 	ldrtne	r0, [r0], -r0
    27ec:	0200000f 	andeq	r0, r0, #15
    27f0:	d33207e6 	teqle	r2, #60293120	; 0x3980000
    27f4:	00000002 	andeq	r0, r0, r2
    27f8:	000be531 	andeq	lr, fp, r1, lsr r5
    27fc:	07930200 	ldreq	r0, [r3, r0, lsl #4]
    2800:	32030122 	andcc	r0, r3, #-2147483640	; 0x80000008
    2804:	00000fdf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    2808:	16076202 	strne	r6, [r7], -r2, lsl #4
    280c:	000faf03 	andeq	sl, pc, r3, lsl #30
    2810:	0ee03000 	cdpeq	0, 14, cr3, cr0, cr0, {0}
    2814:	62020000 	andvs	r0, r2, #0
    2818:	02d33407 	sbcseq	r3, r3, #117440512	; 0x7000000
    281c:	ed300000 	ldc	0, cr0, [r0, #-0]
    2820:	0200000a 	andeq	r0, r0, #10
    2824:	d3470762 	movtle	r0, #30562	; 0x7762
    2828:	30000002 	andcc	r0, r0, r2
    282c:	00000d81 	andeq	r0, r0, r1, lsl #27
    2830:	66076202 	strvs	r6, [r7], -r2, lsl #4
    2834:	00000af8 	strdeq	r0, [r0], -r8
    2838:	000edc30 	andeq	sp, lr, r0, lsr ip
    283c:	07620200 	strbeq	r0, [r2, -r0, lsl #4]!
    2840:	000af888 	andeq	pc, sl, r8, lsl #17
    2844:	110b3300 	mrsne	r3, (UNDEF: 59)
    2848:	64020000 	strvs	r0, [r2], #-0
    284c:	02d30c07 	sbcseq	r0, r3, #1792	; 0x700
    2850:	42330000 	eorsmi	r0, r3, #0
    2854:	0200000c 	andeq	r0, r0, #12
    2858:	d30c0765 	movwle	r0, #51045	; 0xc765
    285c:	33000002 	movwcc	r0, #2
    2860:	00000fcf 	andeq	r0, r0, pc, asr #31
    2864:	0c076602 	stceq	6, cr6, [r7], {2}
    2868:	000002d3 	ldrdeq	r0, [r0], -r3
    286c:	0faa2f00 	svceq	0x00aa2f00
    2870:	47020000 	strmi	r0, [r2, -r0]
    2874:	02d31a07 	sbcseq	r1, r3, #28672	; 0x7000
    2878:	10030000 	andne	r0, r3, r0
    287c:	30000010 	andcc	r0, r0, r0, lsl r0
    2880:	00000aed 	andeq	r0, r0, sp, ror #21
    2884:	38074702 	stmdacc	r7, {r1, r8, r9, sl, lr}
    2888:	000002d3 	ldrdeq	r0, [r0], -r3
    288c:	000d8230 	andeq	r8, sp, r0, lsr r2
    2890:	07470200 	strbeq	r0, [r7, -r0, lsl #4]
    2894:	0002d350 	andeq	sp, r2, r0, asr r3
    2898:	0edd3000 	cdpeq	0, 13, cr3, cr13, cr0, {0}
    289c:	47020000 	strmi	r0, [r2, -r0]
    28a0:	02d36a07 	sbcseq	r6, r3, #28672	; 0x7000
    28a4:	0b330000 	bleq	cc28ac <_Min_Stack_Size+0xcc24ac>
    28a8:	02000011 	andeq	r0, r0, #17
    28ac:	d30c0749 	movwle	r0, #51017	; 0xc749
    28b0:	33000002 	movwcc	r0, #2
    28b4:	00000c42 	andeq	r0, r0, r2, asr #24
    28b8:	0c074a02 			; <UNDEFINED> instruction: 0x0c074a02
    28bc:	000002d3 	ldrdeq	r0, [r0], -r3
    28c0:	000fcf33 	andeq	ip, pc, r3, lsr pc	; <UNPREDICTABLE>
    28c4:	074b0200 	strbeq	r0, [fp, -r0, lsl #4]
    28c8:	0002d30c 	andeq	sp, r2, ip, lsl #6
    28cc:	c92f0000 	stmdbgt	pc!, {}	; <UNPREDICTABLE>
    28d0:	0200000e 	andeq	r0, r0, #14
    28d4:	d31a072e 	tstle	sl, #12058624	; 0xb80000
    28d8:	03000002 	movweq	r0, #2
    28dc:	00001030 	andeq	r1, r0, r0, lsr r0
    28e0:	000f1130 	andeq	r1, pc, r0, lsr r1	; <UNPREDICTABLE>
    28e4:	072e0200 	streq	r0, [lr, -r0, lsl #4]!
    28e8:	00024737 	andeq	r4, r2, r7, lsr r7
    28ec:	01320000 	teqeq	r2, r0
    28f0:	02000013 	andeq	r0, r0, #19
    28f4:	03160718 	tsteq	r6, #24, 14	; 0x600000
    28f8:	00001059 	andeq	r1, r0, r9, asr r0
    28fc:	000f1130 	andeq	r1, pc, r0, lsr r1	; <UNPREDICTABLE>
    2900:	07180200 	ldreq	r0, [r8, -r0, lsl #4]
    2904:	00024733 	andeq	r4, r2, r3, lsr r7
    2908:	0e1e3000 	cdpeq	0, 1, cr3, cr14, cr0, {0}
    290c:	18020000 	stmdane	r2, {}	; <UNPREDICTABLE>
    2910:	02d34207 	sbcseq	r4, r3, #1879048192	; 0x70000000
    2914:	2f000000 	svccs	0x00000000
    2918:	00001260 	andeq	r1, r0, r0, ror #4
    291c:	1a070202 	bne	1c312c <_Min_Stack_Size+0x1c2d2c>
    2920:	000002d3 	ldrdeq	r0, [r0], -r3
    2924:	00107903 	andseq	r7, r0, r3, lsl #18
    2928:	0f113000 	svceq	0x00113000
    292c:	02020000 	andeq	r0, r2, #0
    2930:	02473507 	subeq	r3, r7, #29360128	; 0x1c00000
    2934:	32000000 	andcc	r0, r0, #0
    2938:	00000bce 	andeq	r0, r0, lr, asr #23
    293c:	1606f102 	strne	pc, [r6], -r2, lsl #2
    2940:	00109503 	andseq	r9, r0, r3, lsl #10
    2944:	0f113000 	svceq	0x00113000
    2948:	f1020000 	cps	#0
    294c:	02473706 	subeq	r3, r7, #1572864	; 0x180000
    2950:	32000000 	andcc	r0, r0, #0
    2954:	000010cb 	andeq	r1, r0, fp, asr #1
    2958:	1606e202 	strne	lr, [r6], -r2, lsl #4
    295c:	0010b103 	andseq	fp, r0, r3, lsl #2
    2960:	0f113000 	svceq	0x00113000
    2964:	e2020000 	and	r0, r2, #0
    2968:	02473506 	subeq	r3, r7, #25165824	; 0x1800000
    296c:	2f000000 	svccs	0x00000000
    2970:	00000f56 	andeq	r0, r0, r6, asr pc
    2974:	1a06cf02 	bne	1b6584 <_Min_Stack_Size+0x1b6184>
    2978:	000002d3 	ldrdeq	r0, [r0], -r3
    297c:	0010d103 	andseq	sp, r0, r3, lsl #2
    2980:	0f113000 	svceq	0x00113000
    2984:	cf020000 	svcgt	0x00020000
    2988:	02473906 	subeq	r3, r7, #98304	; 0x18000
    298c:	32000000 	andcc	r0, r0, #0
    2990:	00000c92 	muleq	r0, r2, ip
    2994:	1606bc02 	strne	fp, [r6], -r2, lsl #24
    2998:	0010ed03 	andseq	lr, r0, r3, lsl #26
    299c:	0f113000 	svceq	0x00113000
    29a0:	bc020000 	stclt	0, cr0, [r2], {-0}
    29a4:	02473206 	subeq	r3, r7, #1610612736	; 0x60000000
    29a8:	32000000 	andcc	r0, r0, #0
    29ac:	000010ea 	andeq	r1, r0, sl, ror #1
    29b0:	16069802 	strne	r9, [r6], -r2, lsl #16
    29b4:	00110903 	andseq	r0, r1, r3, lsl #18
    29b8:	0f113000 	svceq	0x00113000
    29bc:	98020000 	stmdals	r2, {}	; <UNPREDICTABLE>
    29c0:	02473106 	subeq	r3, r7, #-2147483647	; 0x80000001
    29c4:	34000000 	strcc	r0, [r0], #-0
    29c8:	000012c3 	andeq	r1, r0, r3, asr #5
    29cc:	1a068c02 	bne	1a59dc <_Min_Stack_Size+0x1a55dc>
    29d0:	000002d3 	ldrdeq	r0, [r0], -r3
    29d4:	0e633203 	cdpeq	2, 6, cr3, cr3, cr3, {0}
    29d8:	79020000 	stmdbvc	r2, {}	; <UNPREDICTABLE>
    29dc:	4d031606 	stcmi	6, cr1, [r3, #-24]	; 0xffffffe8
    29e0:	30000011 	andcc	r0, r0, r1, lsl r0
    29e4:	00000aed 	andeq	r0, r0, sp, ror #21
    29e8:	3a067902 	bcc	1a0df8 <_Min_Stack_Size+0x1a09f8>
    29ec:	000002d3 	ldrdeq	r0, [r0], -r3
    29f0:	000d1833 	andeq	r1, sp, r3, lsr r8
    29f4:	067b0200 	ldrbteq	r0, [fp], -r0, lsl #4
    29f8:	0002d30c 	andeq	sp, r2, ip, lsl #6
    29fc:	110b3300 	mrsne	r3, (UNDEF: 59)
    2a00:	7c020000 	stcvc	0, cr0, [r2], {-0}
    2a04:	02d30c06 	sbcseq	r0, r3, #1536	; 0x600
    2a08:	35000000 	strcc	r0, [r0, #-0]
    2a0c:	0000105f 	andeq	r1, r0, pc, asr r0
    2a10:	1b037803 	blne	e0a24 <_Min_Stack_Size+0xe0624>
    2a14:	0eab3503 	cdpeq	5, 10, cr3, cr11, cr3, {0}
    2a18:	6d030000 	stcvs	0, cr0, [r3, #-0]
    2a1c:	35031b03 	strcc	r1, [r3, #-2819]	; 0xfffff4fd
    2a20:	00000fa4 	andeq	r0, r0, r4, lsr #31
    2a24:	1b036203 	blne	db238 <_Min_Stack_Size+0xdae38>
    2a28:	0b750003 	bleq	1d42a3c <_Min_Stack_Size+0x1d4263c>
    2a2c:	00020000 	andeq	r0, r2, r0
    2a30:	00000892 	muleq	r0, r2, r8
    2a34:	01040104 	tsteq	r4, r4, lsl #2
    2a38:	d7040000 	strle	r0, [r4, -r0]
    2a3c:	2f000013 	svccs	0x00000013
    2a40:	40000000 	andmi	r0, r0, r0
    2a44:	00000002 	andeq	r0, r0, r2
    2a48:	00000000 	andeq	r0, r0, r0
    2a4c:	50000000 	andpl	r0, r0, r0
    2a50:	02000022 	andeq	r0, r0, #34	; 0x22
    2a54:	02400105 	subeq	r0, r0, #1073741825	; 0x40000001
    2a58:	43020000 	movwmi	r0, #8192	; 0x2000
    2a5c:	000a0201 	andeq	r0, sl, r1, lsl #4
    2a60:	00024000 	andeq	r4, r2, r0
    2a64:	11b20300 			; <UNDEFINED> instruction: 0x11b20300
    2a68:	03720000 	cmneq	r2, #0
    2a6c:	00000d3a 	andeq	r0, r0, sl, lsr sp
    2a70:	0ca90374 	stceq	3, cr0, [r9], #464	; 0x1d0
    2a74:	03750000 	cmneq	r5, #0
    2a78:	00001128 	andeq	r1, r0, r8, lsr #2
    2a7c:	0d970376 	ldceq	3, cr0, [r7, #472]	; 0x1d8
    2a80:	037b0000 	cmneq	fp, #0
    2a84:	00001228 	andeq	r1, r0, r8, lsr #4
    2a88:	0c73037c 	ldcleq	3, cr0, [r3], #-496	; 0xfffffe10
    2a8c:	037e0000 	cmneq	lr, #0
    2a90:	00000e91 	muleq	r0, r1, lr
    2a94:	0ac7047f 	beq	ff1c3c98 <_estack+0xdf183c98>
    2a98:	04000000 	streq	r0, [r0], #-0
    2a9c:	00000a1b 	andeq	r0, r0, fp, lsl sl
    2aa0:	11fb0401 	mvnsne	r0, r1, lsl #8
    2aa4:	04020000 	streq	r0, [r2], #-0
    2aa8:	00000ab9 			; <UNDEFINED> instruction: 0x00000ab9
    2aac:	10fb0403 	rscsne	r0, fp, r3, lsl #8
    2ab0:	04040000 	streq	r0, [r4], #-0
    2ab4:	00001378 	andeq	r1, r0, r8, ror r3
    2ab8:	12940405 	addsne	r0, r4, #83886080	; 0x5000000
    2abc:	04060000 	streq	r0, [r6], #-0
    2ac0:	0000139a 	muleq	r0, sl, r3
    2ac4:	10b00407 	adcsne	r0, r0, r7, lsl #8
    2ac8:	04080000 	streq	r0, [r8], #-0
    2acc:	000012b8 			; <UNDEFINED> instruction: 0x000012b8
    2ad0:	10540409 	subsne	r0, r4, r9, lsl #8
    2ad4:	040a0000 	streq	r0, [sl], #-0
    2ad8:	000013a5 	andeq	r1, r0, r5, lsr #7
    2adc:	0e0c040b 	cdpeq	4, 0, cr0, cr12, cr11, {0}
    2ae0:	040c0000 	streq	r0, [ip], #-0
    2ae4:	00000f92 	muleq	r0, r2, pc	; <UNPREDICTABLE>
    2ae8:	0cf5040d 	cfldrdeq	mvd0, [r5], #52	; 0x34
    2aec:	040e0000 	streq	r0, [lr], #-0
    2af0:	00000f2e 	andeq	r0, r0, lr, lsr #30
    2af4:	0c02040f 	cfstrseq	mvf0, [r2], {15}
    2af8:	04100000 	ldreq	r0, [r0], #-0
    2afc:	00000d28 	andeq	r0, r0, r8, lsr #26
    2b00:	13360411 	teqne	r6, #285212672	; 0x11000000
    2b04:	04120000 	ldreq	r0, [r2], #-0
    2b08:	00000dc6 	andeq	r0, r0, r6, asr #27
    2b0c:	0a0d0413 	beq	343b60 <_Min_Stack_Size+0x343760>
    2b10:	04140000 	ldreq	r0, [r4], #-0
    2b14:	00000a64 	andeq	r0, r0, r4, ror #20
    2b18:	135c0415 	cmpne	ip, #352321536	; 0x15000000
    2b1c:	04160000 	ldreq	r0, [r6], #-0
    2b20:	00000c14 	andeq	r0, r0, r4, lsl ip
    2b24:	10410417 	subne	r0, r1, r7, lsl r4
    2b28:	04180000 	ldreq	r0, [r8], #-0
    2b2c:	00000f03 	andeq	r0, r0, r3, lsl #30
    2b30:	107b0419 	rsbsne	r0, fp, r9, lsl r4
    2b34:	041a0000 	ldreq	r0, [sl], #-0
    2b38:	00000e9e 	muleq	r0, lr, lr
    2b3c:	128a041b 	addne	r0, sl, #452984832	; 0x1b000000
    2b40:	041c0000 	ldreq	r0, [ip], #-0
    2b44:	00001390 	muleq	r0, r0, r3
    2b48:	0aa7041d 	beq	fe9c3bc4 <_estack+0xde983bc4>
    2b4c:	041e0000 	ldreq	r0, [lr], #-0
    2b50:	00000d74 	andeq	r0, r0, r4, ror sp
    2b54:	10be041f 	adcsne	r0, lr, pc, lsl r4
    2b58:	04200000 	strteq	r0, [r0], #-0
    2b5c:	00001271 	andeq	r1, r0, r1, ror r2
    2b60:	0a9a0421 	beq	fe683bec <_estack+0xde643bec>
    2b64:	04220000 	strteq	r0, [r2], #-0
    2b68:	00000e02 	andeq	r0, r0, r2, lsl #28
    2b6c:	0f880423 	svceq	0x00880423
    2b70:	04240000 	strteq	r0, [r4], #-0
    2b74:	000012ac 	andeq	r1, r0, ip, lsr #5
    2b78:	111c0425 	tstne	ip, r5, lsr #8
    2b7c:	04260000 	strteq	r0, [r6], #-0
    2b80:	0000127e 	andeq	r1, r0, lr, ror r2
    2b84:	0de30427 	cfstrdeq	mvd0, [r3, #156]!	; 0x9c
    2b88:	04280000 	strteq	r0, [r8], #-0
    2b8c:	00000a8b 	andeq	r0, r0, fp, lsl #21
    2b90:	0d070429 	cfstrseq	mvf0, [r7, #-164]	; 0xffffff5c
    2b94:	042a0000 	strteq	r0, [sl], #-0
    2b98:	00000e4f 	andeq	r0, r0, pc, asr #28
    2b9c:	0c7f042b 	cfldrdeq	mvd0, [pc], #-172	; 2af8 <_Min_Stack_Size+0x26f8>
    2ba0:	042c0000 	strteq	r0, [ip], #-0
    2ba4:	00000eb1 			; <UNDEFINED> instruction: 0x00000eb1
    2ba8:	0afb042d 	beq	ffec3c64 <_estack+0xdfe83c64>
    2bac:	042e0000 	strteq	r0, [lr], #-0
    2bb0:	00001138 	andeq	r1, r0, r8, lsr r1
    2bb4:	0ad1042f 	beq	ff443c78 <_estack+0xdf403c78>
    2bb8:	04310000 	ldrteq	r0, [r1], #-0
    2bbc:	00000f6b 	andeq	r0, r0, fp, ror #30
    2bc0:	101a0432 	andsne	r0, sl, r2, lsr r4
    2bc4:	04330000 	ldrteq	r0, [r3], #-0
    2bc8:	000010e0 	andeq	r1, r0, r0, ror #1
    2bcc:	118c0436 	orrne	r0, ip, r6, lsr r4
    2bd0:	04370000 	ldrteq	r0, [r7], #-0
    2bd4:	00001249 	andeq	r1, r0, r9, asr #4
    2bd8:	133f0438 	teqne	pc, #56, 8	; 0x38000000
    2bdc:	04390000 	ldrteq	r0, [r9], #-0
    2be0:	00000da3 	andeq	r0, r0, r3, lsr #27
    2be4:	0f1c043a 	svceq	0x001c043a
    2be8:	043b0000 	ldrteq	r0, [fp], #-0
    2bec:	00001024 	andeq	r1, r0, r4, lsr #32
    2bf0:	11ea043c 	mvnne	r0, ip, lsr r4
    2bf4:	043d0000 	ldrteq	r0, [sp], #-0
    2bf8:	0000114a 	andeq	r1, r0, sl, asr #2
    2bfc:	129f043e 	addsne	r0, pc, #1040187392	; 0x3e000000
    2c00:	043f0000 	ldrteq	r0, [pc], #-0	; 2c08 <_Min_Stack_Size+0x2808>
    2c04:	00000a24 	andeq	r0, r0, r4, lsr #20
    2c08:	0b0d0440 	bleq	343d10 <_Min_Stack_Size+0x343910>
    2c0c:	04410000 	strbeq	r0, [r1], #-0
    2c10:	0000136a 	andeq	r1, r0, sl, ror #6
    2c14:	0fbe0442 	svceq	0x00be0442
    2c18:	04430000 	strbeq	r0, [r3], #-0
    2c1c:	00000a52 	andeq	r0, r0, r2, asr sl
    2c20:	0b9b0444 	bleq	fe6c3d38 <_estack+0xde683d38>
    2c24:	04450000 	strbeq	r0, [r5], #-0
    2c28:	00000cce 	andeq	r0, r0, lr, asr #25
    2c2c:	0f4a0446 	svceq	0x004a0446
    2c30:	04470000 	strbeq	r0, [r7], #-0
    2c34:	00000d64 	andeq	r0, r0, r4, ror #26
    2c38:	0a320448 	beq	c83d60 <_Min_Stack_Size+0xc83960>
    2c3c:	04490000 	strbeq	r0, [r9], #-0
    2c40:	00000c56 	andeq	r0, r0, r6, asr ip
    2c44:	12f80450 	rscsne	r0, r8, #80, 8	; 0x50000000
    2c48:	04510000 	ldrbeq	r0, [r1], #-0
    2c4c:	00000a72 	andeq	r0, r0, r2, ror sl
    2c50:	0bf80454 	bleq	ffe03da8 <_estack+0xdfdc3da8>
    2c54:	04550000 	ldrbeq	r0, [r5], #-0
    2c58:	0000115b 	andeq	r1, r0, fp, asr r1
    2c5c:	0d71045c 	cfldrdeq	mvd0, [r1, #-368]!	; 0xfffffe90
    2c60:	045f0000 	ldrbeq	r0, [pc], #-0	; 2c68 <_Min_Stack_Size+0x2868>
    2c64:	000010bb 	strheq	r1, [r0], -fp
    2c68:	01050060 	tsteq	r5, r0, rrx
    2c6c:	0000be06 	andeq	fp, r0, r6, lsl #28
    2c70:	0a030600 	beq	c4478 <_Min_Stack_Size+0xc4078>
    2c74:	9c020000 	stcls	0, cr0, [r2], {-0}
    2c78:	00002903 	andeq	r2, r0, r3, lsl #18
    2c7c:	08010500 	stmdaeq	r1, {r8, sl}
    2c80:	000000bc 	strheq	r0, [r0], -ip
    2c84:	e7050205 	str	r0, [r5, -r5, lsl #4]
    2c88:	05000001 	streq	r0, [r0, #-1]
    2c8c:	01ab0702 			; <UNDEFINED> instruction: 0x01ab0702
    2c90:	04050000 	streq	r0, [r5], #-0
    2c94:	00000505 	andeq	r0, r0, r5, lsl #10
    2c98:	03530600 	cmpeq	r3, #0, 12
    2c9c:	4f030000 	svcmi	0x00030000
    2ca0:	00027b19 	andeq	r7, r2, r9, lsl fp
    2ca4:	07040500 	streq	r0, [r4, -r0, lsl #10]
    2ca8:	0000008c 	andeq	r0, r0, ip, lsl #1
    2cac:	00050805 	andeq	r0, r5, r5, lsl #16
    2cb0:	05000000 	streq	r0, [r0, #-0]
    2cb4:	00870708 	addeq	r0, r7, r8, lsl #14
    2cb8:	04070000 	streq	r0, [r7], #-0
    2cbc:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2cc0:	07040500 	streq	r0, [r4, -r0, lsl #10]
    2cc4:	00000091 	muleq	r0, r1, r0
    2cc8:	00035506 	andeq	r5, r3, r6, lsl #10
    2ccc:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    2cd0:	0000026f 	andeq	r0, r0, pc, ror #4
    2cd4:	00029e08 	andeq	r9, r2, r8, lsl #28
    2cd8:	02aa0900 	adceq	r0, sl, #0, 18
    2cdc:	100a0000 	andne	r0, sl, r0
    2ce0:	0102f805 	tsteq	r2, r5, lsl #16	; <UNPREDICTABLE>
    2ce4:	00000a7c 	andeq	r0, r0, ip, ror sl
    2ce8:	00000303 	andeq	r0, r0, r3, lsl #6
    2cec:	00125b0b 	andseq	r5, r2, fp, lsl #22
    2cf0:	02f90500 	rscseq	r0, r9, #0, 10
    2cf4:	0002aa12 	andeq	sl, r2, r2, lsl sl
    2cf8:	00230200 	eoreq	r0, r3, r0, lsl #4
    2cfc:	000efe0b 	andeq	pc, lr, fp, lsl #28
    2d00:	02fa0500 	rscseq	r0, sl, #0, 10
    2d04:	0002aa12 	andeq	sl, r2, r2, lsl sl
    2d08:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2d0c:	4c41560c 	mcrrmi	6, 0, r5, r1, cr12
    2d10:	02fb0500 	rscseq	r0, fp, #0, 10
    2d14:	0002aa12 	andeq	sl, r2, r2, lsl sl
    2d18:	08230200 	stmdaeq	r3!, {r9}
    2d1c:	000d220b 	andeq	r2, sp, fp, lsl #4
    2d20:	02fc0500 	rscseq	r0, ip, #0, 10
    2d24:	0002af12 	andeq	sl, r2, r2, lsl pc
    2d28:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2d2c:	0a7e0d00 	beq	1f86134 <_Min_Stack_Size+0x1f85d34>
    2d30:	fd050000 	stc2	0, cr0, [r5, #-0]
    2d34:	02b40302 	adcseq	r0, r4, #134217728	; 0x8000000
    2d38:	9e0e0000 	cdpls	0, 0, cr0, cr14, cr0, {0}
    2d3c:	20000002 	andcs	r0, r0, r2
    2d40:	0f000003 	svceq	0x00000003
    2d44:	00000297 	muleq	r0, r7, r2
    2d48:	c7100001 	ldrgt	r0, [r0, -r1]
    2d4c:	09000004 	stmdbeq	r0, {r2}
    2d50:	029e114a 	addseq	r1, lr, #-2147483630	; 0x80000012
    2d54:	01010000 	mrseq	r0, (UNDEF: 1)
    2d58:	4402100a 	strmi	r1, [r2], #-10
    2d5c:	161c0101 	ldrne	r0, [ip], -r1, lsl #2
    2d60:	037c0000 	cmneq	ip, #0
    2d64:	180b0000 	stmdane	fp, {}	; <UNPREDICTABLE>
    2d68:	02000014 	andeq	r0, r0, #20
    2d6c:	aa110145 	bge	443288 <_Min_Stack_Size+0x442e88>
    2d70:	02000002 	andeq	r0, r0, #2
    2d74:	430c0023 	movwmi	r0, #49187	; 0xc023
    2d78:	46020052 			; <UNDEFINED> instruction: 0x46020052
    2d7c:	02aa1101 	adceq	r1, sl, #1073741824	; 0x40000000
    2d80:	23020000 	movwcs	r0, #8192	; 0x2000
    2d84:	157e0b04 	ldrbne	r0, [lr, #-2820]!	; 0xfffff4fc
    2d88:	47020000 	strmi	r0, [r2, -r0]
    2d8c:	02aa1101 	adceq	r1, sl, #1073741824	; 0x40000000
    2d90:	23020000 	movwcs	r0, #8192	; 0x2000
    2d94:	152f0b08 	strne	r0, [pc, #-2824]!	; 2294 <_Min_Stack_Size+0x1e94>
    2d98:	48020000 	stmdami	r2, {}	; <UNPREDICTABLE>
    2d9c:	02aa1101 	adceq	r1, sl, #1073741824	; 0x40000000
    2da0:	23020000 	movwcs	r0, #8192	; 0x2000
    2da4:	1e0d000c 	cdpne	0, 0, cr0, cr13, cr12, {0}
    2da8:	02000016 	andeq	r0, r0, #22
    2dac:	2e020149 	adfcssm	f0, f2, #1.0
    2db0:	0a000003 	beq	2dc4 <_Min_Stack_Size+0x29c4>
    2db4:	0175021c 	cmneq	r5, ip, lsl r2
    2db8:	00020a01 	andeq	r0, r2, r1, lsl #20
    2dbc:	00040600 	andeq	r0, r4, r0, lsl #12
    2dc0:	43410c00 	movtmi	r0, #7168	; 0x1c00
    2dc4:	76020052 			; <UNDEFINED> instruction: 0x76020052
    2dc8:	02aa1101 	adceq	r1, sl, #1073741824	; 0x40000000
    2dcc:	23020000 	movwcs	r0, #8192	; 0x2000
    2dd0:	032c0b00 			; <UNDEFINED> instruction: 0x032c0b00
    2dd4:	77020000 	strvc	r0, [r2, -r0]
    2dd8:	02aa1101 	adceq	r1, sl, #1073741824	; 0x40000000
    2ddc:	23020000 	movwcs	r0, #8192	; 0x2000
    2de0:	03290b04 			; <UNDEFINED> instruction: 0x03290b04
    2de4:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    2de8:	02aa1101 	adceq	r1, sl, #1073741824	; 0x40000000
    2dec:	23020000 	movwcs	r0, #8192	; 0x2000
    2df0:	52530c08 	subspl	r0, r3, #8, 24	; 0x800
    2df4:	01790200 	cmneq	r9, r0, lsl #4
    2df8:	0002aa11 	andeq	sl, r2, r1, lsl sl
    2dfc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2e00:	0052430c 	subseq	r4, r2, ip, lsl #6
    2e04:	11017a02 	tstne	r1, r2, lsl #20
    2e08:	000002aa 	andeq	r0, r0, sl, lsr #5
    2e0c:	0b102302 	bleq	40ba1c <_Min_Stack_Size+0x40b61c>
    2e10:	0000026e 	andeq	r0, r0, lr, ror #4
    2e14:	11017b02 	tstne	r1, r2, lsl #22
    2e18:	000002aa 	andeq	r0, r0, sl, lsr #5
    2e1c:	0b142302 	bleq	50ba2c <_Min_Stack_Size+0x50b62c>
    2e20:	00000388 	andeq	r0, r0, r8, lsl #7
    2e24:	11017c02 	tstne	r1, r2, lsl #24
    2e28:	000002aa 	andeq	r0, r0, sl, lsr #5
    2e2c:	00182302 	andseq	r2, r8, r2, lsl #6
    2e30:	00020c0d 	andeq	r0, r2, sp, lsl #24
    2e34:	017d0200 	cmneq	sp, r0, lsl #4
    2e38:	00038903 	andeq	r8, r3, r3, lsl #18
    2e3c:	02980a00 	addseq	r0, r8, #0, 20
    2e40:	e70101f3 			; <UNDEFINED> instruction: 0xe70101f3
    2e44:	47000003 	strmi	r0, [r0, -r3]
    2e48:	0c000006 	stceq	0, cr0, [r0], {6}
    2e4c:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
    2e50:	aa1101f4 	bge	443628 <_Min_Stack_Size+0x443228>
    2e54:	02000002 	andeq	r0, r0, #2
    2e58:	430b0023 	movwmi	r0, #45091	; 0xb023
    2e5c:	02000003 	andeq	r0, r0, #3
    2e60:	aa1101f5 	bge	44363c <_Min_Stack_Size+0x44323c>
    2e64:	02000002 	andeq	r0, r0, #2
    2e68:	c10b0423 	tstgt	fp, r3, lsr #8
    2e6c:	02000002 	andeq	r0, r0, #2
    2e70:	aa1101f6 	bge	443650 <_Min_Stack_Size+0x443250>
    2e74:	02000002 	andeq	r0, r0, #2
    2e78:	430c0823 	movwmi	r0, #51235	; 0xc823
    2e7c:	02005249 	andeq	r5, r0, #-1879048188	; 0x90000004
    2e80:	aa1101f7 	bge	443664 <_Min_Stack_Size+0x443264>
    2e84:	02000002 	andeq	r0, r0, #2
    2e88:	cb0b0c23 	blgt	2c5f1c <_Min_Stack_Size+0x2c5b1c>
    2e8c:	02000002 	andeq	r0, r0, #2
    2e90:	aa1101f8 	bge	443678 <_Min_Stack_Size+0x443278>
    2e94:	02000002 	andeq	r0, r0, #2
    2e98:	cf0b1023 	svcgt	0x000b1023
    2e9c:	02000005 	andeq	r0, r0, #5
    2ea0:	aa1101f9 	bge	44368c <_Min_Stack_Size+0x44328c>
    2ea4:	02000002 	andeq	r0, r0, #2
    2ea8:	7b0b1423 	blvc	2c7f3c <_Min_Stack_Size+0x2c7b3c>
    2eac:	02000005 	andeq	r0, r0, #5
    2eb0:	aa1101fa 	bge	4436a0 <_Min_Stack_Size+0x4432a0>
    2eb4:	02000002 	andeq	r0, r0, #2
    2eb8:	e40b1823 	str	r1, [fp], #-2083	; 0xfffff7dd
    2ebc:	02000004 	andeq	r0, r0, #4
    2ec0:	9e1101fb 	mrcls	1, 0, r0, cr1, cr11, {7}
    2ec4:	02000002 	andeq	r0, r0, #2
    2ec8:	b30b1c23 	movwlt	r1, #48163	; 0xbc23
    2ecc:	02000004 	andeq	r0, r0, #4
    2ed0:	aa1101fc 	bge	4436c8 <_Min_Stack_Size+0x4432c8>
    2ed4:	02000002 	andeq	r0, r0, #2
    2ed8:	070b2023 	streq	r2, [fp, -r3, lsr #32]
    2edc:	02000003 	andeq	r0, r0, #3
    2ee0:	aa1101fd 	bge	4436dc <_Min_Stack_Size+0x4432dc>
    2ee4:	02000002 	andeq	r0, r0, #2
    2ee8:	840b2423 	strhi	r2, [fp], #-1059	; 0xfffffbdd
    2eec:	02000005 	andeq	r0, r0, #5
    2ef0:	101101fe 			; <UNDEFINED> instruction: 0x101101fe
    2ef4:	02000003 	andeq	r0, r0, #3
    2ef8:	020b2823 	andeq	r2, fp, #2293760	; 0x230000
    2efc:	02000007 	andeq	r0, r0, #7
    2f00:	aa1101ff 	bge	443704 <_Min_Stack_Size+0x443304>
    2f04:	02000002 	andeq	r0, r0, #2
    2f08:	5c0b3023 	stcpl	0, cr3, [fp], {35}	; 0x23
    2f0c:	02000006 	andeq	r0, r0, #6
    2f10:	aa110200 	bge	443718 <_Min_Stack_Size+0x443318>
    2f14:	02000002 	andeq	r0, r0, #2
    2f18:	590b3423 	stmdbpl	fp, {r0, r1, r5, sl, ip, sp}
    2f1c:	02000004 	andeq	r0, r0, #4
    2f20:	aa110201 	bge	44372c <_Min_Stack_Size+0x44332c>
    2f24:	02000002 	andeq	r0, r0, #2
    2f28:	030b3823 	movweq	r3, #47139	; 0xb823
    2f2c:	02000005 	andeq	r0, r0, #5
    2f30:	9e110202 	cdpls	2, 1, cr0, cr1, cr2, {0}
    2f34:	02000002 	andeq	r0, r0, #2
    2f38:	540b3c23 	strpl	r3, [fp], #-3107	; 0xfffff3dd
    2f3c:	02000006 	andeq	r0, r0, #6
    2f40:	aa110203 	bge	443754 <_Min_Stack_Size+0x443354>
    2f44:	02000002 	andeq	r0, r0, #2
    2f48:	730b4023 	movwvc	r4, #45091	; 0xb023
    2f4c:	02000005 	andeq	r0, r0, #5
    2f50:	aa110204 	bge	443768 <_Min_Stack_Size+0x443368>
    2f54:	02000002 	andeq	r0, r0, #2
    2f58:	8e0b4423 	cdphi	4, 0, cr4, cr11, cr3, {1}
    2f5c:	02000005 	andeq	r0, r0, #5
    2f60:	10110205 	andsne	r0, r1, r5, lsl #4
    2f64:	02000003 	andeq	r0, r0, #3
    2f68:	aa0b4823 	bge	2d4ffc <_Min_Stack_Size+0x2d4bfc>
    2f6c:	02000002 	andeq	r0, r0, #2
    2f70:	aa110206 	bge	443790 <_Min_Stack_Size+0x443390>
    2f74:	02000002 	andeq	r0, r0, #2
    2f78:	970b5023 	strls	r5, [fp, -r3, lsr #32]
    2f7c:	02000004 	andeq	r0, r0, #4
    2f80:	aa110207 	bge	4437a4 <_Min_Stack_Size+0x4433a4>
    2f84:	02000002 	andeq	r0, r0, #2
    2f88:	550b5423 	strpl	r5, [fp, #-1059]	; 0xfffffbdd
    2f8c:	02000005 	andeq	r0, r0, #5
    2f90:	aa110208 	bge	4437b8 <_Min_Stack_Size+0x4433b8>
    2f94:	02000002 	andeq	r0, r0, #2
    2f98:	0d0b5823 	stceq	8, cr5, [fp, #-140]	; 0xffffff74
    2f9c:	02000005 	andeq	r0, r0, #5
    2fa0:	9e110209 	cdpls	2, 1, cr0, cr1, cr9, {0}
    2fa4:	02000002 	andeq	r0, r0, #2
    2fa8:	d20b5c23 	andle	r5, fp, #8960	; 0x2300
    2fac:	02000003 	andeq	r0, r0, #3
    2fb0:	aa11020a 	bge	4437e0 <_Min_Stack_Size+0x4433e0>
    2fb4:	02000002 	andeq	r0, r0, #2
    2fb8:	140b6023 	strne	r6, [fp], #-35	; 0xffffffdd
    2fbc:	02000004 	andeq	r0, r0, #4
    2fc0:	aa11020b 	bge	4437f4 <_Min_Stack_Size+0x4433f4>
    2fc4:	02000002 	andeq	r0, r0, #2
    2fc8:	170b6423 	strne	r6, [fp, -r3, lsr #8]
    2fcc:	02000005 	andeq	r0, r0, #5
    2fd0:	1011020c 	andsne	r0, r1, ip, lsl #4
    2fd4:	02000003 	andeq	r0, r0, #3
    2fd8:	c70b6823 	strgt	r6, [fp, -r3, lsr #16]
    2fdc:	02000006 	andeq	r0, r0, #6
    2fe0:	aa11020d 	bge	44381c <_Min_Stack_Size+0x44341c>
    2fe4:	02000002 	andeq	r0, r0, #2
    2fe8:	430c7023 	movwmi	r7, #49187	; 0xc023
    2fec:	02005253 	andeq	r5, r0, #805306373	; 0x30000005
    2ff0:	aa11020e 	bge	443830 <_Min_Stack_Size+0x443430>
    2ff4:	02000002 	andeq	r0, r0, #2
    2ff8:	210b7423 	tstcs	fp, r3, lsr #8
    2ffc:	02000005 	andeq	r0, r0, #5
    3000:	1011020f 	andsne	r0, r1, pc, lsl #4
    3004:	02000003 	andeq	r0, r0, #3
    3008:	900b7823 	andls	r7, fp, r3, lsr #16
    300c:	02000006 	andeq	r0, r0, #6
    3010:	aa110210 	bge	443858 <_Min_Stack_Size+0x443458>
    3014:	03000002 	movweq	r0, #2
    3018:	0b018023 	bleq	630ac <_Min_Stack_Size+0x62cac>
    301c:	000003dc 	ldrdeq	r0, [r0], -ip
    3020:	11021102 	tstne	r2, r2, lsl #2
    3024:	000002aa 	andeq	r0, r0, sl, lsr #5
    3028:	01842303 	orreq	r2, r4, r3, lsl #6
    302c:	00052b0b 	andeq	r2, r5, fp, lsl #22
    3030:	02120200 	andseq	r0, r2, #0, 4
    3034:	00029e11 	andeq	r9, r2, r1, lsl lr
    3038:	88230300 	stmdahi	r3!, {r8, r9}
    303c:	02be0b01 	adcseq	r0, lr, #1024	; 0x400
    3040:	13020000 	movwne	r0, #8192	; 0x2000
    3044:	02aa1102 	adceq	r1, sl, #-2147483648	; 0x80000000
    3048:	23030000 	movwcs	r0, #12288	; 0x3000
    304c:	be0b018c 	adflt<illegal precision>	f0, f3, #4.0
    3050:	02000006 	andeq	r0, r0, #6
    3054:	aa110214 	bge	4438ac <_Min_Stack_Size+0x4434ac>
    3058:	03000002 	movweq	r0, #2
    305c:	0b019023 	bleq	670f0 <_Min_Stack_Size+0x66cf0>
    3060:	000002d4 	ldrdeq	r0, [r0], -r4
    3064:	11021502 	tstne	r2, r2, lsl #10
    3068:	000002aa 	andeq	r0, r0, sl, lsr #5
    306c:	01942303 	orrseq	r2, r4, r3, lsl #6
    3070:	03e90d00 	mvneq	r0, #0, 26
    3074:	16020000 	strne	r0, [r2], -r0
    3078:	04130302 	ldreq	r0, [r3], #-770	; 0xfffffcfe
    307c:	07020000 	streq	r0, [r2, -r0]
    3080:	00025301 	andeq	r5, r2, r1, lsl #6
    3084:	01ba0600 			; <UNDEFINED> instruction: 0x01ba0600
    3088:	000003f5 	strdeq	r0, [r0], -r5
    308c:	00000673 	andeq	r0, r0, r3, ror r6
    3090:	0023a304 	eoreq	sl, r3, r4, lsl #6
    3094:	53110000 	tstpl	r1, #0
    3098:	01005445 	tsteq	r0, r5, asr #8
    309c:	03f70600 	mvnseq	r0, #0, 12
    30a0:	bd060000 	stclt	0, cr0, [r6, #-0]
    30a4:	00065403 	andeq	r5, r6, r3, lsl #8
    30a8:	01070200 	mrseq	r0, (UNDEF: 39)
    30ac:	00000253 	andeq	r0, r0, r3, asr r2
    30b0:	3101c006 	tstcc	r1, r6
    30b4:	9e000003 	cdpls	0, 0, cr0, cr0, cr3, {0}
    30b8:	04000006 	streq	r0, [r0], #-6
    30bc:	00000380 	andeq	r0, r0, r0, lsl #7
    30c0:	03190400 	tsteq	r9, #0, 8
    30c4:	00010000 	andeq	r0, r1, r0
    30c8:	00033306 	andeq	r3, r3, r6, lsl #6
    30cc:	03c30600 	biceq	r0, r3, #0, 12
    30d0:	0000067f 	andeq	r0, r0, pc, ror r6
    30d4:	53010702 	movwpl	r0, #5890	; 0x1702
    30d8:	06000002 	streq	r0, [r0], -r2
    30dc:	13c901c7 	bicne	r0, r9, #-1073741775	; 0xc0000031
    30e0:	06c90000 	strbeq	r0, [r9], r0
    30e4:	48040000 	stmdami	r4, {}	; <UNPREDICTABLE>
    30e8:	00000016 	andeq	r0, r0, r6, lsl r0
    30ec:	001f1904 	andseq	r1, pc, r4, lsl #18
    30f0:	06000100 	streq	r0, [r0], -r0, lsl #2
    30f4:	000013cb 	andeq	r1, r0, fp, asr #7
    30f8:	aa03ca06 	bge	f5918 <_Min_Stack_Size+0xf5518>
    30fc:	05000006 	streq	r0, [r0, #-6]
    3100:	01be0408 			; <UNDEFINED> instruction: 0x01be0408
    3104:	1d120000 	ldcne	0, cr0, [r2, #-0]
    3108:	02000000 	andeq	r0, r0, #0
    310c:	02530107 	subseq	r0, r3, #-1073741823	; 0xc0000001
    3110:	28070000 	stmdacs	r7, {}	; <UNPREDICTABLE>
    3114:	0006aa01 	andeq	sl, r6, r1, lsl #20
    3118:	00070c00 	andeq	r0, r7, r0, lsl #24
    311c:	03cb0400 	biceq	r0, fp, #0, 8
    3120:	04000000 	streq	r0, [r0], #-0
    3124:	00000598 	muleq	r0, r8, r5
    3128:	07220401 	streq	r0, [r2, -r1, lsl #8]!
    312c:	04020000 	streq	r0, [r2], #-0
    3130:	000003bf 			; <UNDEFINED> instruction: 0x000003bf
    3134:	ac060003 	stcge	0, cr0, [r6], {3}
    3138:	07000006 	streq	r0, [r0, -r6]
    313c:	06e1032d 	strbteq	r0, [r1], sp, lsr #6
    3140:	07020000 	streq	r0, [r2, -r0]
    3144:	00025301 	andeq	r5, r2, r1, lsl #6
    3148:	01330800 	teqeq	r3, r0, lsl #16
    314c:	000014f0 	strdeq	r1, [r0], -r0
    3150:	00000743 	andeq	r0, r0, r3, asr #14
    3154:	00165004 	andseq	r5, r6, r4
    3158:	8e046400 	cfcpyshi	mvf6, mvf4
    315c:	0a000014 	beq	31b4 <_Min_Stack_Size+0x2db4>
    3160:	0014dd04 	andseq	sp, r4, r4, lsl #26
    3164:	59040100 	stmdbpl	r4, {r8}
    3168:	01000015 	tsteq	r0, r5, lsl r0
    316c:	14f20600 	ldrbtne	r0, [r2], #1536	; 0x600
    3170:	38080000 	stmdacc	r8, {}	; <UNPREDICTABLE>
    3174:	00071803 	andeq	r1, r7, r3, lsl #16
    3178:	14d61000 	ldrbne	r1, [r6], #0
    317c:	cd080000 	stcgt	0, cr0, [r8, #-0]
    3180:	0002aa16 	andeq	sl, r2, r6, lsl sl
    3184:	10010100 	andne	r0, r1, r0, lsl #2
    3188:	000005b4 			; <UNDEFINED> instruction: 0x000005b4
    318c:	9e11ce08 	cdpls	14, 1, cr12, cr1, cr8, {0}
    3190:	01000002 	tsteq	r0, r2
    3194:	14cb1001 	strbne	r1, [fp], #1
    3198:	cf080000 	svcgt	0x00080000
    319c:	0007431c 	andeq	r4, r7, ip, lsl r3
    31a0:	13010100 	movwne	r0, #4352	; 0x1100
    31a4:	0000074f 	andeq	r0, r0, pc, asr #14
    31a8:	050f5e01 	streq	r5, [pc, #-3585]	; 23af <_Min_Stack_Size+0x1faf>
    31ac:	00045803 	andeq	r5, r4, r3, lsl #16
    31b0:	075d1320 	ldrbeq	r1, [sp, -r0, lsr #6]
    31b4:	5f010000 	svcpl	0x00010000
    31b8:	0403050a 	streq	r0, [r3], #-1290	; 0xfffffaf6
    31bc:	13200000 	nopne	{0}	; <UNPREDICTABLE>
    31c0:	0000076b 	andeq	r0, r0, fp, ror #14
    31c4:	05156001 	ldreq	r6, [r5, #-1]
    31c8:	00000003 	andeq	r0, r0, r3
    31cc:	1f011420 	svcne	0x00011420
    31d0:	01000014 	tsteq	r0, r4, lsl r0
    31d4:	9e0a0232 	mcrls	2, 0, r0, cr10, cr2, {1}
    31d8:	00000002 	andeq	r0, r0, r2
    31dc:	00000000 	andeq	r0, r0, r0
    31e0:	02000000 	andeq	r0, r0, #0
    31e4:	1401007d 	strne	r0, [r1], #-125	; 0xffffff83
    31e8:	00154301 	andseq	r4, r5, r1, lsl #6
    31ec:	02290100 	eoreq	r0, r9, #0, 2
    31f0:	00029e0a 	andeq	r9, r2, sl, lsl #28
	...
    31fc:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    3200:	36011401 	strcc	r1, [r1], -r1, lsl #8
    3204:	01000015 	tsteq	r0, r5, lsl r0
    3208:	9e0a0220 	cdpls	2, 0, cr0, cr10, cr0, {1}
    320c:	00000002 	andeq	r0, r0, r2
    3210:	00000000 	andeq	r0, r0, r0
    3214:	02000000 	andeq	r0, r0, #0
    3218:	1501007d 	strne	r0, [r1, #-125]	; 0xffffff83
    321c:	00166301 	andseq	r6, r6, r1, lsl #6
    3220:	02170100 	andseq	r0, r7, #0, 2
    3224:	00000006 	andeq	r0, r0, r6
    3228:	00000000 	andeq	r0, r0, r0
    322c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    3230:	2d011501 	cfstr32cs	mvfx1, [r1, #-4]
    3234:	01000016 	tsteq	r0, r6, lsl r0
    3238:	0006020c 	andeq	r0, r6, ip, lsl #4
    323c:	00000000 	andeq	r0, r0, r0
    3240:	02000000 	andeq	r0, r0, #0
    3244:	1501007d 	strne	r0, [r1, #-125]	; 0xffffff83
    3248:	00158501 	andseq	r8, r5, r1, lsl #10
    324c:	02010100 	andeq	r0, r1, #0, 2
    3250:	00000006 	andeq	r0, r0, r6
    3254:	00000000 	andeq	r0, r0, r0
    3258:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    325c:	2c011501 	cfstr32cs	mvfx1, [r1], {1}
    3260:	01000014 	tsteq	r0, r4, lsl r0
    3264:	000601f8 	strdeq	r0, [r6], -r8
    3268:	00000000 	andeq	r0, r0, r0
    326c:	02000000 	andeq	r0, r0, #0
    3270:	1501007d 	strne	r0, [r1, #-125]	; 0xffffff83
    3274:	0014a201 	andseq	sl, r4, r1, lsl #4
    3278:	01ef0100 	mvneq	r0, r0, lsl #2
    327c:	00000006 	andeq	r0, r0, r6
    3280:	00000000 	andeq	r0, r0, r0
    3284:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    3288:	06011501 	streq	r1, [r1], -r1, lsl #10
    328c:	01000015 	tsteq	r0, r5, lsl r0
    3290:	000601e6 	andeq	r0, r6, r6, ror #3
    3294:	00000000 	andeq	r0, r0, r0
    3298:	02000000 	andeq	r0, r0, #0
    329c:	1501007d 	strne	r0, [r1, #-125]	; 0xffffff83
    32a0:	00146f01 	andseq	r6, r4, r1, lsl #30
    32a4:	01dd0100 	bicseq	r0, sp, r0, lsl #2
    32a8:	00000006 	andeq	r0, r0, r6
    32ac:	00000000 	andeq	r0, r0, r0
    32b0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    32b4:	b6011501 	strlt	r1, [r1], -r1, lsl #10
    32b8:	01000015 	tsteq	r0, r5, lsl r0
    32bc:	000601d4 	ldrdeq	r0, [r6], -r4
    32c0:	00000000 	andeq	r0, r0, r0
    32c4:	02000000 	andeq	r0, r0, #0
    32c8:	1401007d 	strne	r0, [r1], #-125	; 0xffffff83
    32cc:	00167f01 	andseq	r7, r6, r1, lsl #30
    32d0:	01cb0100 	biceq	r0, fp, r0, lsl #2
    32d4:	00029e0a 	andeq	r9, r2, sl, lsl #28
	...
    32e0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    32e4:	d4011401 	strle	r1, [r1], #-1025	; 0xfffffbff
    32e8:	01000015 	tsteq	r0, r5, lsl r0
    32ec:	9e0a01c2 	adfls<illegal precision>m	f0, f2, f2
    32f0:	00000002 	andeq	r0, r0, r2
    32f4:	00000000 	andeq	r0, r0, r0
    32f8:	02000000 	andeq	r0, r0, #0
    32fc:	1401007d 	strne	r0, [r1], #-125	; 0xffffff83
    3300:	0013b701 	andseq	fp, r3, r1, lsl #14
    3304:	01b90100 			; <UNDEFINED> instruction: 0x01b90100
    3308:	00029e0a 	andeq	r9, r2, sl, lsl #28
	...
    3314:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    3318:	6f011501 	svcvs	0x00011501
    331c:	01000015 	tsteq	r0, r5, lsl r0
    3320:	000d01af 	andeq	r0, sp, pc, lsr #3
    3324:	00000000 	andeq	r0, r0, r0
    3328:	02000000 	andeq	r0, r0, #0
    332c:	1501007d 	strne	r0, [r1, #-125]	; 0xffffff83
    3330:	0015a601 	andseq	sl, r5, r1, lsl #12
    3334:	019f0100 	orrseq	r0, pc, r0, lsl #2
    3338:	0000000d 	andeq	r0, r0, sp
    333c:	00000000 	andeq	r0, r0, r0
    3340:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    3344:	e1011601 	tst	r1, r1, lsl #12
    3348:	01000015 	tsteq	r0, r5, lsl r0
    334c:	680d0185 	stmdavs	sp, {r0, r2, r7, r8}
    3350:	90080009 	andls	r0, r8, r9
    3354:	66080009 	strvs	r0, [r8], -r9
    3358:	01000018 	tsteq	r0, r8, lsl r0
    335c:	00000988 	andeq	r0, r0, r8, lsl #19
    3360:	0015e517 	andseq	lr, r5, r7, lsl r5
    3364:	01850100 	orreq	r0, r5, r0, lsl #2
    3368:	00029e20 	andeq	r9, r2, r0, lsr #28
    336c:	00188c00 	andseq	r8, r8, r0, lsl #24
    3370:	00188600 	andseq	r8, r8, r0, lsl #12
    3374:	055f1800 	ldrbeq	r1, [pc, #-2048]	; 2b7c <_Min_Stack_Size+0x277c>
    3378:	87010000 	strhi	r0, [r1, -r0]
    337c:	029e0c01 	addseq	r0, lr, #256	; 0x100
    3380:	18bc0000 	ldmne	ip!, {}	; <UNPREDICTABLE>
    3384:	18b80000 	ldmne	r8!, {}	; <UNPREDICTABLE>
    3388:	4c180000 	ldcmi	0, cr0, [r8], {-0}
    338c:	01000014 	tsteq	r0, r4, lsl r0
    3390:	9e0c0188 	adfls<illegal precision>	f0, f4, #0.0
    3394:	dc000002 	stcle	0, cr0, [r0], {2}
    3398:	da000018 	ble	3400 <_Min_Stack_Size+0x3000>
    339c:	19000018 	stmdbne	r0, {r3, r4}
    33a0:	08000970 	stmdaeq	r0, {r4, r5, r6, r8, fp}
    33a4:	00000a24 	andeq	r0, r0, r4, lsr #20
    33a8:	00098219 	andeq	r8, r9, r9, lsl r2
    33ac:	000a2408 	andeq	r2, sl, r8, lsl #8
    33b0:	01140000 	tsteq	r4, r0
    33b4:	000015eb 	andeq	r1, r0, fp, ror #11
    33b8:	15017501 	strne	r7, [r1, #-1281]	; 0xfffffaff
    33bc:	00000743 	andeq	r0, r0, r3, asr #14
	...
    33c8:	01007d02 	tsteq	r0, r2, lsl #26
    33cc:	1408011a 	strne	r0, [r8], #-282	; 0xfffffee6
    33d0:	55010000 	strpl	r0, [r1, #-0]
    33d4:	070c1301 	streq	r1, [ip, -r1, lsl #6]
	...
    33e0:	18ef0000 	stmiane	pc!, {}^	; <UNPREDICTABLE>
    33e4:	0a010000 	beq	433ec <_Min_Stack_Size+0x42fec>
    33e8:	1700000a 	strne	r0, [r0, -sl]
    33ec:	00000778 	andeq	r0, r0, r8, ror r7
    33f0:	37015501 	strcc	r5, [r1, -r1, lsl #10]
    33f4:	00000743 	andeq	r0, r0, r3, asr #14
    33f8:	00001919 	andeq	r1, r0, r9, lsl r9
    33fc:	0000190f 	andeq	r1, r0, pc, lsl #18
    3400:	00161518 	andseq	r1, r6, r8, lsl r5
    3404:	01570100 	cmpeq	r7, r0, lsl #2
    3408:	00070c15 	andeq	r0, r7, r5, lsl ip
    340c:	00196a00 	andseq	r6, r9, r0, lsl #20
    3410:	00196200 	andseq	r6, r9, r0, lsl #4
    3414:	16081800 	strne	r1, [r8], -r0, lsl #16
    3418:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    341c:	07431701 	strbeq	r1, [r3, -r1, lsl #14]
    3420:	19a20000 	stmibne	r2!, {}	; <UNPREDICTABLE>
    3424:	19a00000 	stmibne	r0!, {}	; <UNPREDICTABLE>
    3428:	00190000 	andseq	r0, r9, r0
    342c:	54000000 	strpl	r0, [r0], #-0
    3430:	0000000a 	andeq	r0, r0, sl
    3434:	14510114 	ldrbne	r0, [r1], #-276	; 0xfffffeec
    3438:	4c010000 	stcmi	0, cr0, [r1], {-0}
    343c:	029e0a01 	addseq	r0, lr, #4096	; 0x1000
	...
    3448:	7d020000 	stcvc	0, cr0, [r2, #-0]
    344c:	01140100 	tsteq	r4, r0, lsl #2
    3450:	00000447 	andeq	r0, r0, r7, asr #8
    3454:	11014301 	tstne	r1, r1, lsl #6
    3458:	0000029e 	muleq	r0, lr, r2
    345c:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
    3460:	08000968 	stmdaeq	r0, {r3, r5, r6, r8, fp}
    3464:	01007d02 	tsteq	r0, r2, lsl #26
    3468:	00570115 	subseq	r0, r7, r5, lsl r1
    346c:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    3470:	09440d01 	stmdbeq	r4, {r0, r8, sl, fp}^
    3474:	095c0800 	ldmdbeq	ip, {fp}^
    3478:	7d020800 	stcvc	8, cr0, [r2, #-0]
    347c:	011b0100 	tsteq	fp, r0, lsl #2
    3480:	000004d7 	ldrdeq	r0, [r0], -r7
    3484:	0c1afd01 	ldceq	13, cr15, [sl], {1}
    3488:	f8000007 			; <UNDEFINED> instruction: 0xf8000007
    348c:	44080008 	strmi	r0, [r8], #-8
    3490:	b5080009 	strlt	r0, [r8, #-9]
    3494:	01000019 	tsteq	r0, r9, lsl r0
    3498:	00000aab 	andeq	r0, r0, fp, lsr #21
    349c:	0015fb1c 	andseq	pc, r5, ip, lsl fp	; <UNPREDICTABLE>
    34a0:	30fd0100 	rscscc	r0, sp, r0, lsl #2
    34a4:	0000029e 	muleq	r0, lr, r2
    34a8:	000019db 	ldrdeq	r1, [r0], -fp
    34ac:	000019d5 	ldrdeq	r1, [r0], -r5
    34b0:	00091419 	andeq	r1, r9, r9, lsl r4
    34b4:	000b4b08 	andeq	r4, fp, r8, lsl #22
    34b8:	092a1d00 	stmdbeq	sl!, {r8, sl, fp, ip}
    34bc:	0b5a0800 	bleq	16854c4 <_Min_Stack_Size+0x16850c4>
    34c0:	011e0000 	tsteq	lr, r0
    34c4:	ff090250 			; <UNDEFINED> instruction: 0xff090250
    34c8:	0251011e 	subseq	r0, r1, #-2147483641	; 0x80000007
    34cc:	011e0074 	tsteq	lr, r4, ror r0
    34d0:	00300152 	eorseq	r0, r0, r2, asr r1
    34d4:	61011f00 	tstvs	r1, r0, lsl #30
    34d8:	01000014 	tsteq	r0, r4, lsl r0
    34dc:	00000de6 	andeq	r0, r0, r6, ror #27
    34e0:	00000000 	andeq	r0, r0, r0
    34e4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    34e8:	011f0100 	tsteq	pc, r0, lsl #2
    34ec:	00001523 	andeq	r1, r0, r3, lsr #10
    34f0:	000ddb01 	andeq	sp, sp, r1, lsl #22
    34f4:	00000000 	andeq	r0, r0, r0
    34f8:	02000000 	andeq	r0, r0, #0
    34fc:	1b01007d 	blne	436f8 <_Min_Stack_Size+0x432f8>
    3500:	0014c001 	andseq	ip, r4, r1
    3504:	13be0100 			; <UNDEFINED> instruction: 0x13be0100
    3508:	0000070c 	andeq	r0, r0, ip, lsl #14
	...
    3514:	00001a07 	andeq	r1, r0, r7, lsl #20
    3518:	000afd01 	andeq	pc, sl, r1, lsl #26
    351c:	00001900 	andeq	r1, r0, r0, lsl #18
    3520:	0aab0000 	beq	feac3528 <_estack+0xdea83528>
    3524:	1b000000 	blne	352c <_Min_Stack_Size+0x312c>
    3528:	00155001 	andseq	r5, r5, r1
    352c:	139d0100 	orrsne	r0, sp, #0, 2
    3530:	0000070c 	andeq	r0, r0, ip, lsl #14
	...
    353c:	00001a27 	andeq	r1, r0, r7, lsr #20
    3540:	000b4b01 	andeq	r4, fp, r1, lsl #22
    3544:	00002000 	andeq	r2, r0, r0
    3548:	0b690000 	bleq	1a43550 <_Min_Stack_Size+0x1a43150>
    354c:	0b2e0000 	bleq	b83554 <_Min_Stack_Size+0xb83154>
    3550:	011e0000 	tsteq	lr, r0
    3554:	00330150 	eorseq	r0, r3, r0, asr r1
    3558:	00000020 	andeq	r0, r0, r0, lsr #32
    355c:	000a5400 	andeq	r5, sl, r0, lsl #8
    3560:	000b4100 	andeq	r4, fp, r0, lsl #2
    3564:	50011e00 	andpl	r1, r1, r0, lsl #28
    3568:	19003001 	stmdbne	r0, {r0, ip, sp}
    356c:	00000000 	andeq	r0, r0, r0
    3570:	00000ac0 	andeq	r0, r0, r0, asr #21
    3574:	01012100 	mrseq	r2, (UNDEF: 17)
    3578:	00000a3f 	andeq	r0, r0, pc, lsr sl
    357c:	00000a3f 	andeq	r0, r0, pc, lsr sl
    3580:	0a010b0a 	beq	461b0 <_Min_Stack_Size+0x45db0>
    3584:	68010121 	stmdavs	r1, {r0, r5, r8}
    3588:	68000011 	stmdavs	r0, {r0, r4}
    358c:	0a000011 	beq	35d8 <_Min_Stack_Size+0x31d8>
    3590:	21060107 	tstcs	r6, r7, lsl #2
    3594:	10930101 	addsne	r0, r3, r1, lsl #2
    3598:	10930000 	addsne	r0, r3, r0
    359c:	060a0000 	streq	r0, [sl], -r0
    35a0:	b6000601 	strlt	r0, [r0], -r1, lsl #12
    35a4:	02000006 	andeq	r0, r0, #6
    35a8:	000aa500 	andeq	sl, sl, r0, lsl #10
    35ac:	04010400 	streq	r0, [r1], #-1024	; 0xfffffc00
    35b0:	04000001 	streq	r0, [r0], #-1
    35b4:	0000168c 	andeq	r1, r0, ip, lsl #13
    35b8:	0000002f 	andeq	r0, r0, pc, lsr #32
    35bc:	00000320 	andeq	r0, r0, r0, lsr #6
	...
    35c8:	000027a6 	andeq	r2, r0, r6, lsr #15
    35cc:	be060102 	adflts	f0, f6, f2
    35d0:	03000000 	movweq	r0, #0
    35d4:	0000022e 	andeq	r0, r0, lr, lsr #4
    35d8:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    35dc:	02000000 	andeq	r0, r0, #0
    35e0:	00bc0801 	adcseq	r0, ip, r1, lsl #16
    35e4:	02020000 	andeq	r0, r2, #0
    35e8:	0001e705 	andeq	lr, r1, r5, lsl #14
    35ec:	07020200 	streq	r0, [r2, -r0, lsl #4]
    35f0:	000001ab 	andeq	r0, r0, fp, lsr #3
    35f4:	05050402 	streq	r0, [r5, #-1026]	; 0xfffffbfe
    35f8:	03000000 	movweq	r0, #0
    35fc:	00000353 	andeq	r0, r0, r3, asr r3
    3600:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
    3604:	02000000 	andeq	r0, r0, #0
    3608:	008c0704 	addeq	r0, ip, r4, lsl #14
    360c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3610:	00000005 	andeq	r0, r0, r5
    3614:	07080200 	streq	r0, [r8, -r0, lsl #4]
    3618:	00000087 	andeq	r0, r0, r7, lsl #1
    361c:	69050404 	stmdbvs	r5, {r2, sl}
    3620:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    3624:	00910704 	addseq	r0, r1, r4, lsl #14
    3628:	30030000 	andcc	r0, r3, r0
    362c:	03000002 	movweq	r0, #2
    3630:	00301318 	eorseq	r1, r0, r8, lsl r3
    3634:	87050000 	strhi	r0, [r5, -r0]
    3638:	06000000 	streq	r0, [r0], -r0
    363c:	00000087 	andeq	r0, r0, r7, lsl #1
    3640:	00035503 	andeq	r5, r3, r3, lsl #10
    3644:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    3648:	00000058 	andeq	r0, r0, r8, asr r0
    364c:	00009d05 	andeq	r9, r0, r5, lsl #26
    3650:	00a90600 	adceq	r0, r9, r0, lsl #12
    3654:	8c070000 	stchi	0, cr0, [r7], {-0}
    3658:	0101b904 	tsteq	r1, r4, lsl #18
    365c:	000011cb 	andeq	r1, r0, fp, asr #3
    3660:	00000213 	andeq	r0, r0, r3, lsl r2
    3664:	00100808 	andseq	r0, r0, r8, lsl #16
    3668:	01ba0400 			; <UNDEFINED> instruction: 0x01ba0400
    366c:	0000ae12 	andeq	sl, r0, r2, lsl lr
    3670:	00230200 	eoreq	r0, r3, r0, lsl #4
    3674:	000dd308 	andeq	sp, sp, r8, lsl #6
    3678:	01bb0400 			; <UNDEFINED> instruction: 0x01bb0400
    367c:	0000a912 	andeq	sl, r0, r2, lsl r9
    3680:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3684:	000d9208 	andeq	r9, sp, r8, lsl #4
    3688:	01bc0400 			; <UNDEFINED> instruction: 0x01bc0400
    368c:	0000a912 	andeq	sl, r0, r2, lsl r9
    3690:	08230200 	stmdaeq	r3!, {r9}
    3694:	000dd808 	andeq	sp, sp, r8, lsl #16
    3698:	01bd0400 			; <UNDEFINED> instruction: 0x01bd0400
    369c:	0000a912 	andeq	sl, r0, r2, lsl r9
    36a0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    36a4:	52435309 	subpl	r5, r3, #603979776	; 0x24000000
    36a8:	01be0400 			; <UNDEFINED> instruction: 0x01be0400
    36ac:	0000a912 	andeq	sl, r0, r2, lsl r9
    36b0:	10230200 	eorne	r0, r3, r0, lsl #4
    36b4:	52434309 	subpl	r4, r3, #603979776	; 0x24000000
    36b8:	01bf0400 			; <UNDEFINED> instruction: 0x01bf0400
    36bc:	0000a912 	andeq	sl, r0, r2, lsl r9
    36c0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    36c4:	50485309 	subpl	r5, r8, r9, lsl #6
    36c8:	01c00400 	biceq	r0, r0, r0, lsl #8
    36cc:	00022312 	andeq	r2, r2, r2, lsl r3
    36d0:	18230200 	stmdane	r3!, {r9}
    36d4:	00103b08 	andseq	r3, r0, r8, lsl #22
    36d8:	01c10400 	biceq	r0, r1, r0, lsl #8
    36dc:	0000a912 	andeq	sl, r0, r2, lsl r9
    36e0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    36e4:	000f4008 	andeq	r4, pc, r8
    36e8:	01c20400 	biceq	r0, r2, r0, lsl #8
    36ec:	0000a912 	andeq	sl, r0, r2, lsl r9
    36f0:	28230200 	stmdacs	r3!, {r9}
    36f4:	00135708 	andseq	r5, r3, r8, lsl #14
    36f8:	01c30400 	biceq	r0, r3, r0, lsl #8
    36fc:	0000a912 	andeq	sl, r0, r2, lsl r9
    3700:	2c230200 	sfmcs	f0, 4, [r3], #-0
    3704:	000dde08 	andeq	sp, sp, r8, lsl #28
    3708:	01c40400 	biceq	r0, r4, r0, lsl #8
    370c:	0000a912 	andeq	sl, r0, r2, lsl r9
    3710:	30230200 	eorcc	r0, r3, r0, lsl #4
    3714:	000dfc08 	andeq	pc, sp, r8, lsl #24
    3718:	01c50400 	biceq	r0, r5, r0, lsl #8
    371c:	0000a912 	andeq	sl, r0, r2, lsl r9
    3720:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    3724:	00103608 	andseq	r3, r0, r8, lsl #12
    3728:	01c60400 	biceq	r0, r6, r0, lsl #8
    372c:	0000a912 	andeq	sl, r0, r2, lsl r9
    3730:	38230200 	stmdacc	r3!, {r9}
    3734:	000ca408 	andeq	sl, ip, r8, lsl #8
    3738:	01c70400 	biceq	r0, r7, r0, lsl #8
    373c:	0000a912 	andeq	sl, r0, r2, lsl r9
    3740:	3c230200 	sfmcc	f0, 4, [r3], #-0
    3744:	52465009 	subpl	r5, r6, #9
    3748:	01c80400 	biceq	r0, r8, r0, lsl #8
    374c:	00023d12 	andeq	r3, r2, r2, lsl sp
    3750:	40230200 	eormi	r0, r3, r0, lsl #4
    3754:	52464409 	subpl	r4, r6, #150994944	; 0x9000000
    3758:	01c90400 	biceq	r0, r9, r0, lsl #8
    375c:	0000ae12 	andeq	sl, r0, r2, lsl lr
    3760:	48230200 	stmdami	r3!, {r9}
    3764:	52444109 	subpl	r4, r4, #1073741826	; 0x40000002
    3768:	01ca0400 	biceq	r0, sl, r0, lsl #8
    376c:	0000ae12 	andeq	sl, r0, r2, lsl lr
    3770:	4c230200 	sfmmi	f0, 4, [r3], #-0
    3774:	000e4008 	andeq	r4, lr, r8
    3778:	01cb0400 	biceq	r0, fp, r0, lsl #8
    377c:	00025712 	andeq	r5, r2, r2, lsl r7
    3780:	50230200 	eorpl	r0, r3, r0, lsl #4
    3784:	000b0808 	andeq	r0, fp, r8, lsl #16
    3788:	01cc0400 	biceq	r0, ip, r0, lsl #8
    378c:	00027112 	andeq	r7, r2, r2, lsl r1
    3790:	60230200 	eorvs	r0, r3, r0, lsl #4
    3794:	0004e408 	andeq	lr, r4, r8, lsl #8
    3798:	01cd0400 	biceq	r0, sp, r0, lsl #8
    379c:	00027612 	andeq	r7, r2, r2, lsl r6
    37a0:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    37a4:	00135108 	andseq	r5, r3, r8, lsl #2
    37a8:	01ce0400 	biceq	r0, lr, r0, lsl #8
    37ac:	0000a912 	andeq	sl, r0, r2, lsl r9
    37b0:	88230300 	stmdahi	r3!, {r8, r9}
    37b4:	930a0001 	movwls	r0, #40961	; 0xa001
    37b8:	23000000 	movwcs	r0, #0
    37bc:	0b000002 	bleq	37cc <_Min_Stack_Size+0x33cc>
    37c0:	00000080 	andeq	r0, r0, r0, lsl #1
    37c4:	1305000b 	movwne	r0, #20491	; 0x500b
    37c8:	0a000002 	beq	37d8 <_Min_Stack_Size+0x33d8>
    37cc:	000000ae 	andeq	r0, r0, lr, lsr #1
    37d0:	00000238 	andeq	r0, r0, r8, lsr r2
    37d4:	0000800b 	andeq	r8, r0, fp
    37d8:	06000100 	streq	r0, [r0], -r0, lsl #2
    37dc:	00000228 	andeq	r0, r0, r8, lsr #4
    37e0:	00023805 	andeq	r3, r2, r5, lsl #16
    37e4:	00ae0a00 	adceq	r0, lr, r0, lsl #20
    37e8:	02520000 	subseq	r0, r2, #0
    37ec:	800b0000 	andhi	r0, fp, r0
    37f0:	03000000 	movweq	r0, #0
    37f4:	02420600 	subeq	r0, r2, #0, 12
    37f8:	52050000 	andpl	r0, r5, #0
    37fc:	0a000002 	beq	380c <_Min_Stack_Size+0x340c>
    3800:	000000ae 	andeq	r0, r0, lr, lsr #1
    3804:	0000026c 	andeq	r0, r0, ip, ror #4
    3808:	0000800b 	andeq	r8, r0, fp
    380c:	06000400 	streq	r0, [r0], -r0, lsl #8
    3810:	0000025c 	andeq	r0, r0, ip, asr r2
    3814:	00026c05 	andeq	r6, r2, r5, lsl #24
    3818:	009d0a00 	addseq	r0, sp, r0, lsl #20
    381c:	02860000 	addeq	r0, r6, #0
    3820:	800b0000 	andhi	r0, fp, r0
    3824:	04000000 	streq	r0, [r0], #-0
    3828:	11cc0c00 	bicne	r0, ip, r0, lsl #24
    382c:	cf040000 	svcgt	0x00040000
    3830:	00b30301 	adcseq	r0, r3, r1, lsl #6
    3834:	9d0a0000 	stcls	0, cr0, [sl, #-0]
    3838:	a3000000 	movwge	r0, #0
    383c:	0b000002 	bleq	384c <_Min_Stack_Size+0x344c>
    3840:	00000080 	andeq	r0, r0, r0, lsl #1
    3844:	c70d0001 	strgt	r0, [sp, -r1]
    3848:	05000004 	streq	r0, [r0, #-4]
    384c:	009d114a 	addseq	r1, sp, sl, asr #2
    3850:	01010000 	mrseq	r0, (UNDEF: 1)
    3854:	0000980a 	andeq	r9, r0, sl, lsl #16
    3858:	0002c100 	andeq	ip, r2, r0, lsl #2
    385c:	00800b00 	addeq	r0, r0, r0, lsl #22
    3860:	000f0000 	andeq	r0, pc, r0
    3864:	0002b106 	andeq	fp, r2, r6, lsl #2
    3868:	041e0d00 	ldreq	r0, [lr], #-3328	; 0xfffff300
    386c:	4c050000 	stcmi	0, cr0, [r5], {-0}
    3870:	0002c117 	andeq	ip, r2, r7, lsl r1
    3874:	0a010100 	beq	43c7c <_Min_Stack_Size+0x4387c>
    3878:	00000098 	muleq	r0, r8, r0
    387c:	000002e4 	andeq	r0, r0, r4, ror #5
    3880:	0000800b 	andeq	r8, r0, fp
    3884:	06000700 	streq	r0, [r0], -r0, lsl #14
    3888:	000002d4 	ldrdeq	r0, [r0], -r4
    388c:	0002560d 	andeq	r5, r2, sp, lsl #12
    3890:	174d0500 	strbne	r0, [sp, -r0, lsl #10]
    3894:	000002e4 	andeq	r0, r0, r4, ror #5
    3898:	98070101 	stmdals	r7, {r0, r8}
    389c:	0101f306 	tsteq	r1, r6, lsl #6	; <UNPREDICTABLE>
    38a0:	000003e7 	andeq	r0, r0, r7, ror #7
    38a4:	0000052b 	andeq	r0, r0, fp, lsr #10
    38a8:	00524309 	subseq	r4, r2, r9, lsl #6
    38ac:	1101f406 	tstne	r1, r6, lsl #8	; <UNPREDICTABLE>
    38b0:	000000a9 	andeq	r0, r0, r9, lsr #1
    38b4:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    38b8:	00000343 	andeq	r0, r0, r3, asr #6
    38bc:	1101f506 	tstne	r1, r6, lsl #10	; <UNPREDICTABLE>
    38c0:	000000a9 	andeq	r0, r0, r9, lsr #1
    38c4:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    38c8:	000002c1 	andeq	r0, r0, r1, asr #5
    38cc:	1101f606 	tstne	r1, r6, lsl #12	; <UNPREDICTABLE>
    38d0:	000000a9 	andeq	r0, r0, r9, lsr #1
    38d4:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    38d8:	00524943 	subseq	r4, r2, r3, asr #18
    38dc:	1101f706 	tstne	r1, r6, lsl #14	; <UNPREDICTABLE>
    38e0:	000000a9 	andeq	r0, r0, r9, lsr #1
    38e4:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    38e8:	000002cb 	andeq	r0, r0, fp, asr #5
    38ec:	1101f806 	tstne	r1, r6, lsl #16	; <UNPREDICTABLE>
    38f0:	000000a9 	andeq	r0, r0, r9, lsr #1
    38f4:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    38f8:	000005cf 	andeq	r0, r0, pc, asr #11
    38fc:	1101f906 	tstne	r1, r6, lsl #18	; <UNPREDICTABLE>
    3900:	000000a9 	andeq	r0, r0, r9, lsr #1
    3904:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    3908:	0000057b 	andeq	r0, r0, fp, ror r5
    390c:	1101fa06 	tstne	r1, r6, lsl #20	; <UNPREDICTABLE>
    3910:	000000a9 	andeq	r0, r0, r9, lsr #1
    3914:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
    3918:	000004e4 	andeq	r0, r0, r4, ror #9
    391c:	1101fb06 	tstne	r1, r6, lsl #22	; <UNPREDICTABLE>
    3920:	0000009d 	muleq	r0, sp, r0
    3924:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    3928:	000004b3 			; <UNDEFINED> instruction: 0x000004b3
    392c:	1101fc06 	tstne	r1, r6, lsl #24	; <UNPREDICTABLE>
    3930:	000000a9 	andeq	r0, r0, r9, lsr #1
    3934:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    3938:	00000307 	andeq	r0, r0, r7, lsl #6
    393c:	1101fd06 	tstne	r1, r6, lsl #26	; <UNPREDICTABLE>
    3940:	000000a9 	andeq	r0, r0, r9, lsr #1
    3944:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    3948:	00000584 	andeq	r0, r0, r4, lsl #11
    394c:	1101fe06 	tstne	r1, r6, lsl #28	; <UNPREDICTABLE>
    3950:	00000293 	muleq	r0, r3, r2
    3954:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
    3958:	00000702 	andeq	r0, r0, r2, lsl #14
    395c:	1101ff06 	tstne	r1, r6, lsl #30	; <UNPREDICTABLE>
    3960:	000000a9 	andeq	r0, r0, r9, lsr #1
    3964:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
    3968:	0000065c 	andeq	r0, r0, ip, asr r6
    396c:	11020006 	tstne	r2, r6
    3970:	000000a9 	andeq	r0, r0, r9, lsr #1
    3974:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
    3978:	00000459 	andeq	r0, r0, r9, asr r4
    397c:	11020106 	tstne	r2, r6, lsl #2
    3980:	000000a9 	andeq	r0, r0, r9, lsr #1
    3984:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
    3988:	00000503 	andeq	r0, r0, r3, lsl #10
    398c:	11020206 	tstne	r2, r6, lsl #4
    3990:	0000009d 	muleq	r0, sp, r0
    3994:	083c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}
    3998:	00000654 	andeq	r0, r0, r4, asr r6
    399c:	11020306 	tstne	r2, r6, lsl #6
    39a0:	000000a9 	andeq	r0, r0, r9, lsr #1
    39a4:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
    39a8:	00000573 	andeq	r0, r0, r3, ror r5
    39ac:	11020406 	tstne	r2, r6, lsl #8
    39b0:	000000a9 	andeq	r0, r0, r9, lsr #1
    39b4:	08442302 	stmdaeq	r4, {r1, r8, r9, sp}^
    39b8:	0000058e 	andeq	r0, r0, lr, lsl #11
    39bc:	11020506 	tstne	r2, r6, lsl #10
    39c0:	00000293 	muleq	r0, r3, r2
    39c4:	08482302 	stmdaeq	r8, {r1, r8, r9, sp}^
    39c8:	000002aa 	andeq	r0, r0, sl, lsr #5
    39cc:	11020606 	tstne	r2, r6, lsl #12
    39d0:	000000a9 	andeq	r0, r0, r9, lsr #1
    39d4:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
    39d8:	00000497 	muleq	r0, r7, r4
    39dc:	11020706 	tstne	r2, r6, lsl #14
    39e0:	000000a9 	andeq	r0, r0, r9, lsr #1
    39e4:	08542302 	ldmdaeq	r4, {r1, r8, r9, sp}^
    39e8:	00000555 	andeq	r0, r0, r5, asr r5
    39ec:	11020806 	tstne	r2, r6, lsl #16
    39f0:	000000a9 	andeq	r0, r0, r9, lsr #1
    39f4:	08582302 	ldmdaeq	r8, {r1, r8, r9, sp}^
    39f8:	0000050d 	andeq	r0, r0, sp, lsl #10
    39fc:	11020906 	tstne	r2, r6, lsl #18
    3a00:	0000009d 	muleq	r0, sp, r0
    3a04:	085c2302 	ldmdaeq	ip, {r1, r8, r9, sp}^
    3a08:	000003d2 	ldrdeq	r0, [r0], -r2
    3a0c:	11020a06 	tstne	r2, r6, lsl #20
    3a10:	000000a9 	andeq	r0, r0, r9, lsr #1
    3a14:	08602302 	stmdaeq	r0!, {r1, r8, r9, sp}^
    3a18:	00000414 	andeq	r0, r0, r4, lsl r4
    3a1c:	11020b06 	tstne	r2, r6, lsl #22
    3a20:	000000a9 	andeq	r0, r0, r9, lsr #1
    3a24:	08642302 	stmdaeq	r4!, {r1, r8, r9, sp}^
    3a28:	00000517 	andeq	r0, r0, r7, lsl r5
    3a2c:	11020c06 	tstne	r2, r6, lsl #24
    3a30:	00000293 	muleq	r0, r3, r2
    3a34:	08682302 	stmdaeq	r8!, {r1, r8, r9, sp}^
    3a38:	000006c7 	andeq	r0, r0, r7, asr #13
    3a3c:	11020d06 	tstne	r2, r6, lsl #26
    3a40:	000000a9 	andeq	r0, r0, r9, lsr #1
    3a44:	09702302 	ldmdbeq	r0!, {r1, r8, r9, sp}^
    3a48:	00525343 	subseq	r5, r2, r3, asr #6
    3a4c:	11020e06 	tstne	r2, r6, lsl #28
    3a50:	000000a9 	andeq	r0, r0, r9, lsr #1
    3a54:	08742302 	ldmdaeq	r4!, {r1, r8, r9, sp}^
    3a58:	00000521 	andeq	r0, r0, r1, lsr #10
    3a5c:	11020f06 	tstne	r2, r6, lsl #30
    3a60:	00000293 	muleq	r0, r3, r2
    3a64:	08782302 	ldmdaeq	r8!, {r1, r8, r9, sp}^
    3a68:	00000690 	muleq	r0, r0, r6
    3a6c:	11021006 	tstne	r2, r6
    3a70:	000000a9 	andeq	r0, r0, r9, lsr #1
    3a74:	01802303 	orreq	r2, r0, r3, lsl #6
    3a78:	0003dc08 	andeq	sp, r3, r8, lsl #24
    3a7c:	02110600 	andseq	r0, r1, #0, 12
    3a80:	0000a911 	andeq	sl, r0, r1, lsl r9
    3a84:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    3a88:	052b0801 	streq	r0, [fp, #-2049]!	; 0xfffff7ff
    3a8c:	12060000 	andne	r0, r6, #0
    3a90:	009d1102 	addseq	r1, sp, r2, lsl #2
    3a94:	23030000 	movwcs	r0, #12288	; 0x3000
    3a98:	be080188 	adflt<illegal precision>	f0, f0, #0.0
    3a9c:	06000002 	streq	r0, [r0], -r2
    3aa0:	a9110213 	ldmdbge	r1, {r0, r1, r4, r9}
    3aa4:	03000000 	movweq	r0, #0
    3aa8:	08018c23 	stmdaeq	r1, {r0, r1, r5, sl, fp, pc}
    3aac:	000006be 			; <UNDEFINED> instruction: 0x000006be
    3ab0:	11021406 	tstne	r2, r6, lsl #8
    3ab4:	000000a9 	andeq	r0, r0, r9, lsr #1
    3ab8:	01902303 	orrseq	r2, r0, r3, lsl #6
    3abc:	0002d408 	andeq	sp, r2, r8, lsl #8
    3ac0:	02150600 	andseq	r0, r5, #0, 12
    3ac4:	0000a911 	andeq	sl, r0, r1, lsl r9
    3ac8:	94230300 	strtls	r0, [r3], #-768	; 0xfffffd00
    3acc:	e90c0001 	stmdb	ip, {r0}
    3ad0:	06000003 	streq	r0, [r0], -r3
    3ad4:	f7030216 			; <UNDEFINED> instruction: 0xf7030216
    3ad8:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    3adc:	003c0107 	eorseq	r0, ip, r7, lsl #2
    3ae0:	ba070000 	blt	1c3ae8 <_Min_Stack_Size+0x1c36e8>
    3ae4:	0003f501 	andeq	pc, r3, r1, lsl #10
    3ae8:	00055700 	andeq	r5, r5, r0, lsl #14
    3aec:	23a30f00 			; <UNDEFINED> instruction: 0x23a30f00
    3af0:	10000000 	andne	r0, r0, r0
    3af4:	00544553 	subseq	r4, r4, r3, asr r5
    3af8:	f7030001 			; <UNDEFINED> instruction: 0xf7030001
    3afc:	07000003 	streq	r0, [r0, -r3]
    3b00:	053803bd 	ldreq	r0, [r8, #-957]!	; 0xfffffc43
    3b04:	070e0000 	streq	r0, [lr, -r0]
    3b08:	00003c01 	andeq	r3, r0, r1, lsl #24
    3b0c:	01c00700 	biceq	r0, r0, r0, lsl #14
    3b10:	00000331 	andeq	r0, r0, r1, lsr r3
    3b14:	00000582 	andeq	r0, r0, r2, lsl #11
    3b18:	0003800f 	andeq	r8, r3, pc
    3b1c:	190f0000 	stmdbne	pc, {}	; <UNPREDICTABLE>
    3b20:	01000003 	tsteq	r0, r3
    3b24:	03330300 	teqeq	r3, #0, 6
    3b28:	c3070000 	movwgt	r0, #28672	; 0x7000
    3b2c:	00056303 	andeq	r6, r5, r3, lsl #6
    3b30:	01070e00 	tsteq	r7, r0, lsl #28
    3b34:	0000003c 	andeq	r0, r0, ip, lsr r0
    3b38:	c901c707 	stmdbgt	r1, {r0, r1, r2, r8, r9, sl, lr, pc}
    3b3c:	ad000013 	stcge	0, cr0, [r0, #-76]	; 0xffffffb4
    3b40:	0f000005 	svceq	0x00000005
    3b44:	00001648 	andeq	r1, r0, r8, asr #12
    3b48:	1f190f00 	svcne	0x00190f00
    3b4c:	00010000 	andeq	r0, r1, r0
    3b50:	0013cb03 	andseq	ip, r3, r3, lsl #22
    3b54:	03ca0700 	biceq	r0, sl, #0, 14
    3b58:	0000058e 	andeq	r0, r0, lr, lsl #11
    3b5c:	be040802 	cdplt	8, 0, cr0, cr4, cr2, {0}
    3b60:	11000001 	tstne	r0, r1
    3b64:	0000001d 	andeq	r0, r0, sp, lsl r0
    3b68:	3c01070e 	stccc	7, cr0, [r1], {14}
    3b6c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3b70:	14f00133 	ldrbtne	r0, [r0], #307	; 0x133
    3b74:	05f00000 	ldrbeq	r0, [r0, #0]!
    3b78:	500f0000 	andpl	r0, pc, r0
    3b7c:	64000016 	strvs	r0, [r0], #-22	; 0xffffffea
    3b80:	00148e0f 	andseq	r8, r4, pc, lsl #28
    3b84:	dd0f0a00 	vstrle	s0, [pc, #-0]	; 3b8c <_Min_Stack_Size+0x378c>
    3b88:	01000014 	tsteq	r0, r4, lsl r0
    3b8c:	0015590f 	andseq	r5, r5, pc, lsl #18
    3b90:	03000100 	movweq	r0, #256	; 0x100
    3b94:	000014f2 	strdeq	r1, [r0], -r2
    3b98:	c5033808 	strgt	r3, [r3, #-2056]	; 0xfffff7f8
    3b9c:	12000005 	andne	r0, r0, #5
    3ba0:	000002a3 	andeq	r0, r0, r3, lsr #5
    3ba4:	050a8a01 	streq	r8, [sl, #-2561]	; 0xfffff5ff
    3ba8:	00000803 	andeq	r0, r0, r3, lsl #16
    3bac:	02c61220 	sbceq	r1, r6, #32, 4
    3bb0:	8b010000 	blhi	43bb8 <_Min_Stack_Size+0x437b8>
    3bb4:	ac03050f 	cfstr32ge	mvfx0, [r3], {15}
    3bb8:	12080022 	andne	r0, r8, #34	; 0x22
    3bbc:	000002e9 	andeq	r0, r0, r9, ror #5
    3bc0:	050f8c01 	streq	r8, [pc, #-3073]	; 2fc7 <_Min_Stack_Size+0x2bc7>
    3bc4:	00000003 	andeq	r0, r0, r3
    3bc8:	bd011300 	stclt	3, cr1, [r1, #-0]
    3bcc:	01000016 	tsteq	r0, r6, lsl r0
    3bd0:	000006dd 	ldrdeq	r0, [r0], -sp
    3bd4:	00000000 	andeq	r0, r0, r0
    3bd8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    3bdc:	06a40100 	strteq	r0, [r4], r0, lsl #2
    3be0:	74140000 	ldrvc	r0, [r4], #-0
    3be4:	0100706d 	tsteq	r0, sp, rrx
    3be8:	009d0cdf 			; <UNDEFINED> instruction: 0x009d0cdf
    3bec:	1a530000 	bne	14c3bf4 <_Min_Stack_Size+0x14c37f4>
    3bf0:	1a470000 	bne	11c3bf8 <_Min_Stack_Size+0x11c37f8>
    3bf4:	70150000 	andsvc	r0, r5, r0
    3bf8:	01000003 	tsteq	r0, r3
    3bfc:	009d15df 			; <UNDEFINED> instruction: 0x009d15df
    3c00:	1aa80000 	bne	fea03c08 <_estack+0xde9c3c08>
    3c04:	1a9e0000 	bne	fe783c0c <_estack+0xde743c0c>
    3c08:	29150000 	ldmdbcs	r5, {}	; <UNPREDICTABLE>
    3c0c:	01000002 	tsteq	r0, r2
    3c10:	009d21df 			; <UNDEFINED> instruction: 0x009d21df
    3c14:	1af20000 	bne	ffc83c1c <_estack+0xdfc43c1c>
    3c18:	1aea0000 	bne	ffa83c20 <_estack+0xdfa43c20>
    3c1c:	a8150000 	ldmdage	r5, {}	; <UNPREDICTABLE>
    3c20:	01000016 	tsteq	r0, r6, lsl r0
    3c24:	009d2bdf 			; <UNDEFINED> instruction: 0x009d2bdf
    3c28:	1b2f0000 	blne	bc3c30 <_Min_Stack_Size+0xbc3830>
    3c2c:	1b290000 	blne	a43c34 <_Min_Stack_Size+0xa43834>
    3c30:	bf150000 	svclt	0x00150000
    3c34:	01000005 	tsteq	r0, r5
    3c38:	009d3adf 			; <UNDEFINED> instruction: 0x009d3adf
    3c3c:	1b690000 	blne	1a43c44 <_Min_Stack_Size+0x1a43844>
    3c40:	1b610000 	blne	1843c48 <_Min_Stack_Size+0x1843848>
    3c44:	16000000 	strne	r0, [r0], -r0
    3c48:	0016b201 	andseq	fp, r6, r1, lsl #4
    3c4c:	06a80100 	strteq	r0, [r8], r0, lsl #2
	...
    3c58:	01007d02 	tsteq	r0, r2, lsl #26
    3c5c:	000e1800 	andeq	r1, lr, r0, lsl #16
    3c60:	ee000200 	cdp	2, 0, cr0, cr0, cr0, {0}
    3c64:	0400000b 	streq	r0, [r0], #-11
    3c68:	00010401 	andeq	r0, r1, r1, lsl #8
    3c6c:	1bbb0400 	blne	feec4c74 <_estack+0xdee84c74>
    3c70:	002f0000 	eoreq	r0, pc, r0
    3c74:	03380000 	teqeq	r8, #0
	...
    3c80:	2a2e0000 	bcs	b83c88 <_Min_Stack_Size+0xb83888>
    3c84:	01020000 	mrseq	r0, (UNDEF: 2)
    3c88:	0000be06 	andeq	fp, r0, r6, lsl #28
    3c8c:	08010200 	stmdaeq	r1, {r9}
    3c90:	000000bc 	strheq	r0, [r0], -ip
    3c94:	e7050202 	str	r0, [r5, -r2, lsl #4]
    3c98:	02000001 	andeq	r0, r0, #1
    3c9c:	01ab0702 			; <UNDEFINED> instruction: 0x01ab0702
    3ca0:	04020000 	streq	r0, [r2], #-0
    3ca4:	00000505 	andeq	r0, r0, r5, lsl #10
    3ca8:	03530300 	cmpeq	r3, #0, 6
    3cac:	4f020000 	svcmi	0x00020000
    3cb0:	00005819 	andeq	r5, r0, r9, lsl r8
    3cb4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3cb8:	0000008c 	andeq	r0, r0, ip, lsl #1
    3cbc:	00050802 	andeq	r0, r5, r2, lsl #16
    3cc0:	02000000 	andeq	r0, r0, #0
    3cc4:	00870708 	addeq	r0, r7, r8, lsl #14
    3cc8:	04040000 	streq	r0, [r4], #-0
    3ccc:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3cd0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3cd4:	00000091 	muleq	r0, r1, r0
    3cd8:	00035503 	andeq	r5, r3, r3, lsl #10
    3cdc:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    3ce0:	0000004c 	andeq	r0, r0, ip, asr #32
    3ce4:	00007b05 	andeq	r7, r0, r5, lsl #22
    3ce8:	007b0600 	rsbseq	r0, fp, r0, lsl #12
    3cec:	d2070000 	andle	r0, r7, #0
    3cf0:	01000017 	tsteq	r0, r7, lsl r0
    3cf4:	007b110b 	rsbseq	r1, fp, fp, lsl #2
    3cf8:	01010000 	mrseq	r0, (UNDEF: 1)
    3cfc:	00172807 	andseq	r2, r7, r7, lsl #16
    3d00:	110c0100 	mrsne	r0, (UNDEF: 28)
    3d04:	0000007b 	andeq	r0, r0, fp, ror r0
    3d08:	93070101 	movwls	r0, #28929	; 0x7101
    3d0c:	01000017 	tsteq	r0, r7, lsl r0
    3d10:	007b110d 	rsbseq	r1, fp, sp, lsl #2
    3d14:	01010000 	mrseq	r0, (UNDEF: 1)
    3d18:	001d2607 	andseq	r2, sp, r7, lsl #12
    3d1c:	110e0100 	mrsne	r0, (UNDEF: 30)
    3d20:	0000007b 	andeq	r0, r0, fp, ror r0
    3d24:	70070101 	andvc	r0, r7, r1, lsl #2
    3d28:	01000019 	tsteq	r0, r9, lsl r0
    3d2c:	007b110f 	rsbseq	r1, fp, pc, lsl #2
    3d30:	01010000 	mrseq	r0, (UNDEF: 1)
    3d34:	0019c507 	andseq	ip, r9, r7, lsl #10
    3d38:	11100100 	tstne	r0, r0, lsl #2
    3d3c:	0000007b 	andeq	r0, r0, fp, ror r0
    3d40:	f5080101 			; <UNDEFINED> instruction: 0xf5080101
    3d44:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    3d48:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    3d4c:	00000074 	andeq	r0, r0, r4, ror r0
    3d50:	040a0070 	streq	r0, [sl], #-112	; 0xffffff90
    3d54:	000000fb 	strdeq	r0, [r0], -fp
    3d58:	18b80c0b 	ldmne	r8!, {r0, r1, r3, sl, fp}
    3d5c:	91010000 	mrsls	r0, (UNDEF: 1)
    3d60:	0000e509 	andeq	lr, r0, r9, lsl #10
    3d64:	03050100 	movweq	r0, #20736	; 0x5100
    3d68:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3d6c:	1cfe010d 	ldfnee	f0, [lr], #52	; 0x34
    3d70:	8d010000 	stchi	0, cr0, [r1, #-0]
    3d74:	000bb40d 	andeq	fp, fp, sp, lsl #8
    3d78:	000bba08 	andeq	fp, fp, r8, lsl #20
    3d7c:	001b9f08 	andseq	r9, fp, r8, lsl #30
    3d80:	01330100 	teqeq	r3, r0, lsl #2
    3d84:	ba0e0000 	blt	383d8c <_Min_Stack_Size+0x38398c>
    3d88:	4b08000b 	blmi	203dbc <_Min_Stack_Size+0x2039bc>
    3d8c:	0000000d 	andeq	r0, r0, sp
    3d90:	1bc5010d 	blne	ff1441cc <_estack+0xdf1041cc>
    3d94:	8c010000 	stchi	0, cr0, [r1], {-0}
    3d98:	000bae0d 	andeq	sl, fp, sp, lsl #28
    3d9c:	000bb408 	andeq	fp, fp, r8, lsl #8
    3da0:	001bbf08 	andseq	fp, fp, r8, lsl #30
    3da4:	01570100 	cmpeq	r7, r0, lsl #2
    3da8:	b40e0000 	strlt	r0, [lr], #-0
    3dac:	4b08000b 	blmi	203de0 <_Min_Stack_Size+0x2039e0>
    3db0:	0000000d 	andeq	r0, r0, sp
    3db4:	1817010d 	ldmdane	r7, {r0, r2, r3, r8}
    3db8:	8b010000 	blhi	43dc0 <_Min_Stack_Size+0x439c0>
    3dbc:	000ba80d 	andeq	sl, fp, sp, lsl #16
    3dc0:	000bae08 	andeq	sl, fp, r8, lsl #28
    3dc4:	001bdf08 	andseq	sp, fp, r8, lsl #30
    3dc8:	017b0100 	cmneq	fp, r0, lsl #2
    3dcc:	ae0e0000 	cdpge	0, 0, cr0, cr14, cr0, {0}
    3dd0:	4b08000b 	blmi	203e04 <_Min_Stack_Size+0x203a04>
    3dd4:	0000000d 	andeq	r0, r0, sp
    3dd8:	1c74010d 	ldfnee	f0, [r4], #-52	; 0xffffffcc
    3ddc:	8a010000 	bhi	43de4 <_Min_Stack_Size+0x439e4>
    3de0:	000ba20d 	andeq	sl, fp, sp, lsl #4
    3de4:	000ba808 	andeq	sl, fp, r8, lsl #16
    3de8:	001bff08 	andseq	pc, fp, r8, lsl #30
    3dec:	019f0100 	orrseq	r0, pc, r0, lsl #2
    3df0:	a80e0000 	stmdage	lr, {}	; <UNPREDICTABLE>
    3df4:	4b08000b 	blmi	203e28 <_Min_Stack_Size+0x203a28>
    3df8:	0000000d 	andeq	r0, r0, sp
    3dfc:	1906010d 	stmdbne	r6, {r0, r2, r3, r8}
    3e00:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    3e04:	000b9c0d 	andeq	r9, fp, sp, lsl #24
    3e08:	000ba208 	andeq	sl, fp, r8, lsl #4
    3e0c:	001c1f08 	andseq	r1, ip, r8, lsl #30
    3e10:	01c30100 	biceq	r0, r3, r0, lsl #2
    3e14:	a20e0000 	andge	r0, lr, #0
    3e18:	4b08000b 	blmi	203e4c <_Min_Stack_Size+0x203a4c>
    3e1c:	0000000d 	andeq	r0, r0, sp
    3e20:	19f5010d 	ldmibne	r5!, {r0, r2, r3, r8}^
    3e24:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    3e28:	000b960d 	andeq	r9, fp, sp, lsl #12
    3e2c:	000b9c08 	andeq	r9, fp, r8, lsl #24
    3e30:	001c3f08 	andseq	r3, ip, r8, lsl #30
    3e34:	01e70100 	mvneq	r0, r0, lsl #2
    3e38:	9c0e0000 	stcls	0, cr0, [lr], {-0}
    3e3c:	4b08000b 	blmi	203e70 <_Min_Stack_Size+0x203a70>
    3e40:	0000000d 	andeq	r0, r0, sp
    3e44:	17da010d 	ldrbne	r0, [sl, sp, lsl #2]
    3e48:	87010000 	strhi	r0, [r1, -r0]
    3e4c:	000b900d 	andeq	r9, fp, sp
    3e50:	000b9608 	andeq	r9, fp, r8, lsl #12
    3e54:	001c5f08 	andseq	r5, ip, r8, lsl #30
    3e58:	020b0100 	andeq	r0, fp, #0, 2
    3e5c:	960e0000 	strls	r0, [lr], -r0
    3e60:	4b08000b 	blmi	203e94 <_Min_Stack_Size+0x203a94>
    3e64:	0000000d 	andeq	r0, r0, sp
    3e68:	16fd010d 	ldrbtne	r0, [sp], sp, lsl #2
    3e6c:	86010000 	strhi	r0, [r1], -r0
    3e70:	000b8a0d 	andeq	r8, fp, sp, lsl #20
    3e74:	000b9008 	andeq	r9, fp, r8
    3e78:	001c7f08 	andseq	r7, ip, r8, lsl #30
    3e7c:	022f0100 	eoreq	r0, pc, #0, 2
    3e80:	900e0000 	andls	r0, lr, r0
    3e84:	4b08000b 	blmi	203eb8 <_Min_Stack_Size+0x203ab8>
    3e88:	0000000d 	andeq	r0, r0, sp
    3e8c:	1b95010d 	blne	fe5442c8 <_estack+0xde5042c8>
    3e90:	85010000 	strhi	r0, [r1, #-0]
    3e94:	000b840d 	andeq	r8, fp, sp, lsl #8
    3e98:	000b8a08 	andeq	r8, fp, r8, lsl #20
    3e9c:	001c9f08 	andseq	r9, ip, r8, lsl #30
    3ea0:	02530100 	subseq	r0, r3, #0, 2
    3ea4:	8a0e0000 	bhi	383eac <_Min_Stack_Size+0x383aac>
    3ea8:	4b08000b 	blmi	203edc <_Min_Stack_Size+0x203adc>
    3eac:	0000000d 	andeq	r0, r0, sp
    3eb0:	18d4010d 	ldmne	r4, {r0, r2, r3, r8}^
    3eb4:	84010000 	strhi	r0, [r1], #-0
    3eb8:	000b7e0d 	andeq	r7, fp, sp, lsl #28
    3ebc:	000b8408 	andeq	r8, fp, r8, lsl #8
    3ec0:	001cbf08 	andseq	fp, ip, r8, lsl #30
    3ec4:	02770100 	rsbseq	r0, r7, #0, 2
    3ec8:	840e0000 	strhi	r0, [lr], #-0
    3ecc:	4b08000b 	blmi	203f00 <_Min_Stack_Size+0x203b00>
    3ed0:	0000000d 	andeq	r0, r0, sp
    3ed4:	1710010d 	ldrne	r0, [r0, -sp, lsl #2]
    3ed8:	83010000 	movwhi	r0, #4096	; 0x1000
    3edc:	000b780d 	andeq	r7, fp, sp, lsl #16
    3ee0:	000b7e08 	andeq	r7, fp, r8, lsl #28
    3ee4:	001cdf08 	andseq	sp, ip, r8, lsl #30
    3ee8:	029b0100 	addseq	r0, fp, #0, 2
    3eec:	7e0e0000 	cdpvc	0, 0, cr0, cr14, cr0, {0}
    3ef0:	4b08000b 	blmi	203f24 <_Min_Stack_Size+0x203b24>
    3ef4:	0000000d 	andeq	r0, r0, sp
    3ef8:	16d3010d 	ldrbne	r0, [r3], sp, lsl #2
    3efc:	82010000 	andhi	r0, r1, #0
    3f00:	000b720d 	andeq	r7, fp, sp, lsl #4
    3f04:	000b7808 	andeq	r7, fp, r8, lsl #16
    3f08:	001cff08 	andseq	pc, ip, r8, lsl #30
    3f0c:	02bf0100 	adcseq	r0, pc, #0, 2
    3f10:	780e0000 	stmdavc	lr, {}	; <UNPREDICTABLE>
    3f14:	4b08000b 	blmi	203f48 <_Min_Stack_Size+0x203b48>
    3f18:	0000000d 	andeq	r0, r0, sp
    3f1c:	1ab1010d 	bne	fec44358 <_estack+0xdec04358>
    3f20:	81010000 	mrshi	r0, (UNDEF: 1)
    3f24:	000b6c0d 	andeq	r6, fp, sp, lsl #24
    3f28:	000b7208 	andeq	r7, fp, r8, lsl #4
    3f2c:	001d1f08 	andseq	r1, sp, r8, lsl #30
    3f30:	02e30100 	rsceq	r0, r3, #0, 2
    3f34:	720e0000 	andvc	r0, lr, #0
    3f38:	4b08000b 	blmi	203f6c <_Min_Stack_Size+0x203b6c>
    3f3c:	0000000d 	andeq	r0, r0, sp
    3f40:	1d14010d 	ldfnes	f0, [r4, #-52]	; 0xffffffcc
    3f44:	80010000 	andhi	r0, r1, r0
    3f48:	000b660d 	andeq	r6, fp, sp, lsl #12
    3f4c:	000b6c08 	andeq	r6, fp, r8, lsl #24
    3f50:	001d3f08 	andseq	r3, sp, r8, lsl #30
    3f54:	03070100 	movweq	r0, #28928	; 0x7100
    3f58:	6c0e0000 	stcvs	0, cr0, [lr], {-0}
    3f5c:	4b08000b 	blmi	203f90 <_Min_Stack_Size+0x203b90>
    3f60:	0000000d 	andeq	r0, r0, sp
    3f64:	1b5a010d 	blne	16843a0 <_Min_Stack_Size+0x1683fa0>
    3f68:	7f010000 	svcvc	0x00010000
    3f6c:	000b600d 	andeq	r6, fp, sp
    3f70:	000b6608 	andeq	r6, fp, r8, lsl #12
    3f74:	001d5f08 	andseq	r5, sp, r8, lsl #30
    3f78:	032b0100 			; <UNDEFINED> instruction: 0x032b0100
    3f7c:	660e0000 	strvs	r0, [lr], -r0
    3f80:	4b08000b 	blmi	203fb4 <_Min_Stack_Size+0x203bb4>
    3f84:	0000000d 	andeq	r0, r0, sp
    3f88:	177f010d 	ldrbne	r0, [pc, -sp, lsl #2]!
    3f8c:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    3f90:	000b5a0d 	andeq	r5, fp, sp, lsl #20
    3f94:	000b6008 	andeq	r6, fp, r8
    3f98:	001d7f08 	andseq	r7, sp, r8, lsl #30
    3f9c:	034f0100 	movteq	r0, #61696	; 0xf100
    3fa0:	600e0000 	andvs	r0, lr, r0
    3fa4:	4b08000b 	blmi	203fd8 <_Min_Stack_Size+0x203bd8>
    3fa8:	0000000d 	andeq	r0, r0, sp
    3fac:	172f010d 	strne	r0, [pc, -sp, lsl #2]!
    3fb0:	7d010000 	stcvc	0, cr0, [r1, #-0]
    3fb4:	000b540d 	andeq	r5, fp, sp, lsl #8
    3fb8:	000b5a08 	andeq	r5, fp, r8, lsl #20
    3fbc:	001d9f08 	andseq	r9, sp, r8, lsl #30
    3fc0:	03730100 	cmneq	r3, #0, 2
    3fc4:	5a0e0000 	bpl	383fcc <_Min_Stack_Size+0x383bcc>
    3fc8:	4b08000b 	blmi	203ffc <_Min_Stack_Size+0x203bfc>
    3fcc:	0000000d 	andeq	r0, r0, sp
    3fd0:	1a1c010d 	bne	70440c <_Min_Stack_Size+0x70400c>
    3fd4:	7c010000 	stcvc	0, cr0, [r1], {-0}
    3fd8:	000b4e0d 	andeq	r4, fp, sp, lsl #28
    3fdc:	000b5408 	andeq	r5, fp, r8, lsl #8
    3fe0:	001dbf08 	andseq	fp, sp, r8, lsl #30
    3fe4:	03970100 	orrseq	r0, r7, #0, 2
    3fe8:	540e0000 	strpl	r0, [lr], #-0
    3fec:	4b08000b 	blmi	204020 <_Min_Stack_Size+0x203c20>
    3ff0:	0000000d 	andeq	r0, r0, sp
    3ff4:	1b7e010d 	blne	1f84430 <_Min_Stack_Size+0x1f84030>
    3ff8:	7b010000 	blvc	44000 <_Min_Stack_Size+0x43c00>
    3ffc:	000b480d 	andeq	r4, fp, sp, lsl #16
    4000:	000b4e08 	andeq	r4, fp, r8, lsl #28
    4004:	001ddf08 	andseq	sp, sp, r8, lsl #30
    4008:	03bb0100 			; <UNDEFINED> instruction: 0x03bb0100
    400c:	4e0e0000 	cdpmi	0, 0, cr0, cr14, cr0, {0}
    4010:	4b08000b 	blmi	204044 <_Min_Stack_Size+0x203c44>
    4014:	0000000d 	andeq	r0, r0, sp
    4018:	1d35010d 	ldfnes	f0, [r5, #-52]!	; 0xffffffcc
    401c:	7a010000 	bvc	44024 <_Min_Stack_Size+0x43c24>
    4020:	000b420d 	andeq	r4, fp, sp, lsl #4
    4024:	000b4808 	andeq	r4, fp, r8, lsl #16
    4028:	001dff08 	andseq	pc, sp, r8, lsl #30
    402c:	03df0100 	bicseq	r0, pc, #0, 2
    4030:	480e0000 	stmdami	lr, {}	; <UNPREDICTABLE>
    4034:	4b08000b 	blmi	204068 <_Min_Stack_Size+0x203c68>
    4038:	0000000d 	andeq	r0, r0, sp
    403c:	1a5c010d 	bne	1704478 <_Min_Stack_Size+0x1704078>
    4040:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    4044:	000b3c0d 	andeq	r3, fp, sp, lsl #24
    4048:	000b4208 	andeq	r4, fp, r8, lsl #4
    404c:	001e1f08 	andseq	r1, lr, r8, lsl #30
    4050:	04030100 	streq	r0, [r3], #-256	; 0xffffff00
    4054:	420e0000 	andmi	r0, lr, #0
    4058:	4b08000b 	blmi	20408c <_Min_Stack_Size+0x203c8c>
    405c:	0000000d 	andeq	r0, r0, sp
    4060:	19a5010d 	stmibne	r5!, {r0, r2, r3, r8}
    4064:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    4068:	000b360d 	andeq	r3, fp, sp, lsl #12
    406c:	000b3c08 	andeq	r3, fp, r8, lsl #24
    4070:	001e3f08 	andseq	r3, lr, r8, lsl #30
    4074:	04270100 	strteq	r0, [r7], #-256	; 0xffffff00
    4078:	3c0e0000 	stccc	0, cr0, [lr], {-0}
    407c:	4b08000b 	blmi	2040b0 <_Min_Stack_Size+0x203cb0>
    4080:	0000000d 	andeq	r0, r0, sp
    4084:	1c0d010d 	stfnes	f0, [sp], {13}
    4088:	77010000 	strvc	r0, [r1, -r0]
    408c:	000b300d 	andeq	r3, fp, sp
    4090:	000b3608 	andeq	r3, fp, r8, lsl #12
    4094:	001e5f08 	andseq	r5, lr, r8, lsl #30
    4098:	044b0100 	strbeq	r0, [fp], #-256	; 0xffffff00
    409c:	360e0000 	strcc	r0, [lr], -r0
    40a0:	4b08000b 	blmi	2040d4 <_Min_Stack_Size+0x203cd4>
    40a4:	0000000d 	andeq	r0, r0, sp
    40a8:	179a010d 	ldrne	r0, [sl, sp, lsl #2]
    40ac:	76010000 	strvc	r0, [r1], -r0
    40b0:	000b2a0d 	andeq	r2, fp, sp, lsl #20
    40b4:	000b3008 	andeq	r3, fp, r8
    40b8:	001e7f08 	andseq	r7, lr, r8, lsl #30
    40bc:	046f0100 	strbteq	r0, [pc], #-256	; 40c4 <_Min_Stack_Size+0x3cc4>
    40c0:	300e0000 	andcc	r0, lr, r0
    40c4:	4b08000b 	blmi	2040f8 <_Min_Stack_Size+0x203cf8>
    40c8:	0000000d 	andeq	r0, r0, sp
    40cc:	1c48010d 	stfnee	f0, [r8], {13}
    40d0:	75010000 	strvc	r0, [r1, #-0]
    40d4:	000b240d 	andeq	r2, fp, sp, lsl #8
    40d8:	000b2a08 	andeq	r2, fp, r8, lsl #20
    40dc:	001e9f08 	andseq	r9, lr, r8, lsl #30
    40e0:	04930100 	ldreq	r0, [r3], #256	; 0x100
    40e4:	2a0e0000 	bcs	3840ec <_Min_Stack_Size+0x383cec>
    40e8:	4b08000b 	blmi	20411c <_Min_Stack_Size+0x203d1c>
    40ec:	0000000d 	andeq	r0, r0, sp
    40f0:	1c25010d 	stfnes	f0, [r5], #-52	; 0xffffffcc
    40f4:	74010000 	strvc	r0, [r1], #-0
    40f8:	000b1e0d 	andeq	r1, fp, sp, lsl #28
    40fc:	000b2408 	andeq	r2, fp, r8, lsl #8
    4100:	001ebf08 	andseq	fp, lr, r8, lsl #30
    4104:	04b70100 	ldrteq	r0, [r7], #256	; 0x100
    4108:	240e0000 	strcs	r0, [lr], #-0
    410c:	4b08000b 	blmi	204140 <_Min_Stack_Size+0x203d40>
    4110:	0000000d 	andeq	r0, r0, sp
    4114:	1bed010d 	blne	ffb44550 <_estack+0xdfb04550>
    4118:	73010000 	movwvc	r0, #4096	; 0x1000
    411c:	000b180d 	andeq	r1, fp, sp, lsl #16
    4120:	000b1e08 	andeq	r1, fp, r8, lsl #28
    4124:	001edf08 	andseq	sp, lr, r8, lsl #30
    4128:	04db0100 	ldrbeq	r0, [fp], #256	; 0x100
    412c:	1e0e0000 	cdpne	0, 0, cr0, cr14, cr0, {0}
    4130:	4b08000b 	blmi	204164 <_Min_Stack_Size+0x203d64>
    4134:	0000000d 	andeq	r0, r0, sp
    4138:	18c4010d 	stmiane	r4, {r0, r2, r3, r8}^
    413c:	72010000 	andvc	r0, r1, #0
    4140:	000b120d 	andeq	r1, fp, sp, lsl #4
    4144:	000b1808 	andeq	r1, fp, r8, lsl #16
    4148:	001eff08 	andseq	pc, lr, r8, lsl #30
    414c:	04ff0100 	ldrbteq	r0, [pc], #256	; 4154 <_Min_Stack_Size+0x3d54>
    4150:	180e0000 	stmdane	lr, {}	; <UNPREDICTABLE>
    4154:	4b08000b 	blmi	204188 <_Min_Stack_Size+0x203d88>
    4158:	0000000d 	andeq	r0, r0, sp
    415c:	182a010d 	stmdane	sl!, {r0, r2, r3, r8}
    4160:	71010000 	mrsvc	r0, (UNDEF: 1)
    4164:	000b0c0d 	andeq	r0, fp, sp, lsl #24
    4168:	000b1208 	andeq	r1, fp, r8, lsl #4
    416c:	001f1f08 	andseq	r1, pc, r8, lsl #30
    4170:	05230100 	streq	r0, [r3, #-256]!	; 0xffffff00
    4174:	120e0000 	andne	r0, lr, #0
    4178:	4b08000b 	blmi	2041ac <_Min_Stack_Size+0x203dac>
    417c:	0000000d 	andeq	r0, r0, sp
    4180:	1af2010d 	bne	ffc845bc <_estack+0xdfc445bc>
    4184:	70010000 	andvc	r0, r1, r0
    4188:	000b060d 	andeq	r0, fp, sp, lsl #12
    418c:	000b0c08 	andeq	r0, fp, r8, lsl #24
    4190:	001f3f08 	andseq	r3, pc, r8, lsl #30
    4194:	05470100 	strbeq	r0, [r7, #-256]	; 0xffffff00
    4198:	0c0e0000 	stceq	0, cr0, [lr], {-0}
    419c:	4b08000b 	blmi	2041d0 <_Min_Stack_Size+0x203dd0>
    41a0:	0000000d 	andeq	r0, r0, sp
    41a4:	1879010d 	ldmdane	r9!, {r0, r2, r3, r8}^
    41a8:	6f010000 	svcvs	0x00010000
    41ac:	000b000d 	andeq	r0, fp, sp
    41b0:	000b0608 	andeq	r0, fp, r8, lsl #12
    41b4:	001f5f08 	andseq	r5, pc, r8, lsl #30
    41b8:	056b0100 	strbeq	r0, [fp, #-256]!	; 0xffffff00
    41bc:	060e0000 	streq	r0, [lr], -r0
    41c0:	4b08000b 	blmi	2041f4 <_Min_Stack_Size+0x203df4>
    41c4:	0000000d 	andeq	r0, r0, sp
    41c8:	176c010d 	strbne	r0, [ip, -sp, lsl #2]!
    41cc:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    41d0:	000afa0d 	andeq	pc, sl, sp, lsl #20
    41d4:	000b0008 	andeq	r0, fp, r8
    41d8:	001f7f08 	andseq	r7, pc, r8, lsl #30
    41dc:	058f0100 	streq	r0, [pc, #256]	; 42e4 <_Min_Stack_Size+0x3ee4>
    41e0:	000e0000 	andeq	r0, lr, r0
    41e4:	4b08000b 	blmi	204218 <_Min_Stack_Size+0x203e18>
    41e8:	0000000d 	andeq	r0, r0, sp
    41ec:	185b010d 	ldmdane	fp, {r0, r2, r3, r8}^
    41f0:	6d010000 	stcvs	0, cr0, [r1, #-0]
    41f4:	000af40d 	andeq	pc, sl, sp, lsl #8
    41f8:	000afa08 	andeq	pc, sl, r8, lsl #20
    41fc:	001f9f08 	andseq	r9, pc, r8, lsl #30
    4200:	05b30100 	ldreq	r0, [r3, #256]!	; 0x100
    4204:	fa0e0000 	blx	38420c <_Min_Stack_Size+0x383e0c>
    4208:	4b08000a 	blmi	204238 <_Min_Stack_Size+0x203e38>
    420c:	0000000d 	andeq	r0, r0, sp
    4210:	17fe010d 	ldrbne	r0, [lr, sp, lsl #2]!
    4214:	6c010000 	stcvs	0, cr0, [r1], {-0}
    4218:	000aee0d 	andeq	lr, sl, sp, lsl #28
    421c:	000af408 	andeq	pc, sl, r8, lsl #8
    4220:	001fbf08 	andseq	fp, pc, r8, lsl #30
    4224:	05d70100 	ldrbeq	r0, [r7, #256]	; 0x100
    4228:	f40e0000 	vst4.8	{d0-d3}, [lr], r0
    422c:	4b08000a 	blmi	20425c <_Min_Stack_Size+0x203e5c>
    4230:	0000000d 	andeq	r0, r0, sp
    4234:	1956010d 	ldmdbne	r6, {r0, r2, r3, r8}^
    4238:	6b010000 	blvs	44240 <_Min_Stack_Size+0x43e40>
    423c:	000ae80d 	andeq	lr, sl, sp, lsl #16
    4240:	000aee08 	andeq	lr, sl, r8, lsl #28
    4244:	001fdf08 	andseq	sp, pc, r8, lsl #30
    4248:	05fb0100 	ldrbeq	r0, [fp, #256]!	; 0x100
    424c:	ee0e0000 	cdp	0, 0, cr0, cr14, cr0, {0}
    4250:	4b08000a 	blmi	204280 <_Min_Stack_Size+0x203e80>
    4254:	0000000d 	andeq	r0, r0, sp
    4258:	18a1010d 	stmiane	r1!, {r0, r2, r3, r8}
    425c:	6a010000 	bvs	44264 <_Min_Stack_Size+0x43e64>
    4260:	000ae20d 	andeq	lr, sl, sp, lsl #4
    4264:	000ae808 	andeq	lr, sl, r8, lsl #16
    4268:	001fff08 	andseq	pc, pc, r8, lsl #30
    426c:	061f0100 	ldreq	r0, [pc], -r0, lsl #2
    4270:	e80e0000 	stmda	lr, {}	; <UNPREDICTABLE>
    4274:	4b08000a 	blmi	2042a4 <_Min_Stack_Size+0x203ea4>
    4278:	0000000d 	andeq	r0, r0, sp
    427c:	1cd8010d 	ldfnee	f0, [r8], {13}
    4280:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    4284:	000adc0d 	andeq	sp, sl, sp, lsl #24
    4288:	000ae208 	andeq	lr, sl, r8, lsl #4
    428c:	00201f08 	eoreq	r1, r0, r8, lsl #30
    4290:	06430100 	strbeq	r0, [r3], -r0, lsl #2
    4294:	e20e0000 	and	r0, lr, #0
    4298:	4b08000a 	blmi	2042c8 <_Min_Stack_Size+0x203ec8>
    429c:	0000000d 	andeq	r0, r0, sp
    42a0:	19cd010d 	stmibne	sp, {r0, r2, r3, r8}^
    42a4:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    42a8:	000ad60d 	andeq	sp, sl, sp, lsl #12
    42ac:	000adc08 	andeq	sp, sl, r8, lsl #24
    42b0:	00203f08 	eoreq	r3, r0, r8, lsl #30
    42b4:	06670100 	strbteq	r0, [r7], -r0, lsl #2
    42b8:	dc0e0000 	stcle	0, cr0, [lr], {-0}
    42bc:	4b08000a 	blmi	2042ec <_Min_Stack_Size+0x203eec>
    42c0:	0000000d 	andeq	r0, r0, sp
    42c4:	1cc6010d 	stfnee	f0, [r6], {13}
    42c8:	67010000 	strvs	r0, [r1, -r0]
    42cc:	000ad00d 	andeq	sp, sl, sp
    42d0:	000ad608 	andeq	sp, sl, r8, lsl #12
    42d4:	00205f08 	eoreq	r5, r0, r8, lsl #30
    42d8:	068b0100 	streq	r0, [fp], r0, lsl #2
    42dc:	d60e0000 	strle	r0, [lr], -r0
    42e0:	4b08000a 	blmi	204310 <_Min_Stack_Size+0x203f10>
    42e4:	0000000d 	andeq	r0, r0, sp
    42e8:	1c9c010d 	ldfnes	f0, [ip], {13}
    42ec:	66010000 	strvs	r0, [r1], -r0
    42f0:	000aca0d 	andeq	ip, sl, sp, lsl #20
    42f4:	000ad008 	andeq	sp, sl, r8
    42f8:	00207f08 	eoreq	r7, r0, r8, lsl #30
    42fc:	06af0100 	strteq	r0, [pc], r0, lsl #2
    4300:	d00e0000 	andle	r0, lr, r0
    4304:	4b08000a 	blmi	204334 <_Min_Stack_Size+0x203f34>
    4308:	0000000d 	andeq	r0, r0, sp
    430c:	16eb010d 	strbtne	r0, [fp], sp, lsl #2
    4310:	65010000 	strvs	r0, [r1, #-0]
    4314:	000ac40d 	andeq	ip, sl, sp, lsl #8
    4318:	000aca08 	andeq	ip, sl, r8, lsl #20
    431c:	00209f08 	eoreq	r9, r0, r8, lsl #30
    4320:	06d30100 	ldrbeq	r0, [r3], r0, lsl #2
    4324:	ca0e0000 	bgt	38432c <_Min_Stack_Size+0x383f2c>
    4328:	4b08000a 	blmi	204358 <_Min_Stack_Size+0x203f58>
    432c:	0000000d 	andeq	r0, r0, sp
    4330:	1891010d 	ldmne	r1, {r0, r2, r3, r8}
    4334:	64010000 	strvs	r0, [r1], #-0
    4338:	000abe0d 	andeq	fp, sl, sp, lsl #28
    433c:	000ac408 	andeq	ip, sl, r8, lsl #8
    4340:	0020bf08 	eoreq	fp, r0, r8, lsl #30
    4344:	06f70100 	ldrbteq	r0, [r7], r0, lsl #2
    4348:	c40e0000 	strgt	r0, [lr], #-0
    434c:	4b08000a 	blmi	20437c <_Min_Stack_Size+0x203f7c>
    4350:	0000000d 	andeq	r0, r0, sp
    4354:	184b010d 	stmdane	fp, {r0, r2, r3, r8}^
    4358:	63010000 	movwvs	r0, #4096	; 0x1000
    435c:	000ab80d 	andeq	fp, sl, sp, lsl #16
    4360:	000abe08 	andeq	fp, sl, r8, lsl #28
    4364:	0020df08 	eoreq	sp, r0, r8, lsl #30
    4368:	071b0100 	ldreq	r0, [fp, -r0, lsl #2]
    436c:	be0e0000 	cdplt	0, 0, cr0, cr14, cr0, {0}
    4370:	4b08000a 	blmi	2043a0 <_Min_Stack_Size+0x203fa0>
    4374:	0000000d 	andeq	r0, r0, sp
    4378:	1c35010d 	ldfnes	f0, [r5], #-52	; 0xffffffcc
    437c:	62010000 	andvs	r0, r1, #0
    4380:	000ab20d 	andeq	fp, sl, sp, lsl #4
    4384:	000ab808 	andeq	fp, sl, r8, lsl #16
    4388:	0020ff08 	eoreq	pc, r0, r8, lsl #30
    438c:	073f0100 	ldreq	r0, [pc, -r0, lsl #2]!
    4390:	b80e0000 	stmdalt	lr, {}	; <UNPREDICTABLE>
    4394:	4b08000a 	blmi	2043c4 <_Min_Stack_Size+0x203fc4>
    4398:	0000000d 	andeq	r0, r0, sp
    439c:	19e2010d 	stmibne	r2!, {r0, r2, r3, r8}^
    43a0:	61010000 	mrsvs	r0, (UNDEF: 1)
    43a4:	000aac0d 	andeq	sl, sl, sp, lsl #24
    43a8:	000ab208 	andeq	fp, sl, r8, lsl #4
    43ac:	00211f08 	eoreq	r1, r1, r8, lsl #30
    43b0:	07630100 	strbeq	r0, [r3, -r0, lsl #2]!
    43b4:	b20e0000 	andlt	r0, lr, #0
    43b8:	4b08000a 	blmi	2043e8 <_Min_Stack_Size+0x203fe8>
    43bc:	0000000d 	andeq	r0, r0, sp
    43c0:	1d01010d 	stfnes	f0, [r1, #-52]	; 0xffffffcc
    43c4:	60010000 	andvs	r0, r1, r0
    43c8:	000aa60d 	andeq	sl, sl, sp, lsl #12
    43cc:	000aac08 	andeq	sl, sl, r8, lsl #24
    43d0:	00213f08 	eoreq	r3, r1, r8, lsl #30
    43d4:	07870100 	streq	r0, [r7, r0, lsl #2]
    43d8:	ac0e0000 	stcge	0, cr0, [lr], {-0}
    43dc:	4b08000a 	blmi	20440c <_Min_Stack_Size+0x20400c>
    43e0:	0000000d 	andeq	r0, r0, sp
    43e4:	1bc8010d 	blne	ff204820 <_estack+0xdf1c4820>
    43e8:	5f010000 	svcpl	0x00010000
    43ec:	000aa00d 	andeq	sl, sl, sp
    43f0:	000aa608 	andeq	sl, sl, r8, lsl #12
    43f4:	00215f08 	eoreq	r5, r1, r8, lsl #30
    43f8:	07ab0100 	streq	r0, [fp, r0, lsl #2]!
    43fc:	a60e0000 	strge	r0, [lr], -r0
    4400:	4b08000a 	blmi	204430 <_Min_Stack_Size+0x204030>
    4404:	0000000d 	andeq	r0, r0, sp
    4408:	17e9010d 	strbne	r0, [r9, sp, lsl #2]!
    440c:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    4410:	000a9a0d 	andeq	r9, sl, sp, lsl #20
    4414:	000aa008 	andeq	sl, sl, r8
    4418:	00217f08 	eoreq	r7, r1, r8, lsl #30
    441c:	07cf0100 	strbeq	r0, [pc, r0, lsl #2]
    4420:	a00e0000 	andge	r0, lr, r0
    4424:	4b08000a 	blmi	204454 <_Min_Stack_Size+0x204054>
    4428:	0000000d 	andeq	r0, r0, sp
    442c:	17b2010d 	ldrne	r0, [r2, sp, lsl #2]!
    4430:	5d010000 	stcpl	0, cr0, [r1, #-0]
    4434:	000a940d 	andeq	r9, sl, sp, lsl #8
    4438:	000a9a08 	andeq	r9, sl, r8, lsl #20
    443c:	00219f08 	eoreq	r9, r1, r8, lsl #30
    4440:	07f30100 	ldrbeq	r0, [r3, r0, lsl #2]!
    4444:	9a0e0000 	bls	38444c <_Min_Stack_Size+0x38404c>
    4448:	4b08000a 	blmi	204478 <_Min_Stack_Size+0x204078>
    444c:	0000000d 	andeq	r0, r0, sp
    4450:	17c2010d 	strbne	r0, [r2, sp, lsl #2]
    4454:	5c010000 	stcpl	0, cr0, [r1], {-0}
    4458:	000a8e0d 	andeq	r8, sl, sp, lsl #28
    445c:	000a9408 	andeq	r9, sl, r8, lsl #8
    4460:	0021bf08 	eoreq	fp, r1, r8, lsl #30
    4464:	08170100 	ldmdaeq	r7, {r8}
    4468:	940e0000 	strls	r0, [lr], #-0
    446c:	4b08000a 	blmi	20449c <_Min_Stack_Size+0x20409c>
    4470:	0000000d 	andeq	r0, r0, sp
    4474:	1925010d 	stmdbne	r5!, {r0, r2, r3, r8}
    4478:	5b010000 	blpl	44480 <_Min_Stack_Size+0x44080>
    447c:	000a880d 	andeq	r8, sl, sp, lsl #16
    4480:	000a8e08 	andeq	r8, sl, r8, lsl #28
    4484:	0021df08 	eoreq	sp, r1, r8, lsl #30
    4488:	083b0100 	ldmdaeq	fp!, {r8}
    448c:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    4490:	4b08000a 	blmi	2044c0 <_Min_Stack_Size+0x2040c0>
    4494:	0000000d 	andeq	r0, r0, sp
    4498:	1938010d 	ldmdbne	r8!, {r0, r2, r3, r8}
    449c:	5a010000 	bpl	444a4 <_Min_Stack_Size+0x440a4>
    44a0:	000a820d 	andeq	r8, sl, sp, lsl #4
    44a4:	000a8808 	andeq	r8, sl, r8, lsl #16
    44a8:	0021ff08 	eoreq	pc, r1, r8, lsl #30
    44ac:	085f0100 	ldmdaeq	pc, {r8}^	; <UNPREDICTABLE>
    44b0:	880e0000 	stmdahi	lr, {}	; <UNPREDICTABLE>
    44b4:	4b08000a 	blmi	2044e4 <_Min_Stack_Size+0x2040e4>
    44b8:	0000000d 	andeq	r0, r0, sp
    44bc:	198c010d 	stmibne	ip, {r0, r2, r3, r8}
    44c0:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    44c4:	000a7c0d 	andeq	r7, sl, sp, lsl #24
    44c8:	000a8208 	andeq	r8, sl, r8, lsl #4
    44cc:	00221f08 	eoreq	r1, r2, r8, lsl #30
    44d0:	08830100 	stmeq	r3, {r8}
    44d4:	820e0000 	andhi	r0, lr, #0
    44d8:	4b08000a 	blmi	204508 <_Min_Stack_Size+0x204108>
    44dc:	0000000d 	andeq	r0, r0, sp
    44e0:	1a2f010d 	bne	bc491c <_Min_Stack_Size+0xbc451c>
    44e4:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    44e8:	000a760d 	andeq	r7, sl, sp, lsl #12
    44ec:	000a7c08 	andeq	r7, sl, r8, lsl #24
    44f0:	00223f08 	eoreq	r3, r2, r8, lsl #30
    44f4:	08a70100 	stmiaeq	r7!, {r8}
    44f8:	7c0e0000 	stcvc	0, cr0, [lr], {-0}
    44fc:	4b08000a 	blmi	20452c <_Min_Stack_Size+0x20412c>
    4500:	0000000d 	andeq	r0, r0, sp
    4504:	1b02010d 	blne	84940 <_Min_Stack_Size+0x84540>
    4508:	57010000 	strpl	r0, [r1, -r0]
    450c:	000a700d 	andeq	r7, sl, sp
    4510:	000a7608 	andeq	r7, sl, r8, lsl #12
    4514:	00225f08 	eoreq	r5, r2, r8, lsl #30
    4518:	08cb0100 	stmiaeq	fp, {r8}^
    451c:	760e0000 	strvc	r0, [lr], -r0
    4520:	4b08000a 	blmi	204550 <_Min_Stack_Size+0x204150>
    4524:	0000000d 	andeq	r0, r0, sp
    4528:	1a8c010d 	bne	fe304964 <_estack+0xde2c4964>
    452c:	56010000 	strpl	r0, [r1], -r0
    4530:	000a6a0d 	andeq	r6, sl, sp, lsl #20
    4534:	000a7008 	andeq	r7, sl, r8
    4538:	00227f08 	eoreq	r7, r2, r8, lsl #30
    453c:	08ef0100 	stmiaeq	pc!, {r8}^	; <UNPREDICTABLE>
    4540:	700e0000 	andvc	r0, lr, r0
    4544:	4b08000a 	blmi	204574 <_Min_Stack_Size+0x204174>
    4548:	0000000d 	andeq	r0, r0, sp
    454c:	1a48010d 	bne	1204988 <_Min_Stack_Size+0x1204588>
    4550:	55010000 	strpl	r0, [r1, #-0]
    4554:	000a640d 	andeq	r6, sl, sp, lsl #8
    4558:	000a6a08 	andeq	r6, sl, r8, lsl #20
    455c:	00229f08 	eoreq	r9, r2, r8, lsl #30
    4560:	09130100 	ldmdbeq	r3, {r8}
    4564:	6a0e0000 	bvs	38456c <_Min_Stack_Size+0x38416c>
    4568:	4b08000a 	blmi	204598 <_Min_Stack_Size+0x204198>
    456c:	0000000d 	andeq	r0, r0, sp
    4570:	1d4c010d 	stfnee	f0, [ip, #-52]	; 0xffffffcc
    4574:	54010000 	strpl	r0, [r1], #-0
    4578:	000a5e0d 	andeq	r5, sl, sp, lsl #28
    457c:	000a6408 	andeq	r6, sl, r8, lsl #8
    4580:	0022bf08 	eoreq	fp, r2, r8, lsl #30
    4584:	09370100 	ldmdbeq	r7!, {r8}
    4588:	640e0000 	strvs	r0, [lr], #-0
    458c:	4b08000a 	blmi	2045bc <_Min_Stack_Size+0x2041bc>
    4590:	0000000d 	andeq	r0, r0, sp
    4594:	1ba8010d 	blne	fea049d0 <_estack+0xde9c49d0>
    4598:	53010000 	movwpl	r0, #4096	; 0x1000
    459c:	000a580d 	andeq	r5, sl, sp, lsl #16
    45a0:	000a5e08 	andeq	r5, sl, r8, lsl #28
    45a4:	0022df08 	eoreq	sp, r2, r8, lsl #30
    45a8:	095b0100 	ldmdbeq	fp, {r8}^
    45ac:	5e0e0000 	cdppl	0, 0, cr0, cr14, cr0, {0}
    45b0:	4b08000a 	blmi	2045e0 <_Min_Stack_Size+0x2041e0>
    45b4:	0000000d 	andeq	r0, r0, sp
    45b8:	1916010d 	ldmdbne	r6, {r0, r2, r3, r8}
    45bc:	52010000 	andpl	r0, r1, #0
    45c0:	000a520d 	andeq	r5, sl, sp, lsl #4
    45c4:	000a5808 	andeq	r5, sl, r8, lsl #16
    45c8:	0022ff08 	eoreq	pc, r2, r8, lsl #30
    45cc:	097f0100 	ldmdbeq	pc!, {r8}^	; <UNPREDICTABLE>
    45d0:	580e0000 	stmdapl	lr, {}	; <UNPREDICTABLE>
    45d4:	4b08000a 	blmi	204604 <_Min_Stack_Size+0x204204>
    45d8:	0000000d 	andeq	r0, r0, sp
    45dc:	1754010d 	ldrbne	r0, [r4, -sp, lsl #2]
    45e0:	51010000 	mrspl	r0, (UNDEF: 1)
    45e4:	000a4c0d 	andeq	r4, sl, sp, lsl #24
    45e8:	000a5208 	andeq	r5, sl, r8, lsl #4
    45ec:	00231f08 	eoreq	r1, r3, r8, lsl #30
    45f0:	09a30100 	stmibeq	r3!, {r8}
    45f4:	520e0000 	andpl	r0, lr, #0
    45f8:	4b08000a 	blmi	204628 <_Min_Stack_Size+0x204228>
    45fc:	0000000d 	andeq	r0, r0, sp
    4600:	1c84010d 	stfnes	f0, [r4], {13}
    4604:	50010000 	andpl	r0, r1, r0
    4608:	000a460d 	andeq	r4, sl, sp, lsl #12
    460c:	000a4c08 	andeq	r4, sl, r8, lsl #24
    4610:	00233f08 	eoreq	r3, r3, r8, lsl #30
    4614:	09c70100 	stmibeq	r7, {r8}^
    4618:	4c0e0000 	stcmi	0, cr0, [lr], {-0}
    461c:	4b08000a 	blmi	20464c <_Min_Stack_Size+0x20424c>
    4620:	0000000d 	andeq	r0, r0, sp
    4624:	1b15010d 	blne	544a60 <_Min_Stack_Size+0x544660>
    4628:	4f010000 	svcmi	0x00010000
    462c:	000a400d 	andeq	r4, sl, sp
    4630:	000a4608 	andeq	r4, sl, r8, lsl #12
    4634:	00235f08 	eoreq	r5, r3, r8, lsl #30
    4638:	09eb0100 	stmibeq	fp!, {r8}^
    463c:	460e0000 	strmi	r0, [lr], -r0
    4640:	4b08000a 	blmi	204670 <_Min_Stack_Size+0x204270>
    4644:	0000000d 	andeq	r0, r0, sp
    4648:	1ac9010d 	bne	ff244a84 <_estack+0xdf204a84>
    464c:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    4650:	000a3a0d 	andeq	r3, sl, sp, lsl #20
    4654:	000a4008 	andeq	r4, sl, r8
    4658:	00237f08 	eoreq	r7, r3, r8, lsl #30
    465c:	0a0f0100 	beq	3c4a64 <_Min_Stack_Size+0x3c4664>
    4660:	400e0000 	andmi	r0, lr, r0
    4664:	4b08000a 	blmi	204694 <_Min_Stack_Size+0x204294>
    4668:	0000000d 	andeq	r0, r0, sp
    466c:	1a74010d 	bne	1d04aa8 <_Min_Stack_Size+0x1d046a8>
    4670:	4d010000 	stcmi	0, cr0, [r1, #-0]
    4674:	000a340d 	andeq	r3, sl, sp, lsl #8
    4678:	000a3a08 	andeq	r3, sl, r8, lsl #20
    467c:	00239f08 	eoreq	r9, r3, r8, lsl #30
    4680:	0a330100 	beq	cc4a88 <_Min_Stack_Size+0xcc4688>
    4684:	3a0e0000 	bcc	38468c <_Min_Stack_Size+0x38428c>
    4688:	4b08000a 	blmi	2046b8 <_Min_Stack_Size+0x2042b8>
    468c:	0000000d 	andeq	r0, r0, sp
    4690:	1a04010d 	bne	104acc <_Min_Stack_Size+0x1046cc>
    4694:	4c010000 	stcmi	0, cr0, [r1], {-0}
    4698:	000a2e0d 	andeq	r2, sl, sp, lsl #28
    469c:	000a3408 	andeq	r3, sl, r8, lsl #8
    46a0:	0023bf08 	eoreq	fp, r3, r8, lsl #30
    46a4:	0a570100 	beq	15c4aac <_Min_Stack_Size+0x15c46ac>
    46a8:	340e0000 	strcc	r0, [lr], #-0
    46ac:	4b08000a 	blmi	2046dc <_Min_Stack_Size+0x2042dc>
    46b0:	0000000d 	andeq	r0, r0, sp
    46b4:	1cae010d 	stfnes	f0, [lr], #52	; 0x34
    46b8:	4b010000 	blmi	446c0 <_Min_Stack_Size+0x442c0>
    46bc:	000a280d 	andeq	r2, sl, sp, lsl #16
    46c0:	000a2e08 	andeq	r2, sl, r8, lsl #28
    46c4:	0023df08 	eoreq	sp, r3, r8, lsl #30
    46c8:	0a7b0100 	beq	1ec4ad0 <_Min_Stack_Size+0x1ec46d0>
    46cc:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
    46d0:	4b08000a 	blmi	204700 <_Min_Stack_Size+0x204300>
    46d4:	0000000d 	andeq	r0, r0, sp
    46d8:	183a010d 	ldmdane	sl!, {r0, r2, r3, r8}
    46dc:	4a010000 	bmi	446e4 <_Min_Stack_Size+0x442e4>
    46e0:	000a220d 	andeq	r2, sl, sp, lsl #4
    46e4:	000a2808 	andeq	r2, sl, r8, lsl #16
    46e8:	0023ff08 	eoreq	pc, r3, r8, lsl #30
    46ec:	0a9f0100 	beq	fe7c4af4 <_estack+0xde784af4>
    46f0:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
    46f4:	4b08000a 	blmi	204724 <_Min_Stack_Size+0x204324>
    46f8:	0000000d 	andeq	r0, r0, sp
    46fc:	1ae1010d 	bne	ff844b38 <_estack+0xdf804b38>
    4700:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    4704:	000a1c0d 	andeq	r1, sl, sp, lsl #24
    4708:	000a2208 	andeq	r2, sl, r8, lsl #4
    470c:	00241f08 	eoreq	r1, r4, r8, lsl #30
    4710:	0ac30100 	beq	ff0c4b18 <_estack+0xdf084b18>
    4714:	220e0000 	andcs	r0, lr, #0
    4718:	4b08000a 	blmi	204748 <_Min_Stack_Size+0x204348>
    471c:	0000000d 	andeq	r0, r0, sp
    4720:	1aa0010d 	bne	fe804b5c <_estack+0xde7c4b5c>
    4724:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    4728:	000a160d 	andeq	r1, sl, sp, lsl #12
    472c:	000a1c08 	andeq	r1, sl, r8, lsl #24
    4730:	00243f08 	eoreq	r3, r4, r8, lsl #30
    4734:	0ae70100 	beq	ff9c4b3c <_estack+0xdf984b3c>
    4738:	1c0e0000 	stcne	0, cr0, [lr], {-0}
    473c:	4b08000a 	blmi	20476c <_Min_Stack_Size+0x20436c>
    4740:	0000000d 	andeq	r0, r0, sp
    4744:	18f5010d 	ldmne	r5!, {r0, r2, r3, r8}^
    4748:	47010000 	strmi	r0, [r1, -r0]
    474c:	000a100d 	andeq	r1, sl, sp
    4750:	000a1608 	andeq	r1, sl, r8, lsl #12
    4754:	00245f08 	eoreq	r5, r4, r8, lsl #30
    4758:	0b0b0100 	bleq	2c4b60 <_Min_Stack_Size+0x2c4760>
    475c:	160e0000 	strne	r0, [lr], -r0
    4760:	4b08000a 	blmi	204790 <_Min_Stack_Size+0x204390>
    4764:	0000000d 	andeq	r0, r0, sp
    4768:	1ced010d 	stfnee	f0, [sp], #52	; 0x34
    476c:	46010000 	strmi	r0, [r1], -r0
    4770:	000a0a0d 	andeq	r0, sl, sp, lsl #20
    4774:	000a1008 	andeq	r1, sl, r8
    4778:	00247f08 	eoreq	r7, r4, r8, lsl #30
    477c:	0b2f0100 	bleq	bc4b84 <_Min_Stack_Size+0xbc4784>
    4780:	100e0000 	andne	r0, lr, r0
    4784:	4b08000a 	blmi	2047b4 <_Min_Stack_Size+0x2043b4>
    4788:	0000000d 	andeq	r0, r0, sp
    478c:	1b3b010d 	blne	ec4bc8 <_Min_Stack_Size+0xec47c8>
    4790:	45010000 	strmi	r0, [r1, #-0]
    4794:	000a040d 	andeq	r0, sl, sp, lsl #8
    4798:	000a0a08 	andeq	r0, sl, r8, lsl #20
    479c:	00249f08 	eoreq	r9, r4, r8, lsl #30
    47a0:	0b530100 	bleq	14c4ba8 <_Min_Stack_Size+0x14c47a8>
    47a4:	0a0e0000 	beq	3847ac <_Min_Stack_Size+0x3843ac>
    47a8:	4b08000a 	blmi	2047d8 <_Min_Stack_Size+0x2043d8>
    47ac:	0000000d 	andeq	r0, r0, sp
    47b0:	1743010d 	strbne	r0, [r3, -sp, lsl #2]
    47b4:	44010000 	strmi	r0, [r1], #-0
    47b8:	0009fe0d 	andeq	pc, r9, sp, lsl #28
    47bc:	000a0408 	andeq	r0, sl, r8, lsl #8
    47c0:	0024bf08 	eoreq	fp, r4, r8, lsl #30
    47c4:	0b770100 	bleq	1dc4bcc <_Min_Stack_Size+0x1dc47cc>
    47c8:	040e0000 	streq	r0, [lr], #-0
    47cc:	4b08000a 	blmi	2047fc <_Min_Stack_Size+0x2043fc>
    47d0:	0000000d 	andeq	r0, r0, sp
    47d4:	1c60010d 	stfnee	f0, [r0], #-52	; 0xffffffcc
    47d8:	43010000 	movwmi	r0, #4096	; 0x1000
    47dc:	0009f80d 	andeq	pc, r9, sp, lsl #16
    47e0:	0009fe08 	andeq	pc, r9, r8, lsl #28
    47e4:	0024df08 	eoreq	sp, r4, r8, lsl #30
    47e8:	0b9b0100 	bleq	fe6c4bf0 <_estack+0xde684bf0>
    47ec:	fe0e0000 	cdp2	0, 0, cr0, cr14, cr0, {0}
    47f0:	4b080009 	blmi	20481c <_Min_Stack_Size+0x20441c>
    47f4:	0000000d 	andeq	r0, r0, sp
    47f8:	1976010d 	ldmdbne	r6!, {r0, r2, r3, r8}^
    47fc:	42010000 	andmi	r0, r1, #0
    4800:	0009f20d 	andeq	pc, r9, sp, lsl #4
    4804:	0009f808 	andeq	pc, r9, r8, lsl #16
    4808:	0024ff08 	eoreq	pc, r4, r8, lsl #30
    480c:	0bbf0100 	bleq	fefc4c14 <_estack+0xdef84c14>
    4810:	f80e0000 			; <UNDEFINED> instruction: 0xf80e0000
    4814:	4b080009 	blmi	204840 <_Min_Stack_Size+0x204440>
    4818:	0000000d 	andeq	r0, r0, sp
    481c:	18e6010d 	stmiane	r6!, {r0, r2, r3, r8}^
    4820:	41010000 	mrsmi	r0, (UNDEF: 1)
    4824:	0009ec0d 	andeq	lr, r9, sp, lsl #24
    4828:	0009f208 	andeq	pc, r9, r8, lsl #4
    482c:	00251f08 	eoreq	r1, r5, r8, lsl #30
    4830:	0be30100 	bleq	ff8c4c38 <_estack+0xdf884c38>
    4834:	f20e0000 	vhadd.s8	d0, d14, d0
    4838:	4b080009 	blmi	204864 <_Min_Stack_Size+0x204464>
    483c:	0000000d 	andeq	r0, r0, sp
    4840:	1b6e010d 	blne	1b84c7c <_Min_Stack_Size+0x1b8487c>
    4844:	40010000 	andmi	r0, r1, r0
    4848:	0009e60d 	andeq	lr, r9, sp, lsl #12
    484c:	0009ec08 	andeq	lr, r9, r8, lsl #24
    4850:	00253f08 	eoreq	r3, r5, r8, lsl #30
    4854:	0c070100 	stfeqs	f0, [r7], {-0}
    4858:	ec0e0000 	stc	0, cr0, [lr], {-0}
    485c:	4b080009 	blmi	204888 <_Min_Stack_Size+0x204488>
    4860:	0000000d 	andeq	r0, r0, sp
    4864:	00dc010d 	sbcseq	r0, ip, sp, lsl #2
    4868:	3d010000 	stccc	0, cr0, [r1, #-0]
    486c:	0000000d 	andeq	r0, r0, sp
    4870:	00000000 	andeq	r0, r0, r0
    4874:	00255f00 	eoreq	r5, r5, r0, lsl #30
    4878:	0c2b0100 	stfeqs	f0, [fp], #-0
    487c:	000e0000 	andeq	r0, lr, r0
    4880:	4b000000 	blmi	4888 <_Min_Stack_Size+0x4488>
    4884:	0000000d 	andeq	r0, r0, sp
    4888:	000e010d 	andeq	r0, lr, sp, lsl #2
    488c:	3c010000 	stccc	0, cr0, [r1], {-0}
    4890:	0000000d 	andeq	r0, r0, sp
    4894:	00000000 	andeq	r0, r0, r0
    4898:	00257f00 	eoreq	r7, r5, r0, lsl #30
    489c:	0c4f0100 	stfeqe	f0, [pc], {-0}
    48a0:	000e0000 	andeq	r0, lr, r0
    48a4:	4b000000 	blmi	48ac <_Min_Stack_Size+0x44ac>
    48a8:	0000000d 	andeq	r0, r0, sp
    48ac:	01d6010d 	bicseq	r0, r6, sp, lsl #2
    48b0:	3b010000 	blcc	448b8 <_Min_Stack_Size+0x444b8>
    48b4:	0000000d 	andeq	r0, r0, sp
    48b8:	00000000 	andeq	r0, r0, r0
    48bc:	00259f00 	eoreq	r9, r5, r0, lsl #30
    48c0:	0c730100 	ldfeqe	f0, [r3], #-0
    48c4:	000e0000 	andeq	r0, lr, r0
    48c8:	4b000000 	blmi	48d0 <_Min_Stack_Size+0x44d0>
    48cc:	0000000d 	andeq	r0, r0, sp
    48d0:	01ca010d 	biceq	r0, sl, sp, lsl #2
    48d4:	3a010000 	bcc	448dc <_Min_Stack_Size+0x444dc>
    48d8:	0000000d 	andeq	r0, r0, sp
    48dc:	00000000 	andeq	r0, r0, r0
    48e0:	0025bf00 	eoreq	fp, r5, r0, lsl #30
    48e4:	0c970100 	ldfeqs	f0, [r7], {0}
    48e8:	000e0000 	andeq	r0, lr, r0
    48ec:	4b000000 	blmi	48f4 <_Min_Stack_Size+0x44f4>
    48f0:	0000000d 	andeq	r0, r0, sp
    48f4:	0063010d 	rsbeq	r0, r3, sp, lsl #2
    48f8:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    48fc:	0000000d 	andeq	r0, r0, sp
    4900:	00000000 	andeq	r0, r0, r0
    4904:	0025df00 	eoreq	sp, r5, r0, lsl #30
    4908:	0cbb0100 	ldfeqs	f0, [fp]
    490c:	000e0000 	andeq	r0, lr, r0
    4910:	4b000000 	blmi	4918 <_Min_Stack_Size+0x4518>
    4914:	0000000d 	andeq	r0, r0, sp
    4918:	0076010d 	rsbseq	r0, r6, sp, lsl #2
    491c:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    4920:	0000000d 	andeq	r0, r0, sp
    4924:	00000000 	andeq	r0, r0, r0
    4928:	0025ff00 	eoreq	pc, r5, r0, lsl #30
    492c:	0cdf0100 	ldfeqe	f0, [pc], {0}
    4930:	000e0000 	andeq	r0, lr, r0
    4934:	4b000000 	blmi	493c <_Min_Stack_Size+0x453c>
    4938:	0000000d 	andeq	r0, r0, sp
    493c:	00ca010d 	sbceq	r0, sl, sp, lsl #2
    4940:	37010000 	strcc	r0, [r1, -r0]
    4944:	0000000d 	andeq	r0, r0, sp
    4948:	00000000 	andeq	r0, r0, r0
    494c:	00261f00 	eoreq	r1, r6, r0, lsl #30
    4950:	0d030100 	stfeqs	f0, [r3, #-0]
    4954:	000e0000 	andeq	r0, lr, r0
    4958:	4b000000 	blmi	4960 <_Min_Stack_Size+0x4560>
    495c:	0000000d 	andeq	r0, r0, sp
    4960:	009e010d 	addseq	r0, lr, sp, lsl #2
    4964:	36010000 	strcc	r0, [r1], -r0
    4968:	0000000d 	andeq	r0, r0, sp
    496c:	00000000 	andeq	r0, r0, r0
    4970:	00263f00 	eoreq	r3, r6, r0, lsl #30
    4974:	0d270100 	stfeqs	f0, [r7, #-0]
    4978:	000e0000 	andeq	r0, lr, r0
    497c:	4b000000 	blmi	4984 <_Min_Stack_Size+0x4584>
    4980:	0000000d 	andeq	r0, r0, sp
    4984:	00b0010d 	adcseq	r0, r0, sp, lsl #2
    4988:	35010000 	strcc	r0, [r1, #-0]
    498c:	0000000d 	andeq	r0, r0, sp
    4990:	00000000 	andeq	r0, r0, r0
    4994:	00265f00 	eoreq	r5, r6, r0, lsl #30
    4998:	0d4b0100 	stfeqe	f0, [fp, #-0]
    499c:	000e0000 	andeq	r0, lr, r0
    49a0:	4b000000 	blmi	49a8 <_Min_Stack_Size+0x45a8>
    49a4:	0000000d 	andeq	r0, r0, sp
    49a8:	1b4a010f 	blne	1284dec <_Min_Stack_Size+0x12849ec>
    49ac:	2f010000 	svccs	0x00010000
    49b0:	0009e406 	andeq	lr, r9, r6, lsl #8
    49b4:	0009e608 	andeq	lr, r9, r8, lsl #12
    49b8:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    49bc:	2d010d01 	stccs	13, cr0, [r1, #-4]
    49c0:	0100001b 	tsteq	r0, fp, lsl r0
    49c4:	09900615 	ldmibeq	r0, {r0, r2, r4, r9, sl}
    49c8:	09e40800 	stmibeq	r4!, {fp}^
    49cc:	267f0800 	ldrbtcs	r0, [pc], -r0, lsl #16
    49d0:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    49d4:	1000000d 	andne	r0, r0, sp
    49d8:	00001bfd 	strdeq	r1, [r0], -sp
    49dc:	e8151c01 	ldmda	r5, {r0, sl, fp, ip}
    49e0:	a500000d 	strge	r0, [r0, #-13]
    49e4:	9f000026 	svcls	0x00000026
    49e8:	10000026 	andne	r0, r0, r6, lsr #32
    49ec:	00001d2c 	andeq	r1, r0, ip, lsr #26
    49f0:	ee0f1d01 	cdp	13, 0, cr1, cr15, cr1, {0}
    49f4:	d600000d 	strle	r0, [r0], -sp
    49f8:	d0000026 	andle	r0, r0, r6, lsr #32
    49fc:	11000026 	tstne	r0, r6, lsr #32
    4a00:	00001351 	andeq	r1, r0, r1, asr r3
    4a04:	fa1e2701 	blx	78e610 <_Min_Stack_Size+0x78e210>
    4a08:	8800000d 	stmdahi	r0, {r0, r2, r3}
    4a0c:	7e8083db 	mcrvc	3, 4, r8, cr0, cr11, {6}
    4a10:	00099212 	andeq	r9, r9, r2, lsl r2
    4a14:	0009a208 	andeq	sl, r9, r8, lsl #4
    4a18:	000dd508 	andeq	sp, sp, r8, lsl #10
    4a1c:	19bd1000 	ldmibne	sp!, {ip}
    4a20:	17010000 	strne	r0, [r1, -r0]
    4a24:	000dee14 	andeq	lr, sp, r4, lsl lr
    4a28:	00270700 	eoreq	r0, r7, r0, lsl #14
    4a2c:	00270100 	eoreq	r0, r7, r0, lsl #2
    4a30:	ca0e0000 	bgt	384a38 <_Min_Stack_Size+0x384638>
    4a34:	ff080009 			; <UNDEFINED> instruction: 0xff080009
    4a38:	0e00000d 	cdpeq	0, 0, cr0, cr0, cr13, {0}
    4a3c:	080009ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, fp}
    4a40:	00000e0d 	andeq	r0, r0, sp, lsl #28
    4a44:	87040a00 	strhi	r0, [r4, -r0, lsl #20]
    4a48:	0a000000 	beq	4a50 <_Min_Stack_Size+0x4650>
    4a4c:	00007b04 	andeq	r7, r0, r4, lsl #22
    4a50:	8c040a00 			; <UNDEFINED> instruction: 0x8c040a00
    4a54:	05000000 	streq	r0, [r0, #-0]
    4a58:	00000df4 	strdeq	r0, [r0], -r4
    4a5c:	db010113 	blle	44eb0 <_Min_Stack_Size+0x44ab0>
    4a60:	db00001b 	blle	4ad4 <_Min_Stack_Size+0x46d4>
    4a64:	0100001b 	tsteq	r0, fp, lsl r0
    4a68:	01130d12 	tsteq	r3, r2, lsl sp
    4a6c:	0017f901 	andseq	pc, r7, r1, lsl #18
    4a70:	0017f900 	andseq	pc, r7, r0, lsl #18
    4a74:	0c130100 	ldfeqs	f0, [r3], {-0}
    4a78:	00130000 	andseq	r0, r3, r0
    4a7c:	fe000200 	cdp2	2, 0, cr0, cr0, cr0, {0}
    4a80:	0400000c 	streq	r0, [r0], #-12
    4a84:	00209401 	eoreq	r9, r0, r1, lsl #8
    4a88:	22ed0400 	rsccs	r0, sp, #0, 8
    4a8c:	002f0000 	eoreq	r0, pc, r0
    4a90:	06080000 	streq	r0, [r8], -r0
	...
    4a9c:	33fb0000 	mvnscc	r0, #0
    4aa0:	01020000 	mrseq	r0, (UNDEF: 2)
    4aa4:	0000be06 	andeq	fp, r0, r6, lsl #28
    4aa8:	022e0300 	eoreq	r0, lr, #0, 6
    4aac:	2b030000 	blcs	c4ab4 <_Min_Stack_Size+0xc46b4>
    4ab0:	00003c18 	andeq	r3, r0, r8, lsl ip
    4ab4:	08010200 	stmdaeq	r1, {r9}
    4ab8:	000000bc 	strheq	r0, [r0], -ip
    4abc:	e7050202 	str	r0, [r5, -r2, lsl #4]
    4ac0:	03000001 	movweq	r0, #1
    4ac4:	000005c4 	andeq	r0, r0, r4, asr #11
    4ac8:	56193903 	ldrpl	r3, [r9], -r3, lsl #18
    4acc:	02000000 	andeq	r0, r0, #0
    4ad0:	01ab0702 			; <UNDEFINED> instruction: 0x01ab0702
    4ad4:	04020000 	streq	r0, [r2], #-0
    4ad8:	00000505 	andeq	r0, r0, r5, lsl #10
    4adc:	03530300 	cmpeq	r3, #0, 6
    4ae0:	4f030000 	svcmi	0x00030000
    4ae4:	00007019 	andeq	r7, r0, r9, lsl r0
    4ae8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    4aec:	0000008c 	andeq	r0, r0, ip, lsl #1
    4af0:	00050802 	andeq	r0, r5, r2, lsl #16
    4af4:	02000000 	andeq	r0, r0, #0
    4af8:	00870708 	addeq	r0, r7, r8, lsl #14
    4afc:	04040000 	streq	r0, [r4], #-0
    4b00:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    4b04:	07040200 	streq	r0, [r4, -r0, lsl #4]
    4b08:	00000091 	muleq	r0, r1, r0
    4b0c:	00023003 	andeq	r3, r2, r3
    4b10:	13180400 	tstne	r8, #0, 8
    4b14:	00000030 	andeq	r0, r0, r0, lsr r0
    4b18:	00009305 	andeq	r9, r0, r5, lsl #6
    4b1c:	05c60300 	strbeq	r0, [r6, #768]	; 0x300
    4b20:	24040000 	strcs	r0, [r4], #-0
    4b24:	00004a14 	andeq	r4, r0, r4, lsl sl
    4b28:	00a40500 	adceq	r0, r4, r0, lsl #10
    4b2c:	55030000 	strpl	r0, [r3, #-0]
    4b30:	04000003 	streq	r0, [r0], #-3
    4b34:	00641430 	rsbeq	r1, r4, r0, lsr r4
    4b38:	b5050000 	strlt	r0, [r5, #-0]
    4b3c:	06000000 	streq	r0, [r0], -r0
    4b40:	000000b5 	strheq	r0, [r0], -r5
    4b44:	0000b507 	andeq	fp, r0, r7, lsl #10
    4b48:	0000db00 	andeq	sp, r0, r0, lsl #22
    4b4c:	008c0800 	addeq	r0, ip, r0, lsl #16
    4b50:	00010000 	andeq	r0, r1, r0
    4b54:	0000b507 	andeq	fp, r0, r7, lsl #10
    4b58:	0000eb00 	andeq	lr, r0, r0, lsl #22
    4b5c:	008c0800 	addeq	r0, ip, r0, lsl #16
    4b60:	000b0000 	andeq	r0, fp, r0
    4b64:	51051809 	tstpl	r5, r9, lsl #16
    4b68:	226c0101 	rsbcs	r0, ip, #1073741824	; 0x40000000
    4b6c:	01590000 	cmpeq	r9, r0
    4b70:	430a0000 	movwmi	r0, #40960	; 0xa000
    4b74:	52050052 	andpl	r0, r5, #82	; 0x52
    4b78:	00c11101 	sbceq	r1, r1, r1, lsl #2
    4b7c:	23020000 	movwcs	r0, #8192	; 0x2000
    4b80:	264b0b00 	strbcs	r0, [fp], -r0, lsl #22
    4b84:	53050000 	movwpl	r0, #20480	; 0x5000
    4b88:	00c11101 	sbceq	r1, r1, r1, lsl #2
    4b8c:	23020000 	movwcs	r0, #8192	; 0x2000
    4b90:	41500a04 	cmpmi	r0, r4, lsl #20
    4b94:	54050052 	strpl	r0, [r5], #-82	; 0xffffffae
    4b98:	00c11101 	sbceq	r1, r1, r1, lsl #2
    4b9c:	23020000 	movwcs	r0, #8192	; 0x2000
    4ba0:	253d0b08 	ldrcs	r0, [sp, #-2824]!	; 0xfffff4f8
    4ba4:	55050000 	strpl	r0, [r5, #-0]
    4ba8:	00c11101 	sbceq	r1, r1, r1, lsl #2
    4bac:	23020000 	movwcs	r0, #8192	; 0x2000
    4bb0:	1d600b0c 	vstmdbne	r0!, {d16-d21}
    4bb4:	56050000 	strpl	r0, [r5], -r0
    4bb8:	00c11101 	sbceq	r1, r1, r1, lsl #2
    4bbc:	23020000 	movwcs	r0, #8192	; 0x2000
    4bc0:	43460a10 	movtmi	r0, #27152	; 0x6a10
    4bc4:	57050052 	smlsdpl	r5, r2, r0, r0
    4bc8:	00c11101 	sbceq	r1, r1, r1, lsl #2
    4bcc:	23020000 	movwcs	r0, #8192	; 0x2000
    4bd0:	6e0c0014 	mcrvs	0, 0, r0, cr12, cr4, {0}
    4bd4:	05000022 	streq	r0, [r0, #-34]	; 0xffffffde
    4bd8:	eb030158 	bl	c5140 <_Min_Stack_Size+0xc4d40>
    4bdc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    4be0:	01e90508 	mvneq	r0, r8, lsl #10
    4be4:	0006e501 	andeq	lr, r6, r1, lsl #10
    4be8:	00019400 	andeq	r9, r1, r0, lsl #8
    4bec:	52430a00 	subpl	r0, r3, #0, 20
    4bf0:	01ea0500 	mvneq	r0, r0, lsl #10
    4bf4:	0000c111 	andeq	ip, r0, r1, lsl r1
    4bf8:	00230200 	eoreq	r0, r3, r0, lsl #4
    4bfc:	5253430a 	subspl	r4, r3, #671088640	; 0x28000000
    4c00:	01eb0500 	mvneq	r0, r0, lsl #10
    4c04:	0000c111 	andeq	ip, r0, r1, lsl r1
    4c08:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    4c0c:	06e70c00 	strbteq	r0, [r7], r0, lsl #24
    4c10:	ec050000 	stc	0, cr0, [r5], {-0}
    4c14:	01660301 	cmneq	r6, r1, lsl #6
    4c18:	98090000 	stmdals	r9, {}	; <UNPREDICTABLE>
    4c1c:	0101f305 	tsteq	r1, r5, lsl #6	; <UNPREDICTABLE>
    4c20:	000003e7 	andeq	r0, r0, r7, ror #7
    4c24:	000003d5 	ldrdeq	r0, [r0], -r5
    4c28:	0052430a 	subseq	r4, r2, sl, lsl #6
    4c2c:	1101f405 	tstne	r1, r5, lsl #8	; <UNPREDICTABLE>
    4c30:	000000c1 	andeq	r0, r0, r1, asr #1
    4c34:	0b002302 	bleq	d844 <_Min_Stack_Size+0xd444>
    4c38:	00000343 	andeq	r0, r0, r3, asr #6
    4c3c:	1101f505 	tstne	r1, r5, lsl #10	; <UNPREDICTABLE>
    4c40:	000000c1 	andeq	r0, r0, r1, asr #1
    4c44:	0b042302 	bleq	10d854 <_Min_Stack_Size+0x10d454>
    4c48:	000002c1 	andeq	r0, r0, r1, asr #5
    4c4c:	1101f605 	tstne	r1, r5, lsl #12	; <UNPREDICTABLE>
    4c50:	000000c1 	andeq	r0, r0, r1, asr #1
    4c54:	0a082302 	beq	20d864 <_Min_Stack_Size+0x20d464>
    4c58:	00524943 	subseq	r4, r2, r3, asr #18
    4c5c:	1101f705 	tstne	r1, r5, lsl #14	; <UNPREDICTABLE>
    4c60:	000000c1 	andeq	r0, r0, r1, asr #1
    4c64:	0b0c2302 	bleq	30d874 <_Min_Stack_Size+0x30d474>
    4c68:	000002cb 	andeq	r0, r0, fp, asr #5
    4c6c:	1101f805 	tstne	r1, r5, lsl #16	; <UNPREDICTABLE>
    4c70:	000000c1 	andeq	r0, r0, r1, asr #1
    4c74:	0b102302 	bleq	40d884 <_Min_Stack_Size+0x40d484>
    4c78:	000005cf 	andeq	r0, r0, pc, asr #11
    4c7c:	1101f905 	tstne	r1, r5, lsl #18	; <UNPREDICTABLE>
    4c80:	000000c1 	andeq	r0, r0, r1, asr #1
    4c84:	0b142302 	bleq	50d894 <_Min_Stack_Size+0x50d494>
    4c88:	0000057b 	andeq	r0, r0, fp, ror r5
    4c8c:	1101fa05 	tstne	r1, r5, lsl #20	; <UNPREDICTABLE>
    4c90:	000000c1 	andeq	r0, r0, r1, asr #1
    4c94:	0b182302 	bleq	60d8a4 <_Min_Stack_Size+0x60d4a4>
    4c98:	000004e4 	andeq	r0, r0, r4, ror #9
    4c9c:	1101fb05 	tstne	r1, r5, lsl #22	; <UNPREDICTABLE>
    4ca0:	000000b5 	strheq	r0, [r0], -r5
    4ca4:	0b1c2302 	bleq	70d8b4 <_Min_Stack_Size+0x70d4b4>
    4ca8:	000004b3 			; <UNDEFINED> instruction: 0x000004b3
    4cac:	1101fc05 	tstne	r1, r5, lsl #24	; <UNPREDICTABLE>
    4cb0:	000000c1 	andeq	r0, r0, r1, asr #1
    4cb4:	0b202302 	bleq	80d8c4 <_Min_Stack_Size+0x80d4c4>
    4cb8:	00000307 	andeq	r0, r0, r7, lsl #6
    4cbc:	1101fd05 	tstne	r1, r5, lsl #26	; <UNPREDICTABLE>
    4cc0:	000000c1 	andeq	r0, r0, r1, asr #1
    4cc4:	0b242302 	bleq	90d8d4 <_Min_Stack_Size+0x90d4d4>
    4cc8:	00000584 	andeq	r0, r0, r4, lsl #11
    4ccc:	1101fe05 	tstne	r1, r5, lsl #28	; <UNPREDICTABLE>
    4cd0:	000000cb 	andeq	r0, r0, fp, asr #1
    4cd4:	0b282302 	bleq	a0d8e4 <_Min_Stack_Size+0xa0d4e4>
    4cd8:	00000702 	andeq	r0, r0, r2, lsl #14
    4cdc:	1101ff05 	tstne	r1, r5, lsl #30	; <UNPREDICTABLE>
    4ce0:	000000c1 	andeq	r0, r0, r1, asr #1
    4ce4:	0b302302 	bleq	c0d8f4 <_Min_Stack_Size+0xc0d4f4>
    4ce8:	0000065c 	andeq	r0, r0, ip, asr r6
    4cec:	11020005 	tstne	r2, r5
    4cf0:	000000c1 	andeq	r0, r0, r1, asr #1
    4cf4:	0b342302 	bleq	d0d904 <_Min_Stack_Size+0xd0d504>
    4cf8:	00000459 	andeq	r0, r0, r9, asr r4
    4cfc:	11020105 	tstne	r2, r5, lsl #2
    4d00:	000000c1 	andeq	r0, r0, r1, asr #1
    4d04:	0b382302 	bleq	e0d914 <_Min_Stack_Size+0xe0d514>
    4d08:	00000503 	andeq	r0, r0, r3, lsl #10
    4d0c:	11020205 	tstne	r2, r5, lsl #4
    4d10:	000000b5 	strheq	r0, [r0], -r5
    4d14:	0b3c2302 	bleq	f0d924 <_Min_Stack_Size+0xf0d524>
    4d18:	00000654 	andeq	r0, r0, r4, asr r6
    4d1c:	11020305 	tstne	r2, r5, lsl #6
    4d20:	000000c1 	andeq	r0, r0, r1, asr #1
    4d24:	0b402302 	bleq	100d934 <_Min_Stack_Size+0x100d534>
    4d28:	00000573 	andeq	r0, r0, r3, ror r5
    4d2c:	11020405 	tstne	r2, r5, lsl #8
    4d30:	000000c1 	andeq	r0, r0, r1, asr #1
    4d34:	0b442302 	bleq	110d944 <_Min_Stack_Size+0x110d544>
    4d38:	0000058e 	andeq	r0, r0, lr, lsl #11
    4d3c:	11020505 	tstne	r2, r5, lsl #10
    4d40:	000000cb 	andeq	r0, r0, fp, asr #1
    4d44:	0b482302 	bleq	120d954 <_Min_Stack_Size+0x120d554>
    4d48:	000002aa 	andeq	r0, r0, sl, lsr #5
    4d4c:	11020605 	tstne	r2, r5, lsl #12
    4d50:	000000c1 	andeq	r0, r0, r1, asr #1
    4d54:	0b502302 	bleq	140d964 <_Min_Stack_Size+0x140d564>
    4d58:	00000497 	muleq	r0, r7, r4
    4d5c:	11020705 	tstne	r2, r5, lsl #14
    4d60:	000000c1 	andeq	r0, r0, r1, asr #1
    4d64:	0b542302 	bleq	150d974 <_Min_Stack_Size+0x150d574>
    4d68:	00000555 	andeq	r0, r0, r5, asr r5
    4d6c:	11020805 	tstne	r2, r5, lsl #16
    4d70:	000000c1 	andeq	r0, r0, r1, asr #1
    4d74:	0b582302 	bleq	160d984 <_Min_Stack_Size+0x160d584>
    4d78:	0000050d 	andeq	r0, r0, sp, lsl #10
    4d7c:	11020905 	tstne	r2, r5, lsl #18
    4d80:	000000b5 	strheq	r0, [r0], -r5
    4d84:	0b5c2302 	bleq	170d994 <_Min_Stack_Size+0x170d594>
    4d88:	000003d2 	ldrdeq	r0, [r0], -r2
    4d8c:	11020a05 	tstne	r2, r5, lsl #20
    4d90:	000000c1 	andeq	r0, r0, r1, asr #1
    4d94:	0b602302 	bleq	180d9a4 <_Min_Stack_Size+0x180d5a4>
    4d98:	00000414 	andeq	r0, r0, r4, lsl r4
    4d9c:	11020b05 	tstne	r2, r5, lsl #22
    4da0:	000000c1 	andeq	r0, r0, r1, asr #1
    4da4:	0b642302 	bleq	190d9b4 <_Min_Stack_Size+0x190d5b4>
    4da8:	00000517 	andeq	r0, r0, r7, lsl r5
    4dac:	11020c05 	tstne	r2, r5, lsl #24
    4db0:	000000cb 	andeq	r0, r0, fp, asr #1
    4db4:	0b682302 	bleq	1a0d9c4 <_Min_Stack_Size+0x1a0d5c4>
    4db8:	000006c7 	andeq	r0, r0, r7, asr #13
    4dbc:	11020d05 	tstne	r2, r5, lsl #26
    4dc0:	000000c1 	andeq	r0, r0, r1, asr #1
    4dc4:	0a702302 	beq	1c0d9d4 <_Min_Stack_Size+0x1c0d5d4>
    4dc8:	00525343 	subseq	r5, r2, r3, asr #6
    4dcc:	11020e05 	tstne	r2, r5, lsl #28
    4dd0:	000000c1 	andeq	r0, r0, r1, asr #1
    4dd4:	0b742302 	bleq	1d0d9e4 <_Min_Stack_Size+0x1d0d5e4>
    4dd8:	00000521 	andeq	r0, r0, r1, lsr #10
    4ddc:	11020f05 	tstne	r2, r5, lsl #30
    4de0:	000000cb 	andeq	r0, r0, fp, asr #1
    4de4:	0b782302 	bleq	1e0d9f4 <_Min_Stack_Size+0x1e0d5f4>
    4de8:	00000690 	muleq	r0, r0, r6
    4dec:	11021005 	tstne	r2, r5
    4df0:	000000c1 	andeq	r0, r0, r1, asr #1
    4df4:	01802303 	orreq	r2, r0, r3, lsl #6
    4df8:	0003dc0b 	andeq	sp, r3, fp, lsl #24
    4dfc:	02110500 	andseq	r0, r1, #0, 10
    4e00:	0000c111 	andeq	ip, r0, r1, lsl r1
    4e04:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    4e08:	052b0b01 	streq	r0, [fp, #-2817]!	; 0xfffff4ff
    4e0c:	12050000 	andne	r0, r5, #0
    4e10:	00b51102 	adcseq	r1, r5, r2, lsl #2
    4e14:	23030000 	movwcs	r0, #12288	; 0x3000
    4e18:	be0b0188 	adflt<illegal precision>	f0, f3, #0.0
    4e1c:	05000002 	streq	r0, [r0, #-2]
    4e20:	c1110213 	tstgt	r1, r3, lsl r2
    4e24:	03000000 	movweq	r0, #0
    4e28:	0b018c23 	bleq	67ebc <_Min_Stack_Size+0x67abc>
    4e2c:	000006be 			; <UNDEFINED> instruction: 0x000006be
    4e30:	11021405 	tstne	r2, r5, lsl #8
    4e34:	000000c1 	andeq	r0, r0, r1, asr #1
    4e38:	01902303 	orrseq	r2, r0, r3, lsl #6
    4e3c:	0002d40b 	andeq	sp, r2, fp, lsl #8
    4e40:	02150500 	andseq	r0, r5, #0, 10
    4e44:	0000c111 	andeq	ip, r0, r1, lsl r1
    4e48:	94230300 	strtls	r0, [r3], #-768	; 0xfffffd00
    4e4c:	e90c0001 	stmdb	ip, {r0}
    4e50:	05000003 	streq	r0, [r0, #-3]
    4e54:	a1030216 	tstge	r3, r6, lsl r2
    4e58:	09000001 	stmdbeq	r0, {r0}
    4e5c:	02ac051c 	adceq	r0, ip, #28, 10	; 0x7000000
    4e60:	00254201 	eoreq	r4, r5, r1, lsl #4
    4e64:	00045f00 	andeq	r5, r4, r0, lsl #30
    4e68:	52530a00 	subspl	r0, r3, #0, 20
    4e6c:	02ad0500 	adceq	r0, sp, #0, 10
    4e70:	0000c111 	andeq	ip, r0, r1, lsl r1
    4e74:	00230200 	eoreq	r0, r3, r0, lsl #4
    4e78:	0052440a 	subseq	r4, r2, sl, lsl #8
    4e7c:	1102ae05 	tstne	r2, r5, lsl #28
    4e80:	000000c1 	andeq	r0, r0, r1, asr #1
    4e84:	0a042302 	beq	10da94 <_Min_Stack_Size+0x10d694>
    4e88:	00525242 	subseq	r5, r2, r2, asr #4
    4e8c:	1102af05 	tstne	r2, r5, lsl #30
    4e90:	000000c1 	andeq	r0, r0, r1, asr #1
    4e94:	0a082302 	beq	20daa4 <_Min_Stack_Size+0x20d6a4>
    4e98:	00315243 	eorseq	r5, r1, r3, asr #4
    4e9c:	1102b005 	tstne	r2, r5
    4ea0:	000000c1 	andeq	r0, r0, r1, asr #1
    4ea4:	0a0c2302 	beq	30dab4 <_Min_Stack_Size+0x30d6b4>
    4ea8:	00325243 	eorseq	r5, r2, r3, asr #4
    4eac:	1102b105 	tstne	r2, r5, lsl #2
    4eb0:	000000c1 	andeq	r0, r0, r1, asr #1
    4eb4:	0a102302 	beq	40dac4 <_Min_Stack_Size+0x40d6c4>
    4eb8:	00335243 	eorseq	r5, r3, r3, asr #4
    4ebc:	1102b205 	tstne	r2, r5, lsl #4
    4ec0:	000000c1 	andeq	r0, r0, r1, asr #1
    4ec4:	0b142302 	bleq	50dad4 <_Min_Stack_Size+0x50d6d4>
    4ec8:	00002281 	andeq	r2, r0, r1, lsl #5
    4ecc:	1102b305 	tstne	r2, r5, lsl #6
    4ed0:	000000c1 	andeq	r0, r0, r1, asr #1
    4ed4:	00182302 	andseq	r2, r8, r2, lsl #6
    4ed8:	0025440c 	eoreq	r4, r5, ip, lsl #8
    4edc:	02b40500 	adcseq	r0, r4, #0, 10
    4ee0:	0003e203 	andeq	lr, r3, r3, lsl #4
    4ee4:	01400d00 	cmpeq	r0, r0, lsl #26
    4ee8:	0102d005 	tsteq	r2, r5
    4eec:	0000218d 	andeq	r2, r0, sp, lsl #3
    4ef0:	000005fe 	strdeq	r0, [r0], -lr
    4ef4:	0021e90b 	eoreq	lr, r1, fp, lsl #18
    4ef8:	02d10500 	sbcseq	r0, r1, #0, 10
    4efc:	0000c111 	andeq	ip, r0, r1, lsl r1
    4f00:	00230200 	eoreq	r0, r3, r0, lsl #4
    4f04:	0022160b 	eoreq	r1, r2, fp, lsl #12
    4f08:	02d20500 	sbcseq	r0, r2, #0, 10
    4f0c:	0000c111 	andeq	ip, r0, r1, lsl r1
    4f10:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    4f14:	00215a0b 	eoreq	r5, r1, fp, lsl #20
    4f18:	02d30500 	sbcseq	r0, r3, #0, 10
    4f1c:	0000c111 	andeq	ip, r0, r1, lsl r1
    4f20:	08230200 	stmdaeq	r3!, {r9}
    4f24:	0026560b 	eoreq	r5, r6, fp, lsl #12
    4f28:	02d40500 	sbcseq	r0, r4, #0, 10
    4f2c:	0000c111 	andeq	ip, r0, r1, lsl r1
    4f30:	0c230200 	sfmeq	f0, 4, [r3], #-0
    4f34:	00200d0b 	eoreq	r0, r0, fp, lsl #26
    4f38:	02d50500 	sbcseq	r0, r5, #0, 10
    4f3c:	0000c111 	andeq	ip, r0, r1, lsl r1
    4f40:	10230200 	eorne	r0, r3, r0, lsl #4
    4f44:	0025a10b 	eoreq	sl, r5, fp, lsl #2
    4f48:	02d60500 	sbcseq	r0, r6, #0, 10
    4f4c:	0000c111 	andeq	ip, r0, r1, lsl r1
    4f50:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    4f54:	0023b40b 	eoreq	fp, r3, fp, lsl #8
    4f58:	02d70500 	sbcseq	r0, r7, #0, 10
    4f5c:	0000c111 	andeq	ip, r0, r1, lsl r1
    4f60:	18230200 	stmdane	r3!, {r9}
    4f64:	0021fd0b 	eoreq	pc, r1, fp, lsl #26
    4f68:	02d80500 	sbcseq	r0, r8, #0, 10
    4f6c:	0000c111 	andeq	ip, r0, r1, lsl r1
    4f70:	1c230200 	sfmne	f0, 4, [r3], #-0
    4f74:	0022260b 	eoreq	r2, r2, fp, lsl #12
    4f78:	02d90500 	sbcseq	r0, r9, #0, 10
    4f7c:	0000c111 	andeq	ip, r0, r1, lsl r1
    4f80:	20230200 	eorcs	r0, r3, r0, lsl #4
    4f84:	00203c0b 	eoreq	r3, r0, fp, lsl #24
    4f88:	02da0500 	sbcseq	r0, sl, #0, 10
    4f8c:	0000c111 	andeq	ip, r0, r1, lsl r1
    4f90:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    4f94:	00241e0b 	eoreq	r1, r4, fp, lsl #28
    4f98:	02db0500 	sbcseq	r0, fp, #0, 10
    4f9c:	0000c111 	andeq	ip, r0, r1, lsl r1
    4fa0:	28230200 	stmdacs	r3!, {r9}
    4fa4:	0025b70b 	eoreq	fp, r5, fp, lsl #14
    4fa8:	02dc0500 	sbcseq	r0, ip, #0, 10
    4fac:	0000c111 	andeq	ip, r0, r1, lsl r1
    4fb0:	2c230200 	sfmcs	f0, 4, [r3], #-0
    4fb4:	001fa70b 	andseq	sl, pc, fp, lsl #14
    4fb8:	02dd0500 	sbcseq	r0, sp, #0, 10
    4fbc:	0000cb0c 	andeq	ip, r0, ip, lsl #22
    4fc0:	30230200 	eorcc	r0, r3, r0, lsl #4
    4fc4:	001e9c0b 	andseq	r9, lr, fp, lsl #24
    4fc8:	02de0500 	sbcseq	r0, lr, #0, 10
    4fcc:	0000c111 	andeq	ip, r0, r1, lsl r1
    4fd0:	38230200 	stmdacc	r3!, {r9}
    4fd4:	4449430a 	strbmi	r4, [r9], #-778	; 0xfffffcf6
    4fd8:	02df0500 	sbcseq	r0, pc, #0, 10
    4fdc:	0000c111 	andeq	ip, r0, r1, lsl r1
    4fe0:	3c230200 	sfmcc	f0, 4, [r3], #-0
    4fe4:	0024fc0b 	eoreq	pc, r4, fp, lsl #24
    4fe8:	02e00500 	rsceq	r0, r0, #0, 10
    4fec:	0005fe0d 	andeq	pc, r5, sp, lsl #28
    4ff0:	40230200 	eormi	r0, r3, r0, lsl #4
    4ff4:	001dc70b 	andseq	ip, sp, fp, lsl #14
    4ff8:	02e10500 	rsceq	r0, r1, #0, 10
    4ffc:	0000c111 	andeq	ip, r0, r1, lsl r1
    5000:	4c230200 	sfmmi	f0, 4, [r3], #-0
    5004:	0025060b 	eoreq	r0, r5, fp, lsl #12
    5008:	02e20500 	rsceq	r0, r2, #0, 10
    500c:	0000b50d 	andeq	fp, r0, sp, lsl #10
    5010:	50230200 	eorpl	r0, r3, r0, lsl #4
    5014:	00221e0b 	eoreq	r1, r2, fp, lsl #28
    5018:	02e30500 	rsceq	r0, r3, #0, 10
    501c:	0000c111 	andeq	ip, r0, r1, lsl r1
    5020:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    5024:	00237e0b 	eoreq	r7, r3, fp, lsl #28
    5028:	02e40500 	rsceq	r0, r4, #0, 10
    502c:	0000b50d 	andeq	fp, r0, sp, lsl #10
    5030:	58230200 	stmdapl	r3!, {r9}
    5034:	001ef10b 	andseq	pc, lr, fp, lsl #2
    5038:	02e50500 	rsceq	r0, r5, #0, 10
    503c:	0000c111 	andeq	ip, r0, r1, lsl r1
    5040:	5c230200 	sfmpl	f0, 4, [r3], #-0
    5044:	0020150b 	eoreq	r1, r0, fp, lsl #10
    5048:	02e60500 	rsceq	r0, r6, #0, 10
    504c:	00060e0d 	andeq	r0, r6, sp, lsl #28
    5050:	60230200 	eorvs	r0, r3, r0, lsl #4
    5054:	00245a0b 	eoreq	r5, r4, fp, lsl #20
    5058:	02e70500 	rsceq	r0, r7, #0, 10
    505c:	0000c111 	andeq	ip, r0, r1, lsl r1
    5060:	80230300 	eorhi	r0, r3, r0, lsl #6
    5064:	20780b02 	rsbscs	r0, r8, r2, lsl #22
    5068:	e8050000 	stmda	r5, {}	; <UNPREDICTABLE>
    506c:	062e1102 	strteq	r1, [lr], -r2, lsl #2
    5070:	23030000 	movwcs	r0, #12288	; 0x3000
    5074:	07000284 	streq	r0, [r0, -r4, lsl #5]
    5078:	000000b5 	strheq	r0, [r0], -r5
    507c:	0000060e 	andeq	r0, r0, lr, lsl #12
    5080:	00008c08 	andeq	r8, r0, r8, lsl #24
    5084:	07000200 	streq	r0, [r0, -r0, lsl #4]
    5088:	000000b5 	strheq	r0, [r0], -r5
    508c:	0000061e 	andeq	r0, r0, lr, lsl r6
    5090:	00008c08 	andeq	r8, r0, r8, lsl #24
    5094:	07002700 	streq	r2, [r0, -r0, lsl #14]
    5098:	000000c1 	andeq	r0, r0, r1, asr #1
    509c:	0000062e 	andeq	r0, r0, lr, lsr #12
    50a0:	00008c08 	andeq	r8, r0, r8, lsl #24
    50a4:	05000e00 	streq	r0, [r0, #-3584]	; 0xfffff200
    50a8:	0000061e 	andeq	r0, r0, lr, lsl r6
    50ac:	00218f0c 	eoreq	r8, r1, ip, lsl #30
    50b0:	02e90500 	rsceq	r0, r9, #0, 10
    50b4:	00046c03 	andeq	r6, r4, r3, lsl #24
    50b8:	01070e00 	tsteq	r7, r0, lsl #28
    50bc:	0000003c 	andeq	r0, r0, ip, lsr r0
    50c0:	f501ba06 			; <UNDEFINED> instruction: 0xf501ba06
    50c4:	5f000003 	svcpl	0x00000003
    50c8:	0f000006 	svceq	0x00000006
    50cc:	000023a3 	andeq	r2, r0, r3, lsr #7
    50d0:	45531000 	ldrbmi	r1, [r3, #-0]
    50d4:	00010054 	andeq	r0, r1, r4, asr r0
    50d8:	0003f703 	andeq	pc, r3, r3, lsl #14
    50dc:	03bd0600 			; <UNDEFINED> instruction: 0x03bd0600
    50e0:	00000640 	andeq	r0, r0, r0, asr #12
    50e4:	3c01070e 	stccc	7, cr0, [r1], {14}
    50e8:	06000000 	streq	r0, [r0], -r0
    50ec:	033101c0 	teqeq	r1, #192, 2	; 0x30
    50f0:	068a0000 	streq	r0, [sl], r0
    50f4:	800f0000 	andhi	r0, pc, r0
    50f8:	00000003 	andeq	r0, r0, r3
    50fc:	0003190f 	andeq	r1, r3, pc, lsl #18
    5100:	03000100 	movweq	r0, #256	; 0x100
    5104:	00000333 	andeq	r0, r0, r3, lsr r3
    5108:	6b03c306 	blvs	f5d28 <_Min_Stack_Size+0xf5928>
    510c:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    5110:	003c0107 	eorseq	r0, ip, r7, lsl #2
    5114:	c7060000 	strgt	r0, [r6, -r0]
    5118:	0013c901 	andseq	ip, r3, r1, lsl #18
    511c:	0006b500 	andeq	fp, r6, r0, lsl #10
    5120:	16480f00 	strbne	r0, [r8], -r0, lsl #30
    5124:	0f000000 	svceq	0x00000000
    5128:	00001f19 	andeq	r1, r0, r9, lsl pc
    512c:	cb030001 	blgt	c5138 <_Min_Stack_Size+0xc4d38>
    5130:	06000013 			; <UNDEFINED> instruction: 0x06000013
    5134:	069603ca 	ldreq	r0, [r6], sl, asr #7
    5138:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    513c:	0001be04 	andeq	fp, r1, r4, lsl #28
    5140:	001d1100 	andseq	r1, sp, r0, lsl #2
    5144:	070e0000 	streq	r0, [lr, -r0]
    5148:	00003c01 	andeq	r3, r0, r1, lsl #24
    514c:	01280700 			; <UNDEFINED> instruction: 0x01280700
    5150:	000006aa 	andeq	r0, r0, sl, lsr #13
    5154:	000006f8 	strdeq	r0, [r0], -r8
    5158:	0003cb0f 	andeq	ip, r3, pc, lsl #22
    515c:	980f0000 	stmdals	pc, {}	; <UNPREDICTABLE>
    5160:	01000005 	tsteq	r0, r5
    5164:	0007220f 	andeq	r2, r7, pc, lsl #4
    5168:	bf0f0200 	svclt	0x000f0200
    516c:	03000003 	movweq	r0, #3
    5170:	06ac0300 	strteq	r0, [ip], r0, lsl #6
    5174:	2d070000 	stccs	0, cr0, [r7, #-0]
    5178:	0006cd03 	andeq	ip, r6, r3, lsl #26
    517c:	01070e00 	tsteq	r7, r0, lsl #28
    5180:	0000003c 	andeq	r0, r0, ip, lsr r0
    5184:	d3013307 	movwle	r3, #4871	; 0x1307
    5188:	23000024 	movwcs	r0, #36	; 0x24
    518c:	0f000007 	svceq	0x00000007
    5190:	00002493 	muleq	r0, r3, r4
    5194:	26210f00 	strtcs	r0, [r1], -r0, lsl #30
    5198:	00010000 	andeq	r0, r1, r0
    519c:	0024d503 	eoreq	sp, r4, r3, lsl #10
    51a0:	03360700 	teqeq	r6, #0, 14
    51a4:	00000704 	andeq	r0, r0, r4, lsl #14
    51a8:	30081c12 	andcc	r1, r8, r2, lsl ip
    51ac:	00048201 	andeq	r8, r4, r1, lsl #4
    51b0:	0007a600 	andeq	sl, r7, r0, lsl #12
    51b4:	023f1300 	eorseq	r1, pc, #0, 6
    51b8:	31080000 	mrscc	r0, (UNDEF: 8)
    51bc:	0000b50c 	andeq	fp, r0, ip, lsl #10
    51c0:	00230200 	eoreq	r0, r3, r0, lsl #4
    51c4:	00056913 	andeq	r6, r5, r3, lsl r9
    51c8:	0c340800 	ldceq	8, cr0, [r4], #-0
    51cc:	000000b5 	strheq	r0, [r0], -r5
    51d0:	13042302 	movwne	r2, #17154	; 0x4302
    51d4:	00000264 	andeq	r0, r0, r4, ror #4
    51d8:	b50c3708 	strlt	r3, [ip, #-1800]	; 0xfffff8f8
    51dc:	02000000 	andeq	r0, r0, #0
    51e0:	69130823 	ldmdbvs	r3, {r0, r1, r5, fp}
    51e4:	08000002 	stmdaeq	r0, {r1}
    51e8:	00b50c3a 	adcseq	r0, r5, sl, lsr ip
    51ec:	23020000 	movwcs	r0, #8192	; 0x2000
    51f0:	0274130c 	rsbseq	r1, r4, #12, 6	; 0x30000000
    51f4:	3e080000 	cdpcc	0, 0, cr0, cr8, cr0, {0}
    51f8:	0000b50c 	andeq	fp, r0, ip, lsl #10
    51fc:	10230200 	eorne	r0, r3, r0, lsl #4
    5200:	00027913 	andeq	r7, r2, r3, lsl r9
    5204:	0c410800 	mcrreq	8, 0, r0, r1, cr0
    5208:	000000b5 	strheq	r0, [r0], -r5
    520c:	13142302 	tstne	r4, #134217728	; 0x8000000
    5210:	0000027e 	andeq	r0, r0, lr, ror r2
    5214:	b50c4608 	strlt	r4, [ip, #-1544]	; 0xfffff9f8
    5218:	02000000 	andeq	r0, r0, #0
    521c:	03001823 	movweq	r1, #2083	; 0x823
    5220:	00000484 	andeq	r0, r0, r4, lsl #9
    5224:	2f024b08 	svccs	0x00024b08
    5228:	12000007 	andne	r0, r0, #7
    522c:	01340934 	teqeq	r4, r4, lsr r9
    5230:	000004ee 	andeq	r0, r0, lr, ror #9
    5234:	00000829 	andeq	r0, r0, r9, lsr #16
    5238:	0006cc13 	andeq	ip, r6, r3, lsl ip
    523c:	0c350900 			; <UNDEFINED> instruction: 0x0c350900
    5240:	000000b5 	strheq	r0, [r0], -r5
    5244:	13002302 	movwne	r2, #770	; 0x302
    5248:	00000377 	andeq	r0, r0, r7, ror r3
    524c:	b50c3809 	strlt	r3, [ip, #-2057]	; 0xfffff7f7
    5250:	02000000 	andeq	r0, r0, #0
    5254:	8f130423 	svchi	0x00130423
    5258:	09000002 	stmdbeq	r0, {r1}
    525c:	00b50c3b 	adcseq	r0, r5, fp, lsr ip
    5260:	23020000 	movwcs	r0, #8192	; 0x2000
    5264:	03201308 			; <UNDEFINED> instruction: 0x03201308
    5268:	3e090000 	cdpcc	0, 0, cr0, cr9, cr0, {0}
    526c:	0000b50c 	andeq	fp, r0, ip, lsl #10
    5270:	0c230200 	sfmeq	f0, 4, [r3], #-0
    5274:	0002ec13 	andeq	lr, r2, r3, lsl ip
    5278:	0c410900 	mcrreq	9, 0, r0, r1, cr0	; <UNPREDICTABLE>
    527c:	000000b5 	strheq	r0, [r0], -r5
    5280:	13102302 	tstne	r0, #134217728	; 0x8000000
    5284:	00000310 	andeq	r0, r0, r0, lsl r3
    5288:	b50c4409 	strlt	r4, [ip, #-1033]	; 0xfffffbf7
    528c:	02000000 	andeq	r0, r0, #0
    5290:	50141423 	andspl	r1, r4, r3, lsr #8
    5294:	09004c4c 	stmdbeq	r0, {r2, r3, r6, sl, fp, lr}
    5298:	07a61647 	streq	r1, [r6, r7, asr #12]!
    529c:	23020000 	movwcs	r0, #8192	; 0x2000
    52a0:	f0030018 			; <UNDEFINED> instruction: 0xf0030018
    52a4:	09000004 	stmdbeq	r0, {r2}
    52a8:	07b20248 	ldreq	r0, [r2, r8, asr #4]!
    52ac:	14120000 	ldrne	r0, [r2], #-0
    52b0:	9f014e09 	svcls	0x00014e09
    52b4:	8e000003 	cdphi	0, 0, cr0, cr0, cr3, {0}
    52b8:	13000008 	movwne	r0, #8
    52bc:	000006db 	ldrdeq	r0, [r0], -fp
    52c0:	b50c4f09 	strlt	r4, [ip, #-3849]	; 0xfffff0f7
    52c4:	02000000 	andeq	r0, r0, #0
    52c8:	7d130023 	ldcvc	0, cr0, [r3, #-140]	; 0xffffff74
    52cc:	09000007 	stmdbeq	r0, {r0, r1, r2}
    52d0:	00b50c52 	adcseq	r0, r5, r2, asr ip
    52d4:	23020000 	movwcs	r0, #8192	; 0x2000
    52d8:	042c1304 	strteq	r1, [ip], #-772	; 0xfffffcfc
    52dc:	55090000 	strpl	r0, [r9, #-0]
    52e0:	0000b50c 	andeq	fp, r0, ip, lsl #10
    52e4:	08230200 	stmdaeq	r3!, {r9}
    52e8:	00021a13 	andeq	r1, r2, r3, lsl sl
    52ec:	0c580900 	mrrceq	9, 0, r0, r8, cr0	; <UNPREDICTABLE>
    52f0:	000000b5 	strheq	r0, [r0], -r5
    52f4:	130c2302 	movwne	r2, #49922	; 0xc302
    52f8:	00000620 	andeq	r0, r0, r0, lsr #12
    52fc:	b50c5b09 	strlt	r5, [ip, #-2825]	; 0xfffff4f7
    5300:	02000000 	andeq	r0, r0, #0
    5304:	03001023 	movweq	r1, #35	; 0x23
    5308:	000003a1 	andeq	r0, r0, r1, lsr #7
    530c:	35025e09 	strcc	r5, [r2, #-3593]	; 0xfffff1f7
    5310:	12000008 	andne	r0, r0, #8
    5314:	01320a30 	teqeq	r2, r0, lsr sl
    5318:	00001fd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    531c:	0000095c 	andeq	r0, r0, ip, asr r9
    5320:	001e4f13 	andseq	r4, lr, r3, lsl pc
    5324:	0c330a00 			; <UNDEFINED> instruction: 0x0c330a00
    5328:	000000b5 	strheq	r0, [r0], -r5
    532c:	13002302 	movwne	r2, #770	; 0x302
    5330:	00001d6b 	andeq	r1, r0, fp, ror #26
    5334:	b50c360a 	strlt	r3, [ip, #-1546]	; 0xfffff9f6
    5338:	02000000 	andeq	r0, r0, #0
    533c:	48130423 	ldmdami	r3, {r0, r1, r5, sl}
    5340:	0a00001f 	beq	53c4 <_Min_Stack_Size+0x4fc4>
    5344:	00b50c3a 	adcseq	r0, r5, sl, lsr ip
    5348:	23020000 	movwcs	r0, #8192	; 0x2000
    534c:	23ce1308 	biccs	r1, lr, #8, 6	; 0x20000000
    5350:	3d0a0000 	stccc	0, cr0, [sl, #-0]
    5354:	0000b50c 	andeq	fp, r0, ip, lsl #10
    5358:	0c230200 	sfmeq	f0, 4, [r3], #-0
    535c:	00222e13 	eoreq	r2, r2, r3, lsl lr
    5360:	0c400a00 	mcrreq	10, 0, r0, r0, cr0
    5364:	000000b5 	strheq	r0, [r0], -r5
    5368:	13102302 	tstne	r0, #134217728	; 0x8000000
    536c:	00002205 	andeq	r2, r0, r5, lsl #4
    5370:	b50c430a 	strlt	r4, [ip, #-778]	; 0xfffffcf6
    5374:	02000000 	andeq	r0, r0, #0
    5378:	dc131423 	cfldrsle	mvf1, [r3], {35}	; 0x23
    537c:	0a000008 	beq	53a4 <_Min_Stack_Size+0x4fa4>
    5380:	00b50c46 	adcseq	r0, r5, r6, asr #24
    5384:	23020000 	movwcs	r0, #8192	; 0x2000
    5388:	0ee01318 	mcreq	3, 7, r1, cr0, cr8, {0}
    538c:	4b0a0000 	blmi	285394 <_Min_Stack_Size+0x284f94>
    5390:	0000b50c 	andeq	fp, r0, ip, lsl #10
    5394:	1c230200 	sfmne	f0, 4, [r3], #-0
    5398:	001f0213 	andseq	r0, pc, r3, lsl r2	; <UNPREDICTABLE>
    539c:	0c4e0a00 	mcrreq	10, 0, r0, lr, cr0
    53a0:	000000b5 	strheq	r0, [r0], -r5
    53a4:	13202302 			; <UNDEFINED> instruction: 0x13202302
    53a8:	0000204d 	andeq	r2, r0, sp, asr #32
    53ac:	b50c530a 	strlt	r5, [ip, #-778]	; 0xfffffcf6
    53b0:	02000000 	andeq	r0, r0, #0
    53b4:	8c132423 	cfldrshi	mvf2, [r3], {35}	; 0x23
    53b8:	0a00001f 	beq	543c <_Min_Stack_Size+0x503c>
    53bc:	00b50c56 	adcseq	r0, r5, r6, asr ip
    53c0:	23020000 	movwcs	r0, #8192	; 0x2000
    53c4:	20881328 	addcs	r1, r8, r8, lsr #6
    53c8:	5c0a0000 	stcpl	0, cr0, [sl], {-0}
    53cc:	0000b50c 	andeq	fp, r0, ip, lsl #10
    53d0:	2c230200 	sfmcs	f0, 4, [r3], #-0
    53d4:	1fd30300 	svcne	0x00d30300
    53d8:	610a0000 	mrsvs	r0, (UNDEF: 10)
    53dc:	00089a02 	andeq	r9, r8, r2, lsl #20
    53e0:	01070e00 	tsteq	r7, r0, lsl #28
    53e4:	0000003c 	andeq	r0, r0, ip, lsr r0
    53e8:	a001680a 	andge	r6, r1, sl, lsl #16
    53ec:	9f000022 	svcls	0x00000022
    53f0:	0f000009 	svceq	0x00000009
    53f4:	00002395 	muleq	r0, r5, r3
    53f8:	262c0f00 	strtcs	r0, [ip], -r0, lsl #30
    53fc:	0f010000 	svceq	0x00010000
    5400:	00002510 	andeq	r2, r0, r0, lsl r5
    5404:	22ff0f02 	rscscs	r0, pc, #2, 30
    5408:	0f030000 	svceq	0x00030000
    540c:	00001f0b 	andeq	r1, r0, fp, lsl #30
    5410:	1f600f04 	svcne	0x00600f04
    5414:	00050000 	andeq	r0, r5, r0
    5418:	0022a203 	eoreq	sl, r2, r3, lsl #4
    541c:	026f0a00 	rsbeq	r0, pc, #0, 20
    5420:	00000968 	andeq	r0, r0, r8, ror #18
    5424:	00099f05 	andeq	r9, r9, r5, lsl #30
    5428:	24631500 	strbtcs	r1, [r3], #-1280	; 0xfffffb00
    542c:	0a600000 	beq	1805434 <_Min_Stack_Size+0x1805034>
    5430:	0a90108b 	beq	fe409664 <_estack+0xde3c9664>
    5434:	44130000 	ldrmi	r0, [r3], #-0
    5438:	0a000020 	beq	54c0 <_Min_Stack_Size+0x50c0>
    543c:	0a901f8d 	beq	fe40d278 <_estack+0xde3cd278>
    5440:	23020000 	movwcs	r0, #8192	; 0x2000
    5444:	07b81300 	ldreq	r1, [r8, r0, lsl #6]!
    5448:	8f0a0000 	svchi	0x000a0000
    544c:	00095c1e 	andeq	r5, r9, lr, lsl ip
    5450:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    5454:	001de713 	andseq	lr, sp, r3, lsl r7
    5458:	1e910a00 	vfnmsne.f32	s0, s2, s0
    545c:	00000723 	andeq	r0, r0, r3, lsr #14
    5460:	13342302 	teqne	r4, #134217728	; 0x8000000
    5464:	0000037a 	andeq	r0, r0, sl, ror r3
    5468:	ab1e930a 	blge	7aa098 <_Min_Stack_Size+0x7a9c98>
    546c:	02000009 	andeq	r0, r0, #9
    5470:	87133523 	ldrhi	r3, [r3, -r3, lsr #10]
    5474:	0a000023 	beq	5508 <_Min_Stack_Size+0x5108>
    5478:	0a961f95 	beq	fe58d2d4 <_estack+0xde54d2d4>
    547c:	23020000 	movwcs	r0, #8192	; 0x2000
    5480:	24a01338 	strtcs	r1, [r0], #824	; 0x338
    5484:	970a0000 	strls	r0, [sl, -r0]
    5488:	000aa921 	andeq	sl, sl, r1, lsr #18
    548c:	3c230200 	sfmcc	f0, 4, [r3], #-0
    5490:	0025c013 	eoreq	ip, r5, r3, lsl r0
    5494:	21990a00 	orrscs	r0, r9, r0, lsl #20
    5498:	00000aa9 	andeq	r0, r0, r9, lsr #21
    549c:	13402302 	movtne	r2, #770	; 0x302
    54a0:	00002065 	andeq	r2, r0, r5, rrx
    54a4:	a9219b0a 	stmdbge	r1!, {r1, r3, r8, r9, fp, ip, pc}
    54a8:	0200000a 	andeq	r0, r0, #10
    54ac:	f0134423 			; <UNDEFINED> instruction: 0xf0134423
    54b0:	0a00001f 	beq	5534 <_Min_Stack_Size+0x5134>
    54b4:	0aa9219d 	beq	fea4db30 <_estack+0xdea0db30>
    54b8:	23020000 	movwcs	r0, #8192	; 0x2000
    54bc:	23e91348 	mvncs	r1, #72, 6	; 0x20000001
    54c0:	9f0a0000 	svcls	0x000a0000
    54c4:	000aa921 	andeq	sl, sl, r1, lsr #18
    54c8:	4c230200 	sfmmi	f0, 4, [r3], #-0
    54cc:	001f9513 	andseq	r9, pc, r3, lsl r5	; <UNPREDICTABLE>
    54d0:	21a10a00 			; <UNDEFINED> instruction: 0x21a10a00
    54d4:	00000aa9 	andeq	r0, r0, r9, lsr #21
    54d8:	13502302 	cmpne	r0, #134217728	; 0x8000000
    54dc:	00001e38 	andeq	r1, r0, r8, lsr lr
    54e0:	c11ea30a 	tstgt	lr, sl, lsl #6
    54e4:	02000000 	andeq	r0, r0, #0
    54e8:	23135423 	tstcs	r3, #587202560	; 0x23000000
    54ec:	0a000025 	beq	5588 <_Min_Stack_Size+0x5188>
    54f0:	00b51ea5 	adcseq	r1, r5, r5, lsr #29
    54f4:	23020000 	movwcs	r0, #8192	; 0x2000
    54f8:	22b71358 	adcscs	r1, r7, #88, 6	; 0x60000001
    54fc:	a70a0000 	strge	r0, [sl, -r0]
    5500:	0000b51e 	andeq	fp, r0, lr, lsl r5
    5504:	5c230200 	sfmpl	f0, 4, [r3], #-0
    5508:	59041600 	stmdbpl	r4, {r9, sl, ip}
    550c:	17000001 	strne	r0, [r0, -r1]
    5510:	0aa31804 	beq	fe8cb528 <_estack+0xde88b528>
    5514:	a3190000 	tstge	r9, #0
    5518:	0000000a 	andeq	r0, r0, sl
    551c:	09b00416 	ldmibeq	r0!, {r1, r2, r4, sl}
    5520:	04160000 	ldreq	r0, [r6], #-0
    5524:	00000a98 	muleq	r0, r8, sl
    5528:	00246503 	eoreq	r6, r4, r3, lsl #10
    552c:	02a90a00 	adceq	r0, r9, #0, 20
    5530:	000009b0 			; <UNDEFINED> instruction: 0x000009b0
    5534:	300b1c12 	andcc	r1, fp, r2, lsl ip
    5538:	00225901 	eoreq	r5, r2, r1, lsl #18
    553c:	000b3200 	andeq	r3, fp, r0, lsl #4
    5540:	1d921300 	ldcne	3, cr1, [r2]
    5544:	310b0000 	mrscc	r0, (UNDEF: 11)
    5548:	0000b50c 	andeq	fp, r0, ip, lsl #10
    554c:	00230200 	eoreq	r0, r3, r0, lsl #4
    5550:	001f2913 	andseq	r2, pc, r3, lsl r9	; <UNPREDICTABLE>
    5554:	0c370b00 			; <UNDEFINED> instruction: 0x0c370b00
    5558:	000000b5 	strheq	r0, [r0], -r5
    555c:	13042302 	movwne	r2, #17154	; 0x4302
    5560:	00001dde 	ldrdeq	r1, [r0], -lr
    5564:	b50c3a0b 	strlt	r3, [ip, #-2571]	; 0xfffff5f5
    5568:	02000000 	andeq	r0, r0, #0
    556c:	8e130823 	cdphi	8, 1, cr0, cr3, cr3, {1}
    5570:	0b000023 	bleq	5604 <_Min_Stack_Size+0x5204>
    5574:	00b50c3d 	adcseq	r0, r5, sp, lsr ip
    5578:	23020000 	movwcs	r0, #8192	; 0x2000
    557c:	08dc130c 	ldmeq	ip, {r2, r3, r8, r9, ip}^
    5580:	440b0000 	strmi	r0, [fp], #-0
    5584:	0000b50c 	andeq	fp, r0, ip, lsl #10
    5588:	10230200 	eorne	r0, r3, r0, lsl #4
    558c:	00205b13 	eoreq	r5, r0, r3, lsl fp
    5590:	0c470b00 	mcrreq	11, 0, r0, r7, cr0
    5594:	000000b5 	strheq	r0, [r0], -r5
    5598:	13142302 	tstne	r4, #134217728	; 0x8000000
    559c:	00001e01 	andeq	r1, r0, r1, lsl #28
    55a0:	b50c4a0b 	strlt	r4, [ip, #-2571]	; 0xfffff5f5
    55a4:	02000000 	andeq	r0, r0, #0
    55a8:	03001823 	movweq	r1, #2083	; 0x823
    55ac:	0000225b 	andeq	r2, r0, fp, asr r2
    55b0:	bb034c0b 	bllt	d85e4 <_Min_Stack_Size+0xd81e4>
    55b4:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    55b8:	003c0107 	eorseq	r0, ip, r7, lsl #2
    55bc:	760b0000 	strvc	r0, [fp], -r0
    55c0:	001f7401 	andseq	r7, pc, r1, lsl #8
    55c4:	000b8100 	andeq	r8, fp, r0, lsl #2
    55c8:	1dec0f00 	stclne	15, cr0, [ip]
    55cc:	0f000000 	svceq	0x00000000
    55d0:	000021bd 			; <UNDEFINED> instruction: 0x000021bd
    55d4:	25e80f20 	strbcs	r0, [r8, #3872]!	; 0xf20
    55d8:	0f240000 	svceq	0x00240000
    55dc:	00002242 	andeq	r2, r0, r2, asr #4
    55e0:	21760f21 	cmncs	r6, r1, lsr #30
    55e4:	0f220000 	svceq	0x00220000
    55e8:	000025fc 	strdeq	r2, [r0], -ip
    55ec:	24430f23 	strbcs	r0, [r3], #-3875	; 0xfffff0dd
    55f0:	0fa00000 	svceq	0x00a00000
    55f4:	00002586 	andeq	r2, r0, r6, lsl #11
    55f8:	760300e0 	strvc	r0, [r3], -r0, ror #1
    55fc:	0b00001f 	bleq	5680 <_Min_Stack_Size+0x5280>
    5600:	0b3e0388 	bleq	f86428 <_Min_Stack_Size+0xf86028>
    5604:	81050000 	mrshi	r0, (UNDEF: 5)
    5608:	0300000b 	movweq	r0, #11
    560c:	00001ec6 	andeq	r1, r0, r6, asr #29
    5610:	b512910b 	ldrlt	r9, [r2, #-267]	; 0xfffffef5
    5614:	05000000 	streq	r0, [r0, #-0]
    5618:	00000b92 	muleq	r0, r2, fp
    561c:	00231515 	eoreq	r1, r3, r5, lsl r5
    5620:	960b4400 	strls	r4, [fp], -r0, lsl #8
    5624:	000c9210 	andeq	r9, ip, r0, lsl r2
    5628:	20441300 	subcs	r1, r4, r0, lsl #6
    562c:	980b0000 	stmdals	fp, {}	; <UNPREDICTABLE>
    5630:	000c9222 	andeq	r9, ip, r2, lsr #4
    5634:	00230200 	eoreq	r0, r3, r0, lsl #4
    5638:	0007b813 	andeq	fp, r7, r3, lsl r8
    563c:	219a0b00 	orrscs	r0, sl, r0, lsl #22
    5640:	00000b32 	andeq	r0, r0, r2, lsr fp
    5644:	13042302 	movwne	r2, #17154	; 0x4302
    5648:	000023a9 	andeq	r2, r0, r9, lsr #7
    564c:	98229c0b 	stmdals	r2!, {r0, r1, r3, sl, fp, ip, pc}
    5650:	0200000c 	andeq	r0, r0, #12
    5654:	38132023 	ldmdacc	r3, {r0, r1, r5, sp}
    5658:	0b000024 	bleq	56f0 <_Min_Stack_Size+0x52f0>
    565c:	00a4219e 	umlaleq	r2, r4, lr, r1
    5660:	23020000 	movwcs	r0, #8192	; 0x2000
    5664:	24e51324 	strbtcs	r1, [r5], #804	; 0x324
    5668:	a00b0000 	andge	r0, fp, r0
    566c:	0000b021 	andeq	fp, r0, r1, lsr #32
    5670:	26230200 	strtcs	r0, [r3], -r0, lsl #4
    5674:	001e2d13 	andseq	r2, lr, r3, lsl sp
    5678:	22a20b00 	adccs	r0, r2, #0, 22
    567c:	00000c98 	muleq	r0, r8, ip
    5680:	13282302 			; <UNDEFINED> instruction: 0x13282302
    5684:	00001d9b 	muleq	r0, fp, sp
    5688:	a421a40b 	strtge	sl, [r1], #-1035	; 0xfffffbf5
    568c:	02000000 	andeq	r0, r0, #0
    5690:	f1132c23 			; <UNDEFINED> instruction: 0xf1132c23
    5694:	0b000021 	bleq	5720 <_Min_Stack_Size+0x5320>
    5698:	00b021a6 	adcseq	r2, r0, r6, lsr #3
    569c:	23020000 	movwcs	r0, #8192	; 0x2000
    56a0:	22cc132e 	sbccs	r1, ip, #-1207959552	; 0xb8000000
    56a4:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    56a8:	000b9e1f 	andeq	r9, fp, pc, lsl lr
    56ac:	30230200 	eorcc	r0, r3, r0, lsl #4
    56b0:	001fe313 	andseq	lr, pc, r3, lsl r3	; <UNPREDICTABLE>
    56b4:	22aa0b00 	adccs	r0, sl, #0, 22
    56b8:	00000c9e 	muleq	r0, lr, ip
    56bc:	13342302 	teqne	r4, #134217728	; 0x8000000
    56c0:	00001efb 	strdeq	r1, [r0], -fp
    56c4:	9e22ac0b 	cdpls	12, 2, cr10, cr2, cr11, {0}
    56c8:	0200000c 	andeq	r0, r0, #12
    56cc:	e7133823 	ldr	r3, [r3, -r3, lsr #16]
    56d0:	0b00001d 	bleq	574c <_Min_Stack_Size+0x534c>
    56d4:	072321ae 	streq	r2, [r3, -lr, lsr #3]!
    56d8:	23020000 	movwcs	r0, #8192	; 0x2000
    56dc:	2377133c 	cmncs	r7, #60, 6	; 0xf0000000
    56e0:	b00b0000 	andlt	r0, fp, r0
    56e4:	000b8d21 	andeq	r8, fp, r1, lsr #26
    56e8:	3d230200 	sfmcc	f0, 4, [r3, #-0]
    56ec:	00253513 	eoreq	r3, r5, r3, lsl r5
    56f0:	21b40b00 			; <UNDEFINED> instruction: 0x21b40b00
    56f4:	00000b8d 	andeq	r0, r0, sp, lsl #23
    56f8:	133e2302 	teqne	lr, #134217728	; 0x8000000
    56fc:	00001e38 	andeq	r1, r0, r8, lsr lr
    5700:	c121b70b 			; <UNDEFINED> instruction: 0xc121b70b
    5704:	02000000 	andeq	r0, r0, #0
    5708:	16004023 	strne	r4, [r0], -r3, lsr #32
    570c:	00045f04 	andeq	r5, r4, r4, lsl #30
    5710:	93041600 	movwls	r1, #17920	; 0x4600
    5714:	16000000 	strne	r0, [r0], -r0
    5718:	000aaf04 	andeq	sl, sl, r4, lsl #30
    571c:	23170300 	tstcs	r7, #0, 6
    5720:	c90b0000 	stmdbgt	fp, {}	; <UNPREDICTABLE>
    5724:	000ba303 	andeq	sl, fp, r3, lsl #6
    5728:	0c341200 	lfmeq	f1, 4, [r4], #-0
    572c:	1ea20157 	mcrne	1, 5, r0, cr2, cr7, {2}
    5730:	0d810000 	stceq	0, cr0, [r1]
    5734:	0e130000 	cdpeq	0, 1, cr0, cr3, cr0, {0}
    5738:	0c00001e 	stceq	0, cr0, [r0], {30}
    573c:	00b50c58 	adcseq	r0, r5, r8, asr ip
    5740:	23020000 	movwcs	r0, #8192	; 0x2000
    5744:	25a91300 	strcs	r1, [r9, #768]!	; 0x300
    5748:	5c0c0000 	stcpl	0, cr0, [ip], {-0}
    574c:	0000b50c 	andeq	fp, r0, ip, lsl #10
    5750:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    5754:	00200713 	eoreq	r0, r0, r3, lsl r7
    5758:	0c600c00 	stcleq	12, cr0, [r0], #-0
    575c:	000000b5 	strheq	r0, [r0], -r5
    5760:	13082302 	movwne	r2, #33538	; 0x8302
    5764:	00001e7a 	andeq	r1, r0, sl, ror lr
    5768:	b50c640c 	strlt	r6, [ip, #-1036]	; 0xfffffbf4
    576c:	02000000 	andeq	r0, r0, #0
    5770:	e9130c23 	ldmdb	r3, {r0, r1, r5, sl, fp}
    5774:	0c00001e 	stceq	0, cr0, [r0], {30}
    5778:	00b50c66 	adcseq	r0, r5, r6, ror #24
    577c:	23020000 	movwcs	r0, #8192	; 0x2000
    5780:	24f11310 	ldrbtcs	r1, [r1], #784	; 0x310
    5784:	680c0000 	stmdavs	ip, {}	; <UNPREDICTABLE>
    5788:	0000b50c 	andeq	fp, r0, ip, lsl #10
    578c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    5790:	00235513 	eoreq	r5, r3, r3, lsl r5
    5794:	0c6b0c00 	stcleq	12, cr0, [fp], #-0
    5798:	000000b5 	strheq	r0, [r0], -r5
    579c:	13182302 	tstne	r8, #134217728	; 0x8000000
    57a0:	0000228f 	andeq	r2, r0, pc, lsl #5
    57a4:	b50c6d0c 	strlt	r6, [ip, #-3340]	; 0xfffff2f4
    57a8:	02000000 	andeq	r0, r0, #0
    57ac:	40131c23 	andsmi	r1, r3, r3, lsr #24
    57b0:	0c000026 	stceq	0, cr0, [r0], {38}	; 0x26
    57b4:	00b50c6f 	adcseq	r0, r5, pc, ror #24
    57b8:	23020000 	movwcs	r0, #8192	; 0x2000
    57bc:	233d1320 	teqcs	sp, #32, 6	; 0x80000000
    57c0:	710c0000 	mrsvc	r0, (UNDEF: 12)
    57c4:	0000b50c 	andeq	fp, r0, ip, lsl #10
    57c8:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    57cc:	001fb213 	andseq	fp, pc, r3, lsl r2	; <UNPREDICTABLE>
    57d0:	0c730c00 	ldcleq	12, cr0, [r3], #-0
    57d4:	000000b5 	strheq	r0, [r0], -r5
    57d8:	13282302 			; <UNDEFINED> instruction: 0x13282302
    57dc:	000023bc 			; <UNDEFINED> instruction: 0x000023bc
    57e0:	b50c750c 	strlt	r7, [ip, #-1292]	; 0xfffffaf4
    57e4:	02000000 	andeq	r0, r0, #0
    57e8:	5c132c23 	ldcpl	12, cr2, [r3], {35}	; 0x23
    57ec:	0c000025 	stceq	0, cr0, [r0], {37}	; 0x25
    57f0:	00b50c77 	adcseq	r0, r5, r7, ror ip
    57f4:	23020000 	movwcs	r0, #8192	; 0x2000
    57f8:	a4030030 	strge	r0, [r3], #-48	; 0xffffffd0
    57fc:	0c00001e 	stceq	0, cr0, [r0], {30}
    5800:	0cb00379 	ldceq	3, cr0, [r0], #484	; 0x1e4
    5804:	1c120000 	ldcne	0, cr0, [r2], {-0}
    5808:	d5017c0c 	strle	r7, [r1, #-3084]	; 0xfffff3f4
    580c:	4f000023 	svcmi	0x00000023
    5810:	1400000e 	strne	r0, [r0], #-14
    5814:	006d756e 	rsbeq	r7, sp, lr, ror #10
    5818:	930d7d0c 	movwls	r7, #56588	; 0xdd0c
    581c:	02000000 	andeq	r0, r0, #0
    5820:	9b130023 	blls	4c58b4 <_Min_Stack_Size+0x4c54b4>
    5824:	0c000025 	stceq	0, cr0, [r0], {37}	; 0x25
    5828:	00930d80 	addseq	r0, r3, r0, lsl #27
    582c:	23020000 	movwcs	r0, #8192	; 0x2000
    5830:	21e01301 	mvncs	r1, r1, lsl #6
    5834:	830c0000 	movwhi	r0, #49152	; 0xc000
    5838:	0000930d 	andeq	r9, r0, sp, lsl #6
    583c:	02230200 	eoreq	r0, r3, #0, 4
    5840:	001dd913 	andseq	sp, sp, r3, lsl r9
    5844:	0d860c00 	stceq	12, cr0, [r6]
    5848:	00000093 	muleq	r0, r3, r0
    584c:	13032302 	movwne	r2, #13058	; 0x3302
    5850:	00001eb7 			; <UNDEFINED> instruction: 0x00001eb7
    5854:	930d890c 	movwls	r8, #55564	; 0xd90c
    5858:	02000000 	andeq	r0, r0, #0
    585c:	75130423 	ldrvc	r0, [r3, #-1059]	; 0xfffffbdd
    5860:	0c00001d 	stceq	0, cr0, [r0], {29}
    5864:	00930d8c 	addseq	r0, r3, ip, lsl #27
    5868:	23020000 	movwcs	r0, #8192	; 0x2000
    586c:	24121305 	ldrcs	r1, [r2], #-773	; 0xfffffcfb
    5870:	8f0c0000 	svchi	0x000c0000
    5874:	0000a40d 	andeq	sl, r0, sp, lsl #8
    5878:	06230200 	strteq	r0, [r3], -r0, lsl #4
    587c:	00255213 	eoreq	r5, r5, r3, lsl r2
    5880:	0d920c00 	ldceq	12, cr0, [r2]
    5884:	000000b5 	strheq	r0, [r0], -r5
    5888:	13082302 	movwne	r2, #33538	; 0x8302
    588c:	0000232a 	andeq	r2, r0, sl, lsr #6
    5890:	980e950c 	stmdals	lr, {r2, r3, r8, sl, ip, pc}
    5894:	0200000c 	andeq	r0, r0, #12
    5898:	be130c23 	cdplt	12, 1, cr0, cr3, cr3, {1}
    589c:	0c00001d 	stceq	0, cr0, [r0], {29}
    58a0:	00b50d97 	umlalseq	r0, r5, r7, sp
    58a4:	23020000 	movwcs	r0, #8192	; 0x2000
    58a8:	23341310 	teqcs	r4, #16, 6	; 0x40000000
    58ac:	990c0000 	stmdbls	ip, {}	; <UNPREDICTABLE>
    58b0:	0000b50d 	andeq	fp, r0, sp, lsl #10
    58b4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    58b8:	00261613 	eoreq	r1, r6, r3, lsl r6
    58bc:	0d9b0c00 	ldceq	12, cr0, [fp]
    58c0:	000000b5 	strheq	r0, [r0], -r5
    58c4:	00182302 	andseq	r2, r8, r2, lsl #6
    58c8:	0023d703 	eoreq	sp, r3, r3, lsl #14
    58cc:	039c0c00 	orrseq	r0, ip, #0, 24
    58d0:	00000d8d 	andeq	r0, r0, sp, lsl #27
    58d4:	3c01070e 	stccc	7, cr0, [r1], {14}
    58d8:	0d000000 	stceq	0, cr0, [r0, #-0]
    58dc:	1e670132 	mcrne	1, 3, r0, cr7, cr2, {1}
    58e0:	0e8c0000 	cdpeq	0, 8, cr0, cr12, cr0, {0}
    58e4:	5e0f0000 	cdppl	0, 0, cr0, cr15, cr0, {0}
    58e8:	00000026 	andeq	r0, r0, r6, lsr #32
    58ec:	001f340f 	andseq	r3, pc, pc, lsl #8
    58f0:	770f0100 	strvc	r0, [pc, -r0, lsl #2]
    58f4:	02000024 	andeq	r0, r0, #36	; 0x24
    58f8:	0025d50f 	eoreq	sp, r5, pc, lsl #10
    58fc:	bd0f0300 	stclt	3, cr0, [pc, #-0]	; 5904 <_Min_Stack_Size+0x5504>
    5900:	04000024 	streq	r0, [r0], #-36	; 0xffffffdc
    5904:	1e690300 	cdpne	3, 6, cr0, cr9, cr0, {0}
    5908:	380d0000 	stmdacc	sp, {}	; <UNPREDICTABLE>
    590c:	000e5b03 	andeq	r5, lr, r3, lsl #22
    5910:	0e8c0500 	cdpeq	5, 8, cr0, cr12, cr0, {0}
    5914:	070e0000 	streq	r0, [lr, -r0]
    5918:	00003c01 	andeq	r3, r0, r1, lsl #24
    591c:	013c0d00 	teqeq	ip, r0, lsl #26
    5920:	000023fb 	strdeq	r2, [r0], -fp
    5924:	00000ec8 	andeq	r0, r0, r8, asr #29
    5928:	0020200f 	eoreq	r2, r0, pc
    592c:	270f0000 	strcs	r0, [pc, -r0]
    5930:	01000020 	tsteq	r0, r0, lsr #32
    5934:	00202e0f 	eoreq	r2, r0, pc, lsl #28
    5938:	350f0200 	strcc	r0, [pc, #-512]	; 5740 <_Min_Stack_Size+0x5340>
    593c:	03000020 	movweq	r0, #32
    5940:	23fd0300 	mvnscs	r0, #0, 6
    5944:	410d0000 	mrsmi	r0, (UNDEF: 13)
    5948:	000e9d03 	andeq	r9, lr, r3, lsl #26
    594c:	1db20300 	ldcne	3, cr0, [r2]
    5950:	550d0000 	strpl	r0, [sp, #-0]
    5954:	00063320 	andeq	r3, r6, r0, lsr #6
    5958:	1e570300 	cdpne	3, 5, cr0, cr7, cr0, {0}
    595c:	560d0000 	strpl	r0, [sp], -r0
    5960:	000d8120 	andeq	r8, sp, r0, lsr #2
    5964:	1d840300 	stcne	3, cr0, [r4]
    5968:	570d0000 	strpl	r0, [sp, -r0]
    596c:	000e4f20 	andeq	r4, lr, r0, lsr #30
    5970:	04081a00 	streq	r1, [r8], #-2560	; 0xfffff600
    5974:	6201620d 	andvs	r6, r1, #-805306368	; 0xd0000000
    5978:	e3000021 	movw	r0, #33	; 0x21
    597c:	1300000f 	movwne	r0, #15
    5980:	00002044 	andeq	r2, r0, r4, asr #32
    5984:	e31c630d 	tst	ip, #872415232	; 0x34000000
    5988:	0200000f 	andeq	r0, r0, #15
    598c:	b8130023 	ldmdalt	r3, {r0, r1, r5}
    5990:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    5994:	0ee01b64 	vfmseq.f64	d17, d0, d20
    5998:	23020000 	movwcs	r0, #8192	; 0x2000
    599c:	24b11304 	ldrtcs	r1, [r1], #772	; 0x304
    59a0:	650d0000 	strvs	r0, [sp, #-0]
    59a4:	00009f1b 	andeq	r9, r0, fp, lsl pc
    59a8:	38230200 	stmdacc	r3!, {r9}
    59ac:	001e4913 	andseq	r4, lr, r3, lsl r9
    59b0:	1b660d00 	blne	1988db8 <_Min_Stack_Size+0x19889b8>
    59b4:	00000fe9 	andeq	r0, r0, r9, ror #31
    59b8:	133c2302 	teqne	ip, #134217728	; 0x8000000
    59bc:	00001e42 	andeq	r1, r0, r2, asr #28
    59c0:	e91b670d 	ldmdb	fp, {r0, r2, r3, r8, r9, sl, sp, lr}
    59c4:	0300000f 	movweq	r0, #15
    59c8:	1303fc23 	movwne	pc, #15395	; 0x3c23	; <UNPREDICTABLE>
    59cc:	00001de7 	andeq	r1, r0, r7, ror #27
    59d0:	231b680d 	tstcs	fp, #851968	; 0xd0000
    59d4:	03000007 	movweq	r0, #7
    59d8:	1307bc23 	movwne	fp, #31779	; 0x7c23
    59dc:	0000037a 	andeq	r0, r0, sl, ror r3
    59e0:	981b690d 	ldmdals	fp, {r0, r2, r3, r8, fp, sp, lr}
    59e4:	0300000e 	movweq	r0, #14
    59e8:	1307bd23 	movwne	fp, #32035	; 0x7d23
    59ec:	00001e38 	andeq	r1, r0, r8, lsr lr
    59f0:	c11b6a0d 	tstgt	fp, sp, lsl #20
    59f4:	03000000 	movweq	r0, #0
    59f8:	1307c023 	movwne	ip, #28707	; 0x7023
    59fc:	00001d65 	andeq	r1, r0, r5, ror #26
    5a00:	db1b6b0d 	blle	6e063c <_Min_Stack_Size+0x6e023c>
    5a04:	03000000 	movweq	r0, #0
    5a08:	1307c423 	movwne	ip, #29731	; 0x7423
    5a0c:	00001dcf 	andeq	r1, r0, pc, asr #27
    5a10:	c81b6c0d 	ldmdagt	fp, {r0, r2, r3, sl, fp, sp, lr}
    5a14:	0300000e 	movweq	r0, #14
    5a18:	1307f423 	movwne	pc, #29731	; 0x7423	; <UNPREDICTABLE>
    5a1c:	00001dad 	andeq	r1, r0, sp, lsr #27
    5a20:	b51b6d0d 	ldrlt	r6, [fp, #-3341]	; 0xfffff2f3
    5a24:	03000000 	movweq	r0, #0
    5a28:	1307f823 	movwne	pc, #30755	; 0x7823	; <UNPREDICTABLE>
    5a2c:	00001fc6 	andeq	r1, r0, r6, asr #31
    5a30:	b50c700d 	strlt	r7, [ip, #-13]
    5a34:	03000000 	movweq	r0, #0
    5a38:	1307fc23 	movwne	pc, #31779	; 0x7c23	; <UNPREDICTABLE>
    5a3c:	0000256e 	andeq	r2, r0, lr, ror #10
    5a40:	b50c730d 	strlt	r7, [ip, #-781]	; 0xfffffcf3
    5a44:	03000000 	movweq	r0, #0
    5a48:	13088023 	movwne	r8, #32803	; 0x8023
    5a4c:	00002650 	andeq	r2, r0, r0, asr r6
    5a50:	961c750d 	ldrls	r7, [ip], -sp, lsl #10
    5a54:	0300000a 	movweq	r0, #10
    5a58:	00088423 	andeq	r8, r8, r3, lsr #8
    5a5c:	0ed40416 	mrceq	4, 6, r0, cr4, cr6, {0}
    5a60:	ec070000 	stc	0, cr0, [r7], {-0}
    5a64:	f900000e 			; <UNDEFINED> instruction: 0xf900000e
    5a68:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
    5a6c:	0000008c 	andeq	r0, r0, ip, lsl #1
    5a70:	6403000f 	strvs	r0, [r3], #-15
    5a74:	0d000021 	stceq	0, cr0, [r0, #-132]	; 0xffffff7c
    5a78:	0ef8038a 	cdpeq	3, 15, cr0, cr8, cr10, {4}
    5a7c:	070e0000 	streq	r0, [lr, -r0]
    5a80:	00003c01 	andeq	r3, r0, r1, lsl #24
    5a84:	01330e00 	teqeq	r3, r0, lsl #28
    5a88:	000014f0 	strdeq	r1, [r0], -r0
    5a8c:	00001030 	andeq	r1, r0, r0, lsr r0
    5a90:	0016500f 	andseq	r5, r6, pc
    5a94:	8e0f6400 	cfcpyshi	mvf6, mvf15
    5a98:	0a000014 	beq	5af0 <_Min_Stack_Size+0x56f0>
    5a9c:	0014dd0f 	andseq	sp, r4, pc, lsl #26
    5aa0:	590f0100 	stmdbpl	pc, {r8}	; <UNPREDICTABLE>
    5aa4:	01000015 	tsteq	r0, r5, lsl r0
    5aa8:	14f20300 	ldrbtne	r0, [r2], #768	; 0x300
    5aac:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    5ab0:	00100503 	andseq	r0, r0, r3, lsl #10
    5ab4:	1da61b00 			; <UNDEFINED> instruction: 0x1da61b00
    5ab8:	2b010000 	blcs	45ac0 <_Min_Stack_Size+0x456c0>
    5abc:	000ca414 	andeq	sl, ip, r4, lsl r4
    5ac0:	03050100 	movweq	r0, #20736	; 0x5100
    5ac4:	00000000 	andeq	r0, r0, r0
    5ac8:	0023671b 	eoreq	r6, r3, fp, lsl r7
    5acc:	132d0100 			; <UNDEFINED> instruction: 0x132d0100
    5ad0:	00000ff9 	strdeq	r0, [r0], -r9
    5ad4:	00030501 	andeq	r0, r3, r1, lsl #10
    5ad8:	1c000000 	stcne	0, cr0, [r0], {-0}
    5adc:	00001edd 	ldrdeq	r1, [r0], -sp
    5ae0:	c61b4901 	ldrgt	r4, [fp], -r1, lsl #18
    5ae4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ae8:	40020400 	andmi	r0, r2, r0, lsl #8
    5aec:	001fea1d 	andseq	lr, pc, sp, lsl sl	; <UNPREDICTABLE>
    5af0:	1b5d0100 	blne	1745ef8 <_Min_Stack_Size+0x1745af8>
    5af4:	0000107f 	andeq	r1, r0, pc, ror r0
    5af8:	00c10416 	sbceq	r0, r1, r6, lsl r4
    5afc:	7f060000 	svcvc	0x00060000
    5b00:	1e000010 	mcrne	0, 0, r0, cr0, cr0, {0}
    5b04:	001f5201 	andseq	r5, pc, r1, lsl #4
    5b08:	01630100 	cmneq	r3, r0, lsl #2
    5b0c:	000bba06 	andeq	fp, fp, r6, lsl #20
    5b10:	000bbe08 	andeq	fp, fp, r8, lsl #28
    5b14:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    5b18:	0010bb01 	andseq	fp, r0, r1, lsl #22
    5b1c:	12c31f00 	sbcne	r1, r3, #0, 30
    5b20:	0bba0000 	bleq	fee85b28 <_estack+0xdee45b28>
    5b24:	ba020800 	blt	87b2c <_Min_Stack_Size+0x8772c>
    5b28:	bc08000b 	stclt	0, cr0, [r8], {11}
    5b2c:	0108000b 	tsteq	r8, fp
    5b30:	00100167 	andseq	r0, r0, r7, ror #2
    5b34:	22da0120 	sbcscs	r0, sl, #32, 2
    5b38:	bb010000 	bllt	45b40 <_Min_Stack_Size+0x45740>
    5b3c:	0021a506 	eoreq	sl, r1, r6, lsl #10
    5b40:	000bc000 	andeq	ip, fp, r0
    5b44:	000c6808 	andeq	r6, ip, r8, lsl #16
    5b48:	00273208 	eoreq	r3, r7, r8, lsl #4
    5b4c:	11940100 	orrsne	r0, r4, r0, lsl #2
    5b50:	98210000 	stmdals	r1!, {}	; <UNPREDICTABLE>
    5b54:	01000002 	tsteq	r0, r2
    5b58:	082916bd 	stmdaeq	r9!, {r0, r2, r3, r4, r5, r7, r9, sl, ip}
    5b5c:	91020000 	mrsls	r0, (UNDEF: 2)
    5b60:	035e2144 	cmpeq	lr, #68, 2
    5b64:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    5b68:	00088e16 	andeq	r8, r8, r6, lsl lr
    5b6c:	b0910300 	addslt	r0, r1, r0, lsl #6
    5b70:	0bda227f 	bleq	ff68e574 <_estack+0xdf64e574>
    5b74:	0bf00800 	bleq	ffc07b7c <_estack+0xdfbc7b7c>
    5b78:	11160800 	tstne	r6, r0, lsl #16
    5b7c:	00210000 	eoreq	r0, r1, r0
    5b80:	01000003 	tsteq	r0, r3
    5b84:	00c103c2 	sbceq	r0, r1, r2, asr #7
    5b88:	91030000 	mrsls	r0, (UNDEF: 3)
    5b8c:	22007fa8 	andcs	r7, r0, #168, 30	; 0x2a0
    5b90:	08000bf0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, fp}
    5b94:	08000c06 	stmdaeq	r0, {r1, r2, sl, fp}
    5b98:	00001134 	andeq	r1, r0, r4, lsr r1
    5b9c:	00030021 	andeq	r0, r3, r1, lsr #32
    5ba0:	03c30100 	biceq	r0, r3, #0, 2
    5ba4:	000000c1 	andeq	r0, r0, r1, asr #1
    5ba8:	7fac9103 	svcvc	0x00ac9103
    5bac:	0bce2300 	bleq	ff38e7b4 <_estack+0xdf34e7b4>
    5bb0:	12cc0800 	sbcne	r0, ip, #0, 16
    5bb4:	11530000 	cmpne	r3, r0
    5bb8:	01240000 			; <UNDEFINED> instruction: 0x01240000
    5bbc:	44910250 	ldrmi	r0, [r1], #592	; 0x250
    5bc0:	01510124 	cmpeq	r1, r4, lsr #2
    5bc4:	52012430 	andpl	r2, r1, #48, 8	; 0x30000000
    5bc8:	00340802 	eorseq	r0, r4, r2, lsl #16
    5bcc:	000c3223 	andeq	r3, ip, r3, lsr #4
    5bd0:	0012d708 	andseq	sp, r2, r8, lsl #14
    5bd4:	00116700 	andseq	r6, r1, r0, lsl #14
    5bd8:	50012400 	andpl	r2, r1, r0, lsl #8
    5bdc:	00449102 	subeq	r9, r4, r2, lsl #2
    5be0:	000c5023 	andeq	r5, ip, r3, lsr #32
    5be4:	0012e608 	andseq	lr, r2, r8, lsl #12
    5be8:	00118100 	andseq	r8, r1, r0, lsl #2
    5bec:	50012400 	andpl	r2, r1, r0, lsl #8
    5bf0:	7fb09103 	svcvc	0x00b09103
    5bf4:	01510124 	cmpeq	r1, r4, lsr #2
    5bf8:	5c250033 	stcpl	0, cr0, [r5], #-204	; 0xffffff34
    5bfc:	8a08000c 	bhi	205c34 <_Min_Stack_Size+0x205834>
    5c00:	25000010 	strcs	r0, [r0, #-16]
    5c04:	08000c60 	stmdaeq	r0, {r5, r6, sl, fp}
    5c08:	0000108a 	andeq	r1, r0, sl, lsl #1
    5c0c:	f9012600 			; <UNDEFINED> instruction: 0xf9012600
    5c10:	01000017 	tsteq	r0, r7, lsl r0
    5c14:	00850569 	addeq	r0, r5, r9, ror #10
    5c18:	0c680000 	stcleq	0, cr0, [r8], #-0
    5c1c:	0cfc0800 	ldcleq	8, cr0, [ip]
    5c20:	27780800 	ldrbcs	r0, [r8, -r0, lsl #16]!
    5c24:	5a010000 	bpl	45c2c <_Min_Stack_Size+0x4582c>
    5c28:	27000012 	smladcs	r0, r2, r0, r0
    5c2c:	0000126c 	andeq	r1, r0, ip, ror #4
    5c30:	08000c6e 	stmdaeq	r0, {r1, r2, r3, r5, r6, sl, fp}
    5c34:	000c6e01 	andeq	r6, ip, r1, lsl #28
    5c38:	000cba08 	andeq	fp, ip, r8, lsl #20
    5c3c:	0b870108 	bleq	fe1c6064 <_estack+0xde186064>
    5c40:	00001202 	andeq	r1, r0, r2, lsl #4
    5c44:	00127928 	andseq	r7, r2, r8, lsr #18
    5c48:	02380000 	eorseq	r0, r8, #0
    5c4c:	12862840 	addne	r2, r6, #64, 16	; 0x400000
    5c50:	38300000 	ldmdacc	r0!, {}	; <UNPREDICTABLE>
    5c54:	92284002 	eorls	r4, r8, #2
    5c58:	00000012 	andeq	r0, r0, r2, lsl r0
    5c5c:	28400204 	stmdacs	r0, {r2, r9}^
    5c60:	0000129e 	muleq	r0, lr, r2
    5c64:	40020404 	andmi	r0, r2, r4, lsl #8
    5c68:	0012aa28 	andseq	sl, r2, r8, lsr #20
    5c6c:	02040800 	andeq	r0, r4, #0, 16
    5c70:	12b62840 	adcsne	r2, r6, #64, 16	; 0x400000
    5c74:	040c0000 	streq	r0, [ip], #-0
    5c78:	29004002 	stmdbcs	r0, {r1, lr}
    5c7c:	00001263 	andeq	r1, r0, r3, ror #4
    5c80:	08000cba 	stmdaeq	r0, {r1, r3, r4, r5, r7, sl, fp}
    5c84:	000cba02 	andeq	fp, ip, r2, lsl #20
    5c88:	000ccc08 	andeq	ip, ip, r8, lsl #24
    5c8c:	0c8d0108 	stfeqs	f0, [sp], {8}
    5c90:	00125a29 	andseq	r5, r2, r9, lsr #20
    5c94:	000cd200 	andeq	sp, ip, r0, lsl #4
    5c98:	0cd20108 	ldfeqe	f0, [r2], {8}
    5c9c:	0ce20800 	stcleq	8, cr0, [r2]
    5ca0:	8f010800 	svchi	0x00010800
    5ca4:	0c6e250e 	cfstr64eq	mvdx2, [lr], #-56	; 0xffffffc8
    5ca8:	10bb0800 	adcsne	r0, fp, r0, lsl #16
    5cac:	d2230000 	eorle	r0, r3, #0
    5cb0:	f508000c 			; <UNDEFINED> instruction: 0xf508000c
    5cb4:	49000012 	stmdbmi	r0, {r1, r4}
    5cb8:	24000012 	strcs	r0, [r0], #-18	; 0xffffffee
    5cbc:	08025001 	stmdaeq	r2, {r0, ip, lr}
    5cc0:	e82a0064 	stmda	sl!, {r2, r5, r6}
    5cc4:	f508000c 			; <UNDEFINED> instruction: 0xf508000c
    5cc8:	24000012 	strcs	r0, [r0], #-18	; 0xffffffee
    5ccc:	08025001 	stmdaeq	r2, {r0, ip, lr}
    5cd0:	2b000064 	blcs	5e68 <_Min_Stack_Size+0x5a68>
    5cd4:	00001f1f 	andeq	r1, r0, pc, lsl pc
    5cd8:	03146401 	tsteq	r4, #16777216	; 0x1000000
    5cdc:	0020802b 	eoreq	r8, r0, fp, lsr #32
    5ce0:	145f0100 	ldrbne	r0, [pc], #-256	; 5ce8 <_Min_Stack_Size+0x58e8>
    5ce4:	22c32c03 	sbccs	r2, r3, #768	; 0x300
    5ce8:	4b010000 	blmi	45cf0 <_Min_Stack_Size+0x458f0>
    5cec:	12c30314 	sbcne	r0, r3, #20, 6	; 0x50000000
    5cf0:	8e2d0000 	cdphi	0, 2, cr0, cr13, cr0, {0}
    5cf4:	0100001e 	tsteq	r0, lr, lsl r0
    5cf8:	00c6164e 	sbceq	r1, r6, lr, asr #12
    5cfc:	1d010000 	stcne	0, cr0, [r1, #-0]
    5d00:	00001e85 	andeq	r1, r0, r5, lsl #29
    5d04:	851c4f01 	ldrhi	r4, [ip, #-3841]	; 0xfffff0ff
    5d08:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    5d0c:	00002360 	andeq	r2, r0, r0, ror #6
    5d10:	851c5201 	ldrhi	r5, [ip, #-513]	; 0xfffffdff
    5d14:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    5d18:	0000248b 	andeq	r2, r0, fp, lsl #9
    5d1c:	851c5301 	ldrhi	r5, [ip, #-769]	; 0xfffffcff
    5d20:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    5d24:	00002286 	andeq	r2, r0, r6, lsl #5
    5d28:	851c5401 	ldrhi	r5, [ip, #-1025]	; 0xfffffbff
    5d2c:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    5d30:	00002431 	andeq	r2, r0, r1, lsr r4
    5d34:	851c5501 	ldrhi	r5, [ip, #-1281]	; 0xfffffaff
    5d38:	00000010 	andeq	r0, r0, r0, lsl r0
    5d3c:	0021d22b 	eoreq	sp, r1, fp, lsr #4
    5d40:	1b8c0200 	blne	fe306548 <_estack+0xde2c6548>
    5d44:	01012e03 	tsteq	r1, r3, lsl #28
    5d48:	00001e26 	andeq	r1, r0, r6, lsr #28
    5d4c:	00001e1c 	andeq	r1, r0, ip, lsl lr
    5d50:	a201012f 	andge	r0, r1, #-1073741813	; 0xc000000b
    5d54:	a2000005 	andge	r0, r0, #5
    5d58:	09000005 	stmdbeq	r0, {r0, r2}
    5d5c:	2f1304e0 	svccs	0x001304e0
    5d60:	06960101 	ldreq	r0, [r6], r1, lsl #2
    5d64:	06960000 	ldreq	r0, [r6], r0
    5d68:	e1090000 	mrs	r0, (UNDEF: 9)
    5d6c:	01301304 	teqeq	r0, r4, lsl #6
    5d70:	0015e101 	andseq	lr, r5, r1, lsl #2
    5d74:	0015e100 	andseq	lr, r5, r0, lsl #2
    5d78:	06ea0e00 	strbteq	r0, [sl], r0, lsl #28
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
  __HAL_FLASH_DATA_CACHE_ENABLE();
   c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
  10:	00061001 	andeq	r1, r6, r1
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  14:	00240200 	eoreq	r0, r4, r0, lsl #4
  18:	0b3e0b0b 	bleq	f82c4c <_Min_Stack_Size+0xf8284c>
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  1c:	00000e03 	andeq	r0, r0, r3, lsl #28
  20:	0b002403 	bleq	9034 <_Min_Stack_Size+0x8c34>
  HAL_InitTick(TICK_INT_PRIORITY);
  24:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  HAL_MspInit();
  28:	04000008 	streq	r0, [r0], #-8
}
  2c:	0e03003b 	mcreq	0, 0, r0, cr3, cr11, {1}
  30:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
  *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL);
  34:	030c3f01 	movweq	r3, #52993	; 0xcf01
  38:	3b0b3a0e 	blcc	2ce878 <_Min_Stack_Size+0x2ce478>
  3c:	110b390b 	tstne	fp, fp, lsl #18
  *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL);
  40:	40011201 	andmi	r1, r1, r1, lsl #4
  44:	0c429706 	mcrreq	7, 0, r9, r2, cr6
  48:	00001301 	andeq	r1, r0, r1, lsl #6
    return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
  4c:	01828906 	orreq	r8, r2, r6, lsl #18
  50:	31011100 	mrscc	r1, (UNDEF: 17)
  54:	07000013 	smladeq	r0, r3, r0, r0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
  58:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; ffffffa8 <_estack+0xdffbffa8>
  5c:	0b3a0e03 	bleq	e83870 <_Min_Stack_Size+0xe83470>
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	0b390b3b 	bleq	e42d54 <_Min_Stack_Size+0xe42954>
  64:	01120111 	tsteq	r2, r1, lsl r1
  68:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
      SystemCoreClock = pllvco/pllp;
  6c:	0800000c 	stmdaeq	r0, {r2, r3}
  70:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; ffffffc0 <_estack+0xdffbffc0>
      break;
  74:	40870c3c 	addmi	r0, r7, ip, lsr ip
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  78:	3a0e030e 	bcc	380cb8 <_Min_Stack_Size+0x3808b8>
  7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  80:	0000000b 	andeq	r0, r0, fp
  84:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
  88:	030b130e 	movweq	r1, #45838	; 0xb30e
  8c:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
  90:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
  94:	00061001 	andeq	r1, r6, r1
  98:	00240200 	eoreq	r0, r4, r0, lsl #4
  9c:	0b3e0b0b 	bleq	f82cd0 <_Min_Stack_Size+0xf828d0>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
  a0:	00000e03 	andeq	r0, r0, r3, lsl #28
  a4:	03001603 	movweq	r1, #1539	; 0x603
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
  a8:	3b0b3a0e 	blcc	2ce8e8 <_Min_Stack_Size+0x2ce4e8>
  ac:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  b0:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  b4:	0b0b0024 	bleq	2c014c <_Min_Stack_Size+0x2bfd4c>
  b8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  if((plli2sused == 1U) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
  bc:	35050000 	strcc	r0, [r5, #-0]
  c0:	00134900 	andseq	r4, r3, r0, lsl #18
  c4:	00260600 	eoreq	r0, r6, r0, lsl #12
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
  c8:	00001349 	andeq	r1, r0, r9, asr #6
  cc:	49010107 	stmdbmi	r1, {r0, r1, r2, r8}
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
  d0:	00130113 	andseq	r0, r3, r3, lsl r1
  d4:	00210800 	eoreq	r0, r1, r0, lsl #16
  d8:	0b2f1349 	bleq	bc4e04 <_Min_Stack_Size+0xbc4a04>
  dc:	34090000 	strcc	r0, [r9], #-0
  e0:	3a0e0300 	bcc	380ce8 <_Min_Stack_Size+0x3808e8>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1_AUDIO) == RCC_PERIPHCLK_DFSDM1_AUDIO)
  e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  e8:	3f13490b 	svccc	0x0013490b
    __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
  ec:	000c3c0c 	andeq	r3, ip, ip, lsl #24
  f0:	01130a00 	tsteq	r3, r0, lsl #20
  f4:	0b3a0b0b 	bleq	e82d28 <_Min_Stack_Size+0xe82928>
  f8:	0b39053b 	bleq	e415ec <_Min_Stack_Size+0xe411ec>
  fc:	010e4087 	smlabbeq	lr, r7, r0, r4
}
 100:	0b000013 	bleq	154 <_Min_Heap_Size-0xac>
      plli2sused = 1U;
 104:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    __HAL_RCC_PWR_CLK_ENABLE();
 108:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 10c:	13490b39 	movtne	r0, #39737	; 0x9b39
 110:	00000a38 	andeq	r0, r0, r8, lsr sl
 114:	03000d0c 	movweq	r0, #3340	; 0xd0c
 118:	3b0b3a0e 	blcc	2ce958 <_Min_Stack_Size+0x2ce558>
 11c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    PWR->CR |= PWR_CR_DBP;
 120:	000a3813 	andeq	r3, sl, r3, lsl r8
 124:	00160d00 	andseq	r0, r6, r0, lsl #26
 128:	0b3a0e03 	bleq	e8393c <_Min_Stack_Size+0xe8353c>
    tickstart = HAL_GetTick();
 12c:	0b39053b 	bleq	e41620 <_Min_Stack_Size+0xe41220>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 130:	00001349 	andeq	r1, r0, r9, asr #6
 134:	3e01040e 	cdpcc	4, 0, cr0, cr1, cr14, {0}
 138:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 13c:	3b0b3a13 	blcc	2ce990 <_Min_Stack_Size+0x2ce590>
 140:	870b390b 	strhi	r3, [fp, -fp, lsl #18]
        return HAL_TIMEOUT;
 144:	13010e40 	movwne	r0, #7744	; 0x1e40
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 148:	280f0000 	stmdacs	pc, {}	; <UNPREDICTABLE>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 14c:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 150:	1000000b 	andne	r0, r0, fp
 154:	08030028 	stmdaeq	r3, {r3, r5}
 158:	00000b1c 	andeq	r0, r0, ip, lsl fp
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 15c:	03003b11 	movweq	r3, #2833	; 0xb11
 160:	1200000e 	andne	r0, r0, #14
      __HAL_RCC_BACKUPRESET_FORCE();
 164:	0b0b0113 	bleq	2c05b8 <_Min_Stack_Size+0x2c01b8>
 168:	0b3b0b3a 	bleq	ec2e58 <_Min_Stack_Size+0xec2a58>
      __HAL_RCC_BACKUPRESET_RELEASE();
 16c:	40870b39 	addmi	r0, r7, r9, lsr fp
 170:	0013010e 	andseq	r0, r3, lr, lsl #2
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 174:	000d1300 	andeq	r1, sp, r0, lsl #6
 178:	0b3a0e03 	bleq	e8398c <_Min_Stack_Size+0xe8358c>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 17c:	0b390b3b 	bleq	e42e70 <_Min_Stack_Size+0xe42a70>
 180:	0a381349 	beq	e04eac <_Min_Stack_Size+0xe04aac>
 184:	0d140000 	ldceq	0, cr0, [r4, #-0]
 188:	3a080300 	bcc	200d90 <_Min_Stack_Size+0x200990>
 18c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 190:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 194:	1500000a 	strne	r0, [r0, #-10]
 198:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; e8 <_Min_Heap_Size-0x118>
 19c:	0b3a0e03 	bleq	e839b0 <_Min_Stack_Size+0xe835b0>
 1a0:	0b39053b 	bleq	e41694 <_Min_Stack_Size+0xe41294>
        tickstart = HAL_GetTick();
 1a4:	01120111 	tsteq	r2, r1, lsl r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 1a8:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 1ac:	1600000c 	strne	r0, [r0], -ip
 1b0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 100 <_Min_Heap_Size-0x100>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1b4:	0b3a0e03 	bleq	e839c8 <_Min_Stack_Size+0xe835c8>
 1b8:	0b39053b 	bleq	e416ac <_Min_Stack_Size+0xe412ac>
 1bc:	01120111 	tsteq	r2, r1, lsl r1
            return HAL_TIMEOUT;
 1c0:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 1c4:	0013010c 	andseq	r0, r3, ip, lsl #2
 1c8:	82891700 	addhi	r1, r9, #0, 14
 1cc:	01110001 	tsteq	r1, r1
 1d0:	00001331 	andeq	r1, r0, r1, lsr r3
 1d4:	3f012e18 	svccc	0x00012e18
 1d8:	3a0e030c 	bcc	380e10 <_Min_Stack_Size+0x380a10>
      plli2sused = 1U;
 1dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    __HAL_RCC_PLLI2S_DISABLE();
 1e0:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    tickstart = HAL_GetTick();
 1e4:	970a4001 	strls	r4, [sl, -r1]
 1e8:	13010c42 	movwne	r0, #7234	; 0x1c42
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 1ec:	05190000 	ldreq	r0, [r9, #-0]
 1f0:	3a0e0300 	bcc	380df8 <_Min_Stack_Size+0x3809f8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 1f4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 1f8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 1fc:	1a00000a 	bne	22c <_Min_Heap_Size+0x2c>
        return HAL_TIMEOUT;
 200:	0b0b000f 	bleq	2c0244 <_Min_Stack_Size+0x2bfe44>
    __HAL_RCC_PLL_I2S_CONFIG(PeriphClkInit->PLLI2SSelection);
 204:	00001349 	andeq	r1, r0, r9, asr #6
 208:	3f012e1b 	svccc	0x00012e1b
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB1) == RCC_PERIPHCLK_I2S_APB1) && (PeriphClkInit->I2sApb1ClockSelection == RCC_I2SAPB1CLKSOURCE_PLLI2S)) ||
 20c:	3a0e030c 	bcc	380e44 <_Min_Stack_Size+0x380a44>
 210:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 214:	1113490b 	tstne	r3, fp, lsl #18
 218:	40011201 	andmi	r1, r1, r1, lsl #4
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB2) == RCC_PERIPHCLK_I2S_APB2) && (PeriphClkInit->I2sApb2ClockSelection == RCC_I2SAPB2CLKSOURCE_PLLI2S)) ||
 21c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 220:	00001301 	andeq	r1, r0, r1, lsl #6
 224:	3f002e1c 	svccc	0x00002e1c
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)) ||
 228:	3a0e030c 	bcc	380e60 <_Min_Stack_Size+0x380a60>
 22c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 230:	1113490b 	tstne	r3, fp, lsl #18
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO) && (PeriphClkInit->SdioClockSelection == RCC_SDIOCLKSOURCE_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)))
 234:	40011201 	andmi	r1, r1, r1, lsl #4
 238:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 23c:	341d0000 	ldrcc	r0, [sp], #-0
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 240:	3a0e0300 	bcc	380e48 <_Min_Stack_Size+0x380a48>
 244:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 248:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 24c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 250:	051e0000 	ldreq	r0, [lr, #-0]
 254:	3a0e0300 	bcc	380e5c <_Min_Stack_Size+0x380a5c>
 258:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 25c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 260:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 264:	341f0000 	ldrcc	r0, [pc], #-0	; 26c <_Min_Heap_Size+0x6c>
 268:	3a0e0300 	bcc	380e70 <_Min_Stack_Size+0x380a70>
 26c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 270:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 274:	2000000a 	andcs	r0, r0, sl
 278:	0111010b 	tsteq	r1, fp, lsl #2
    __HAL_RCC_PLLI2S_ENABLE();
 27c:	13010112 	movwne	r0, #4370	; 0x1112
 280:	89210000 	stmdbhi	r1!, {}	; <UNPREDICTABLE>
    tickstart = HAL_GetTick();
 284:	11010182 	smlabbne	r1, r2, r1, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 288:	01133101 	tsteq	r3, r1, lsl #2
 28c:	22000013 	andcs	r0, r0, #19
 290:	0001828a 	andeq	r8, r1, sl, lsl #5
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 294:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
 298:	2300000a 	movwcs	r0, #10
 29c:	01018289 	smlabbeq	r1, r9, r2, r8
        return HAL_TIMEOUT;
 2a0:	13310111 	teqne	r1, #1073741828	; 0x40000004
  return HAL_OK;
 2a4:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
 2a8:	030c3f01 	movweq	r3, #52993	; 0xcf01
 2ac:	3b0b3a0e 	blcc	2ceaec <_Min_Stack_Size+0x2ce6ec>
 2b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 2b4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2b8:	97064001 	strls	r4, [r6, -r1]
 2bc:	13010c42 	movwne	r0, #7234	; 0x1c42
          return HAL_TIMEOUT;
 2c0:	05250000 	streq	r0, [r5, #-0]!
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 2c4:	3a0e0300 	bcc	380ecc <_Min_Stack_Size+0x380acc>
 2c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 2cc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 2d0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 2d4:	34260000 	strtcc	r0, [r6], #-0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 2d8:	3a0e0300 	bcc	380ee0 <_Min_Stack_Size+0x380ae0>
        __HAL_RCC_PLL_DISABLE();
 2dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2e0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
        tickstart = HAL_GetTick();
 2e4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 2e8:	0b270000 	bleq	9c02f0 <_Min_Stack_Size+0x9bfef0>
 2ec:	01065501 	tsteq	r6, r1, lsl #10
 2f0:	28000013 	stmdacs	r0, {r0, r1, r4}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 2f4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 244 <_Min_Heap_Size+0x44>
 2f8:	0b3a0e03 	bleq	e83b0c <_Min_Stack_Size+0xe8370c>
            return HAL_TIMEOUT;
 2fc:	0b390b3b 	bleq	e42ff0 <_Min_Stack_Size+0xe42bf0>
      __HAL_RCC_PWR_CLK_DISABLE();
 300:	01111349 	tsteq	r1, r9, asr #6
 304:	0a400112 	beq	1000754 <_Min_Stack_Size+0x1000354>
 308:	000c4297 	muleq	ip, r7, r2
        __HAL_RCC_PLL_DISABLE();
 30c:	002e2900 	eoreq	r2, lr, r0, lsl #18
 310:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
        tickstart = HAL_GetTick();
 314:	030e4087 	movweq	r4, #57479	; 0xe087
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 318:	2a00000e 	bcs	358 <_Min_Heap_Size+0x158>
 31c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 26c <_Min_Heap_Size+0x6c>
 320:	40870c3c 	addmi	r0, r7, ip, lsr ip
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 324:	3a0e030e 	bcc	380f64 <_Min_Stack_Size+0x380b64>
 328:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
            return HAL_TIMEOUT;
 32c:	0000000b 	andeq	r0, r0, fp
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 330:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 334:	030b130e 	movweq	r1, #45838	; 0xb30e
 338:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
 33c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
 340:	00061001 	andeq	r1, r6, r1
 344:	00240200 	eoreq	r0, r4, r0, lsl #4
 348:	0b3e0b0b 	bleq	f82f7c <_Min_Stack_Size+0xf82b7c>
 34c:	00000e03 	andeq	r0, r0, r3, lsl #28
        __HAL_RCC_PLL_ENABLE();
 350:	03001603 	movweq	r1, #1539	; 0x603
 354:	3b0b3a0e 	blcc	2ceb94 <_Min_Stack_Size+0x2ce794>
        tickstart = HAL_GetTick();
 358:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 35c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
 360:	0b0b0024 	bleq	2c03f8 <_Min_Stack_Size+0x2bfff8>
 364:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 368:	35050000 	strcc	r0, [r5, #-0]
 36c:	00134900 	andseq	r4, r3, r0, lsl #18
            return HAL_TIMEOUT;
 370:	01010600 	tsteq	r1, r0, lsl #12
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 374:	13011349 	movwne	r1, #4937	; 0x1349
        pll_config = RCC->PLLCFGR;
 378:	21070000 	mrscs	r0, (UNDEF: 7)
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 37c:	2f134900 	svccs	0x00134900
 380:	0800000b 	stmdaeq	r0, {r0, r1, r3}
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 384:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 388:	0b3b0b3a 	bleq	ec3078 <_Min_Stack_Size+0xec2c78>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 38c:	13490b39 	movtne	r0, #39737	; 0x9b39
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 390:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 394:	13090000 	movwne	r0, #36864	; 0x9000
 398:	3a0b0b01 	bcc	2c2fa4 <_Min_Stack_Size+0x2c2ba4>
 39c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 3a0:	0e40870b 	cdpeq	7, 4, cr8, cr0, cr11, {0}
 3a4:	00001301 	andeq	r1, r0, r1, lsl #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 3a8:	03000d0a 	movweq	r0, #3338	; 0xd0a
 3ac:	3b0b3a08 	blcc	2cebd4 <_Min_Stack_Size+0x2ce7d4>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 3b0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 3b4:	000a3813 	andeq	r3, sl, r3, lsl r8
 3b8:	00160b00 	andseq	r0, r6, r0, lsl #22
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 3bc:	0b3a0e03 	bleq	e83bd0 <_Min_Stack_Size+0xe837d0>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 3c0:	0b39053b 	bleq	e418b4 <_Min_Stack_Size+0xe414b4>
 3c4:	00001349 	andeq	r1, r0, r9, asr #6
  return HAL_OK;
 3c8:	03000d0c 	movweq	r0, #3340	; 0xd0c
}
 3cc:	3b0b3a0e 	blcc	2cec0c <_Min_Stack_Size+0x2ce80c>
        return HAL_ERROR;
 3d0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
        return HAL_ERROR;
 3d4:	000a3813 	andeq	r3, sl, r3, lsl r8
}
 3d8:	01040d00 	tsteq	r4, r0, lsl #26
  return HAL_OK;
 3dc:	0b0b0b3e 	bleq	2c30dc <_Min_Stack_Size+0x2c2cdc>
 3e0:	0b3a1349 	bleq	e8510c <_Min_Stack_Size+0xe84d0c>
        return HAL_ERROR;
 3e4:	0b390b3b 	bleq	e430d8 <_Min_Stack_Size+0xe42cd8>
          return HAL_ERROR;
 3e8:	010e4087 	smlabbeq	lr, r7, r0, r4
 3ec:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
 3f0:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
 3f4:	00000b1c 	andeq	r0, r0, ip, lsl fp
 3f8:	0300280f 	movweq	r2, #2063	; 0x80f
 3fc:	000b1c08 	andeq	r1, fp, r8, lsl #24
 400:	003b1000 	eorseq	r1, fp, r0
 404:	00000e03 	andeq	r0, r0, r3, lsl #28
 408:	0b011311 	bleq	45054 <_Min_Stack_Size+0x44c54>
 40c:	3b0b3a0b 	blcc	2cec40 <_Min_Stack_Size+0x2ce840>
 410:	870b390b 	strhi	r3, [fp, -fp, lsl #18]
 414:	13010e40 	movwne	r0, #7744	; 0x1e40
 418:	0d120000 	ldceq	0, cr0, [r2, #-0]
 41c:	3a0e0300 	bcc	381024 <_Min_Stack_Size+0x380c24>
 420:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 424:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 428:	1300000a 	movwne	r0, #10
 42c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 430:	0b3b0b3a 	bleq	ec3120 <_Min_Stack_Size+0xec2d20>
 434:	13490b39 	movtne	r0, #39737	; 0x9b39
 438:	00000a38 	andeq	r0, r0, r8, lsr sl
 43c:	3f012e14 	svccc	0x00012e14
 440:	3a0e030c 	bcc	381078 <_Min_Stack_Size+0x380c78>
 444:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 448:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 44c:	970a4001 	strls	r4, [sl, -r1]
 450:	13010c42 	movwne	r0, #7234	; 0x1c42
 454:	05150000 	ldreq	r0, [r5, #-0]
 458:	3a0e0300 	bcc	381060 <_Min_Stack_Size+0x380c60>
 45c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 460:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 464:	1600000a 	strne	r0, [r0], -sl
 468:	0b0b000f 	bleq	2c04ac <_Min_Stack_Size+0x2c00ac>
 46c:	00001349 	andeq	r1, r0, r9, asr #6
 470:	3f012e17 	svccc	0x00012e17
 474:	3a0e030c 	bcc	3810ac <_Min_Stack_Size+0x380cac>
 478:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 47c:	1113490b 	tstne	r3, fp, lsl #18
 480:	40011201 	andmi	r1, r1, r1, lsl #4
 484:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 488:	00001301 	andeq	r1, r0, r1, lsl #6
 48c:	03000518 	movweq	r0, #1304	; 0x518
 490:	3b0b3a0e 	blcc	2cecd0 <_Min_Stack_Size+0x2ce8d0>
 494:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 498:	b7060213 	smladlt	r6, r3, r2, r0
 49c:	00000642 	andeq	r0, r0, r2, asr #12
 4a0:	03003419 	movweq	r3, #1049	; 0x419
 4a4:	3b0b3a0e 	blcc	2cece4 <_Min_Stack_Size+0x2ce8e4>
 4a8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 4ac:	b7060213 	smladlt	r6, r3, r2, r0
 4b0:	00000642 	andeq	r0, r0, r2, asr #12
 4b4:	55010b1a 	strpl	r0, [r1, #-2842]	; 0xfffff4e6
 4b8:	00130106 	andseq	r0, r3, r6, lsl #2
 4bc:	010b1b00 	tsteq	fp, r0, lsl #22
 4c0:	01120111 	tsteq	r2, r1, lsl r1
 4c4:	00001301 	andeq	r1, r0, r1, lsl #6
 4c8:	0300341c 	movweq	r3, #1052	; 0x41c
 4cc:	3b0b3a0e 	blcc	2ced0c <_Min_Stack_Size+0x2ce90c>
 4d0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 4d4:	000a0213 	andeq	r0, sl, r3, lsl r2
 4d8:	82891d00 	addhi	r1, r9, #0, 26
 4dc:	01110001 	tsteq	r1, r1
 4e0:	00001331 	andeq	r1, r0, r1, lsr r3
 4e4:	3f012e1e 	svccc	0x00012e1e
 4e8:	3a0e030c 	bcc	381120 <_Min_Stack_Size+0x380d20>
 4ec:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 4f0:	1113490b 	tstne	r3, fp, lsl #18
 4f4:	40011201 	andmi	r1, r1, r1, lsl #4
 4f8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 4fc:	00001301 	andeq	r1, r0, r1, lsl #6
 500:	3f002e1f 	svccc	0x00002e1f
 504:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
 508:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
 50c:	0b3b0b3a 	bleq	ec31fc <_Min_Stack_Size+0xec2dfc>
 510:	00000b39 	andeq	r0, r0, r9, lsr fp
 514:	01110100 	tsteq	r1, r0, lsl #2
 518:	0b130e25 	bleq	4c3db4 <_Min_Stack_Size+0x4c39b4>
 51c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 520:	01110655 	tsteq	r1, r5, asr r6
 524:	06100152 			; <UNDEFINED> instruction: 0x06100152
 528:	04020000 	streq	r0, [r2], #-0
 52c:	0b0b3e01 	bleq	2cfd38 <_Min_Stack_Size+0x2cf938>
 530:	3a13490b 	bcc	4d2964 <_Min_Stack_Size+0x4d2564>
 534:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 538:	0e40870b 	cdpeq	7, 4, cr8, cr0, cr11, {0}
 53c:	00001301 	andeq	r1, r0, r1, lsl #6
 540:	03002803 	movweq	r2, #2051	; 0x803
 544:	000d1c0e 	andeq	r1, sp, lr, lsl #24
 548:	00280400 	eoreq	r0, r8, r0, lsl #8
 54c:	0b1c0e03 	bleq	703d60 <_Min_Stack_Size+0x703960>
 550:	24050000 	strcs	r0, [r5], #-0
 554:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 558:	000e030b 	andeq	r0, lr, fp, lsl #6
 55c:	00160600 	andseq	r0, r6, r0, lsl #12
 560:	0b3a0e03 	bleq	e83d74 <_Min_Stack_Size+0xe83974>
 564:	0b390b3b 	bleq	e43258 <_Min_Stack_Size+0xe42e58>
 568:	00001349 	andeq	r1, r0, r9, asr #6
 56c:	0b002407 	bleq	9590 <_Min_Stack_Size+0x9190>
 570:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 574:	08000008 	stmdaeq	r0, {r3}
 578:	13490035 	movtne	r0, #36917	; 0x9035
 57c:	26090000 	strcs	r0, [r9], -r0
 580:	00134900 	andseq	r4, r3, r0, lsl #18
 584:	01130a00 	tsteq	r3, r0, lsl #20
 588:	0b3a050b 	bleq	e819bc <_Min_Stack_Size+0xe815bc>
 58c:	0b39053b 	bleq	e41a80 <_Min_Stack_Size+0xe41680>
 590:	010e4087 	smlabbeq	lr, r7, r0, r4
 594:	0b000013 	bleq	5e8 <_Min_Stack_Size+0x1e8>
 598:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 59c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 5a0:	13490b39 	movtne	r0, #39737	; 0x9b39
 5a4:	00000a38 	andeq	r0, r0, r8, lsr sl
 5a8:	03000d0c 	movweq	r0, #3340	; 0xd0c
 5ac:	3b0b3a08 	blcc	2cedd4 <_Min_Stack_Size+0x2ce9d4>
 5b0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 5b4:	000a3813 	andeq	r3, sl, r3, lsl r8
 5b8:	01010d00 	tsteq	r1, r0, lsl #26
 5bc:	13011349 	movwne	r1, #4937	; 0x1349
 5c0:	210e0000 	mrscs	r0, (UNDEF: 14)
 5c4:	2f134900 	svccs	0x00134900
 5c8:	0f00000b 	svceq	0x0000000b
 5cc:	13490021 	movtne	r0, #36897	; 0x9021
 5d0:	0000052f 	andeq	r0, r0, pc, lsr #10
 5d4:	03001610 	movweq	r1, #1552	; 0x610
 5d8:	3b0b3a0e 	blcc	2cee18 <_Min_Stack_Size+0x2cea18>
 5dc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 5e0:	11000013 	tstne	r0, r3, lsl r0
 5e4:	0b0b0113 	bleq	2c0a38 <_Min_Stack_Size+0x2c0638>
 5e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 5ec:	40870b39 	addmi	r0, r7, r9, lsr fp
 5f0:	0013010e 	andseq	r0, r3, lr, lsl #2
 5f4:	00281200 	eoreq	r1, r8, r0, lsl #4
 5f8:	0b1c0803 	bleq	70260c <_Min_Stack_Size+0x70220c>
 5fc:	3b130000 	blcc	4c0604 <_Min_Stack_Size+0x4c0204>
 600:	000e0300 	andeq	r0, lr, r0, lsl #6
 604:	01131400 	tsteq	r3, r0, lsl #8
 608:	0b3a0b0b 	bleq	e8323c <_Min_Stack_Size+0xe82e3c>
 60c:	0b390b3b 	bleq	e43300 <_Min_Stack_Size+0xe42f00>
 610:	010e4087 	smlabbeq	lr, r7, r0, r4
 614:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
 618:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 61c:	0b3b0b3a 	bleq	ec330c <_Min_Stack_Size+0xec2f0c>
 620:	13490b39 	movtne	r0, #39737	; 0x9b39
 624:	00000a38 	andeq	r0, r0, r8, lsr sl
 628:	3f002e16 	svccc	0x00002e16
 62c:	3a0e030c 	bcc	381264 <_Min_Stack_Size+0x380e64>
 630:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 634:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 638:	970a4001 	strls	r4, [sl, -r1]
 63c:	00000c42 	andeq	r0, r0, r2, asr #24
 640:	3f012e17 	svccc	0x00012e17
 644:	3a0e030c 	bcc	38127c <_Min_Stack_Size+0x380e7c>
 648:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 64c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 650:	97064001 	strls	r4, [r6, -r1]
 654:	13010c42 	movwne	r0, #7234	; 0x1c42
 658:	89180000 	ldmdbhi	r8, {}	; <UNPREDICTABLE>
 65c:	11000182 	smlabbne	r0, r2, r1, r0
 660:	00133101 	andseq	r3, r3, r1, lsl #2
 664:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
 668:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 66c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 670:	01110b39 	tsteq	r1, r9, lsr fp
 674:	0a400112 	beq	1000ac4 <_Min_Stack_Size+0x10006c4>
 678:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 67c:	1a000013 	bne	6d0 <_Min_Stack_Size+0x2d0>
 680:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 684:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 688:	13490b39 	movtne	r0, #39737	; 0x9b39
 68c:	00000a02 	andeq	r0, r0, r2, lsl #20
 690:	3f012e1b 	svccc	0x00012e1b
 694:	3a0e030c 	bcc	3812cc <_Min_Stack_Size+0x380ecc>
 698:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 69c:	1113490b 	tstne	r3, fp, lsl #18
 6a0:	40011201 	andmi	r1, r1, r1, lsl #4
 6a4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 6a8:	00001301 	andeq	r1, r0, r1, lsl #6
 6ac:	0300051c 	movweq	r0, #1308	; 0x51c
 6b0:	3b0b3a0e 	blcc	2ceef0 <_Min_Stack_Size+0x2ceaf0>
 6b4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 6b8:	b7060213 	smladlt	r6, r3, r2, r0
 6bc:	00000642 	andeq	r0, r0, r2, asr #12
 6c0:	31011d1d 	tstcc	r1, sp, lsl sp
 6c4:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 6c8:	01110b42 	tsteq	r1, r2, asr #22
 6cc:	0b580112 	bleq	1600b1c <_Min_Stack_Size+0x160071c>
 6d0:	0b570559 	bleq	15c1c3c <_Min_Stack_Size+0x15c183c>
 6d4:	051e0000 	ldreq	r0, [lr, #-0]
 6d8:	02133100 	andseq	r3, r3, #0, 2
 6dc:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 6e0:	1d1f0000 	ldcne	0, cr0, [pc, #-0]	; 6e8 <_Min_Stack_Size+0x2e8>
 6e4:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
 6e8:	0b42b801 	bleq	10ae6f4 <_Min_Stack_Size+0x10ae2f4>
 6ec:	0b580655 	bleq	1602048 <_Min_Stack_Size+0x1601c48>
 6f0:	0b570559 	bleq	15c1c5c <_Min_Stack_Size+0x15c185c>
 6f4:	00001301 	andeq	r1, r0, r1, lsl #6
 6f8:	31011d20 	tstcc	r1, r0, lsr #26
 6fc:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 700:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
 704:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
 708:	00000b57 	andeq	r0, r0, r7, asr fp
 70c:	55010b21 	strpl	r0, [r1, #-2849]	; 0xfffff4df
 710:	22000006 	andcs	r0, r0, #6
 714:	13310034 	teqne	r1, #52	; 0x34
 718:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 71c:	23000006 	movwcs	r0, #6
 720:	0b0b000f 	bleq	2c0764 <_Min_Stack_Size+0x2c0364>
 724:	00001349 	andeq	r1, r0, r9, asr #6
 728:	31001d24 	tstcc	r0, r4, lsr #26
 72c:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 730:	01110b42 	tsteq	r1, r2, asr #22
 734:	0b580112 	bleq	1600b84 <_Min_Stack_Size+0x1600784>
 738:	0b570559 	bleq	15c1ca4 <_Min_Stack_Size+0x15c18a4>
 73c:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
 740:	030c3f01 	movweq	r3, #52993	; 0xcf01
 744:	3b0b3a0e 	blcc	2cef84 <_Min_Stack_Size+0x2ceb84>
 748:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 74c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 750:	970a4001 	strls	r4, [sl, -r1]
 754:	13010c42 	movwne	r0, #7234	; 0x1c42
 758:	05260000 	streq	r0, [r6, #-0]!
 75c:	3a0e0300 	bcc	381364 <_Min_Stack_Size+0x380f64>
 760:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 764:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 768:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 76c:	1d270000 	stcne	0, cr0, [r7, #-0]
 770:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
 774:	0b42b801 	bleq	10ae780 <_Min_Stack_Size+0x10ae380>
 778:	01120111 	tsteq	r2, r1, lsl r1
 77c:	0b590b58 	bleq	16434e4 <_Min_Stack_Size+0x16430e4>
 780:	00000b57 	andeq	r0, r0, r7, asr fp
 784:	3f012e28 	svccc	0x00012e28
 788:	3a0e030c 	bcc	3813c0 <_Min_Stack_Size+0x380fc0>
 78c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 790:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 794:	970a4001 	strls	r4, [sl, -r1]
 798:	13010c42 	movwne	r0, #7234	; 0x1c42
 79c:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
 7a0:	030c3f01 	movweq	r3, #52993	; 0xcf01
 7a4:	3b0b3a0e 	blcc	2cefe4 <_Min_Stack_Size+0x2cebe4>
 7a8:	110b390b 	tstne	fp, fp, lsl #18
 7ac:	40011201 	andmi	r1, r1, r1, lsl #4
 7b0:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 7b4:	00001301 	andeq	r1, r0, r1, lsl #6
 7b8:	0300052a 	movweq	r0, #1322	; 0x52a
 7bc:	3b0b3a0e 	blcc	2ceffc <_Min_Stack_Size+0x2cebfc>
 7c0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 7c4:	000a0213 	andeq	r0, sl, r3, lsl r2
 7c8:	00342b00 	eorseq	r2, r4, r0, lsl #22
 7cc:	0b3a0e03 	bleq	e83fe0 <_Min_Stack_Size+0xe83be0>
 7d0:	0b390b3b 	bleq	e434c4 <_Min_Stack_Size+0xe430c4>
 7d4:	06021349 	streq	r1, [r2], -r9, asr #6
 7d8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 7dc:	001d2c00 	andseq	r2, sp, r0, lsl #24
 7e0:	01521331 	cmpeq	r2, r1, lsr r3
 7e4:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
 7e8:	58011201 	stmdapl	r1, {r0, r9, ip}
 7ec:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 7f0:	2d00000b 	stccs	0, cr0, [r0, #-44]	; 0xffffffd4
 7f4:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 7f8:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 7fc:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 800:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 804:	0013010b 	andseq	r0, r3, fp, lsl #2
 808:	011d2e00 	tsteq	sp, r0, lsl #28
 80c:	01521331 	cmpeq	r2, r1, lsr r3
 810:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
 814:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
 818:	000b570b 	andeq	r5, fp, fp, lsl #14
 81c:	012e2f00 			; <UNDEFINED> instruction: 0x012e2f00
 820:	0b3a0e03 	bleq	e84034 <_Min_Stack_Size+0xe83c34>
 824:	0b39053b 	bleq	e41d18 <_Min_Stack_Size+0xe41918>
 828:	0b201349 	bleq	805554 <_Min_Stack_Size+0x805154>
 82c:	00001301 	andeq	r1, r0, r1, lsl #6
 830:	03000530 	movweq	r0, #1328	; 0x530
 834:	3b0b3a0e 	blcc	2cf074 <_Min_Stack_Size+0x2cec74>
 838:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 83c:	31000013 	tstcc	r0, r3, lsl r0
 840:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
 844:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 848:	01870b39 	orreq	r0, r7, r9, lsr fp
 84c:	000b200c 	andeq	r2, fp, ip
 850:	012e3200 			; <UNDEFINED> instruction: 0x012e3200
 854:	0b3a0e03 	bleq	e84068 <_Min_Stack_Size+0xe83c68>
 858:	0b39053b 	bleq	e41d4c <_Min_Stack_Size+0xe4194c>
 85c:	13010b20 	movwne	r0, #6944	; 0x1b20
 860:	34330000 	ldrtcc	r0, [r3], #-0
 864:	3a0e0300 	bcc	38146c <_Min_Stack_Size+0x38106c>
 868:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 86c:	0013490b 	andseq	r4, r3, fp, lsl #18
 870:	002e3400 	eoreq	r3, lr, r0, lsl #8
 874:	0b3a0e03 	bleq	e84088 <_Min_Stack_Size+0xe83c88>
 878:	0b39053b 	bleq	e41d6c <_Min_Stack_Size+0xe4196c>
 87c:	0b201349 	bleq	8055a8 <_Min_Stack_Size+0x8051a8>
 880:	2e350000 	cdpcs	0, 3, cr0, cr5, cr0, {0}
 884:	3a0e0300 	bcc	38148c <_Min_Stack_Size+0x38108c>
 888:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 88c:	000b200b 	andeq	r2, fp, fp
 890:	11010000 	mrsne	r0, (UNDEF: 1)
 894:	130e2501 	movwne	r2, #58625	; 0xe501
 898:	1b0e030b 	blne	3814cc <_Min_Stack_Size+0x3810cc>
 89c:	1106550e 	tstne	r6, lr, lsl #10
 8a0:	10015201 	andne	r5, r1, r1, lsl #4
 8a4:	02000006 	andeq	r0, r0, #6
 8a8:	0b3e0104 	bleq	f80cc0 <_Min_Stack_Size+0xf808c0>
 8ac:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 8b0:	0b3b0b3a 	bleq	ec35a0 <_Min_Stack_Size+0xec31a0>
 8b4:	40870b39 	addmi	r0, r7, r9, lsr fp
 8b8:	0013010e 	andseq	r0, r3, lr, lsl #2
 8bc:	00280300 	eoreq	r0, r8, r0, lsl #6
 8c0:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
 8c4:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
 8c8:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 8cc:	0500000b 	streq	r0, [r0, #-11]
 8d0:	0b0b0024 	bleq	2c0968 <_Min_Stack_Size+0x2c0568>
 8d4:	0e030b3e 	vmoveq.16	d3[0], r0
 8d8:	16060000 	strne	r0, [r6], -r0
 8dc:	3a0e0300 	bcc	3814e4 <_Min_Stack_Size+0x3810e4>
 8e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 8e4:	0013490b 	andseq	r4, r3, fp, lsl #18
 8e8:	00240700 	eoreq	r0, r4, r0, lsl #14
 8ec:	0b3e0b0b 	bleq	f83520 <_Min_Stack_Size+0xf83120>
 8f0:	00000803 	andeq	r0, r0, r3, lsl #16
 8f4:	49003508 	stmdbmi	r0, {r3, r8, sl, ip, sp}
 8f8:	09000013 	stmdbeq	r0, {r0, r1, r4}
 8fc:	13490026 	movtne	r0, #36902	; 0x9026
 900:	130a0000 	movwne	r0, #40960	; 0xa000
 904:	3a0b0b01 	bcc	2c3510 <_Min_Stack_Size+0x2c3110>
 908:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 90c:	0e40870b 	cdpeq	7, 4, cr8, cr0, cr11, {0}
 910:	00001301 	andeq	r1, r0, r1, lsl #6
 914:	03000d0b 	movweq	r0, #3339	; 0xd0b
 918:	3b0b3a0e 	blcc	2cf158 <_Min_Stack_Size+0x2ced58>
 91c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 920:	000a3813 	andeq	r3, sl, r3, lsl r8
 924:	000d0c00 	andeq	r0, sp, r0, lsl #24
 928:	0b3a0803 	bleq	e8293c <_Min_Stack_Size+0xe8253c>
 92c:	0b39053b 	bleq	e41e20 <_Min_Stack_Size+0xe41a20>
 930:	0a381349 	beq	e0565c <_Min_Stack_Size+0xe0525c>
 934:	160d0000 	strne	r0, [sp], -r0
 938:	3a0e0300 	bcc	381540 <_Min_Stack_Size+0x381140>
 93c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 940:	0013490b 	andseq	r4, r3, fp, lsl #18
 944:	01010e00 	tsteq	r1, r0, lsl #28
 948:	13011349 	movwne	r1, #4937	; 0x1349
 94c:	210f0000 	mrscs	r0, CPSR
 950:	2f134900 	svccs	0x00134900
 954:	1000000b 	andne	r0, r0, fp
 958:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 95c:	0b3b0b3a 	bleq	ec364c <_Min_Stack_Size+0xec324c>
 960:	13490b39 	movtne	r0, #39737	; 0x9b39
 964:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 968:	28110000 	ldmdacs	r1, {}	; <UNPREDICTABLE>
 96c:	1c080300 	stcne	3, cr0, [r8], {-0}
 970:	1200000b 	andne	r0, r0, #11
 974:	0e03003b 	mcreq	0, 0, r0, cr3, cr11, {1}
 978:	34130000 	ldrcc	r0, [r3], #-0
 97c:	3a134700 	bcc	4d2584 <_Min_Stack_Size+0x4d2184>
 980:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 984:	000a020b 	andeq	r0, sl, fp, lsl #4
 988:	002e1400 	eoreq	r1, lr, r0, lsl #8
 98c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 990:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 994:	13490b39 	movtne	r0, #39737	; 0x9b39
 998:	01120111 	tsteq	r2, r1, lsl r1
 99c:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 9a0:	1500000c 	strne	r0, [r0, #-12]
 9a4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 8f4 <_Min_Stack_Size+0x4f4>
 9a8:	0b3a0e03 	bleq	e841bc <_Min_Stack_Size+0xe83dbc>
 9ac:	0b39053b 	bleq	e41ea0 <_Min_Stack_Size+0xe41aa0>
 9b0:	01120111 	tsteq	r2, r1, lsl r1
 9b4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 9b8:	1600000c 	strne	r0, [r0], -ip
 9bc:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 90c <_Min_Stack_Size+0x50c>
 9c0:	0b3a0e03 	bleq	e841d4 <_Min_Stack_Size+0xe83dd4>
 9c4:	0b39053b 	bleq	e41eb8 <_Min_Stack_Size+0xe41ab8>
 9c8:	01120111 	tsteq	r2, r1, lsl r1
 9cc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 9d0:	0013010c 	andseq	r0, r3, ip, lsl #2
 9d4:	00051700 	andeq	r1, r5, r0, lsl #14
 9d8:	0b3a0e03 	bleq	e841ec <_Min_Stack_Size+0xe83dec>
 9dc:	0b39053b 	bleq	e41ed0 <_Min_Stack_Size+0xe41ad0>
 9e0:	06021349 	streq	r1, [r2], -r9, asr #6
 9e4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 9e8:	00341800 	eorseq	r1, r4, r0, lsl #16
 9ec:	0b3a0e03 	bleq	e84200 <_Min_Stack_Size+0xe83e00>
 9f0:	0b39053b 	bleq	e41ee4 <_Min_Stack_Size+0xe41ae4>
 9f4:	06021349 	streq	r1, [r2], -r9, asr #6
 9f8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 9fc:	82891900 	addhi	r1, r9, #0, 18
 a00:	01110001 	tsteq	r1, r1
 a04:	00001331 	andeq	r1, r0, r1, lsr r3
 a08:	3f012e1a 	svccc	0x00012e1a
 a0c:	3a0e030c 	bcc	381644 <_Min_Stack_Size+0x381244>
 a10:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 a14:	1113490b 	tstne	r3, fp, lsl #18
 a18:	40011201 	andmi	r1, r1, r1, lsl #4
 a1c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 a20:	00001301 	andeq	r1, r0, r1, lsl #6
 a24:	3f012e1b 	svccc	0x00012e1b
 a28:	3a0e030c 	bcc	381660 <_Min_Stack_Size+0x381260>
 a2c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 a30:	1113490b 	tstne	r3, fp, lsl #18
 a34:	40011201 	andmi	r1, r1, r1, lsl #4
 a38:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 a3c:	00001301 	andeq	r1, r0, r1, lsl #6
 a40:	0300051c 	movweq	r0, #1308	; 0x51c
 a44:	3b0b3a0e 	blcc	2cf284 <_Min_Stack_Size+0x2cee84>
 a48:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 a4c:	b7060213 	smladlt	r6, r3, r2, r0
 a50:	00000642 	andeq	r0, r0, r2, asr #12
 a54:	0182891d 	orreq	r8, r2, sp, lsl r9
 a58:	31011101 	tstcc	r1, r1, lsl #2
 a5c:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
 a60:	0001828a 	andeq	r8, r1, sl, lsl #5
 a64:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
 a68:	1f00000a 	svcne	0x0000000a
 a6c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 9bc <_Min_Stack_Size+0x5bc>
 a70:	0b3a0e03 	bleq	e84284 <_Min_Stack_Size+0xe83e84>
 a74:	0b390b3b 	bleq	e43768 <_Min_Stack_Size+0xe43368>
 a78:	01120111 	tsteq	r2, r1, lsl r1
 a7c:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 a80:	2000000c 	andcs	r0, r0, ip
 a84:	01018289 	smlabbeq	r1, r9, r2, r8
 a88:	13310111 	teqne	r1, #1073741828	; 0x40000004
 a8c:	00001301 	andeq	r1, r0, r1, lsl #6
 a90:	3f002e21 	svccc	0x00002e21
 a94:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
 a98:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
 a9c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 aa0:	00000b39 	andeq	r0, r0, r9, lsr fp
 aa4:	01110100 	tsteq	r1, r0, lsl #2
 aa8:	0b130e25 	bleq	4c4344 <_Min_Stack_Size+0x4c3f44>
 aac:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 ab0:	01110655 	tsteq	r1, r5, asr r6
 ab4:	06100152 			; <UNDEFINED> instruction: 0x06100152
 ab8:	24020000 	strcs	r0, [r2], #-0
 abc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 ac0:	000e030b 	andeq	r0, lr, fp, lsl #6
 ac4:	00160300 	andseq	r0, r6, r0, lsl #6
 ac8:	0b3a0e03 	bleq	e842dc <_Min_Stack_Size+0xe83edc>
 acc:	0b390b3b 	bleq	e437c0 <_Min_Stack_Size+0xe433c0>
 ad0:	00001349 	andeq	r1, r0, r9, asr #6
 ad4:	0b002404 	bleq	9aec <_Min_Stack_Size+0x96ec>
 ad8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 adc:	05000008 	streq	r0, [r0, #-8]
 ae0:	13490035 	movtne	r0, #36917	; 0x9035
 ae4:	26060000 	strcs	r0, [r6], -r0
 ae8:	00134900 	andseq	r4, r3, r0, lsl #18
 aec:	01130700 	tsteq	r3, r0, lsl #14
 af0:	0b3a0b0b 	bleq	e83724 <_Min_Stack_Size+0xe83324>
 af4:	0b39053b 	bleq	e41fe8 <_Min_Stack_Size+0xe41be8>
 af8:	010e4087 	smlabbeq	lr, r7, r0, r4
 afc:	08000013 	stmdaeq	r0, {r0, r1, r4}
 b00:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 b04:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 b08:	13490b39 	movtne	r0, #39737	; 0x9b39
 b0c:	00000a38 	andeq	r0, r0, r8, lsr sl
 b10:	03000d09 	movweq	r0, #3337	; 0xd09
 b14:	3b0b3a08 	blcc	2cf33c <_Min_Stack_Size+0x2cef3c>
 b18:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 b1c:	000a3813 	andeq	r3, sl, r3, lsl r8
 b20:	01010a00 	tsteq	r1, r0, lsl #20
 b24:	13011349 	movwne	r1, #4937	; 0x1349
 b28:	210b0000 	mrscs	r0, (UNDEF: 11)
 b2c:	2f134900 	svccs	0x00134900
 b30:	0c00000b 	stceq	0, cr0, [r0], {11}
 b34:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 b38:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 b3c:	13490b39 	movtne	r0, #39737	; 0x9b39
 b40:	340d0000 	strcc	r0, [sp], #-0
 b44:	3a0e0300 	bcc	38174c <_Min_Stack_Size+0x38134c>
 b48:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 b4c:	3f13490b 	svccc	0x0013490b
 b50:	000c3c0c 	andeq	r3, ip, ip, lsl #24
 b54:	01040e00 	tsteq	r4, r0, lsl #28
 b58:	0b0b0b3e 	bleq	2c3858 <_Min_Stack_Size+0x2c3458>
 b5c:	0b3a1349 	bleq	e85888 <_Min_Stack_Size+0xe85488>
 b60:	0b390b3b 	bleq	e43854 <_Min_Stack_Size+0xe43454>
 b64:	010e4087 	smlabbeq	lr, r7, r0, r4
 b68:	0f000013 	svceq	0x00000013
 b6c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
 b70:	00000b1c 	andeq	r0, r0, ip, lsl fp
 b74:	03002810 	movweq	r2, #2064	; 0x810
 b78:	000b1c08 	andeq	r1, fp, r8, lsl #24
 b7c:	003b1100 	eorseq	r1, fp, r0, lsl #2
 b80:	00000e03 	andeq	r0, r0, r3, lsl #28
 b84:	47003412 	smladmi	r0, r2, r4, r3
 b88:	3b0b3a13 	blcc	2cf3dc <_Min_Stack_Size+0x2cefdc>
 b8c:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
 b90:	1300000a 	movwne	r0, #10
 b94:	0c3f012e 	ldfeqs	f0, [pc], #-184	; ae4 <_Min_Stack_Size+0x6e4>
 b98:	0b3a0e03 	bleq	e843ac <_Min_Stack_Size+0xe83fac>
 b9c:	0b390b3b 	bleq	e43890 <_Min_Stack_Size+0xe43490>
 ba0:	01120111 	tsteq	r2, r1, lsl r1
 ba4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 ba8:	0013010c 	andseq	r0, r3, ip, lsl #2
 bac:	00341400 	eorseq	r1, r4, r0, lsl #8
 bb0:	0b3a0803 	bleq	e82bc4 <_Min_Stack_Size+0xe827c4>
 bb4:	0b390b3b 	bleq	e438a8 <_Min_Stack_Size+0xe434a8>
 bb8:	06021349 	streq	r1, [r2], -r9, asr #6
 bbc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 bc0:	00341500 	eorseq	r1, r4, r0, lsl #10
 bc4:	0b3a0e03 	bleq	e843d8 <_Min_Stack_Size+0xe83fd8>
 bc8:	0b390b3b 	bleq	e438bc <_Min_Stack_Size+0xe434bc>
 bcc:	06021349 	streq	r1, [r2], -r9, asr #6
 bd0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 bd4:	002e1600 	eoreq	r1, lr, r0, lsl #12
 bd8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 bdc:	0b3b0b3a 	bleq	ec38cc <_Min_Stack_Size+0xec34cc>
 be0:	01110b39 	tsteq	r1, r9, lsr fp
 be4:	0a400112 	beq	1001034 <_Min_Stack_Size+0x1000c34>
 be8:	000c4297 	muleq	ip, r7, r2
 bec:	11010000 	mrsne	r0, (UNDEF: 1)
 bf0:	130e2501 	movwne	r2, #58625	; 0xe501
 bf4:	1b0e030b 	blne	381828 <_Min_Stack_Size+0x381428>
 bf8:	1106550e 	tstne	r6, lr, lsl #10
 bfc:	10015201 	andne	r5, r1, r1, lsl #4
 c00:	02000006 	andeq	r0, r0, #6
 c04:	0b0b0024 	bleq	2c0c9c <_Min_Stack_Size+0x2c089c>
 c08:	0e030b3e 	vmoveq.16	d3[0], r0
 c0c:	16030000 	strne	r0, [r3], -r0
 c10:	3a0e0300 	bcc	381818 <_Min_Stack_Size+0x381418>
 c14:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 c18:	0013490b 	andseq	r4, r3, fp, lsl #18
 c1c:	00240400 	eoreq	r0, r4, r0, lsl #8
 c20:	0b3e0b0b 	bleq	f83854 <_Min_Stack_Size+0xf83454>
 c24:	00000803 	andeq	r0, r0, r3, lsl #16
 c28:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
 c2c:	06000013 			; <UNDEFINED> instruction: 0x06000013
 c30:	13490035 	movtne	r0, #36917	; 0x9035
 c34:	34070000 	strcc	r0, [r7], #-0
 c38:	3a0e0300 	bcc	381840 <_Min_Stack_Size+0x381440>
 c3c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 c40:	3f13490b 	svccc	0x0013490b
 c44:	000c3c0c 	andeq	r3, ip, ip, lsl #24
 c48:	01010800 	tsteq	r1, r0, lsl #16
 c4c:	13011349 	movwne	r1, #4937	; 0x1349
 c50:	21090000 	mrscs	r0, (UNDEF: 9)
 c54:	2f134900 	svccs	0x00134900
 c58:	0a00000b 	beq	c8c <_Min_Stack_Size+0x88c>
 c5c:	0b0b000f 	bleq	2c0ca0 <_Min_Stack_Size+0x2c08a0>
 c60:	00001349 	andeq	r1, r0, r9, asr #6
 c64:	0000150b 	andeq	r1, r0, fp, lsl #10
 c68:	00340c00 	eorseq	r0, r4, r0, lsl #24
 c6c:	0b3a0e03 	bleq	e84480 <_Min_Stack_Size+0xe84080>
 c70:	0b390b3b 	bleq	e43964 <_Min_Stack_Size+0xe43564>
 c74:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; b58 <_Min_Stack_Size+0x758>
 c78:	00000a02 	andeq	r0, r0, r2, lsl #20
 c7c:	3f012e0d 	svccc	0x00012e0d
 c80:	3a0e030c 	bcc	3818b8 <_Min_Stack_Size+0x3814b8>
 c84:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 c88:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 c8c:	97064001 	strls	r4, [r6, -r1]
 c90:	13010c42 	movwne	r0, #7234	; 0x1c42
 c94:	890e0000 	stmdbhi	lr, {}	; <UNPREDICTABLE>
 c98:	11000182 	smlabbne	r0, r2, r1, r0
 c9c:	00133101 	andseq	r3, r3, r1, lsl #2
 ca0:	002e0f00 	eoreq	r0, lr, r0, lsl #30
 ca4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 ca8:	0b3b0b3a 	bleq	ec3998 <_Min_Stack_Size+0xec3598>
 cac:	01110b39 	tsteq	r1, r9, lsr fp
 cb0:	0a400112 	beq	1001100 <_Min_Stack_Size+0x1000d00>
 cb4:	000c4297 	muleq	ip, r7, r2
 cb8:	00341000 	eorseq	r1, r4, r0
 cbc:	0b3a0e03 	bleq	e844d0 <_Min_Stack_Size+0xe840d0>
 cc0:	0b390b3b 	bleq	e439b4 <_Min_Stack_Size+0xe435b4>
 cc4:	06021349 	streq	r1, [r2], -r9, asr #6
 cc8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 ccc:	00341100 	eorseq	r1, r4, r0, lsl #2
 cd0:	0b3a0e03 	bleq	e844e4 <_Min_Stack_Size+0xe840e4>
 cd4:	0b390b3b 	bleq	e439c8 <_Min_Stack_Size+0xe435c8>
 cd8:	0d1c1349 	ldceq	3, cr1, [ip, #-292]	; 0xfffffedc
 cdc:	0b120000 	bleq	480ce4 <_Min_Stack_Size+0x4808e4>
 ce0:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 ce4:	00130101 	andseq	r0, r3, r1, lsl #2
 ce8:	002e1300 	eoreq	r1, lr, r0, lsl #6
 cec:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 cf0:	030e4087 	movweq	r4, #57479	; 0xe087
 cf4:	3b0b3a0e 	blcc	2cf534 <_Min_Stack_Size+0x2cf134>
 cf8:	000b390b 	andeq	r3, fp, fp, lsl #18
 cfc:	11010000 	mrsne	r0, (UNDEF: 1)
 d00:	130e2501 	movwne	r2, #58625	; 0xe501
 d04:	1b0e030b 	blne	381938 <_Min_Stack_Size+0x381538>
 d08:	1106550e 	tstne	r6, lr, lsl #10
 d0c:	10015201 	andne	r5, r1, r1, lsl #4
 d10:	02000006 	andeq	r0, r0, #6
 d14:	0b0b0024 	bleq	2c0dac <_Min_Stack_Size+0x2c09ac>
 d18:	0e030b3e 	vmoveq.16	d3[0], r0
 d1c:	16030000 	strne	r0, [r3], -r0
 d20:	3a0e0300 	bcc	381928 <_Min_Stack_Size+0x381528>
 d24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 d28:	0013490b 	andseq	r4, r3, fp, lsl #18
 d2c:	00240400 	eoreq	r0, r4, r0, lsl #8
 d30:	0b3e0b0b 	bleq	f83964 <_Min_Stack_Size+0xf83564>
 d34:	00000803 	andeq	r0, r0, r3, lsl #16
 d38:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
 d3c:	06000013 			; <UNDEFINED> instruction: 0x06000013
 d40:	13490026 	movtne	r0, #36902	; 0x9026
 d44:	01070000 	mrseq	r0, (UNDEF: 7)
 d48:	01134901 	tsteq	r3, r1, lsl #18
 d4c:	08000013 	stmdaeq	r0, {r0, r1, r4}
 d50:	13490021 	movtne	r0, #36897	; 0x9021
 d54:	00000b2f 	andeq	r0, r0, pc, lsr #22
 d58:	0b011309 	bleq	45984 <_Min_Stack_Size+0x45584>
 d5c:	3b0b3a0b 	blcc	2cf590 <_Min_Stack_Size+0x2cf190>
 d60:	870b3905 	strhi	r3, [fp, -r5, lsl #18]
 d64:	13010e40 	movwne	r0, #7744	; 0x1e40
 d68:	0d0a0000 	stceq	0, cr0, [sl, #-0]
 d6c:	3a080300 	bcc	201974 <_Min_Stack_Size+0x201574>
 d70:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 d74:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 d78:	0b00000a 	bleq	da8 <_Min_Stack_Size+0x9a8>
 d7c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 d80:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 d84:	13490b39 	movtne	r0, #39737	; 0x9b39
 d88:	00000a38 	andeq	r0, r0, r8, lsr sl
 d8c:	0300160c 	movweq	r1, #1548	; 0x60c
 d90:	3b0b3a0e 	blcc	2cf5d0 <_Min_Stack_Size+0x2cf1d0>
 d94:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 d98:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 d9c:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 da0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 da4:	40870b39 	addmi	r0, r7, r9, lsr fp
 da8:	0013010e 	andseq	r0, r3, lr, lsl #2
 dac:	01040e00 	tsteq	r4, r0, lsl #28
 db0:	0b0b0b3e 	bleq	2c3ab0 <_Min_Stack_Size+0x2c36b0>
 db4:	0b3a1349 	bleq	e85ae0 <_Min_Stack_Size+0xe856e0>
 db8:	0b390b3b 	bleq	e43aac <_Min_Stack_Size+0xe436ac>
 dbc:	010e4087 	smlabbeq	lr, r7, r0, r4
 dc0:	0f000013 	svceq	0x00000013
 dc4:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
 dc8:	00000b1c 	andeq	r0, r0, ip, lsl fp
 dcc:	03002810 	movweq	r2, #2064	; 0x810
 dd0:	000b1c08 	andeq	r1, fp, r8, lsl #24
 dd4:	003b1100 	eorseq	r1, fp, r0, lsl #2
 dd8:	00000e03 	andeq	r0, r0, r3, lsl #28
 ddc:	0b011312 	bleq	45a2c <_Min_Stack_Size+0x4562c>
 de0:	3b0b3a0b 	blcc	2cf614 <_Min_Stack_Size+0x2cf214>
 de4:	870b390b 	strhi	r3, [fp, -fp, lsl #18]
 de8:	13010e40 	movwne	r0, #7744	; 0x1e40
 dec:	0d130000 	ldceq	0, cr0, [r3, #-0]
 df0:	3a0e0300 	bcc	3819f8 <_Min_Stack_Size+0x3815f8>
 df4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 df8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 dfc:	1400000a 	strne	r0, [r0], #-10
 e00:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 e04:	0b3b0b3a 	bleq	ec3af4 <_Min_Stack_Size+0xec36f4>
 e08:	13490b39 	movtne	r0, #39737	; 0x9b39
 e0c:	00000a38 	andeq	r0, r0, r8, lsr sl
 e10:	03011315 	movweq	r1, #4885	; 0x1315
 e14:	3a0b0b0e 	bcc	2c3a54 <_Min_Stack_Size+0x2c3654>
 e18:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 e1c:	0013010b 	andseq	r0, r3, fp, lsl #2
 e20:	000f1600 	andeq	r1, pc, r0, lsl #12
 e24:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 e28:	0f170000 	svceq	0x00170000
 e2c:	000b0b00 	andeq	r0, fp, r0, lsl #22
 e30:	01151800 	tsteq	r5, r0, lsl #16
 e34:	00001301 	andeq	r1, r0, r1, lsl #6
 e38:	49000519 	stmdbmi	r0, {r0, r3, r4, r8, sl}
 e3c:	1a000013 	bne	e90 <_Min_Stack_Size+0xa90>
 e40:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 e44:	0b3b0b3a 	bleq	ec3b34 <_Min_Stack_Size+0xec3734>
 e48:	40870b39 	addmi	r0, r7, r9, lsr fp
 e4c:	0013010e 	andseq	r0, r3, lr, lsl #2
 e50:	00341b00 	eorseq	r1, r4, r0, lsl #22
 e54:	0b3a0e03 	bleq	e84668 <_Min_Stack_Size+0xe84268>
 e58:	0b390b3b 	bleq	e43b4c <_Min_Stack_Size+0xe4374c>
 e5c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; d40 <_Min_Stack_Size+0x940>
 e60:	00000a02 	andeq	r0, r0, r2, lsl #20
 e64:	0300341c 	movweq	r3, #1052	; 0x41c
 e68:	3b0b3a0e 	blcc	2cf6a8 <_Min_Stack_Size+0x2cf2a8>
 e6c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 e70:	1c0c6c13 	stcne	12, cr6, [ip], {19}
 e74:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
 e78:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 e7c:	0b3b0b3a 	bleq	ec3b6c <_Min_Stack_Size+0xec376c>
 e80:	13490b39 	movtne	r0, #39737	; 0x9b39
 e84:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
 e88:	030c3f01 	movweq	r3, #52993	; 0xcf01
 e8c:	3b0b3a0e 	blcc	2cf6cc <_Min_Stack_Size+0x2cf2cc>
 e90:	110b3905 	tstne	fp, r5, lsl #18
 e94:	40011201 	andmi	r1, r1, r1, lsl #4
 e98:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 e9c:	00001301 	andeq	r1, r0, r1, lsl #6
 ea0:	31001d1f 	tstcc	r0, pc, lsl sp
 ea4:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 ea8:	01110b42 	tsteq	r1, r2, asr #22
 eac:	0b580112 	bleq	16012fc <_Min_Stack_Size+0x1600efc>
 eb0:	0b570559 	bleq	15c241c <_Min_Stack_Size+0x15c201c>
 eb4:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
 eb8:	030c3f01 	movweq	r3, #52993	; 0xcf01
 ebc:	3b0b3a0e 	blcc	2cf6fc <_Min_Stack_Size+0x2cf2fc>
 ec0:	870b390b 	strhi	r3, [fp, -fp, lsl #18]
 ec4:	01110e40 	tsteq	r1, r0, asr #28
 ec8:	06400112 			; <UNDEFINED> instruction: 0x06400112
 ecc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 ed0:	21000013 	tstcs	r0, r3, lsl r0
 ed4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 ed8:	0b3b0b3a 	bleq	ec3bc8 <_Min_Stack_Size+0xec37c8>
 edc:	13490b39 	movtne	r0, #39737	; 0x9b39
 ee0:	00000a02 	andeq	r0, r0, r2, lsl #20
 ee4:	11010b22 	tstne	r1, r2, lsr #22
 ee8:	01011201 	tsteq	r1, r1, lsl #4
 eec:	23000013 	movwcs	r0, #19
 ef0:	01018289 	smlabbeq	r1, r9, r2, r8
 ef4:	13310111 	teqne	r1, #1073741828	; 0x40000004
 ef8:	00001301 	andeq	r1, r0, r1, lsl #6
 efc:	01828a24 	orreq	r8, r2, r4, lsr #20
 f00:	910a0200 	mrsls	r0, R10_fiq
 f04:	00000a42 	andeq	r0, r0, r2, asr #20
 f08:	01828925 	orreq	r8, r2, r5, lsr #18
 f0c:	31011100 	mrscc	r1, (UNDEF: 17)
 f10:	26000013 			; <UNDEFINED> instruction: 0x26000013
 f14:	0c3f012e 	ldfeqs	f0, [pc], #-184	; e64 <_Min_Stack_Size+0xa64>
 f18:	0b3a0e03 	bleq	e8472c <_Min_Stack_Size+0xe8432c>
 f1c:	0b390b3b 	bleq	e43c10 <_Min_Stack_Size+0xe43810>
 f20:	01111349 	tsteq	r1, r9, asr #6
 f24:	06400112 			; <UNDEFINED> instruction: 0x06400112
 f28:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 f2c:	27000013 	smladcs	r0, r3, r0, r0
 f30:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 f34:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 f38:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 f3c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
 f40:	010b570b 	tsteq	fp, fp, lsl #14
 f44:	28000013 	stmdacs	r0, {r0, r1, r4}
 f48:	13310034 	teqne	r1, #52	; 0x34
 f4c:	0000061c 	andeq	r0, r0, ip, lsl r6
 f50:	31001d29 	tstcc	r0, r9, lsr #26
 f54:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 f58:	01110b42 	tsteq	r1, r2, asr #22
 f5c:	0b580112 	bleq	16013ac <_Min_Stack_Size+0x1600fac>
 f60:	0b570b59 	bleq	15c3ccc <_Min_Stack_Size+0x15c38cc>
 f64:	892a0000 	stmdbhi	sl!, {}	; <UNPREDICTABLE>
 f68:	11010182 	smlabbne	r1, r2, r1, r0
 f6c:	00133101 	andseq	r3, r3, r1, lsl #2
 f70:	002e2b00 	eoreq	r2, lr, r0, lsl #22
 f74:	0b3a0e03 	bleq	e84788 <_Min_Stack_Size+0xe84388>
 f78:	0b390b3b 	bleq	e43c6c <_Min_Stack_Size+0xe4386c>
 f7c:	00000b20 	andeq	r0, r0, r0, lsr #22
 f80:	03012e2c 	movweq	r2, #7724	; 0x1e2c
 f84:	3b0b3a0e 	blcc	2cf7c4 <_Min_Stack_Size+0x2cf3c4>
 f88:	200b390b 	andcs	r3, fp, fp, lsl #18
 f8c:	0013010b 	andseq	r0, r3, fp, lsl #2
 f90:	00342d00 	eorseq	r2, r4, r0, lsl #26
 f94:	0b3a0e03 	bleq	e847a8 <_Min_Stack_Size+0xe843a8>
 f98:	0b390b3b 	bleq	e43c8c <_Min_Stack_Size+0xe4388c>
 f9c:	0c6c1349 	stcleq	3, cr1, [ip], #-292	; 0xfffffedc
 fa0:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
 fa4:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 fa8:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 fac:	00000e03 	andeq	r0, r0, r3, lsl #28
 fb0:	3f002e2f 	svccc	0x00002e2f
 fb4:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
 fb8:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
 fbc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 fc0:	00000b39 	andeq	r0, r0, r9, lsr fp
 fc4:	3f002e30 	svccc	0x00002e30
 fc8:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
 fcc:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
 fd0:	0b3b0b3a 	bleq	ec3cc0 <_Min_Stack_Size+0xec38c0>
 fd4:	00000b39 	andeq	r0, r0, r9, lsr fp
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	08000214 	stmdaeq	r0, {r2, r4, r9}
       4:	08000216 	stmdaeq	r0, {r1, r2, r4, r9}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
       8:	007d0002 	rsbseq	r0, sp, r2
  __HAL_FLASH_DATA_CACHE_ENABLE();
       c:	08000216 	stmdaeq	r0, {r1, r2, r4, r9}
      10:	0800021c 	stmdaeq	r0, {r2, r3, r4, r9}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  HAL_MspInit();
      28:	007d0002 	rsbseq	r0, sp, r2
	...
  *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL);
      34:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL);
      48:	007d0002 	rsbseq	r0, sp, r2
	...
    return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
      54:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      68:	007d0002 	rsbseq	r0, sp, r2
	...
      break;
      74:	087d0002 	ldmdaeq	sp!, {r1}^
	...
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      80:	0800021c 	stmdaeq	r0, {r2, r3, r4, r9}
      84:	0800021e 	stmdaeq	r0, {r1, r2, r3, r4, r9}
      88:	007d0002 	rsbseq	r0, sp, r2
      8c:	0800021e 	stmdaeq	r0, {r1, r2, r3, r4, r9}
      90:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
      94:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
      a0:	00000001 	andeq	r0, r0, r1
      a4:	01000000 	mrseq	r0, (UNDEF: 0)
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
      a8:	0800021e 	stmdaeq	r0, {r1, r2, r3, r4, r9}
      ac:	08000236 	stmdaeq	r0, {r1, r2, r4, r5, r9}
      b0:	9f300002 	svcls	0x00300002
      b4:	08000236 	stmdaeq	r0, {r1, r2, r4, r5, r9}
      b8:	08000281 	stmdaeq	r0, {r0, r7, r9}
  if((plli2sused == 1U) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
      bc:	94520001 	ldrbls	r0, [r2], #-1
      c0:	d7080002 	strle	r0, [r8, -r2]
      c4:	01080002 	tsteq	r8, r2
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
      c8:	02da5200 	sbcseq	r5, sl, #0, 4
      cc:	02e00800 	rsceq	r0, r0, #0, 16
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
      d0:	00020800 	andeq	r0, r2, r0, lsl #16
      d4:	00009f30 	andeq	r9, r0, r0, lsr pc
      d8:	00000000 	andeq	r0, r0, r0
      dc:	00010000 	andeq	r0, r1, r0
      e0:	00000000 	andeq	r0, r0, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1_AUDIO) == RCC_PERIPHCLK_DFSDM1_AUDIO)
      e4:	021e0100 	andseq	r0, lr, #0, 2
      e8:	02820800 	addeq	r0, r2, #0, 16
    __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
      ec:	00020800 	andeq	r0, r2, r0, lsl #16
      f0:	02829f30 	addeq	r9, r2, #48, 30	; 0xc0
      f4:	02920800 	addseq	r0, r2, #0, 16
      f8:	00010800 	andeq	r0, r1, r0, lsl #16
      fc:	00029450 	andeq	r9, r2, r0, asr r4
}
     100:	0002d808 	andeq	sp, r2, r8, lsl #16
      plli2sused = 1U;
     104:	30000208 	andcc	r0, r0, r8, lsl #4
    __HAL_RCC_PWR_CLK_ENABLE();
     108:	0002da9f 	muleq	r2, pc, sl	; <UNPREDICTABLE>
     10c:	0002e008 	andeq	lr, r2, r8
     110:	30000208 	andcc	r0, r0, r8, lsl #4
     114:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     118:	00000000 	andeq	r0, r0, r0
     11c:	00000100 	andeq	r0, r0, r0, lsl #2
    PWR->CR |= PWR_CR_DBP;
     120:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
     124:	8e080002 	cdphi	0, 0, cr0, cr8, cr2, {0}
     128:	02080002 	andeq	r0, r8, #2
    tickstart = HAL_GetTick();
     12c:	8e9f3000 	cdphi	0, 9, cr3, cr15, cr0, {0}
    while((PWR->CR & PWR_CR_DBP) == RESET)
     130:	94080002 	strls	r0, [r8], #-2
     134:	01080002 	tsteq	r8, r2
     138:	02945300 	addseq	r5, r4, #0, 6
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
     13c:	02e00800 	rsceq	r0, r0, #0, 16
     140:	00020800 	andeq	r0, r2, r0, lsl #16
        return HAL_TIMEOUT;
     144:	00009f30 	andeq	r9, r0, r0, lsr pc
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
     148:	00000000 	andeq	r0, r0, r0
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
     14c:	00020000 	andeq	r0, r2, r0
     150:	00000000 	andeq	r0, r0, r0
     154:	021e0100 	andseq	r0, lr, #0, 2
     158:	02920800 	addseq	r0, r2, #0, 16
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
     15c:	00020800 	andeq	r0, r2, r0, lsl #16
     160:	02929f30 	addseq	r9, r2, #48, 30	; 0xc0
      __HAL_RCC_BACKUPRESET_FORCE();
     164:	02940800 	addseq	r0, r4, #0, 16
     168:	00010800 	andeq	r0, r1, r0, lsl #16
      __HAL_RCC_BACKUPRESET_RELEASE();
     16c:	00029450 	andeq	r9, r2, r0, asr r4
     170:	0002e008 	andeq	lr, r2, r8
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
     174:	30000208 	andcc	r0, r0, r8, lsl #4
     178:	0002e09f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
     17c:	0002e008 	andeq	lr, r2, r8
     180:	0c000608 	stceq	6, cr0, [r0], {8}
     184:	00f42400 	rscseq	r2, r4, r0, lsl #8
     188:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     198:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
        tickstart = HAL_GetTick();
     1a4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     1a8:	00000010 	andeq	r0, r0, r0, lsl r0
     1ac:	00000000 	andeq	r0, r0, r0
     1b0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     1b4:	00000030 	andeq	r0, r0, r0, lsr r0
     1b8:	00000000 	andeq	r0, r0, r0
     1bc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
            return HAL_TIMEOUT;
     1c0:	00000010 	andeq	r0, r0, r0, lsl r0
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
     1c4:	00000000 	andeq	r0, r0, r0
     1c8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     1cc:	00000030 	andeq	r0, r0, r0, lsr r0
	...
    tickstart = HAL_GetTick();
     1e4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
     1f0:	01f30004 	mvnseq	r0, r4
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
     1f4:	00009f50 	andeq	r9, r0, r0, asr pc
     1f8:	00000000 	andeq	r0, r0, r0
     1fc:	00010000 	andeq	r0, r1, r0
        return HAL_TIMEOUT;
     200:	00000050 	andeq	r0, r0, r0, asr r0
    __HAL_RCC_PLL_I2S_CONFIG(PeriphClkInit->PLLI2SSelection);
     204:	00000000 	andeq	r0, r0, r0
     208:	f3000400 	vshl.u8	d0, d0, d0
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB1) == RCC_PERIPHCLK_I2S_APB1) && (PeriphClkInit->I2sApb1ClockSelection == RCC_I2SAPB1CLKSOURCE_PLLI2S)) ||
     20c:	009f5001 	addseq	r5, pc, r1
	...
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)) ||
     228:	01000000 	mrseq	r0, (UNDEF: 0)
     22c:	00005100 	andeq	r5, r0, r0, lsl #2
     230:	00000000 	andeq	r0, r0, r0
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO) && (PeriphClkInit->SdioClockSelection == RCC_SDIOCLKSOURCE_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)))
     234:	00010000 	andeq	r0, r1, r0
     238:	00000054 	andeq	r0, r0, r4, asr r0
     23c:	00000000 	andeq	r0, r0, r0
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
     240:	f3000400 	vshl.u8	d0, d0, d0
     244:	009f5101 	addseq	r5, pc, r1, lsl #2
     248:	00000000 	andeq	r0, r0, r0
     24c:	01000000 	mrseq	r0, (UNDEF: 0)
     250:	00005100 	andeq	r5, r0, r0, lsl #2
     254:	00000000 	andeq	r0, r0, r0
     258:	00010000 	andeq	r0, r1, r0
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
     25c:	00000054 	andeq	r0, r0, r4, asr r0
     260:	00000000 	andeq	r0, r0, r0
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
     264:	f3000400 	vshl.u8	d0, d0, d0
     268:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    tickstart = HAL_GetTick();
     284:	52000100 	andpl	r0, r0, #0, 2
	...
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
     290:	00550001 	subseq	r0, r5, r1
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
     294:	00000000 	andeq	r0, r0, r0
     298:	04000000 	streq	r0, [r0], #-0
     29c:	5201f300 	andpl	pc, r1, #0, 6
        return HAL_TIMEOUT;
     2a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
  return HAL_OK;
     2a4:	00000000 	andeq	r0, r0, r0
     2a8:	52000100 	andpl	r0, r0, #0, 2
	...
     2b4:	00550001 	subseq	r0, r5, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2b8:	00000000 	andeq	r0, r0, r0
     2bc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
          return HAL_TIMEOUT;
     2c0:	f8080002 			; <UNDEFINED> instruction: 0xf8080002
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     2c4:	02080002 	andeq	r0, r8, #2
     2c8:	f8007d00 			; <UNDEFINED> instruction: 0xf8007d00
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     2cc:	2c080002 	stccs	0, cr0, [r8], {2}
     2d0:	02080004 	andeq	r0, r8, #4
     2d4:	2c107d00 	ldccs	13, cr7, [r0], {-0}
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     2d8:	30080004 	andcc	r0, r8, r4
        __HAL_RCC_PLL_DISABLE();
     2dc:	02080004 	andeq	r0, r8, #4
     2e0:	30007d00 	andcc	r7, r0, r0, lsl #26
        tickstart = HAL_GetTick();
     2e4:	50080004 	andpl	r0, r8, r4
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     2e8:	02080004 	andeq	r0, r8, #4
     2ec:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
        __HAL_RCC_PLL_DISABLE();
     30c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
     310:	7f080002 	svcvc	0x00080002
        tickstart = HAL_GetTick();
     314:	01080003 	tsteq	r8, r3
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     318:	037f5000 	cmneq	pc, #0
     31c:	03a40800 			; <UNDEFINED> instruction: 0x03a40800
     320:	00010800 	andeq	r0, r1, r0, lsl #16
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     324:	0003a454 	andeq	sl, r3, r4, asr r4
     328:	0003b008 	andeq	fp, r3, r8
            return HAL_TIMEOUT;
     32c:	50000108 	andpl	r0, r0, r8, lsl #2
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     330:	080003b0 	stmdaeq	r0, {r4, r5, r7, r8, r9}
     334:	080003b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, r9}
     338:	b2540001 	subslt	r0, r4, #1
     33c:	be080003 	cdplt	0, 0, cr0, cr8, cr3, {0}
     340:	01080003 	tsteq	r8, r3
     344:	03be5000 			; <UNDEFINED> instruction: 0x03be5000
     348:	042c0800 	strteq	r0, [ip], #-2048	; 0xfffff800
     34c:	00010800 	andeq	r0, r1, r0, lsl #16
        __HAL_RCC_PLL_ENABLE();
     350:	00042c54 	andeq	r2, r4, r4, asr ip
     354:	00042e08 	andeq	r2, r4, r8, lsl #28
        tickstart = HAL_GetTick();
     358:	50000108 	andpl	r0, r0, r8, lsl #2
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     35c:	0800042e 	stmdaeq	r0, {r1, r2, r3, r5, sl}
     360:	08000430 	stmdaeq	r0, {r4, r5, sl}
     364:	01f30004 	mvnseq	r0, r4
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     368:	04309f50 	ldrteq	r9, [r0], #-3920	; 0xfffff0b0
     36c:	04320800 	ldrteq	r0, [r2], #-2048	; 0xfffff800
            return HAL_TIMEOUT;
     370:	00010800 	andeq	r0, r1, r0, lsl #16
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     374:	00043250 	andeq	r3, r4, r0, asr r2
        pll_config = RCC->PLLCFGR;
     378:	00043408 	andeq	r3, r4, r8, lsl #8
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     37c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
     380:	08000434 	stmdaeq	r0, {r2, r4, r5, sl}
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     384:	08000436 	stmdaeq	r0, {r1, r2, r4, r5, sl}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     388:	36500001 	ldrbcc	r0, [r0], -r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     38c:	50080004 	andpl	r0, r8, r4
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     390:	01080004 	tsteq	r8, r4
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     394:	00005400 	andeq	r5, r0, r0, lsl #8
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     3a4:	02f00000 	rscseq	r0, r0, #0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     3a8:	034e0800 	movteq	r0, #59392	; 0xe800
     3ac:	00010800 	andeq	r0, r1, r0, lsl #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
     3b0:	00034e51 	andeq	r4, r3, r1, asr lr
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     3b4:	00042c08 	andeq	r2, r4, r8, lsl #24
     3b8:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
     3bc:	0800042c 	stmdaeq	r0, {r2, r3, r5, sl}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
     3c0:	08000434 	stmdaeq	r0, {r2, r4, r5, sl}
     3c4:	34510001 	ldrbcc	r0, [r1], #-1
  return HAL_OK;
     3c8:	50080004 	andpl	r0, r8, r4
}
     3cc:	01080004 	tsteq	r8, r4
        return HAL_ERROR;
     3d0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
  return HAL_OK;
     3dc:	08000382 	stmdaeq	r0, {r1, r7, r8, r9}
     3e0:	080003a4 	stmdaeq	r0, {r2, r5, r7, r8, r9}
        return HAL_ERROR;
     3e4:	00560001 	subseq	r0, r6, r1
	...
          return HAL_ERROR;
     3f4:	02000000 	andeq	r0, r0, #0
     3f8:	00007d00 	andeq	r7, r0, r0, lsl #26
     3fc:	00000000 	andeq	r0, r0, r0
     400:	02000000 	andeq	r0, r0, #0
     404:	00107d00 	andseq	r7, r0, r0, lsl #26
     408:	00000000 	andeq	r0, r0, r0
     40c:	02000000 	andeq	r0, r0, #0
     410:	00187d00 	andseq	r7, r8, r0, lsl #26
     414:	00000000 	andeq	r0, r0, r0
     418:	02000000 	andeq	r0, r0, #0
     41c:	00007d00 	andeq	r7, r0, r0, lsl #26
     420:	00000000 	andeq	r0, r0, r0
     424:	02000000 	andeq	r0, r0, #0
     428:	00187d00 	andseq	r7, r8, r0, lsl #26
     42c:	00000000 	andeq	r0, r0, r0
     430:	02000000 	andeq	r0, r0, #0
     434:	00107d00 	andseq	r7, r0, r0, lsl #26
     438:	00000000 	andeq	r0, r0, r0
     43c:	02000000 	andeq	r0, r0, #0
     440:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
     470:	01000000 	mrseq	r0, (UNDEF: 0)
     474:	00005000 	andeq	r5, r0, r0
     478:	00000000 	andeq	r0, r0, r0
     47c:	00010000 	andeq	r0, r1, r0
     480:	00000054 	andeq	r0, r0, r4, asr r0
     484:	00000000 	andeq	r0, r0, r0
     488:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     494:	00540001 	subseq	r0, r4, r1
     498:	00000000 	andeq	r0, r0, r0
     49c:	01000000 	mrseq	r0, (UNDEF: 0)
     4a0:	00005000 	andeq	r5, r0, r0
     4a4:	00000000 	andeq	r0, r0, r0
     4a8:	00010000 	andeq	r0, r1, r0
     4ac:	00000054 	andeq	r0, r0, r4, asr r0
     4b0:	00000000 	andeq	r0, r0, r0
     4b4:	f3000400 	vshl.u8	d0, d0, d0
     4b8:	009f5001 	addseq	r5, pc, r1
     4bc:	00000000 	andeq	r0, r0, r0
     4c0:	01000000 	mrseq	r0, (UNDEF: 0)
     4c4:	00005400 	andeq	r5, r0, r0, lsl #8
     4c8:	00000000 	andeq	r0, r0, r0
     4cc:	00040000 	andeq	r0, r4, r0
     4d0:	9f5001f3 	svcls	0x005001f3
	...
     4dc:	00540001 	subseq	r0, r4, r1
     4e0:	00000000 	andeq	r0, r0, r0
     4e4:	01000000 	mrseq	r0, (UNDEF: 0)
     4e8:	00005000 	andeq	r5, r0, r0
     4ec:	00000000 	andeq	r0, r0, r0
     4f0:	00040000 	andeq	r0, r4, r0
     4f4:	9f5001f3 	svcls	0x005001f3
	...
     500:	00500001 	subseq	r0, r0, r1
     504:	00000000 	andeq	r0, r0, r0
     508:	01000000 	mrseq	r0, (UNDEF: 0)
     50c:	00005400 	andeq	r5, r0, r0, lsl #8
     510:	00000000 	andeq	r0, r0, r0
     514:	00040000 	andeq	r0, r4, r0
     518:	9f5001f3 	svcls	0x005001f3
	...
     524:	00540001 	subseq	r0, r4, r1
	...
     550:	01000000 	mrseq	r0, (UNDEF: 0)
     554:	00005500 	andeq	r5, r0, r0, lsl #10
     558:	00000000 	andeq	r0, r0, r0
     55c:	00010000 	andeq	r0, r1, r0
     560:	00000055 	andeq	r0, r0, r5, asr r0
     564:	00000000 	andeq	r0, r0, r0
     568:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
     574:	00550001 	subseq	r0, r5, r1
     578:	00000000 	andeq	r0, r0, r0
     57c:	01000000 	mrseq	r0, (UNDEF: 0)
     580:	00005500 	andeq	r5, r0, r0, lsl #10
     584:	00000000 	andeq	r0, r0, r0
     588:	00010000 	andeq	r0, r1, r0
     58c:	00000055 	andeq	r0, r0, r5, asr r0
     590:	00000000 	andeq	r0, r0, r0
     594:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
     5a0:	00560001 	subseq	r0, r6, r1
     5a4:	00000000 	andeq	r0, r0, r0
     5a8:	01000000 	mrseq	r0, (UNDEF: 0)
     5ac:	00005600 	andeq	r5, r0, r0, lsl #12
     5b0:	00000000 	andeq	r0, r0, r0
     5b4:	00010000 	andeq	r0, r1, r0
     5b8:	00000054 	andeq	r0, r0, r4, asr r0
     5bc:	00000000 	andeq	r0, r0, r0
     5c0:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
     5cc:	00550001 	subseq	r0, r5, r1
     5d0:	00000000 	andeq	r0, r0, r0
     5d4:	01000000 	mrseq	r0, (UNDEF: 0)
     5d8:	00005400 	andeq	r5, r0, r0, lsl #8
     5dc:	00000000 	andeq	r0, r0, r0
     5e0:	00010000 	andeq	r0, r1, r0
     5e4:	00000054 	andeq	r0, r0, r4, asr r0
	...
     5f8:	53000100 	movwpl	r0, #256	; 0x100
	...
     604:	00530001 	subseq	r0, r3, r1
     608:	00000000 	andeq	r0, r0, r0
     60c:	01000000 	mrseq	r0, (UNDEF: 0)
     610:	00000101 	andeq	r0, r0, r1, lsl #2
	...
     620:	02000000 	andeq	r0, r0, #0
     624:	009f3000 	addseq	r3, pc, r0
     628:	00000000 	andeq	r0, r0, r0
     62c:	02000000 	andeq	r0, r0, #0
     630:	009f3100 	addseq	r3, pc, r0, lsl #2
     634:	00000000 	andeq	r0, r0, r0
     638:	01000000 	mrseq	r0, (UNDEF: 0)
     63c:	00005500 	andeq	r5, r0, r0, lsl #10
     640:	00000000 	andeq	r0, r0, r0
     644:	00020000 	andeq	r0, r2, r0
     648:	00009f30 	andeq	r9, r0, r0, lsr pc
     64c:	00000000 	andeq	r0, r0, r0
     650:	00010000 	andeq	r0, r1, r0
     654:	00000055 	andeq	r0, r0, r5, asr r0
     658:	00000000 	andeq	r0, r0, r0
     65c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
     668:	08000450 	stmdaeq	r0, {r4, r6, sl}
     66c:	08000458 	stmdaeq	r0, {r3, r4, r6, sl}
     670:	007d0002 	rsbseq	r0, sp, r2
     674:	08000458 	stmdaeq	r0, {r3, r4, r6, sl}
     678:	0800045a 	stmdaeq	r0, {r1, r3, r4, r6, sl}
     67c:	107d0002 	rsbsne	r0, sp, r2
     680:	0800045a 	stmdaeq	r0, {r1, r3, r4, r6, sl}
     684:	08000820 	stmdaeq	r0, {r5, fp}
     688:	187d0002 	ldmdane	sp!, {r1}^
     68c:	08000820 	stmdaeq	r0, {r5, fp}
     690:	08000824 	stmdaeq	r0, {r2, r5, fp}
     694:	007d0002 	rsbseq	r0, sp, r2
     698:	08000824 	stmdaeq	r0, {r2, r5, fp}
     69c:	08000830 	stmdaeq	r0, {r4, r5, fp}
     6a0:	187d0002 	ldmdane	sp!, {r1}^
     6a4:	08000830 	stmdaeq	r0, {r4, r5, fp}
     6a8:	08000832 	stmdaeq	r0, {r1, r4, r5, fp}
     6ac:	107d0002 	rsbsne	r0, sp, r2
     6b0:	08000832 	stmdaeq	r0, {r1, r4, r5, fp}
     6b4:	08000860 	stmdaeq	r0, {r5, r6, fp}
     6b8:	187d0002 	ldmdane	sp!, {r1}^
	...
     6e4:	08000450 	stmdaeq	r0, {r4, r6, sl}
     6e8:	080004a5 	stmdaeq	r0, {r0, r2, r5, r7, sl}
     6ec:	a5500001 	ldrbge	r0, [r0, #-1]
     6f0:	c0080004 	andgt	r0, r8, r4
     6f4:	01080004 	tsteq	r8, r4
     6f8:	04c05400 	strbeq	r5, [r0], #1024	; 0x400
     6fc:	04dc0800 	ldrbeq	r0, [ip], #2048	; 0x800
     700:	00010800 	andeq	r0, r1, r0, lsl #16
     704:	0004dc50 	andeq	sp, r4, r0, asr ip
     708:	00052408 	andeq	r2, r5, r8, lsl #8
     70c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
     710:	08000524 	stmdaeq	r0, {r2, r5, r8, sl}
     714:	08000547 	stmdaeq	r0, {r0, r1, r2, r6, r8, sl}
     718:	47500001 	ldrbmi	r0, [r0, -r1]
     71c:	38080005 	stmdacc	r8, {r0, r2}
     720:	01080007 	tsteq	r8, r7
     724:	07385400 	ldreq	r5, [r8, -r0, lsl #8]!
     728:	07500800 	ldrbeq	r0, [r0, -r0, lsl #16]
     72c:	00040800 	andeq	r0, r4, r0, lsl #16
     730:	9f5001f3 	svcls	0x005001f3
     734:	08000750 	stmdaeq	r0, {r4, r6, r8, r9, sl}
     738:	080007b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, r9, sl}
     73c:	b2540001 	subslt	r0, r4, #1
     740:	ca080007 	bgt	200764 <_Min_Stack_Size+0x200364>
     744:	04080007 	streq	r0, [r8], #-7
     748:	5001f300 	andpl	pc, r1, r0, lsl #6
     74c:	0007ca9f 	muleq	r7, pc, sl	; <UNPREDICTABLE>
     750:	00082008 	andeq	r2, r8, r8
     754:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
     758:	08000820 	stmdaeq	r0, {r5, fp}
     75c:	08000822 	stmdaeq	r0, {r1, r5, fp}
     760:	22500001 	subscs	r0, r0, #1
     764:	24080008 	strcs	r0, [r8], #-8
     768:	04080008 	streq	r0, [r8], #-8
     76c:	5001f300 	andpl	pc, r1, r0, lsl #6
     770:	0008249f 	muleq	r8, pc, r4	; <UNPREDICTABLE>
     774:	00082608 	andeq	r2, r8, r8, lsl #12
     778:	50000108 	andpl	r0, r0, r8, lsl #2
     77c:	08000826 	stmdaeq	r0, {r1, r2, r5, fp}
     780:	0800082e 	stmdaeq	r0, {r1, r2, r3, r5, fp}
     784:	2e540001 	cdpcs	0, 5, cr0, cr4, cr1, {0}
     788:	3a080008 	bcc	2007b0 <_Min_Stack_Size+0x2003b0>
     78c:	04080008 	streq	r0, [r8], #-8
     790:	5001f300 	andpl	pc, r1, r0, lsl #6
     794:	00083a9f 	muleq	r8, pc, sl	; <UNPREDICTABLE>
     798:	00086008 	andeq	r6, r8, r8
     79c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
     7c4:	080004a8 	stmdaeq	r0, {r3, r5, r7, sl}
     7c8:	080004c0 	stmdaeq	r0, {r6, r7, sl}
     7cc:	0c550001 	mrrceq	0, 0, r0, r5, cr1
     7d0:	24080005 	strcs	r0, [r8], #-5
     7d4:	01080005 	tsteq	r8, r5
     7d8:	054a5500 	strbeq	r5, [sl, #-1280]	; 0xfffffb00
     7dc:	05620800 	strbeq	r0, [r2, #-2048]!	; 0xfffff800
     7e0:	00010800 	andeq	r0, r1, r0, lsl #16
     7e4:	0005a855 	andeq	sl, r5, r5, asr r8
     7e8:	0005c008 	andeq	ip, r5, r8
     7ec:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
     7f0:	080005cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl}
     7f4:	080005f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, sl}
     7f8:	04550001 	ldrbeq	r0, [r5], #-1
     7fc:	1c080006 	stcne	0, cr0, [r8], {6}
     800:	01080006 	tsteq	r8, r6
     804:	067a5500 	ldrbteq	r5, [sl], -r0, lsl #10
     808:	06960800 	ldreq	r0, [r6], r0, lsl #16
     80c:	00010800 	andeq	r0, r1, r0, lsl #16
     810:	0006aa56 	andeq	sl, r6, r6, asr sl
     814:	0006c208 	andeq	ip, r6, r8, lsl #4
     818:	56000108 	strpl	r0, [r0], -r8, lsl #2
     81c:	080006f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, sl}
     820:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
     824:	38560001 	ldmdacc	r6, {r0}^
     828:	50080007 	andpl	r0, r8, r7
     82c:	01080007 	tsteq	r8, r7
     830:	07505400 	ldrbeq	r5, [r0, -r0, lsl #8]
     834:	075c0800 	ldrbeq	r0, [ip, -r0, lsl #16]
     838:	00010800 	andeq	r0, r1, r0, lsl #16
     83c:	00076856 	andeq	r6, r7, r6, asr r8
     840:	0007b208 	andeq	fp, r7, r8, lsl #4
     844:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
     848:	080007b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, r9, sl}
     84c:	080007ca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, sl}
     850:	32540001 	subscc	r0, r4, #1
     854:	3a080008 	bcc	20087c <_Min_Stack_Size+0x20047c>
     858:	01080008 	tsteq	r8, r8
     85c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     868:	07d20000 	ldrbeq	r0, [r2, r0]
     86c:	08140800 	ldmdaeq	r4, {fp}
     870:	00010800 	andeq	r0, r1, r0, lsl #16
     874:	00083e53 	andeq	r3, r8, r3, asr lr
     878:	00085208 	andeq	r5, r8, r8, lsl #4
     87c:	53000108 	movwpl	r0, #264	; 0x108
	...
     888:	00010101 	andeq	r0, r1, r1, lsl #2
	...
     894:	08000624 	stmdaeq	r0, {r2, r5, r9, sl}
     898:	08000646 	stmdaeq	r0, {r1, r2, r6, r9, sl}
     89c:	9f300002 	svcls	0x00300002
     8a0:	08000646 	stmdaeq	r0, {r1, r2, r6, r9, sl}
     8a4:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
     8a8:	9f310002 	svcls	0x00310002
     8ac:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
     8b0:	08000696 	stmdaeq	r0, {r1, r2, r4, r7, r9, sl}
     8b4:	96550001 	ldrbls	r0, [r5], -r1
     8b8:	9a080006 	bls	2008d8 <_Min_Stack_Size+0x2004d8>
     8bc:	02080006 	andeq	r0, r8, #6
     8c0:	9a9f3000 	bls	fe7cc8c8 <_estack+0xde78c8c8>
     8c4:	14080006 	strne	r0, [r8], #-6
     8c8:	01080007 	tsteq	r8, r7
     8cc:	07505500 	ldrbeq	r5, [r0, -r0, lsl #10]
     8d0:	075c0800 	ldrbeq	r0, [ip, -r0, lsl #16]
     8d4:	00010800 	andeq	r0, r1, r0, lsl #16
     8d8:	00000055 	andeq	r0, r0, r5, asr r0
	...
     8e8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     8f4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     8f8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
     91c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     928:	00540001 	subseq	r0, r4, r1
     92c:	00000000 	andeq	r0, r0, r0
     930:	01000000 	mrseq	r0, (UNDEF: 0)
     934:	00005000 	andeq	r5, r0, r0
     938:	00000000 	andeq	r0, r0, r0
     93c:	00010000 	andeq	r0, r1, r0
     940:	00000054 	andeq	r0, r0, r4, asr r0
     944:	00000000 	andeq	r0, r0, r0
     948:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     954:	00540001 	subseq	r0, r4, r1
     958:	00000000 	andeq	r0, r0, r0
     95c:	01000000 	mrseq	r0, (UNDEF: 0)
     960:	00005000 	andeq	r5, r0, r0
     964:	00000000 	andeq	r0, r0, r0
     968:	00010000 	andeq	r0, r1, r0
     96c:	00000054 	andeq	r0, r0, r4, asr r0
     970:	00000000 	andeq	r0, r0, r0
     974:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     980:	00540001 	subseq	r0, r4, r1
	...
     990:	02000000 	andeq	r0, r0, #0
     994:	00007d00 	andeq	r7, r0, r0, lsl #26
     998:	00000000 	andeq	r0, r0, r0
     99c:	02000000 	andeq	r0, r0, #0
     9a0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     9b4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
     9c8:	007d0002 	rsbseq	r0, sp, r2
	...
     9d4:	107d0002 	rsbsne	r0, sp, r2
	...
     9ec:	00500001 	subseq	r0, r0, r1
     9f0:	00000000 	andeq	r0, r0, r0
     9f4:	01000000 	mrseq	r0, (UNDEF: 0)
     9f8:	00005500 	andeq	r5, r0, r0, lsl #10
	...
     a0c:	00540001 	subseq	r0, r4, r1
	...
     a70:	01000000 	mrseq	r0, (UNDEF: 0)
     a74:	00005000 	andeq	r5, r0, r0
     a78:	00000000 	andeq	r0, r0, r0
     a7c:	00040000 	andeq	r0, r4, r0
     a80:	9f5001f3 	svcls	0x005001f3
	...
     a8c:	00500001 	subseq	r0, r0, r1
     a90:	00000000 	andeq	r0, r0, r0
     a94:	04000000 	streq	r0, [r0], #-0
     a98:	5001f300 	andpl	pc, r1, r0, lsl #6
     a9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     aa0:	00000000 	andeq	r0, r0, r0
     aa4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     ab0:	01f30004 	mvnseq	r0, r4
     ab4:	00009f50 	andeq	r9, r0, r0, asr pc
     ab8:	00000000 	andeq	r0, r0, r0
     abc:	00010000 	andeq	r0, r1, r0
     ac0:	00000050 	andeq	r0, r0, r0, asr r0
     ac4:	00000000 	andeq	r0, r0, r0
     ac8:	f3000400 	vshl.u8	d0, d0, d0
     acc:	009f5001 	addseq	r5, pc, r1
     ad0:	00000000 	andeq	r0, r0, r0
     ad4:	01000000 	mrseq	r0, (UNDEF: 0)
     ad8:	00005000 	andeq	r5, r0, r0
     adc:	00000000 	andeq	r0, r0, r0
     ae0:	00040000 	andeq	r0, r4, r0
     ae4:	9f5001f3 	svcls	0x005001f3
	...
     af0:	00500001 	subseq	r0, r0, r1
     af4:	00000000 	andeq	r0, r0, r0
     af8:	04000000 	streq	r0, [r0], #-0
     afc:	5001f300 	andpl	pc, r1, r0, lsl #6
     b00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b04:	00000000 	andeq	r0, r0, r0
     b08:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     b14:	01f30004 	mvnseq	r0, r4
     b18:	00009f50 	andeq	r9, r0, r0, asr pc
     b1c:	00000000 	andeq	r0, r0, r0
     b20:	00010000 	andeq	r0, r1, r0
     b24:	00000050 	andeq	r0, r0, r0, asr r0
     b28:	00000000 	andeq	r0, r0, r0
     b2c:	f3000400 	vshl.u8	d0, d0, d0
     b30:	009f5001 	addseq	r5, pc, r1
     b34:	00000000 	andeq	r0, r0, r0
     b38:	01000000 	mrseq	r0, (UNDEF: 0)
     b3c:	00005000 	andeq	r5, r0, r0
     b40:	00000000 	andeq	r0, r0, r0
     b44:	00040000 	andeq	r0, r4, r0
     b48:	9f5001f3 	svcls	0x005001f3
	...
     b54:	00500001 	subseq	r0, r0, r1
     b58:	00000000 	andeq	r0, r0, r0
     b5c:	04000000 	streq	r0, [r0], #-0
     b60:	5001f300 	andpl	pc, r1, r0, lsl #6
     b64:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b68:	00000000 	andeq	r0, r0, r0
     b6c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     b78:	01f30004 	mvnseq	r0, r4
     b7c:	00009f50 	andeq	r9, r0, r0, asr pc
     b80:	00000000 	andeq	r0, r0, r0
     b84:	00010000 	andeq	r0, r1, r0
     b88:	00000050 	andeq	r0, r0, r0, asr r0
     b8c:	00000000 	andeq	r0, r0, r0
     b90:	f3000400 	vshl.u8	d0, d0, d0
     b94:	009f5001 	addseq	r5, pc, r1
     b98:	00000000 	andeq	r0, r0, r0
     b9c:	01000000 	mrseq	r0, (UNDEF: 0)
     ba0:	00005000 	andeq	r5, r0, r0
     ba4:	00000000 	andeq	r0, r0, r0
     ba8:	00040000 	andeq	r0, r4, r0
     bac:	9f5001f3 	svcls	0x005001f3
	...
     bb8:	00500001 	subseq	r0, r0, r1
     bbc:	00000000 	andeq	r0, r0, r0
     bc0:	04000000 	streq	r0, [r0], #-0
     bc4:	5001f300 	andpl	pc, r1, r0, lsl #6
     bc8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     bcc:	00000000 	andeq	r0, r0, r0
     bd0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     bdc:	01f30004 	mvnseq	r0, r4
     be0:	00009f50 	andeq	r9, r0, r0, asr pc
     be4:	00000000 	andeq	r0, r0, r0
     be8:	00010000 	andeq	r0, r1, r0
     bec:	00000050 	andeq	r0, r0, r0, asr r0
     bf0:	00000000 	andeq	r0, r0, r0
     bf4:	f3000400 	vshl.u8	d0, d0, d0
     bf8:	009f5001 	addseq	r5, pc, r1
     bfc:	00000000 	andeq	r0, r0, r0
     c00:	01000000 	mrseq	r0, (UNDEF: 0)
     c04:	00005000 	andeq	r5, r0, r0
     c08:	00000000 	andeq	r0, r0, r0
     c0c:	00040000 	andeq	r0, r4, r0
     c10:	9f5001f3 	svcls	0x005001f3
	...
     c1c:	00500001 	subseq	r0, r0, r1
     c20:	00000000 	andeq	r0, r0, r0
     c24:	04000000 	streq	r0, [r0], #-0
     c28:	5001f300 	andpl	pc, r1, r0, lsl #6
     c2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     c30:	00000000 	andeq	r0, r0, r0
     c34:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     c40:	01f30004 	mvnseq	r0, r4
     c44:	00009f50 	andeq	r9, r0, r0, asr pc
     c48:	00000000 	andeq	r0, r0, r0
     c4c:	00010000 	andeq	r0, r1, r0
     c50:	00000050 	andeq	r0, r0, r0, asr r0
     c54:	00000000 	andeq	r0, r0, r0
     c58:	f3000400 	vshl.u8	d0, d0, d0
     c5c:	009f5001 	addseq	r5, pc, r1
     c60:	00000000 	andeq	r0, r0, r0
     c64:	01000000 	mrseq	r0, (UNDEF: 0)
     c68:	00005000 	andeq	r5, r0, r0
     c6c:	00000000 	andeq	r0, r0, r0
     c70:	00040000 	andeq	r0, r4, r0
     c74:	9f5001f3 	svcls	0x005001f3
	...
     c80:	00000002 	andeq	r0, r0, r2
	...
     c9c:	9f300002 	svcls	0x00300002
	...
     ca8:	00500001 	subseq	r0, r0, r1
     cac:	00000000 	andeq	r0, r0, r0
     cb0:	02000000 	andeq	r0, r0, #0
     cb4:	009f3000 	addseq	r3, pc, r0
     cb8:	00000000 	andeq	r0, r0, r0
     cbc:	01000000 	mrseq	r0, (UNDEF: 0)
     cc0:	00005000 	andeq	r5, r0, r0
     cc4:	00000000 	andeq	r0, r0, r0
     cc8:	00020000 	andeq	r0, r2, r0
     ccc:	00009f30 	andeq	r9, r0, r0, lsr pc
     cd0:	00000000 	andeq	r0, r0, r0
     cd4:	00010000 	andeq	r0, r1, r0
     cd8:	00000050 	andeq	r0, r0, r0, asr r0
     cdc:	00000000 	andeq	r0, r0, r0
     ce0:	30000200 	andcc	r0, r0, r0, lsl #4
     ce4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     ce8:	00000000 	andeq	r0, r0, r0
     cec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     cf8:	9f300002 	svcls	0x00300002
	...
     d04:	000c0006 	andeq	r0, ip, r6
     d08:	9f00f424 	svcls	0x0000f424
	...
     d14:	00000003 	andeq	r0, r0, r3
	...
     d44:	00020000 	andeq	r0, r2, r0
     d48:	00009f30 	andeq	r9, r0, r0, lsr pc
     d4c:	00000000 	andeq	r0, r0, r0
     d50:	00010000 	andeq	r0, r1, r0
     d54:	00000053 	andeq	r0, r0, r3, asr r0
     d58:	00000000 	andeq	r0, r0, r0
     d5c:	30000200 	andcc	r0, r0, r0, lsl #4
     d60:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     d64:	00000000 	andeq	r0, r0, r0
     d68:	53000100 	movwpl	r0, #256	; 0x100
	...
     d74:	9f300002 	svcls	0x00300002
	...
     d80:	00530001 	subseq	r0, r3, r1
     d84:	00000000 	andeq	r0, r0, r0
     d88:	02000000 	andeq	r0, r0, #0
     d8c:	009f3000 	addseq	r3, pc, r0
     d90:	00000000 	andeq	r0, r0, r0
     d94:	01000000 	mrseq	r0, (UNDEF: 0)
     d98:	00005300 	andeq	r5, r0, r0, lsl #6
     d9c:	00000000 	andeq	r0, r0, r0
     da0:	00020000 	andeq	r0, r2, r0
     da4:	00009f30 	andeq	r9, r0, r0, lsr pc
     da8:	00000000 	andeq	r0, r0, r0
     dac:	00010000 	andeq	r0, r1, r0
     db0:	00000053 	andeq	r0, r0, r3, asr r0
     db4:	00000000 	andeq	r0, r0, r0
     db8:	30000200 	andcc	r0, r0, r0, lsl #4
     dbc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     dc0:	00000000 	andeq	r0, r0, r0
     dc4:	53000100 	movwpl	r0, #256	; 0x100
	...
     dd0:	9f300002 	svcls	0x00300002
	...
     ddc:	00530001 	subseq	r0, r3, r1
     de0:	00000000 	andeq	r0, r0, r0
     de4:	02000000 	andeq	r0, r0, #0
     de8:	009f3000 	addseq	r3, pc, r0
     dec:	00000000 	andeq	r0, r0, r0
     df0:	01000000 	mrseq	r0, (UNDEF: 0)
     df4:	00005300 	andeq	r5, r0, r0, lsl #6
     df8:	00000000 	andeq	r0, r0, r0
     dfc:	00020000 	andeq	r0, r2, r0
     e00:	00009f30 	andeq	r9, r0, r0, lsr pc
     e04:	00000000 	andeq	r0, r0, r0
     e08:	00010000 	andeq	r0, r1, r0
     e0c:	00000053 	andeq	r0, r0, r3, asr r0
     e10:	00000000 	andeq	r0, r0, r0
     e14:	30000200 	andcc	r0, r0, r0, lsl #4
     e18:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     e1c:	00000000 	andeq	r0, r0, r0
     e20:	53000100 	movwpl	r0, #256	; 0x100
	...
     e2c:	9f300002 	svcls	0x00300002
	...
     e38:	00000004 	andeq	r0, r0, r4
	...
     e54:	9f300002 	svcls	0x00300002
	...
     e60:	00530001 	subseq	r0, r3, r1
     e64:	00000000 	andeq	r0, r0, r0
     e68:	01000000 	mrseq	r0, (UNDEF: 0)
     e6c:	00005300 	andeq	r5, r0, r0, lsl #6
     e70:	00000000 	andeq	r0, r0, r0
     e74:	00010000 	andeq	r0, r1, r0
     e78:	00000053 	andeq	r0, r0, r3, asr r0
     e7c:	00000000 	andeq	r0, r0, r0
     e80:	30000200 	andcc	r0, r0, r0, lsl #4
     e84:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     e88:	00000000 	andeq	r0, r0, r0
     e8c:	53000100 	movwpl	r0, #256	; 0x100
	...
     e98:	00530001 	subseq	r0, r3, r1
     e9c:	00000000 	andeq	r0, r0, r0
     ea0:	01000000 	mrseq	r0, (UNDEF: 0)
     ea4:	00005300 	andeq	r5, r0, r0, lsl #6
     ea8:	00000000 	andeq	r0, r0, r0
     eac:	00010000 	andeq	r0, r1, r0
     eb0:	00000053 	andeq	r0, r0, r3, asr r0
     eb4:	00000000 	andeq	r0, r0, r0
     eb8:	53000100 	movwpl	r0, #256	; 0x100
	...
     ec4:	00000005 	andeq	r0, r0, r5
	...
     edc:	00020000 	andeq	r0, r2, r0
     ee0:	00009f30 	andeq	r9, r0, r0, lsr pc
     ee4:	00000000 	andeq	r0, r0, r0
     ee8:	00010000 	andeq	r0, r1, r0
     eec:	00000050 	andeq	r0, r0, r0, asr r0
     ef0:	00000000 	andeq	r0, r0, r0
     ef4:	30000200 	andcc	r0, r0, r0, lsl #4
     ef8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     efc:	00000000 	andeq	r0, r0, r0
     f00:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     f0c:	9f300002 	svcls	0x00300002
	...
     f18:	00500001 	subseq	r0, r0, r1
     f1c:	00000000 	andeq	r0, r0, r0
     f20:	02000000 	andeq	r0, r0, #0
     f24:	009f3000 	addseq	r3, pc, r0
     f28:	00000000 	andeq	r0, r0, r0
     f2c:	01000000 	mrseq	r0, (UNDEF: 0)
     f30:	00005000 	andeq	r5, r0, r0
     f34:	00000000 	andeq	r0, r0, r0
     f38:	00020000 	andeq	r0, r2, r0
     f3c:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
     f50:	00510001 	subseq	r0, r1, r1
	...
     f60:	02000000 	andeq	r0, r0, #0
     f64:	00007d00 	andeq	r7, r0, r0, lsl #26
     f68:	00000000 	andeq	r0, r0, r0
     f6c:	02000000 	andeq	r0, r0, #0
     f70:	00107d00 	andseq	r7, r0, r0, lsl #26
     f74:	00000000 	andeq	r0, r0, r0
     f78:	02000000 	andeq	r0, r0, #0
     f7c:	00187d00 	andseq	r7, r8, r0, lsl #26
     f80:	00000000 	andeq	r0, r0, r0
     f84:	02000000 	andeq	r0, r0, #0
     f88:	00107d00 	andseq	r7, r0, r0, lsl #26
     f8c:	00000000 	andeq	r0, r0, r0
     f90:	02000000 	andeq	r0, r0, #0
     f94:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
     fac:	01000000 	mrseq	r0, (UNDEF: 0)
     fb0:	00005000 	andeq	r5, r0, r0
     fb4:	00000000 	andeq	r0, r0, r0
     fb8:	00010000 	andeq	r0, r1, r0
     fbc:	00000054 	andeq	r0, r0, r4, asr r0
     fc0:	00000000 	andeq	r0, r0, r0
     fc4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     fd0:	00540001 	subseq	r0, r4, r1
     fd4:	00000000 	andeq	r0, r0, r0
     fd8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     fe8:	02000000 	andeq	r0, r0, #0
     fec:	009f3000 	addseq	r3, pc, r0
     ff0:	00000000 	andeq	r0, r0, r0
     ff4:	02000000 	andeq	r0, r0, #0
     ff8:	009f3000 	addseq	r3, pc, r0
     ffc:	00000000 	andeq	r0, r0, r0
    1000:	01000000 	mrseq	r0, (UNDEF: 0)
    1004:	00005600 	andeq	r5, r0, r0, lsl #12
    1008:	00000000 	andeq	r0, r0, r0
    100c:	00010000 	andeq	r0, r1, r0
    1010:	00000055 	andeq	r0, r0, r5, asr r0
    1014:	00000000 	andeq	r0, r0, r0
    1018:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    102c:	30000200 	andcc	r0, r0, r0, lsl #4
    1030:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1034:	00000000 	andeq	r0, r0, r0
    1038:	30000200 	andcc	r0, r0, r0, lsl #4
    103c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1040:	00000000 	andeq	r0, r0, r0
    1044:	73000700 	movwvc	r0, #1792	; 0x700
    1048:	03000a00 	movweq	r0, #2560	; 0xa00
    104c:	00009f1a 	andeq	r9, r0, sl, lsl pc
    1050:	00000000 	andeq	r0, r0, r0
    1054:	00010000 	andeq	r0, r1, r0
    1058:	00000053 	andeq	r0, r0, r3, asr r0
    105c:	00000000 	andeq	r0, r0, r0
    1060:	52000100 	andpl	r0, r0, #0, 2
	...
    106c:	00520001 	subseq	r0, r2, r1
    1070:	00000000 	andeq	r0, r0, r0
    1074:	03000000 	movweq	r0, #0
	...
    1088:	30000200 	andcc	r0, r0, r0, lsl #4
    108c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1090:	00000000 	andeq	r0, r0, r0
    1094:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    10a0:	9f300002 	svcls	0x00300002
	...
    10ac:	00550001 	subseq	r0, r5, r1
    10b0:	00000000 	andeq	r0, r0, r0
    10b4:	01000000 	mrseq	r0, (UNDEF: 0)
    10b8:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    10c8:	00020000 	andeq	r0, r2, r0
    10cc:	0000007d 	andeq	r0, r0, sp, ror r0
    10d0:	00000000 	andeq	r0, r0, r0
    10d4:	00020000 	andeq	r0, r2, r0
    10d8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    10ec:	00010000 	andeq	r0, r1, r0
    10f0:	00000050 	andeq	r0, r0, r0, asr r0
    10f4:	00000000 	andeq	r0, r0, r0
    10f8:	f3000400 	vshl.u8	d0, d0, d0
    10fc:	009f5001 	addseq	r5, pc, r1
    1100:	00000000 	andeq	r0, r0, r0
    1104:	03000000 	movweq	r0, #0
	...
    1110:	01000000 	mrseq	r0, (UNDEF: 0)
    1114:	00005000 	andeq	r5, r0, r0
    1118:	00000000 	andeq	r0, r0, r0
    111c:	00040000 	andeq	r0, r4, r0
    1120:	9f5001f3 	svcls	0x005001f3
	...
    1138:	00500001 	subseq	r0, r0, r1
    113c:	00000000 	andeq	r0, r0, r0
    1140:	04000000 	streq	r0, [r0], #-0
    1144:	5001f300 	andpl	pc, r1, r0, lsl #6
    1148:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    114c:	00000000 	andeq	r0, r0, r0
    1150:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    115c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1168:	01f30004 	mvnseq	r0, r4
    116c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1180:	00010000 	andeq	r0, r1, r0
    1184:	00000050 	andeq	r0, r0, r0, asr r0
    1188:	00000000 	andeq	r0, r0, r0
    118c:	f3000400 	vshl.u8	d0, d0, d0
    1190:	009f5001 	addseq	r5, pc, r1
    1194:	00000000 	andeq	r0, r0, r0
    1198:	03000000 	movweq	r0, #0
	...
    11a4:	01000000 	mrseq	r0, (UNDEF: 0)
    11a8:	00005000 	andeq	r5, r0, r0
    11ac:	00000000 	andeq	r0, r0, r0
    11b0:	00040000 	andeq	r0, r4, r0
    11b4:	9f5001f3 	svcls	0x005001f3
	...
    11cc:	00500001 	subseq	r0, r0, r1
    11d0:	00000000 	andeq	r0, r0, r0
    11d4:	04000000 	streq	r0, [r0], #-0
    11d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    11dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    11e0:	00000000 	andeq	r0, r0, r0
    11e4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    11f0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    11fc:	01f30004 	mvnseq	r0, r4
    1200:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1210:	00020000 	andeq	r0, r2, r0
    1214:	0000007d 	andeq	r0, r0, sp, ror r0
    1218:	00000000 	andeq	r0, r0, r0
    121c:	00020000 	andeq	r0, r2, r0
    1220:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    1234:	00010000 	andeq	r0, r1, r0
    1238:	00000050 	andeq	r0, r0, r0, asr r0
    123c:	00000000 	andeq	r0, r0, r0
    1240:	f3000400 	vshl.u8	d0, d0, d0
    1244:	009f5001 	addseq	r5, pc, r1
	...
    125c:	01000000 	mrseq	r0, (UNDEF: 0)
    1260:	00005100 	andeq	r5, r0, r0, lsl #2
    1264:	00000000 	andeq	r0, r0, r0
    1268:	00040000 	andeq	r0, r4, r0
    126c:	9f5101f3 	svcls	0x005101f3
	...
    1278:	00510001 	subseq	r0, r1, r1
    127c:	00000000 	andeq	r0, r0, r0
    1280:	04000000 	streq	r0, [r0], #-0
    1284:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1288:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    128c:	00000000 	andeq	r0, r0, r0
    1290:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    129c:	01000000 	mrseq	r0, (UNDEF: 0)
    12a0:	00005000 	andeq	r5, r0, r0
    12a4:	00000000 	andeq	r0, r0, r0
    12a8:	00040000 	andeq	r0, r4, r0
    12ac:	9f5001f3 	svcls	0x005001f3
	...
    12b8:	01f30004 	mvnseq	r0, r4
    12bc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    12d0:	00010000 	andeq	r0, r1, r0
    12d4:	00000053 	andeq	r0, r0, r3, asr r0
    12d8:	00000000 	andeq	r0, r0, r0
    12dc:	53000100 	movwpl	r0, #256	; 0x100
	...
    12f4:	00520001 	subseq	r0, r2, r1
    12f8:	00000000 	andeq	r0, r0, r0
    12fc:	01000000 	mrseq	r0, (UNDEF: 0)
    1300:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    1318:	00510001 	subseq	r0, r1, r1
    131c:	00000000 	andeq	r0, r0, r0
    1320:	04000000 	streq	r0, [r0], #-0
    1324:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1328:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    132c:	00000000 	andeq	r0, r0, r0
    1330:	f3000400 	vshl.u8	d0, d0, d0
    1334:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    1348:	01000000 	mrseq	r0, (UNDEF: 0)
    134c:	00005000 	andeq	r5, r0, r0
    1350:	00000000 	andeq	r0, r0, r0
    1354:	00010000 	andeq	r0, r1, r0
    1358:	00000050 	andeq	r0, r0, r0, asr r0
	...
    1370:	01000000 	mrseq	r0, (UNDEF: 0)
    1374:	00005100 	andeq	r5, r0, r0, lsl #2
    1378:	00000000 	andeq	r0, r0, r0
    137c:	00030000 	andeq	r0, r3, r0
    1380:	009f7c74 	addseq	r7, pc, r4, ror ip	; <UNPREDICTABLE>
    1384:	00000000 	andeq	r0, r0, r0
    1388:	06000000 	streq	r0, [r0], -r0
    138c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1390:	009f1a37 	addseq	r1, pc, r7, lsr sl	; <UNPREDICTABLE>
    1394:	00000000 	andeq	r0, r0, r0
    1398:	01000000 	mrseq	r0, (UNDEF: 0)
    139c:	00005100 	andeq	r5, r0, r0, lsl #2
    13a0:	00000000 	andeq	r0, r0, r0
    13a4:	00030000 	andeq	r0, r3, r0
    13a8:	009f7c74 	addseq	r7, pc, r4, ror ip	; <UNPREDICTABLE>
	...
    13c0:	5c000100 	stfpls	f0, [r0], {-0}
	...
    13cc:	f334001d 	vqadd.u64	d0, d4, d13
    13d0:	37205101 	strcc	r5, [r0, -r1, lsl #2]!
    13d4:	5101f31a 	tstpl	r1, sl, lsl r3	; <UNPREDICTABLE>
    13d8:	401a3720 	andsmi	r3, sl, r0, lsr #14
    13dc:	0c22244b 	cfstrseq	mvf2, [r2], #-300	; 0xfffffed4
    13e0:	80000004 	andhi	r0, r0, r4
    13e4:	0001282a 	andeq	r2, r1, sl, lsr #16
    13e8:	009f1316 	addseq	r1, pc, r6, lsl r3	; <UNPREDICTABLE>
    13ec:	00000000 	andeq	r0, r0, r0
    13f0:	01000000 	mrseq	r0, (UNDEF: 0)
    13f4:	00005c00 	andeq	r5, r0, r0, lsl #24
	...
    1408:	00510001 	subseq	r0, r1, r1
	...
    141c:	01000000 	mrseq	r0, (UNDEF: 0)
    1420:	00005000 	andeq	r5, r0, r0
    1424:	00000000 	andeq	r0, r0, r0
    1428:	00040000 	andeq	r0, r4, r0
    142c:	9f5001f3 	svcls	0x005001f3
	...
    143c:	08d00000 	ldmeq	r0, {}^	; <UNPREDICTABLE>
    1440:	08d20800 	ldmeq	r2, {fp}^
    1444:	00010800 	andeq	r0, r1, r0, lsl #16
    1448:	0008d250 	andeq	sp, r8, r0, asr r2
    144c:	0008e808 	andeq	lr, r8, r8, lsl #16
    1450:	70000308 	andvc	r0, r0, r8, lsl #6
    1454:	08e89f01 	stmiaeq	r8!, {r0, r8, r9, sl, fp, ip, pc}^
    1458:	08f80800 	ldmeq	r8!, {fp}^
    145c:	00040800 	andeq	r0, r4, r0, lsl #16
    1460:	9f5001f3 	svcls	0x005001f3
	...
    146c:	00000002 	andeq	r0, r0, r2
    1470:	08d00000 	ldmeq	r0, {}^	; <UNPREDICTABLE>
    1474:	08d20800 	ldmeq	r2, {fp}^
    1478:	00010800 	andeq	r0, r1, r0, lsl #16
    147c:	0008d250 	andeq	sp, r8, r0, asr r2
    1480:	0008e808 	andeq	lr, r8, r8, lsl #16
    1484:	70000308 	andvc	r0, r0, r8, lsl #6
    1488:	08e89f01 	stmiaeq	r8!, {r0, r8, r9, sl, fp, ip, pc}^
    148c:	08f20800 	ldmeq	r2!, {fp}^
    1490:	00040800 	andeq	r0, r4, r0, lsl #16
    1494:	9f5001f3 	svcls	0x005001f3
	...
    14a0:	08de0001 	ldmeq	lr, {r0}^
    14a4:	08e60800 	stmiaeq	r6!, {fp}^
    14a8:	00020800 	andeq	r0, r2, r0, lsl #16
    14ac:	00009f3f 	andeq	r9, r0, pc, lsr pc
    14b0:	00000000 	andeq	r0, r0, r0
    14b4:	00010000 	andeq	r0, r1, r0
    14b8:	080008de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, fp}
    14bc:	080008e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, fp}
    14c0:	ff090003 			; <UNDEFINED> instruction: 0xff090003
    14c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    14d8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    14e4:	01f30004 	mvnseq	r0, r4
    14e8:	00009f50 	andeq	r9, r0, r0, asr pc
    14ec:	00000000 	andeq	r0, r0, r0
    14f0:	00030000 	andeq	r0, r3, r0
	...
    14fc:	00010000 	andeq	r0, r1, r0
    1500:	00000050 	andeq	r0, r0, r0, asr r0
    1504:	00000000 	andeq	r0, r0, r0
    1508:	f3000400 	vshl.u8	d0, d0, d0
    150c:	009f5001 	addseq	r5, pc, r1
	...
    1520:	01000000 	mrseq	r0, (UNDEF: 0)
    1524:	00005000 	andeq	r5, r0, r0
    1528:	00000000 	andeq	r0, r0, r0
    152c:	00040000 	andeq	r0, r4, r0
    1530:	9f5001f3 	svcls	0x005001f3
	...
    153c:	00000003 	andeq	r0, r0, r3
	...
    1548:	00500001 	subseq	r0, r0, r1
    154c:	00000000 	andeq	r0, r0, r0
    1550:	04000000 	streq	r0, [r0], #-0
    1554:	5001f300 	andpl	pc, r1, r0, lsl #6
    1558:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    155c:	00000000 	andeq	r0, r0, r0
    1560:	00086000 	andeq	r6, r8, r0
    1564:	00086208 	andeq	r6, r8, r8, lsl #4
    1568:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    156c:	00086200 	andeq	r6, r8, r0, lsl #4
    1570:	0008d008 	andeq	sp, r8, r8
    1574:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    1578:	00000004 	andeq	r0, r0, r4
	...
    1588:	00086000 	andeq	r6, r8, r0
    158c:	0008a808 	andeq	sl, r8, r8, lsl #16
    1590:	50000108 	andpl	r0, r0, r8, lsl #2
    1594:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
    1598:	080008b4 	stmdaeq	r0, {r2, r4, r5, r7, fp}
    159c:	01f30004 	mvnseq	r0, r4
    15a0:	08b49f50 	ldmeq	r4!, {r4, r6, r8, r9, sl, fp, ip, pc}
    15a4:	08bc0800 	ldmeq	ip!, {fp}
    15a8:	00010800 	andeq	r0, r1, r0, lsl #16
    15ac:	0008bc50 	andeq	fp, r8, r0, asr ip
    15b0:	0008d008 	andeq	sp, r8, r8
    15b4:	f3000408 	vshl.u8	d0, d8, d0
    15b8:	009f5001 	addseq	r5, pc, r1
	...
    15c8:	60000000 	andvs	r0, r0, r0
    15cc:	90080008 	andls	r0, r8, r8
    15d0:	01080008 	tsteq	r8, r8
    15d4:	08905100 	ldmeq	r0, {r8, ip, lr}
    15d8:	08b40800 	ldmeq	r4!, {fp}
    15dc:	00040800 	andeq	r0, r4, r0, lsl #16
    15e0:	9f5101f3 	svcls	0x005101f3
    15e4:	080008b4 	stmdaeq	r0, {r2, r4, r5, r7, fp}
    15e8:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
    15ec:	b8510001 	ldmdalt	r1, {r0}^
    15f0:	d0080008 	andle	r0, r8, r8
    15f4:	04080008 	streq	r0, [r8], #-8
    15f8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    15fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1600:	00000000 	andeq	r0, r0, r0
    1604:	00000100 	andeq	r0, r0, r0, lsl #2
    1608:	00000000 	andeq	r0, r0, r0
    160c:	62000000 	andvs	r0, r0, #0
    1610:	6a080008 	bvs	201638 <_Min_Stack_Size+0x201238>
    1614:	02080008 	andeq	r0, r8, #8
    1618:	6a9f3000 	bvs	fe7cd620 <_estack+0xde78d620>
    161c:	84080008 	strhi	r0, [r8], #-8
    1620:	01080008 	tsteq	r8, r8
    1624:	08845300 	stmeq	r4, {r8, r9, ip, lr}
    1628:	08880800 	stmeq	r8, {fp}
    162c:	00030800 	andeq	r0, r3, r0, lsl #16
    1630:	b49f7c7e 	ldrlt	r7, [pc], #3198	; 1638 <_Min_Stack_Size+0x1238>
    1634:	b6080008 	strlt	r0, [r8], -r8
    1638:	01080008 	tsteq	r8, r8
    163c:	08b65300 	ldmeq	r6!, {r8, r9, ip, lr}
    1640:	08b80800 	ldmeq	r8!, {fp}
    1644:	00030800 	andeq	r0, r3, r0, lsl #16
    1648:	009f7c7e 	addseq	r7, pc, lr, ror ip	; <UNPREDICTABLE>
    164c:	00000000 	andeq	r0, r0, r0
    1650:	02000000 	andeq	r0, r0, #0
    1654:	6a000000 	bvs	165c <_Min_Stack_Size+0x125c>
    1658:	9c080008 	stcls	0, cr0, [r8], {8}
    165c:	01080008 	tsteq	r8, r8
    1660:	08b45200 	ldmeq	r4!, {r9, ip, lr}
    1664:	08b80800 	ldmeq	r8!, {fp}
    1668:	00010800 	andeq	r0, r1, r0, lsl #16
    166c:	00000052 	andeq	r0, r0, r2, asr r0
    1670:	00000000 	andeq	r0, r0, r0
    1674:	00000200 	andeq	r0, r0, r0, lsl #4
    1678:	6a000000 	bvs	1680 <_Min_Stack_Size+0x1280>
    167c:	90080008 	andls	r0, r8, r8
    1680:	01080008 	tsteq	r8, r8
    1684:	08905100 	ldmeq	r0, {r8, ip, lr}
    1688:	089c0800 	ldmeq	ip, {fp}
    168c:	00040800 	andeq	r0, r4, r0, lsl #16
    1690:	9f5101f3 	svcls	0x005101f3
    1694:	080008b4 	stmdaeq	r0, {r2, r4, r5, r7, fp}
    1698:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
    169c:	00510001 	subseq	r0, r1, r1
    16a0:	00000000 	andeq	r0, r0, r0
    16a4:	02000000 	andeq	r0, r0, #0
    16a8:	00000000 	andeq	r0, r0, r0
    16ac:	6a000000 	bvs	16b4 <_Min_Stack_Size+0x12b4>
    16b0:	84080008 	strhi	r0, [r8], #-8
    16b4:	01080008 	tsteq	r8, r8
    16b8:	08845300 	stmeq	r4, {r8, r9, ip, lr}
    16bc:	08880800 	stmeq	r8, {fp}
    16c0:	00030800 	andeq	r0, r3, r0, lsl #16
    16c4:	b49f7c7e 	ldrlt	r7, [pc], #3198	; 16cc <_Min_Stack_Size+0x12cc>
    16c8:	b6080008 	strlt	r0, [r8], -r8
    16cc:	01080008 	tsteq	r8, r8
    16d0:	08b65300 	ldmeq	r6!, {r8, r9, ip, lr}
    16d4:	08b80800 	ldmeq	r8!, {fp}
    16d8:	00030800 	andeq	r0, r3, r0, lsl #16
    16dc:	009f7c7e 	addseq	r7, pc, lr, ror ip	; <UNPREDICTABLE>
    16e0:	00000000 	andeq	r0, r0, r0
    16e4:	04000000 	streq	r0, [r0], #-0
    16e8:	00000000 	andeq	r0, r0, r0
    16ec:	6a000000 	bvs	16f4 <_Min_Stack_Size+0x12f4>
    16f0:	84080008 	strhi	r0, [r8], #-8
    16f4:	01080008 	tsteq	r8, r8
    16f8:	08845300 	stmeq	r4, {r8, r9, ip, lr}
    16fc:	08880800 	stmeq	r8, {fp}
    1700:	00030800 	andeq	r0, r3, r0, lsl #16
    1704:	b49f7c7e 	ldrlt	r7, [pc], #3198	; 170c <_Min_Stack_Size+0x130c>
    1708:	b6080008 	strlt	r0, [r8], -r8
    170c:	01080008 	tsteq	r8, r8
    1710:	08b65300 	ldmeq	r6!, {r8, r9, ip, lr}
    1714:	08b80800 	ldmeq	r8!, {fp}
    1718:	00030800 	andeq	r0, r3, r0, lsl #16
    171c:	009f7c7e 	addseq	r7, pc, lr, ror ip	; <UNPREDICTABLE>
	...
    1728:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    172c:	8c080008 	stchi	0, cr0, [r8], {8}
    1730:	01080008 	tsteq	r8, r8
    1734:	08b45c00 	ldmeq	r4!, {sl, fp, ip, lr}
    1738:	08b80800 	ldmeq	r8!, {fp}
    173c:	00010800 	andeq	r0, r1, r0, lsl #16
    1740:	0000005c 	andeq	r0, r0, ip, asr r0
    1744:	00000000 	andeq	r0, r0, r0
    1748:	84000000 	strhi	r0, [r0], #-0
    174c:	96080008 	strls	r0, [r8], -r8
    1750:	01080008 	tsteq	r8, r8
    1754:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1760:	089c0000 	ldmeq	ip, {}	; <UNPREDICTABLE>
    1764:	08a20800 	stmiaeq	r2!, {fp}
    1768:	00010800 	andeq	r0, r1, r0, lsl #16
    176c:	0008b851 	andeq	fp, r8, r1, asr r8
    1770:	0008be08 	andeq	fp, r8, r8, lsl #28
    1774:	51000108 	tstpl	r0, r8, lsl #2
	...
    1788:	0800089c 	stmdaeq	r0, {r2, r3, r4, r7, fp}
    178c:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
    1790:	a8500001 	ldmdage	r0, {r0}^
    1794:	b0080008 	andlt	r0, r8, r8
    1798:	04080008 	streq	r0, [r8], #-8
    179c:	5001f300 	andpl	pc, r1, r0, lsl #6
    17a0:	0008b89f 	muleq	r8, pc, r8	; <UNPREDICTABLE>
    17a4:	0008bc08 	andeq	fp, r8, r8, lsl #24
    17a8:	50000108 	andpl	r0, r0, r8, lsl #2
    17ac:	080008bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, fp}
    17b0:	080008c4 	stmdaeq	r0, {r2, r6, r7, fp}
    17b4:	01f30004 	mvnseq	r0, r4
    17b8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    17cc:	00010000 	andeq	r0, r1, r0
    17d0:	00000050 	andeq	r0, r0, r0, asr r0
    17d4:	00000000 	andeq	r0, r0, r0
    17d8:	f3000400 	vshl.u8	d0, d0, d0
    17dc:	009f5001 	addseq	r5, pc, r1
    17e0:	00000000 	andeq	r0, r0, r0
    17e4:	03000000 	movweq	r0, #0
	...
    17f0:	01000000 	mrseq	r0, (UNDEF: 0)
    17f4:	00005000 	andeq	r5, r0, r0
    17f8:	00000000 	andeq	r0, r0, r0
    17fc:	00040000 	andeq	r0, r4, r0
    1800:	9f5001f3 	svcls	0x005001f3
	...
    1818:	00010000 	andeq	r0, r1, r0
    181c:	00000053 	andeq	r0, r0, r3, asr r0
    1820:	00000000 	andeq	r0, r0, r0
    1824:	53000100 	movwpl	r0, #256	; 0x100
	...
    1830:	00530001 	subseq	r0, r3, r1
    1834:	00000000 	andeq	r0, r0, r0
    1838:	06000000 	streq	r0, [r0], -r0
	...
    1844:	05000000 	streq	r0, [r0, #-0]
    1848:	37007000 	strcc	r7, [r0, -r0]
    184c:	00009f1a 	andeq	r9, r0, sl, lsl pc
    1850:	00000000 	andeq	r0, r0, r0
    1854:	00060000 	andeq	r0, r6, r0
    1858:	375001f3 	smmlsrcc	r0, r3, r1, r0
    185c:	00009f1a 	andeq	r9, r0, sl, lsl pc
    1860:	00000000 	andeq	r0, r0, r0
    1864:	09680000 	stmdbeq	r8!, {}^	; <UNPREDICTABLE>
    1868:	096a0800 	stmdbeq	sl!, {fp}^
    186c:	00020800 	andeq	r0, r2, r0, lsl #16
    1870:	096a007d 	stmdbeq	sl!, {r0, r2, r3, r4, r5, r6}^
    1874:	09900800 	ldmibeq	r0, {fp}
    1878:	00020800 	andeq	r0, r2, r0, lsl #16
    187c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    188c:	08000968 	stmdaeq	r0, {r3, r5, r6, r8, fp}
    1890:	0800096f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r8, fp}
    1894:	6f500001 	svcvs	0x00500001
    1898:	7e080009 	cdpvc	0, 0, cr0, cr8, cr9, {0}
    189c:	01080009 	tsteq	r8, r9
    18a0:	097e5400 	ldmdbeq	lr!, {sl, ip, lr}^
    18a4:	09900800 	ldmibeq	r0, {fp}
    18a8:	00040800 	andeq	r0, r4, r0, lsl #16
    18ac:	9f5001f3 	svcls	0x005001f3
	...
    18bc:	08000972 	stmdaeq	r0, {r1, r4, r5, r6, r8, fp}
    18c0:	0800097e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, fp}
    18c4:	7e500001 	cdpvc	0, 5, cr0, cr0, cr1, {0}
    18c8:	8a080009 	bhi	2018f4 <_Min_Stack_Size+0x2014f4>
    18cc:	01080009 	tsteq	r8, r9
    18d0:	00005500 	andeq	r5, r0, r0, lsl #10
    18d4:	00000000 	andeq	r0, r0, r0
    18d8:	00010000 	andeq	r0, r1, r0
    18dc:	08000972 	stmdaeq	r0, {r1, r4, r5, r6, r8, fp}
    18e0:	0800098a 	stmdaeq	r0, {r1, r3, r7, r8, fp}
    18e4:	00540001 	subseq	r0, r4, r1
	...
    18f4:	02000000 	andeq	r0, r0, #0
    18f8:	00007d00 	andeq	r7, r0, r0, lsl #26
    18fc:	00000000 	andeq	r0, r0, r0
    1900:	02000000 	andeq	r0, r0, #0
    1904:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1920:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    192c:	01f30004 	mvnseq	r0, r4
    1930:	00009f50 	andeq	r9, r0, r0, asr pc
    1934:	00000000 	andeq	r0, r0, r0
    1938:	00010000 	andeq	r0, r1, r0
    193c:	00000050 	andeq	r0, r0, r0, asr r0
    1940:	00000000 	andeq	r0, r0, r0
    1944:	03000500 	movweq	r0, #1280	; 0x500
    1948:	20000000 	andcs	r0, r0, r0
	...
    1954:	01f30004 	mvnseq	r0, r4
    1958:	00009f50 	andeq	r9, r0, r0, asr pc
    195c:	00000000 	andeq	r0, r0, r0
    1960:	00010000 	andeq	r0, r1, r0
	...
    1970:	00020000 	andeq	r0, r2, r0
    1974:	00009f30 	andeq	r9, r0, r0, lsr pc
    1978:	00000000 	andeq	r0, r0, r0
    197c:	00010000 	andeq	r0, r1, r0
    1980:	00000050 	andeq	r0, r0, r0, asr r0
    1984:	00000000 	andeq	r0, r0, r0
    1988:	30000200 	andcc	r0, r0, r0, lsl #4
    198c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1990:	00000000 	andeq	r0, r0, r0
    1994:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    19a0:	00000001 	andeq	r0, r0, r1
    19a4:	00000000 	andeq	r0, r0, r0
    19a8:	00010000 	andeq	r0, r1, r0
    19ac:	00000054 	andeq	r0, r0, r4, asr r0
    19b0:	00000000 	andeq	r0, r0, r0
    19b4:	0008f800 	andeq	pc, r8, r0, lsl #16
    19b8:	0008fa08 	andeq	pc, r8, r8, lsl #20
    19bc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    19c0:	0008fa00 	andeq	pc, r8, r0, lsl #20
    19c4:	00094408 	andeq	r4, r9, r8, lsl #8
    19c8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    19cc:	00000008 	andeq	r0, r0, r8
	...
    19d8:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    19dc:	00080008 	andeq	r0, r8, r8
    19e0:	01080009 	tsteq	r8, r9
    19e4:	09005000 	stmdbeq	r0, {ip, lr}
    19e8:	09360800 	ldmdbeq	r6!, {fp}
    19ec:	00010800 	andeq	r0, r1, r0, lsl #16
    19f0:	00093654 	andeq	r3, r9, r4, asr r6
    19f4:	00094408 	andeq	r4, r9, r8, lsl #8
    19f8:	f3000408 	vshl.u8	d0, d8, d0
    19fc:	009f5001 	addseq	r5, pc, r1
	...
    1a0c:	02000000 	andeq	r0, r0, #0
    1a10:	00007d00 	andeq	r7, r0, r0, lsl #26
    1a14:	00000000 	andeq	r0, r0, r0
    1a18:	02000000 	andeq	r0, r0, #0
    1a1c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1a2c:	02000000 	andeq	r0, r0, #0
    1a30:	00007d00 	andeq	r7, r0, r0, lsl #26
    1a34:	00000000 	andeq	r0, r0, r0
    1a38:	02000000 	andeq	r0, r0, #0
    1a3c:	00087d00 	andeq	r7, r8, r0, lsl #26
    1a40:	00000000 	andeq	r0, r0, r0
    1a44:	02000000 	andeq	r0, r0, #0
	...
    1a58:	02000000 	andeq	r0, r0, #0
    1a5c:	009f3000 	addseq	r3, pc, r0
    1a60:	00000000 	andeq	r0, r0, r0
    1a64:	01000000 	mrseq	r0, (UNDEF: 0)
    1a68:	00005300 	andeq	r5, r0, r0, lsl #6
    1a6c:	00000000 	andeq	r0, r0, r0
    1a70:	00010000 	andeq	r0, r1, r0
    1a74:	00000053 	andeq	r0, r0, r3, asr r0
    1a78:	00000000 	andeq	r0, r0, r0
    1a7c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1a88:	00530001 	subseq	r0, r3, r1
    1a8c:	00000000 	andeq	r0, r0, r0
    1a90:	01000000 	mrseq	r0, (UNDEF: 0)
    1a94:	00005300 	andeq	r5, r0, r0, lsl #6
    1a98:	00000000 	andeq	r0, r0, r0
    1a9c:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    1ab0:	9f300002 	svcls	0x00300002
	...
    1abc:	9f300002 	svcls	0x00300002
	...
    1ac8:	00530001 	subseq	r0, r3, r1
    1acc:	00000000 	andeq	r0, r0, r0
    1ad0:	02000000 	andeq	r0, r0, #0
    1ad4:	009f3000 	addseq	r3, pc, r0
    1ad8:	00000000 	andeq	r0, r0, r0
    1adc:	01000000 	mrseq	r0, (UNDEF: 0)
    1ae0:	00005300 	andeq	r5, r0, r0, lsl #6
    1ae4:	00000000 	andeq	r0, r0, r0
    1ae8:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    1af8:	00020000 	andeq	r0, r2, r0
    1afc:	00009f32 	andeq	r9, r0, r2, lsr pc
    1b00:	00000000 	andeq	r0, r0, r0
    1b04:	00020000 	andeq	r0, r2, r0
    1b08:	00009f32 	andeq	r9, r0, r2, lsr pc
    1b0c:	00000000 	andeq	r0, r0, r0
    1b10:	00010000 	andeq	r0, r1, r0
    1b14:	00000052 	andeq	r0, r0, r2, asr r0
    1b18:	00000000 	andeq	r0, r0, r0
    1b1c:	32000200 	andcc	r0, r0, #0, 4
    1b20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1b24:	00000000 	andeq	r0, r0, r0
    1b28:	00010200 	andeq	r0, r1, r0, lsl #4
	...
    1b34:	02000000 	andeq	r0, r0, #0
    1b38:	009f3000 	addseq	r3, pc, r0
    1b3c:	00000000 	andeq	r0, r0, r0
    1b40:	02000000 	andeq	r0, r0, #0
    1b44:	009f3000 	addseq	r3, pc, r0
    1b48:	00000000 	andeq	r0, r0, r0
    1b4c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1b50:	09007100 	stmdbeq	r0, {r8, ip, sp, lr}
    1b54:	253324ed 	ldrcs	r2, [r3, #-1261]!	; 0xfffffb13
    1b58:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1b5c:	00000000 	andeq	r0, r0, r0
    1b60:	00010200 	andeq	r0, r1, r0, lsl #4
	...
    1b70:	32000200 	andcc	r0, r0, #0, 4
    1b74:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1b78:	00000000 	andeq	r0, r0, r0
    1b7c:	32000200 	andcc	r0, r0, #0, 4
    1b80:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1b84:	00000000 	andeq	r0, r0, r0
    1b88:	52000100 	andpl	r0, r0, #0, 2
	...
    1b94:	00520001 	subseq	r0, r2, r1
    1b98:	00000000 	andeq	r0, r0, r0
    1b9c:	b4000000 	strlt	r0, [r0], #-0
    1ba0:	b608000b 	strlt	r0, [r8], -fp
    1ba4:	0208000b 	andeq	r0, r8, #11
    1ba8:	b6007d00 	strlt	r7, [r0], -r0, lsl #26
    1bac:	ba08000b 	blt	201be0 <_Min_Stack_Size+0x2017e0>
    1bb0:	0208000b 	andeq	r0, r8, #11
    1bb4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1bb8:	00000000 	andeq	r0, r0, r0
    1bbc:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    1bc0:	b008000b 	andlt	r0, r8, fp
    1bc4:	0208000b 	andeq	r0, r8, #11
    1bc8:	b0007d00 	andlt	r7, r0, r0, lsl #26
    1bcc:	b408000b 	strlt	r0, [r8], #-11
    1bd0:	0208000b 	andeq	r0, r8, #11
    1bd4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1bd8:	00000000 	andeq	r0, r0, r0
    1bdc:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    1be0:	aa08000b 	bge	201c14 <_Min_Stack_Size+0x201814>
    1be4:	0208000b 	andeq	r0, r8, #11
    1be8:	aa007d00 	bge	20ff0 <_Min_Stack_Size+0x20bf0>
    1bec:	ae08000b 	cdpge	0, 0, cr0, cr8, cr11, {0}
    1bf0:	0208000b 	andeq	r0, r8, #11
    1bf4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1bf8:	00000000 	andeq	r0, r0, r0
    1bfc:	a2000000 	andge	r0, r0, #0
    1c00:	a408000b 	strge	r0, [r8], #-11
    1c04:	0208000b 	andeq	r0, r8, #11
    1c08:	a4007d00 	strge	r7, [r0], #-3328	; 0xfffff300
    1c0c:	a808000b 	stmdage	r8, {r0, r1, r3}
    1c10:	0208000b 	andeq	r0, r8, #11
    1c14:	00087d00 	andeq	r7, r8, r0, lsl #26
    1c18:	00000000 	andeq	r0, r0, r0
    1c1c:	9c000000 	stcls	0, cr0, [r0], {-0}
    1c20:	9e08000b 	cdpls	0, 0, cr0, cr8, cr11, {0}
    1c24:	0208000b 	andeq	r0, r8, #11
    1c28:	9e007d00 	cdpls	13, 0, cr7, cr0, cr0, {0}
    1c2c:	a208000b 	andge	r0, r8, #11
    1c30:	0208000b 	andeq	r0, r8, #11
    1c34:	00087d00 	andeq	r7, r8, r0, lsl #26
    1c38:	00000000 	andeq	r0, r0, r0
    1c3c:	96000000 	strls	r0, [r0], -r0
    1c40:	9808000b 	stmdals	r8, {r0, r1, r3}
    1c44:	0208000b 	andeq	r0, r8, #11
    1c48:	98007d00 	stmdals	r0, {r8, sl, fp, ip, sp, lr}
    1c4c:	9c08000b 	stcls	0, cr0, [r8], {11}
    1c50:	0208000b 	andeq	r0, r8, #11
    1c54:	00087d00 	andeq	r7, r8, r0, lsl #26
    1c58:	00000000 	andeq	r0, r0, r0
    1c5c:	90000000 	andls	r0, r0, r0
    1c60:	9208000b 	andls	r0, r8, #11
    1c64:	0208000b 	andeq	r0, r8, #11
    1c68:	92007d00 	andls	r7, r0, #0, 26
    1c6c:	9608000b 	strls	r0, [r8], -fp
    1c70:	0208000b 	andeq	r0, r8, #11
    1c74:	00087d00 	andeq	r7, r8, r0, lsl #26
    1c78:	00000000 	andeq	r0, r0, r0
    1c7c:	8a000000 	bhi	1c84 <_Min_Stack_Size+0x1884>
    1c80:	8c08000b 	stchi	0, cr0, [r8], {11}
    1c84:	0208000b 	andeq	r0, r8, #11
    1c88:	8c007d00 	stchi	13, cr7, [r0], {-0}
    1c8c:	9008000b 	andls	r0, r8, fp
    1c90:	0208000b 	andeq	r0, r8, #11
    1c94:	00087d00 	andeq	r7, r8, r0, lsl #26
    1c98:	00000000 	andeq	r0, r0, r0
    1c9c:	84000000 	strhi	r0, [r0], #-0
    1ca0:	8608000b 	strhi	r0, [r8], -fp
    1ca4:	0208000b 	andeq	r0, r8, #11
    1ca8:	86007d00 	strhi	r7, [r0], -r0, lsl #26
    1cac:	8a08000b 	bhi	201ce0 <_Min_Stack_Size+0x2018e0>
    1cb0:	0208000b 	andeq	r0, r8, #11
    1cb4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1cb8:	00000000 	andeq	r0, r0, r0
    1cbc:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    1cc0:	8008000b 	andhi	r0, r8, fp
    1cc4:	0208000b 	andeq	r0, r8, #11
    1cc8:	80007d00 	andhi	r7, r0, r0, lsl #26
    1ccc:	8408000b 	strhi	r0, [r8], #-11
    1cd0:	0208000b 	andeq	r0, r8, #11
    1cd4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1cd8:	00000000 	andeq	r0, r0, r0
    1cdc:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    1ce0:	7a08000b 	bvc	201d14 <_Min_Stack_Size+0x201914>
    1ce4:	0208000b 	andeq	r0, r8, #11
    1ce8:	7a007d00 	bvc	210f0 <_Min_Stack_Size+0x20cf0>
    1cec:	7e08000b 	cdpvc	0, 0, cr0, cr8, cr11, {0}
    1cf0:	0208000b 	andeq	r0, r8, #11
    1cf4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1cf8:	00000000 	andeq	r0, r0, r0
    1cfc:	72000000 	andvc	r0, r0, #0
    1d00:	7408000b 	strvc	r0, [r8], #-11
    1d04:	0208000b 	andeq	r0, r8, #11
    1d08:	74007d00 	strvc	r7, [r0], #-3328	; 0xfffff300
    1d0c:	7808000b 	stmdavc	r8, {r0, r1, r3}
    1d10:	0208000b 	andeq	r0, r8, #11
    1d14:	00087d00 	andeq	r7, r8, r0, lsl #26
    1d18:	00000000 	andeq	r0, r0, r0
    1d1c:	6c000000 	stcvs	0, cr0, [r0], {-0}
    1d20:	6e08000b 	cdpvs	0, 0, cr0, cr8, cr11, {0}
    1d24:	0208000b 	andeq	r0, r8, #11
    1d28:	6e007d00 	cdpvs	13, 0, cr7, cr0, cr0, {0}
    1d2c:	7208000b 	andvc	r0, r8, #11
    1d30:	0208000b 	andeq	r0, r8, #11
    1d34:	00087d00 	andeq	r7, r8, r0, lsl #26
    1d38:	00000000 	andeq	r0, r0, r0
    1d3c:	66000000 	strvs	r0, [r0], -r0
    1d40:	6808000b 	stmdavs	r8, {r0, r1, r3}
    1d44:	0208000b 	andeq	r0, r8, #11
    1d48:	68007d00 	stmdavs	r0, {r8, sl, fp, ip, sp, lr}
    1d4c:	6c08000b 	stcvs	0, cr0, [r8], {11}
    1d50:	0208000b 	andeq	r0, r8, #11
    1d54:	00087d00 	andeq	r7, r8, r0, lsl #26
    1d58:	00000000 	andeq	r0, r0, r0
    1d5c:	60000000 	andvs	r0, r0, r0
    1d60:	6208000b 	andvs	r0, r8, #11
    1d64:	0208000b 	andeq	r0, r8, #11
    1d68:	62007d00 	andvs	r7, r0, #0, 26
    1d6c:	6608000b 	strvs	r0, [r8], -fp
    1d70:	0208000b 	andeq	r0, r8, #11
    1d74:	00087d00 	andeq	r7, r8, r0, lsl #26
    1d78:	00000000 	andeq	r0, r0, r0
    1d7c:	5a000000 	bpl	1d84 <_Min_Stack_Size+0x1984>
    1d80:	5c08000b 	stcpl	0, cr0, [r8], {11}
    1d84:	0208000b 	andeq	r0, r8, #11
    1d88:	5c007d00 	stcpl	13, cr7, [r0], {-0}
    1d8c:	6008000b 	andvs	r0, r8, fp
    1d90:	0208000b 	andeq	r0, r8, #11
    1d94:	00087d00 	andeq	r7, r8, r0, lsl #26
    1d98:	00000000 	andeq	r0, r0, r0
    1d9c:	54000000 	strpl	r0, [r0], #-0
    1da0:	5608000b 	strpl	r0, [r8], -fp
    1da4:	0208000b 	andeq	r0, r8, #11
    1da8:	56007d00 	strpl	r7, [r0], -r0, lsl #26
    1dac:	5a08000b 	bpl	201de0 <_Min_Stack_Size+0x2019e0>
    1db0:	0208000b 	andeq	r0, r8, #11
    1db4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1db8:	00000000 	andeq	r0, r0, r0
    1dbc:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    1dc0:	5008000b 	andpl	r0, r8, fp
    1dc4:	0208000b 	andeq	r0, r8, #11
    1dc8:	50007d00 	andpl	r7, r0, r0, lsl #26
    1dcc:	5408000b 	strpl	r0, [r8], #-11
    1dd0:	0208000b 	andeq	r0, r8, #11
    1dd4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1dd8:	00000000 	andeq	r0, r0, r0
    1ddc:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    1de0:	4a08000b 	bmi	201e14 <_Min_Stack_Size+0x201a14>
    1de4:	0208000b 	andeq	r0, r8, #11
    1de8:	4a007d00 	bmi	211f0 <_Min_Stack_Size+0x20df0>
    1dec:	4e08000b 	cdpmi	0, 0, cr0, cr8, cr11, {0}
    1df0:	0208000b 	andeq	r0, r8, #11
    1df4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1df8:	00000000 	andeq	r0, r0, r0
    1dfc:	42000000 	andmi	r0, r0, #0
    1e00:	4408000b 	strmi	r0, [r8], #-11
    1e04:	0208000b 	andeq	r0, r8, #11
    1e08:	44007d00 	strmi	r7, [r0], #-3328	; 0xfffff300
    1e0c:	4808000b 	stmdami	r8, {r0, r1, r3}
    1e10:	0208000b 	andeq	r0, r8, #11
    1e14:	00087d00 	andeq	r7, r8, r0, lsl #26
    1e18:	00000000 	andeq	r0, r0, r0
    1e1c:	3c000000 	stccc	0, cr0, [r0], {-0}
    1e20:	3e08000b 	cdpcc	0, 0, cr0, cr8, cr11, {0}
    1e24:	0208000b 	andeq	r0, r8, #11
    1e28:	3e007d00 	cdpcc	13, 0, cr7, cr0, cr0, {0}
    1e2c:	4208000b 	andmi	r0, r8, #11
    1e30:	0208000b 	andeq	r0, r8, #11
    1e34:	00087d00 	andeq	r7, r8, r0, lsl #26
    1e38:	00000000 	andeq	r0, r0, r0
    1e3c:	36000000 	strcc	r0, [r0], -r0
    1e40:	3808000b 	stmdacc	r8, {r0, r1, r3}
    1e44:	0208000b 	andeq	r0, r8, #11
    1e48:	38007d00 	stmdacc	r0, {r8, sl, fp, ip, sp, lr}
    1e4c:	3c08000b 	stccc	0, cr0, [r8], {11}
    1e50:	0208000b 	andeq	r0, r8, #11
    1e54:	00087d00 	andeq	r7, r8, r0, lsl #26
    1e58:	00000000 	andeq	r0, r0, r0
    1e5c:	30000000 	andcc	r0, r0, r0
    1e60:	3208000b 	andcc	r0, r8, #11
    1e64:	0208000b 	andeq	r0, r8, #11
    1e68:	32007d00 	andcc	r7, r0, #0, 26
    1e6c:	3608000b 	strcc	r0, [r8], -fp
    1e70:	0208000b 	andeq	r0, r8, #11
    1e74:	00087d00 	andeq	r7, r8, r0, lsl #26
    1e78:	00000000 	andeq	r0, r0, r0
    1e7c:	2a000000 	bcs	1e84 <_Min_Stack_Size+0x1a84>
    1e80:	2c08000b 	stccs	0, cr0, [r8], {11}
    1e84:	0208000b 	andeq	r0, r8, #11
    1e88:	2c007d00 	stccs	13, cr7, [r0], {-0}
    1e8c:	3008000b 	andcc	r0, r8, fp
    1e90:	0208000b 	andeq	r0, r8, #11
    1e94:	00087d00 	andeq	r7, r8, r0, lsl #26
    1e98:	00000000 	andeq	r0, r0, r0
    1e9c:	24000000 	strcs	r0, [r0], #-0
    1ea0:	2608000b 	strcs	r0, [r8], -fp
    1ea4:	0208000b 	andeq	r0, r8, #11
    1ea8:	26007d00 	strcs	r7, [r0], -r0, lsl #26
    1eac:	2a08000b 	bcs	201ee0 <_Min_Stack_Size+0x201ae0>
    1eb0:	0208000b 	andeq	r0, r8, #11
    1eb4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1eb8:	00000000 	andeq	r0, r0, r0
    1ebc:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    1ec0:	2008000b 	andcs	r0, r8, fp
    1ec4:	0208000b 	andeq	r0, r8, #11
    1ec8:	20007d00 	andcs	r7, r0, r0, lsl #26
    1ecc:	2408000b 	strcs	r0, [r8], #-11
    1ed0:	0208000b 	andeq	r0, r8, #11
    1ed4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1ed8:	00000000 	andeq	r0, r0, r0
    1edc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1ee0:	1a08000b 	bne	201f14 <_Min_Stack_Size+0x201b14>
    1ee4:	0208000b 	andeq	r0, r8, #11
    1ee8:	1a007d00 	bne	212f0 <_Min_Stack_Size+0x20ef0>
    1eec:	1e08000b 	cdpne	0, 0, cr0, cr8, cr11, {0}
    1ef0:	0208000b 	andeq	r0, r8, #11
    1ef4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1ef8:	00000000 	andeq	r0, r0, r0
    1efc:	12000000 	andne	r0, r0, #0
    1f00:	1408000b 	strne	r0, [r8], #-11
    1f04:	0208000b 	andeq	r0, r8, #11
    1f08:	14007d00 	strne	r7, [r0], #-3328	; 0xfffff300
    1f0c:	1808000b 	stmdane	r8, {r0, r1, r3}
    1f10:	0208000b 	andeq	r0, r8, #11
    1f14:	00087d00 	andeq	r7, r8, r0, lsl #26
    1f18:	00000000 	andeq	r0, r0, r0
    1f1c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1f20:	0e08000b 	cdpeq	0, 0, cr0, cr8, cr11, {0}
    1f24:	0208000b 	andeq	r0, r8, #11
    1f28:	0e007d00 	cdpeq	13, 0, cr7, cr0, cr0, {0}
    1f2c:	1208000b 	andne	r0, r8, #11
    1f30:	0208000b 	andeq	r0, r8, #11
    1f34:	00087d00 	andeq	r7, r8, r0, lsl #26
    1f38:	00000000 	andeq	r0, r0, r0
    1f3c:	06000000 	streq	r0, [r0], -r0
    1f40:	0808000b 	stmdaeq	r8, {r0, r1, r3}
    1f44:	0208000b 	andeq	r0, r8, #11
    1f48:	08007d00 	stmdaeq	r0, {r8, sl, fp, ip, sp, lr}
    1f4c:	0c08000b 	stceq	0, cr0, [r8], {11}
    1f50:	0208000b 	andeq	r0, r8, #11
    1f54:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1f60:	0208000b 	andeq	r0, r8, #11
    1f64:	0208000b 	andeq	r0, r8, #11
    1f68:	02007d00 	andeq	r7, r0, #0, 26
    1f6c:	0608000b 	streq	r0, [r8], -fp
    1f70:	0208000b 	andeq	r0, r8, #11
    1f74:	00087d00 	andeq	r7, r8, r0, lsl #26
    1f78:	00000000 	andeq	r0, r0, r0
    1f7c:	fa000000 	blx	1f84 <_Min_Stack_Size+0x1b84>
    1f80:	fc08000a 	stc2	0, cr0, [r8], {10}
    1f84:	0208000a 	andeq	r0, r8, #10
    1f88:	fc007d00 	vdot.bf16	d7, d0, d0
    1f8c:	0008000a 	andeq	r0, r8, sl
    1f90:	0208000b 	andeq	r0, r8, #11
    1f94:	00087d00 	andeq	r7, r8, r0, lsl #26
    1f98:	00000000 	andeq	r0, r0, r0
    1f9c:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    1fa0:	f608000a 			; <UNDEFINED> instruction: 0xf608000a
    1fa4:	0208000a 	andeq	r0, r8, #10
    1fa8:	f6007d00 			; <UNDEFINED> instruction: 0xf6007d00
    1fac:	fa08000a 	blx	201fdc <_Min_Stack_Size+0x201bdc>
    1fb0:	0208000a 	andeq	r0, r8, #10
    1fb4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1fb8:	00000000 	andeq	r0, r0, r0
    1fbc:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    1fc0:	f008000a 			; <UNDEFINED> instruction: 0xf008000a
    1fc4:	0208000a 	andeq	r0, r8, #10
    1fc8:	f0007d00 			; <UNDEFINED> instruction: 0xf0007d00
    1fcc:	f408000a 	vst4.8	{d0-d3}, [r8], sl
    1fd0:	0208000a 	andeq	r0, r8, #10
    1fd4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1fd8:	00000000 	andeq	r0, r0, r0
    1fdc:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    1fe0:	ea08000a 	b	202010 <_Min_Stack_Size+0x201c10>
    1fe4:	0208000a 	andeq	r0, r8, #10
    1fe8:	ea007d00 	b	213f0 <_Min_Stack_Size+0x20ff0>
    1fec:	ee08000a 	cdp	0, 0, cr0, cr8, cr10, {0}
    1ff0:	0208000a 	andeq	r0, r8, #10
    1ff4:	00087d00 	andeq	r7, r8, r0, lsl #26
    1ff8:	00000000 	andeq	r0, r0, r0
    1ffc:	e2000000 	and	r0, r0, #0
    2000:	e408000a 	str	r0, [r8], #-10
    2004:	0208000a 	andeq	r0, r8, #10
    2008:	e4007d00 	str	r7, [r0], #-3328	; 0xfffff300
    200c:	e808000a 	stmda	r8, {r1, r3}
    2010:	0208000a 	andeq	r0, r8, #10
    2014:	00087d00 	andeq	r7, r8, r0, lsl #26
    2018:	00000000 	andeq	r0, r0, r0
    201c:	dc000000 	stcle	0, cr0, [r0], {-0}
    2020:	de08000a 	cdple	0, 0, cr0, cr8, cr10, {0}
    2024:	0208000a 	andeq	r0, r8, #10
    2028:	de007d00 	cdple	13, 0, cr7, cr0, cr0, {0}
    202c:	e208000a 	and	r0, r8, #10
    2030:	0208000a 	andeq	r0, r8, #10
    2034:	00087d00 	andeq	r7, r8, r0, lsl #26
    2038:	00000000 	andeq	r0, r0, r0
    203c:	d6000000 	strle	r0, [r0], -r0
    2040:	d808000a 	stmdale	r8, {r1, r3}
    2044:	0208000a 	andeq	r0, r8, #10
    2048:	d8007d00 	stmdale	r0, {r8, sl, fp, ip, sp, lr}
    204c:	dc08000a 	stcle	0, cr0, [r8], {10}
    2050:	0208000a 	andeq	r0, r8, #10
    2054:	00087d00 	andeq	r7, r8, r0, lsl #26
    2058:	00000000 	andeq	r0, r0, r0
    205c:	d0000000 	andle	r0, r0, r0
    2060:	d208000a 	andle	r0, r8, #10
    2064:	0208000a 	andeq	r0, r8, #10
    2068:	d2007d00 	andle	r7, r0, #0, 26
    206c:	d608000a 	strle	r0, [r8], -sl
    2070:	0208000a 	andeq	r0, r8, #10
    2074:	00087d00 	andeq	r7, r8, r0, lsl #26
    2078:	00000000 	andeq	r0, r0, r0
    207c:	ca000000 	bgt	2084 <_Min_Stack_Size+0x1c84>
    2080:	cc08000a 	stcgt	0, cr0, [r8], {10}
    2084:	0208000a 	andeq	r0, r8, #10
    2088:	cc007d00 	stcgt	13, cr7, [r0], {-0}
    208c:	d008000a 	andle	r0, r8, sl
    2090:	0208000a 	andeq	r0, r8, #10
    2094:	00087d00 	andeq	r7, r8, r0, lsl #26
    2098:	00000000 	andeq	r0, r0, r0
    209c:	c4000000 	strgt	r0, [r0], #-0
    20a0:	c608000a 	strgt	r0, [r8], -sl
    20a4:	0208000a 	andeq	r0, r8, #10
    20a8:	c6007d00 	strgt	r7, [r0], -r0, lsl #26
    20ac:	ca08000a 	bgt	2020dc <_Min_Stack_Size+0x201cdc>
    20b0:	0208000a 	andeq	r0, r8, #10
    20b4:	00087d00 	andeq	r7, r8, r0, lsl #26
    20b8:	00000000 	andeq	r0, r0, r0
    20bc:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
    20c0:	c008000a 	andgt	r0, r8, sl
    20c4:	0208000a 	andeq	r0, r8, #10
    20c8:	c0007d00 	andgt	r7, r0, r0, lsl #26
    20cc:	c408000a 	strgt	r0, [r8], #-10
    20d0:	0208000a 	andeq	r0, r8, #10
    20d4:	00087d00 	andeq	r7, r8, r0, lsl #26
    20d8:	00000000 	andeq	r0, r0, r0
    20dc:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    20e0:	ba08000a 	blt	202110 <_Min_Stack_Size+0x201d10>
    20e4:	0208000a 	andeq	r0, r8, #10
    20e8:	ba007d00 	blt	214f0 <_Min_Stack_Size+0x210f0>
    20ec:	be08000a 	cdplt	0, 0, cr0, cr8, cr10, {0}
    20f0:	0208000a 	andeq	r0, r8, #10
    20f4:	00087d00 	andeq	r7, r8, r0, lsl #26
    20f8:	00000000 	andeq	r0, r0, r0
    20fc:	b2000000 	andlt	r0, r0, #0
    2100:	b408000a 	strlt	r0, [r8], #-10
    2104:	0208000a 	andeq	r0, r8, #10
    2108:	b4007d00 	strlt	r7, [r0], #-3328	; 0xfffff300
    210c:	b808000a 	stmdalt	r8, {r1, r3}
    2110:	0208000a 	andeq	r0, r8, #10
    2114:	00087d00 	andeq	r7, r8, r0, lsl #26
    2118:	00000000 	andeq	r0, r0, r0
    211c:	ac000000 	stcge	0, cr0, [r0], {-0}
    2120:	ae08000a 	cdpge	0, 0, cr0, cr8, cr10, {0}
    2124:	0208000a 	andeq	r0, r8, #10
    2128:	ae007d00 	cdpge	13, 0, cr7, cr0, cr0, {0}
    212c:	b208000a 	andlt	r0, r8, #10
    2130:	0208000a 	andeq	r0, r8, #10
    2134:	00087d00 	andeq	r7, r8, r0, lsl #26
    2138:	00000000 	andeq	r0, r0, r0
    213c:	a6000000 	strge	r0, [r0], -r0
    2140:	a808000a 	stmdage	r8, {r1, r3}
    2144:	0208000a 	andeq	r0, r8, #10
    2148:	a8007d00 	stmdage	r0, {r8, sl, fp, ip, sp, lr}
    214c:	ac08000a 	stcge	0, cr0, [r8], {10}
    2150:	0208000a 	andeq	r0, r8, #10
    2154:	00087d00 	andeq	r7, r8, r0, lsl #26
    2158:	00000000 	andeq	r0, r0, r0
    215c:	a0000000 	andge	r0, r0, r0
    2160:	a208000a 	andge	r0, r8, #10
    2164:	0208000a 	andeq	r0, r8, #10
    2168:	a2007d00 	andge	r7, r0, #0, 26
    216c:	a608000a 	strge	r0, [r8], -sl
    2170:	0208000a 	andeq	r0, r8, #10
    2174:	00087d00 	andeq	r7, r8, r0, lsl #26
    2178:	00000000 	andeq	r0, r0, r0
    217c:	9a000000 	bls	2184 <_Min_Stack_Size+0x1d84>
    2180:	9c08000a 	stcls	0, cr0, [r8], {10}
    2184:	0208000a 	andeq	r0, r8, #10
    2188:	9c007d00 	stcls	13, cr7, [r0], {-0}
    218c:	a008000a 	andge	r0, r8, sl
    2190:	0208000a 	andeq	r0, r8, #10
    2194:	00087d00 	andeq	r7, r8, r0, lsl #26
    2198:	00000000 	andeq	r0, r0, r0
    219c:	94000000 	strls	r0, [r0], #-0
    21a0:	9608000a 	strls	r0, [r8], -sl
    21a4:	0208000a 	andeq	r0, r8, #10
    21a8:	96007d00 	strls	r7, [r0], -r0, lsl #26
    21ac:	9a08000a 	bls	2021dc <_Min_Stack_Size+0x201ddc>
    21b0:	0208000a 	andeq	r0, r8, #10
    21b4:	00087d00 	andeq	r7, r8, r0, lsl #26
    21b8:	00000000 	andeq	r0, r0, r0
    21bc:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    21c0:	9008000a 	andls	r0, r8, sl
    21c4:	0208000a 	andeq	r0, r8, #10
    21c8:	90007d00 	andls	r7, r0, r0, lsl #26
    21cc:	9408000a 	strls	r0, [r8], #-10
    21d0:	0208000a 	andeq	r0, r8, #10
    21d4:	00087d00 	andeq	r7, r8, r0, lsl #26
    21d8:	00000000 	andeq	r0, r0, r0
    21dc:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    21e0:	8a08000a 	bhi	202210 <_Min_Stack_Size+0x201e10>
    21e4:	0208000a 	andeq	r0, r8, #10
    21e8:	8a007d00 	bhi	215f0 <_Min_Stack_Size+0x211f0>
    21ec:	8e08000a 	cdphi	0, 0, cr0, cr8, cr10, {0}
    21f0:	0208000a 	andeq	r0, r8, #10
    21f4:	00087d00 	andeq	r7, r8, r0, lsl #26
    21f8:	00000000 	andeq	r0, r0, r0
    21fc:	82000000 	andhi	r0, r0, #0
    2200:	8408000a 	strhi	r0, [r8], #-10
    2204:	0208000a 	andeq	r0, r8, #10
    2208:	84007d00 	strhi	r7, [r0], #-3328	; 0xfffff300
    220c:	8808000a 	stmdahi	r8, {r1, r3}
    2210:	0208000a 	andeq	r0, r8, #10
    2214:	00087d00 	andeq	r7, r8, r0, lsl #26
    2218:	00000000 	andeq	r0, r0, r0
    221c:	7c000000 	stcvc	0, cr0, [r0], {-0}
    2220:	7e08000a 	cdpvc	0, 0, cr0, cr8, cr10, {0}
    2224:	0208000a 	andeq	r0, r8, #10
    2228:	7e007d00 	cdpvc	13, 0, cr7, cr0, cr0, {0}
    222c:	8208000a 	andhi	r0, r8, #10
    2230:	0208000a 	andeq	r0, r8, #10
    2234:	00087d00 	andeq	r7, r8, r0, lsl #26
    2238:	00000000 	andeq	r0, r0, r0
    223c:	76000000 	strvc	r0, [r0], -r0
    2240:	7808000a 	stmdavc	r8, {r1, r3}
    2244:	0208000a 	andeq	r0, r8, #10
    2248:	78007d00 	stmdavc	r0, {r8, sl, fp, ip, sp, lr}
    224c:	7c08000a 	stcvc	0, cr0, [r8], {10}
    2250:	0208000a 	andeq	r0, r8, #10
    2254:	00087d00 	andeq	r7, r8, r0, lsl #26
    2258:	00000000 	andeq	r0, r0, r0
    225c:	70000000 	andvc	r0, r0, r0
    2260:	7208000a 	andvc	r0, r8, #10
    2264:	0208000a 	andeq	r0, r8, #10
    2268:	72007d00 	andvc	r7, r0, #0, 26
    226c:	7608000a 	strvc	r0, [r8], -sl
    2270:	0208000a 	andeq	r0, r8, #10
    2274:	00087d00 	andeq	r7, r8, r0, lsl #26
    2278:	00000000 	andeq	r0, r0, r0
    227c:	6a000000 	bvs	2284 <_Min_Stack_Size+0x1e84>
    2280:	6c08000a 	stcvs	0, cr0, [r8], {10}
    2284:	0208000a 	andeq	r0, r8, #10
    2288:	6c007d00 	stcvs	13, cr7, [r0], {-0}
    228c:	7008000a 	andvc	r0, r8, sl
    2290:	0208000a 	andeq	r0, r8, #10
    2294:	00087d00 	andeq	r7, r8, r0, lsl #26
    2298:	00000000 	andeq	r0, r0, r0
    229c:	64000000 	strvs	r0, [r0], #-0
    22a0:	6608000a 	strvs	r0, [r8], -sl
    22a4:	0208000a 	andeq	r0, r8, #10
    22a8:	66007d00 	strvs	r7, [r0], -r0, lsl #26
    22ac:	6a08000a 	bvs	2022dc <_Min_Stack_Size+0x201edc>
    22b0:	0208000a 	andeq	r0, r8, #10
    22b4:	00087d00 	andeq	r7, r8, r0, lsl #26
    22b8:	00000000 	andeq	r0, r0, r0
    22bc:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    22c0:	6008000a 	andvs	r0, r8, sl
    22c4:	0208000a 	andeq	r0, r8, #10
    22c8:	60007d00 	andvs	r7, r0, r0, lsl #26
    22cc:	6408000a 	strvs	r0, [r8], #-10
    22d0:	0208000a 	andeq	r0, r8, #10
    22d4:	00087d00 	andeq	r7, r8, r0, lsl #26
    22d8:	00000000 	andeq	r0, r0, r0
    22dc:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    22e0:	5a08000a 	bpl	202310 <_Min_Stack_Size+0x201f10>
    22e4:	0208000a 	andeq	r0, r8, #10
    22e8:	5a007d00 	bpl	216f0 <_Min_Stack_Size+0x212f0>
    22ec:	5e08000a 	cdppl	0, 0, cr0, cr8, cr10, {0}
    22f0:	0208000a 	andeq	r0, r8, #10
    22f4:	00087d00 	andeq	r7, r8, r0, lsl #26
    22f8:	00000000 	andeq	r0, r0, r0
    22fc:	52000000 	andpl	r0, r0, #0
    2300:	5408000a 	strpl	r0, [r8], #-10
    2304:	0208000a 	andeq	r0, r8, #10
    2308:	54007d00 	strpl	r7, [r0], #-3328	; 0xfffff300
    230c:	5808000a 	stmdapl	r8, {r1, r3}
    2310:	0208000a 	andeq	r0, r8, #10
    2314:	00087d00 	andeq	r7, r8, r0, lsl #26
    2318:	00000000 	andeq	r0, r0, r0
    231c:	4c000000 	stcmi	0, cr0, [r0], {-0}
    2320:	4e08000a 	cdpmi	0, 0, cr0, cr8, cr10, {0}
    2324:	0208000a 	andeq	r0, r8, #10
    2328:	4e007d00 	cdpmi	13, 0, cr7, cr0, cr0, {0}
    232c:	5208000a 	andpl	r0, r8, #10
    2330:	0208000a 	andeq	r0, r8, #10
    2334:	00087d00 	andeq	r7, r8, r0, lsl #26
    2338:	00000000 	andeq	r0, r0, r0
    233c:	46000000 	strmi	r0, [r0], -r0
    2340:	4808000a 	stmdami	r8, {r1, r3}
    2344:	0208000a 	andeq	r0, r8, #10
    2348:	48007d00 	stmdami	r0, {r8, sl, fp, ip, sp, lr}
    234c:	4c08000a 	stcmi	0, cr0, [r8], {10}
    2350:	0208000a 	andeq	r0, r8, #10
    2354:	00087d00 	andeq	r7, r8, r0, lsl #26
    2358:	00000000 	andeq	r0, r0, r0
    235c:	40000000 	andmi	r0, r0, r0
    2360:	4208000a 	andmi	r0, r8, #10
    2364:	0208000a 	andeq	r0, r8, #10
    2368:	42007d00 	andmi	r7, r0, #0, 26
    236c:	4608000a 	strmi	r0, [r8], -sl
    2370:	0208000a 	andeq	r0, r8, #10
    2374:	00087d00 	andeq	r7, r8, r0, lsl #26
    2378:	00000000 	andeq	r0, r0, r0
    237c:	3a000000 	bcc	2384 <_Min_Stack_Size+0x1f84>
    2380:	3c08000a 	stccc	0, cr0, [r8], {10}
    2384:	0208000a 	andeq	r0, r8, #10
    2388:	3c007d00 	stccc	13, cr7, [r0], {-0}
    238c:	4008000a 	andmi	r0, r8, sl
    2390:	0208000a 	andeq	r0, r8, #10
    2394:	00087d00 	andeq	r7, r8, r0, lsl #26
    2398:	00000000 	andeq	r0, r0, r0
    239c:	34000000 	strcc	r0, [r0], #-0
    23a0:	3608000a 	strcc	r0, [r8], -sl
    23a4:	0208000a 	andeq	r0, r8, #10
    23a8:	36007d00 	strcc	r7, [r0], -r0, lsl #26
    23ac:	3a08000a 	bcc	2023dc <_Min_Stack_Size+0x201fdc>
    23b0:	0208000a 	andeq	r0, r8, #10
    23b4:	00087d00 	andeq	r7, r8, r0, lsl #26
    23b8:	00000000 	andeq	r0, r0, r0
    23bc:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    23c0:	3008000a 	andcc	r0, r8, sl
    23c4:	0208000a 	andeq	r0, r8, #10
    23c8:	30007d00 	andcc	r7, r0, r0, lsl #26
    23cc:	3408000a 	strcc	r0, [r8], #-10
    23d0:	0208000a 	andeq	r0, r8, #10
    23d4:	00087d00 	andeq	r7, r8, r0, lsl #26
    23d8:	00000000 	andeq	r0, r0, r0
    23dc:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    23e0:	2a08000a 	bcs	202410 <_Min_Stack_Size+0x202010>
    23e4:	0208000a 	andeq	r0, r8, #10
    23e8:	2a007d00 	bcs	217f0 <_Min_Stack_Size+0x213f0>
    23ec:	2e08000a 	cdpcs	0, 0, cr0, cr8, cr10, {0}
    23f0:	0208000a 	andeq	r0, r8, #10
    23f4:	00087d00 	andeq	r7, r8, r0, lsl #26
    23f8:	00000000 	andeq	r0, r0, r0
    23fc:	22000000 	andcs	r0, r0, #0
    2400:	2408000a 	strcs	r0, [r8], #-10
    2404:	0208000a 	andeq	r0, r8, #10
    2408:	24007d00 	strcs	r7, [r0], #-3328	; 0xfffff300
    240c:	2808000a 	stmdacs	r8, {r1, r3}
    2410:	0208000a 	andeq	r0, r8, #10
    2414:	00087d00 	andeq	r7, r8, r0, lsl #26
    2418:	00000000 	andeq	r0, r0, r0
    241c:	1c000000 	stcne	0, cr0, [r0], {-0}
    2420:	1e08000a 	cdpne	0, 0, cr0, cr8, cr10, {0}
    2424:	0208000a 	andeq	r0, r8, #10
    2428:	1e007d00 	cdpne	13, 0, cr7, cr0, cr0, {0}
    242c:	2208000a 	andcs	r0, r8, #10
    2430:	0208000a 	andeq	r0, r8, #10
    2434:	00087d00 	andeq	r7, r8, r0, lsl #26
    2438:	00000000 	andeq	r0, r0, r0
    243c:	16000000 	strne	r0, [r0], -r0
    2440:	1808000a 	stmdane	r8, {r1, r3}
    2444:	0208000a 	andeq	r0, r8, #10
    2448:	18007d00 	stmdane	r0, {r8, sl, fp, ip, sp, lr}
    244c:	1c08000a 	stcne	0, cr0, [r8], {10}
    2450:	0208000a 	andeq	r0, r8, #10
    2454:	00087d00 	andeq	r7, r8, r0, lsl #26
    2458:	00000000 	andeq	r0, r0, r0
    245c:	10000000 	andne	r0, r0, r0
    2460:	1208000a 	andne	r0, r8, #10
    2464:	0208000a 	andeq	r0, r8, #10
    2468:	12007d00 	andne	r7, r0, #0, 26
    246c:	1608000a 	strne	r0, [r8], -sl
    2470:	0208000a 	andeq	r0, r8, #10
    2474:	00087d00 	andeq	r7, r8, r0, lsl #26
    2478:	00000000 	andeq	r0, r0, r0
    247c:	0a000000 	beq	2484 <_Min_Stack_Size+0x2084>
    2480:	0c08000a 	stceq	0, cr0, [r8], {10}
    2484:	0208000a 	andeq	r0, r8, #10
    2488:	0c007d00 	stceq	13, cr7, [r0], {-0}
    248c:	1008000a 	andne	r0, r8, sl
    2490:	0208000a 	andeq	r0, r8, #10
    2494:	00087d00 	andeq	r7, r8, r0, lsl #26
    2498:	00000000 	andeq	r0, r0, r0
    249c:	04000000 	streq	r0, [r0], #-0
    24a0:	0608000a 	streq	r0, [r8], -sl
    24a4:	0208000a 	andeq	r0, r8, #10
    24a8:	06007d00 	streq	r7, [r0], -r0, lsl #26
    24ac:	0a08000a 	beq	2024dc <_Min_Stack_Size+0x2020dc>
    24b0:	0208000a 	andeq	r0, r8, #10
    24b4:	00087d00 	andeq	r7, r8, r0, lsl #26
    24b8:	00000000 	andeq	r0, r0, r0
    24bc:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    24c0:	00080009 	andeq	r0, r8, r9
    24c4:	0208000a 	andeq	r0, r8, #10
    24c8:	00007d00 	andeq	r7, r0, r0, lsl #26
    24cc:	0408000a 	streq	r0, [r8], #-10
    24d0:	0208000a 	andeq	r0, r8, #10
    24d4:	00087d00 	andeq	r7, r8, r0, lsl #26
    24d8:	00000000 	andeq	r0, r0, r0
    24dc:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    24e0:	fa080009 	blx	20250c <_Min_Stack_Size+0x20210c>
    24e4:	02080009 	andeq	r0, r8, #9
    24e8:	fa007d00 	blx	218f0 <_Min_Stack_Size+0x214f0>
    24ec:	fe080009 	cdp2	0, 0, cr0, cr8, cr9, {0}
    24f0:	02080009 	andeq	r0, r8, #9
    24f4:	00087d00 	andeq	r7, r8, r0, lsl #26
    24f8:	00000000 	andeq	r0, r0, r0
    24fc:	f2000000 	vhadd.s8	d0, d0, d0
    2500:	f4080009 	vst4.8	{d0-d3}, [r8], r9
    2504:	02080009 	andeq	r0, r8, #9
    2508:	f4007d00 			; <UNDEFINED> instruction: 0xf4007d00
    250c:	f8080009 			; <UNDEFINED> instruction: 0xf8080009
    2510:	02080009 	andeq	r0, r8, #9
    2514:	00087d00 	andeq	r7, r8, r0, lsl #26
    2518:	00000000 	andeq	r0, r0, r0
    251c:	ec000000 	stc	0, cr0, [r0], {-0}
    2520:	ee080009 	cdp	0, 0, cr0, cr8, cr9, {0}
    2524:	02080009 	andeq	r0, r8, #9
    2528:	ee007d00 	cdp	13, 0, cr7, cr0, cr0, {0}
    252c:	f2080009 	vhadd.s8	d0, d8, d9
    2530:	02080009 	andeq	r0, r8, #9
    2534:	00087d00 	andeq	r7, r8, r0, lsl #26
    2538:	00000000 	andeq	r0, r0, r0
    253c:	e6000000 	str	r0, [r0], -r0
    2540:	e8080009 	stmda	r8, {r0, r3}
    2544:	02080009 	andeq	r0, r8, #9
    2548:	e8007d00 	stmda	r0, {r8, sl, fp, ip, sp, lr}
    254c:	ec080009 	stc	0, cr0, [r8], {9}
    2550:	02080009 	andeq	r0, r8, #9
    2554:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2564:	02000000 	andeq	r0, r0, #0
    2568:	00007d00 	andeq	r7, r0, r0, lsl #26
    256c:	00000000 	andeq	r0, r0, r0
    2570:	02000000 	andeq	r0, r0, #0
    2574:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2584:	02000000 	andeq	r0, r0, #0
    2588:	00007d00 	andeq	r7, r0, r0, lsl #26
    258c:	00000000 	andeq	r0, r0, r0
    2590:	02000000 	andeq	r0, r0, #0
    2594:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    25a4:	02000000 	andeq	r0, r0, #0
    25a8:	00007d00 	andeq	r7, r0, r0, lsl #26
    25ac:	00000000 	andeq	r0, r0, r0
    25b0:	02000000 	andeq	r0, r0, #0
    25b4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    25c4:	02000000 	andeq	r0, r0, #0
    25c8:	00007d00 	andeq	r7, r0, r0, lsl #26
    25cc:	00000000 	andeq	r0, r0, r0
    25d0:	02000000 	andeq	r0, r0, #0
    25d4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    25e4:	02000000 	andeq	r0, r0, #0
    25e8:	00007d00 	andeq	r7, r0, r0, lsl #26
    25ec:	00000000 	andeq	r0, r0, r0
    25f0:	02000000 	andeq	r0, r0, #0
    25f4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2604:	02000000 	andeq	r0, r0, #0
    2608:	00007d00 	andeq	r7, r0, r0, lsl #26
    260c:	00000000 	andeq	r0, r0, r0
    2610:	02000000 	andeq	r0, r0, #0
    2614:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2624:	02000000 	andeq	r0, r0, #0
    2628:	00007d00 	andeq	r7, r0, r0, lsl #26
    262c:	00000000 	andeq	r0, r0, r0
    2630:	02000000 	andeq	r0, r0, #0
    2634:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2644:	02000000 	andeq	r0, r0, #0
    2648:	00007d00 	andeq	r7, r0, r0, lsl #26
    264c:	00000000 	andeq	r0, r0, r0
    2650:	02000000 	andeq	r0, r0, #0
    2654:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2664:	02000000 	andeq	r0, r0, #0
    2668:	00007d00 	andeq	r7, r0, r0, lsl #26
    266c:	00000000 	andeq	r0, r0, r0
    2670:	02000000 	andeq	r0, r0, #0
    2674:	00087d00 	andeq	r7, r8, r0, lsl #26
    2678:	00000000 	andeq	r0, r0, r0
    267c:	90000000 	andls	r0, r0, r0
    2680:	92080009 	andls	r0, r8, #9
    2684:	02080009 	andeq	r0, r8, #9
    2688:	92007d00 	andls	r7, r0, #0, 26
    268c:	e4080009 	str	r0, [r8], #-9
    2690:	02080009 	andeq	r0, r8, #9
    2694:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    26a0:	00000101 	andeq	r0, r0, r1, lsl #2
    26a4:	0009ac00 	andeq	sl, r9, r0, lsl #24
    26a8:	0009ac08 	andeq	sl, r9, r8, lsl #24
    26ac:	52000108 	andpl	r0, r0, #8, 2
    26b0:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
    26b4:	080009b0 	stmdaeq	r0, {r4, r5, r7, r8, fp}
    26b8:	04720003 	ldrbteq	r0, [r2], #-3
    26bc:	0009b09f 	muleq	r9, pc, r0	; <UNPREDICTABLE>
    26c0:	0009ba08 	andeq	fp, r9, r8, lsl #20
    26c4:	52000108 	andpl	r0, r0, #8, 2
	...
    26d0:	00010100 	andeq	r0, r1, r0, lsl #2
    26d4:	09ac0000 	stmibeq	ip!, {}	; <UNPREDICTABLE>
    26d8:	09ac0800 	stmibeq	ip!, {fp}
    26dc:	00010800 	andeq	r0, r1, r0, lsl #16
    26e0:	0009ac53 	andeq	sl, r9, r3, asr ip
    26e4:	0009b408 	andeq	fp, r9, r8, lsl #8
    26e8:	73000308 	movwvc	r0, #776	; 0x308
    26ec:	09b49f04 	ldmibeq	r4!, {r2, r8, r9, sl, fp, ip, pc}
    26f0:	09ba0800 	ldmibeq	sl!, {fp}
    26f4:	00010800 	andeq	r0, r1, r0, lsl #16
    26f8:	00000053 	andeq	r0, r0, r3, asr r0
    26fc:	00000000 	andeq	r0, r0, r0
    2700:	01010000 	mrseq	r0, (UNDEF: 1)
    2704:	94000000 	strls	r0, [r0], #-0
    2708:	9a080009 	bls	202734 <_Min_Stack_Size+0x202334>
    270c:	01080009 	tsteq	r8, r9
    2710:	099a5300 	ldmibeq	sl, {r8, r9, ip, lr}
    2714:	09a00800 	stmibeq	r0!, {fp}
    2718:	00030800 	andeq	r0, r3, r0, lsl #16
    271c:	a09f0473 	addsge	r0, pc, r3, ror r4	; <UNPREDICTABLE>
    2720:	a6080009 	strge	r0, [r8], -r9
    2724:	01080009 	tsteq	r8, r9
    2728:	00005300 	andeq	r5, r0, r0, lsl #6
    272c:	00000000 	andeq	r0, r0, r0
    2730:	0bc00000 	bleq	ff002738 <_estack+0xdefc2738>
    2734:	0bc20800 	bleq	ff08473c <_estack+0xdf04473c>
    2738:	00020800 	andeq	r0, r2, r0, lsl #16
    273c:	0bc2007d 	bleq	ff082938 <_estack+0xdf042938>
    2740:	0bc40800 	bleq	ff104748 <_estack+0xdf0c4748>
    2744:	00020800 	andeq	r0, r2, r0, lsl #16
    2748:	0bc4047d 	bleq	ff103944 <_estack+0xdf0c3944>
    274c:	0c540800 	mrrceq	8, 0, r0, r4, cr0
    2750:	00030800 	andeq	r0, r3, r0, lsl #16
    2754:	5400d87d 	strpl	sp, [r0], #-2173	; 0xfffff783
    2758:	5808000c 	stmdapl	r8, {r2, r3}
    275c:	0208000c 	andeq	r0, r8, #12
    2760:	58047d00 	stmdapl	r4, {r8, sl, fp, ip, sp, lr}
    2764:	6808000c 	stmdavs	r8, {r2, r3}
    2768:	0308000c 	movweq	r0, #32780	; 0x800c
    276c:	00d87d00 	sbcseq	r7, r8, r0, lsl #26
	...
    2778:	08000c68 	stmdaeq	r0, {r3, r5, r6, sl, fp}
    277c:	08000c6a 	stmdaeq	r0, {r1, r3, r5, r6, sl, fp}
    2780:	007d0002 	rsbseq	r0, sp, r2
    2784:	08000c6a 	stmdaeq	r0, {r1, r3, r5, r6, sl, fp}
    2788:	08000cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp}
    278c:	087d0002 	ldmdaeq	sp!, {r1}^
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000005c 	andeq	r0, r0, ip, asr r0
   4:	00000002 	andeq	r0, r0, r2
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
   8:	00040000 	andeq	r0, r4, r0
  __HAL_FLASH_DATA_CACHE_ENABLE();
   c:	00000000 	andeq	r0, r0, r0
  10:	08000204 	stmdaeq	r0, {r2, r9}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  14:	00000002 	andeq	r0, r0, r2
  18:	08000206 	stmdaeq	r0, {r1, r2, r9}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  1c:	00000002 	andeq	r0, r0, r2
  20:	08000208 	stmdaeq	r0, {r3, r9}
  HAL_InitTick(TICK_INT_PRIORITY);
  24:	00000002 	andeq	r0, r0, r2
  HAL_MspInit();
  28:	0800020a 	stmdaeq	r0, {r1, r3, r9}
}
  2c:	00000002 	andeq	r0, r0, r2
  30:	0800020c 	stmdaeq	r0, {r2, r3, r9}
  *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL);
  34:	00000002 	andeq	r0, r0, r2
  38:	0800020e 	stmdaeq	r0, {r1, r2, r3, r9}
  3c:	00000002 	andeq	r0, r0, r2
  *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL);
  40:	08000210 	stmdaeq	r0, {r4, r9}
  44:	00000002 	andeq	r0, r0, r2
  48:	08000212 	stmdaeq	r0, {r1, r4, r9}
    return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
  4c:	00000002 	andeq	r0, r0, r2
  50:	08000214 	stmdaeq	r0, {r2, r4, r9}
  54:	00000008 	andeq	r0, r0, r8
	...
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	00000084 	andeq	r0, r0, r4, lsl #1
  64:	01560002 	cmpeq	r6, r2
  68:	00040000 	andeq	r0, r4, r0
	...
      break;
  74:	00000004 	andeq	r0, r0, r4
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  78:	00000000 	andeq	r0, r0, r0
  7c:	00000408 	andeq	r0, r0, r8, lsl #8
  80:	00000000 	andeq	r0, r0, r0
  84:	0000009c 	muleq	r0, ip, r0
  88:	00000000 	andeq	r0, r0, r0
  8c:	0000000c 	andeq	r0, r0, ip
  90:	00000000 	andeq	r0, r0, r0
  94:	0000000c 	andeq	r0, r0, ip
  98:	0800021c 	stmdaeq	r0, {r2, r3, r4, r9}
  9c:	000000d4 	ldrdeq	r0, [r0], -r4
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
  a0:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
  a4:	00000160 	andeq	r0, r0, r0, ror #2
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
  a8:	00000000 	andeq	r0, r0, r0
  ac:	0000000c 	andeq	r0, r0, ip
  b0:	00000000 	andeq	r0, r0, r0
  b4:	00000020 	andeq	r0, r0, r0, lsr #32
  b8:	00000000 	andeq	r0, r0, r0
  if((plli2sused == 1U) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
  bc:	00000020 	andeq	r0, r0, r0, lsr #32
  c0:	00000000 	andeq	r0, r0, r0
  c4:	000000cc 	andeq	r0, r0, ip, asr #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
  c8:	00000000 	andeq	r0, r0, r0
  cc:	0000003c 	andeq	r0, r0, ip, lsr r0
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
  d0:	00000000 	andeq	r0, r0, r0
  d4:	00000002 	andeq	r0, r0, r2
  d8:	00000000 	andeq	r0, r0, r0
  dc:	00000020 	andeq	r0, r0, r0, lsr #32
	...
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1_AUDIO) == RCC_PERIPHCLK_DFSDM1_AUDIO)
  e8:	0000005c 	andeq	r0, r0, ip, asr r0
    __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
  ec:	0dc30002 	stcleq	0, cr0, [r3, #8]
  f0:	00040000 	andeq	r0, r4, r0
	...
  fc:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
}
 100:	00000000 	andeq	r0, r0, r0
      plli2sused = 1U;
 104:	000000a4 	andeq	r0, r0, r4, lsr #1
    __HAL_RCC_PWR_CLK_ENABLE();
 108:	00000000 	andeq	r0, r0, r0
 10c:	000001e8 	andeq	r0, r0, r8, ror #3
 110:	00000000 	andeq	r0, r0, r0
 114:	00000020 	andeq	r0, r0, r0, lsr #32
 118:	00000000 	andeq	r0, r0, r0
 11c:	00000074 	andeq	r0, r0, r4, ror r0
    PWR->CR |= PWR_CR_DBP;
 120:	00000000 	andeq	r0, r0, r0
 124:	00000034 	andeq	r0, r0, r4, lsr r0
 128:	00000000 	andeq	r0, r0, r0
    tickstart = HAL_GetTick();
 12c:	00000138 	andeq	r0, r0, r8, lsr r1
    while((PWR->CR & PWR_CR_DBP) == RESET)
 130:	08000450 	stmdaeq	r0, {r4, r6, sl}
 134:	00000410 	andeq	r0, r0, r0, lsl r4
 138:	00000000 	andeq	r0, r0, r0
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 13c:	000000d4 	ldrdeq	r0, [r0], -r4
	...
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 148:	000000a4 	andeq	r0, r0, r4, lsr #1
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 14c:	18be0002 	ldmne	lr!, {r1}
 150:	00040000 	andeq	r0, r4, r0
	...
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 15c:	00000024 	andeq	r0, r0, r4, lsr #32
 160:	08000860 	stmdaeq	r0, {r5, r6, fp}
      __HAL_RCC_BACKUPRESET_FORCE();
 164:	00000070 	andeq	r0, r0, r0, ror r0
 168:	00000000 	andeq	r0, r0, r0
      __HAL_RCC_BACKUPRESET_RELEASE();
 16c:	0000001c 	andeq	r0, r0, ip, lsl r0
 170:	00000000 	andeq	r0, r0, r0
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 174:	00000024 	andeq	r0, r0, r4, lsr #32
 178:	00000000 	andeq	r0, r0, r0
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 17c:	00000024 	andeq	r0, r0, r4, lsr #32
 180:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
 184:	00000028 	andeq	r0, r0, r8, lsr #32
 188:	00000000 	andeq	r0, r0, r0
 18c:	0000001c 	andeq	r0, r0, ip, lsl r0
 190:	00000000 	andeq	r0, r0, r0
 194:	00000020 	andeq	r0, r0, r0, lsr #32
 198:	00000000 	andeq	r0, r0, r0
 19c:	00000060 	andeq	r0, r0, r0, rrx
 1a0:	00000000 	andeq	r0, r0, r0
        tickstart = HAL_GetTick();
 1a4:	00000010 	andeq	r0, r0, r0, lsl r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 1a8:	00000000 	andeq	r0, r0, r0
 1ac:	00000060 	andeq	r0, r0, r0, rrx
 1b0:	00000000 	andeq	r0, r0, r0
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1b8:	00000000 	andeq	r0, r0, r0
 1bc:	00000024 	andeq	r0, r0, r4, lsr #32
            return HAL_TIMEOUT;
 1c0:	00000000 	andeq	r0, r0, r0
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 1c4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1c8:	00000000 	andeq	r0, r0, r0
 1cc:	00000024 	andeq	r0, r0, r4, lsr #32
 1d0:	00000000 	andeq	r0, r0, r0
 1d4:	00000020 	andeq	r0, r0, r0, lsr #32
 1d8:	00000000 	andeq	r0, r0, r0
      plli2sused = 1U;
 1dc:	00000002 	andeq	r0, r0, r2
    __HAL_RCC_PLLI2S_DISABLE();
 1e0:	00000000 	andeq	r0, r0, r0
    tickstart = HAL_GetTick();
 1e4:	00000008 	andeq	r0, r0, r8
	...
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 1f0:	000000ec 	andeq	r0, r0, ip, ror #1
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 1f4:	2a2a0002 	bcs	a80204 <_Min_Stack_Size+0xa7fe04>
 1f8:	00040000 	andeq	r0, r4, r0
	...
    __HAL_RCC_PLL_I2S_CONFIG(PeriphClkInit->PLLI2SSelection);
 204:	00000002 	andeq	r0, r0, r2
 208:	00000000 	andeq	r0, r0, r0
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB1) == RCC_PERIPHCLK_I2S_APB1) && (PeriphClkInit->I2sApb1ClockSelection == RCC_I2SAPB1CLKSOURCE_PLLI2S)) ||
 20c:	00000002 	andeq	r0, r0, r2
 210:	00000000 	andeq	r0, r0, r0
 214:	0000002c 	andeq	r0, r0, ip, lsr #32
 218:	080008f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp}
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB2) == RCC_PERIPHCLK_I2S_APB2) && (PeriphClkInit->I2sApb2ClockSelection == RCC_I2SAPB2CLKSOURCE_PLLI2S)) ||
 21c:	0000004c 	andeq	r0, r0, ip, asr #32
 220:	00000000 	andeq	r0, r0, r0
 224:	00000034 	andeq	r0, r0, r4, lsr r0
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)) ||
 228:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
 22c:	00000018 	andeq	r0, r0, r8, lsl r0
 230:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO) && (PeriphClkInit->SdioClockSelection == RCC_SDIOCLKSOURCE_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)))
 234:	0000000c 	andeq	r0, r0, ip
 238:	00000000 	andeq	r0, r0, r0
 23c:	0000000c 	andeq	r0, r0, ip
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 240:	00000000 	andeq	r0, r0, r0
 244:	0000002c 	andeq	r0, r0, ip, lsr #32
 248:	00000000 	andeq	r0, r0, r0
 24c:	0000000c 	andeq	r0, r0, ip
 250:	08000968 	stmdaeq	r0, {r3, r5, r6, r8, fp}
 254:	00000028 	andeq	r0, r0, r8, lsr #32
 258:	00000000 	andeq	r0, r0, r0
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 25c:	0000000e 	andeq	r0, r0, lr
 260:	00000000 	andeq	r0, r0, r0
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 264:	0000000e 	andeq	r0, r0, lr
 268:	00000000 	andeq	r0, r0, r0
 26c:	00000008 	andeq	r0, r0, r8
 270:	00000000 	andeq	r0, r0, r0
 274:	0000000c 	andeq	r0, r0, ip
 278:	00000000 	andeq	r0, r0, r0
    __HAL_RCC_PLLI2S_ENABLE();
 27c:	00000010 	andeq	r0, r0, r0, lsl r0
 280:	00000000 	andeq	r0, r0, r0
    tickstart = HAL_GetTick();
 284:	00000010 	andeq	r0, r0, r0, lsl r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 288:	00000000 	andeq	r0, r0, r0
 28c:	00000010 	andeq	r0, r0, r0, lsl r0
 290:	00000000 	andeq	r0, r0, r0
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 294:	00000010 	andeq	r0, r0, r0, lsl r0
 298:	00000000 	andeq	r0, r0, r0
 29c:	00000010 	andeq	r0, r0, r0, lsl r0
        return HAL_TIMEOUT;
 2a0:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
 2a4:	00000010 	andeq	r0, r0, r0, lsl r0
 2a8:	00000000 	andeq	r0, r0, r0
 2ac:	00000010 	andeq	r0, r0, r0, lsl r0
 2b0:	00000000 	andeq	r0, r0, r0
 2b4:	00000010 	andeq	r0, r0, r0, lsl r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2b8:	00000000 	andeq	r0, r0, r0
 2bc:	00000010 	andeq	r0, r0, r0, lsl r0
          return HAL_TIMEOUT;
 2c0:	00000000 	andeq	r0, r0, r0
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 2c4:	0000000c 	andeq	r0, r0, ip
 2c8:	00000000 	andeq	r0, r0, r0
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 2cc:	0000000c 	andeq	r0, r0, ip
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	0000000c 	andeq	r0, r0, ip
	...
        __HAL_RCC_PLL_DISABLE();
 2e0:	00000024 	andeq	r0, r0, r4, lsr #32
        tickstart = HAL_GetTick();
 2e4:	35a30002 	strcc	r0, [r3, #2]!
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 2e8:	00040000 	andeq	r0, r4, r0
	...
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 2f4:	00000014 	andeq	r0, r0, r4, lsl r0
 2f8:	00000000 	andeq	r0, r0, r0
            return HAL_TIMEOUT;
 2fc:	000000a0 	andeq	r0, r0, r0, lsr #1
	...
      __HAL_RCC_PWR_CLK_DISABLE();
 308:	000002dc 	ldrdeq	r0, [r0], -ip
        __HAL_RCC_PLL_DISABLE();
 30c:	3c5d0002 	mrrccc	0, 0, r0, sp, cr2
 310:	00040000 	andeq	r0, r4, r0
        tickstart = HAL_GetTick();
 314:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 318:	08000990 	stmdaeq	r0, {r4, r7, r8, fp}
 31c:	00000054 	andeq	r0, r0, r4, asr r0
 320:	080009e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 324:	00000002 	andeq	r0, r0, r2
 328:	00000000 	andeq	r0, r0, r0
            return HAL_TIMEOUT;
 32c:	00000006 	andeq	r0, r0, r6
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 330:	00000000 	andeq	r0, r0, r0
 334:	00000006 	andeq	r0, r0, r6
 338:	00000000 	andeq	r0, r0, r0
 33c:	00000006 	andeq	r0, r0, r6
 340:	00000000 	andeq	r0, r0, r0
 344:	00000006 	andeq	r0, r0, r6
 348:	00000000 	andeq	r0, r0, r0
 34c:	00000006 	andeq	r0, r0, r6
        __HAL_RCC_PLL_ENABLE();
 350:	00000000 	andeq	r0, r0, r0
 354:	00000006 	andeq	r0, r0, r6
        tickstart = HAL_GetTick();
 358:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 35c:	00000006 	andeq	r0, r0, r6
 360:	00000000 	andeq	r0, r0, r0
 364:	00000006 	andeq	r0, r0, r6
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 368:	00000000 	andeq	r0, r0, r0
 36c:	00000006 	andeq	r0, r0, r6
            return HAL_TIMEOUT;
 370:	080009e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, fp}
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 374:	00000006 	andeq	r0, r0, r6
        pll_config = RCC->PLLCFGR;
 378:	080009ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 37c:	00000006 	andeq	r0, r0, r6
 380:	080009f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, fp}
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 384:	00000006 	andeq	r0, r0, r6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 388:	080009f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 38c:	00000006 	andeq	r0, r0, r6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 390:	080009fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 394:	00000006 	andeq	r0, r0, r6
 398:	08000a04 	stmdaeq	r0, {r2, r9, fp}
 39c:	00000006 	andeq	r0, r0, r6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 3a0:	08000a0a 	stmdaeq	r0, {r1, r3, r9, fp}
 3a4:	00000006 	andeq	r0, r0, r6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 3a8:	08000a10 	stmdaeq	r0, {r4, r9, fp}
 3ac:	00000006 	andeq	r0, r0, r6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 3b0:	08000a16 	stmdaeq	r0, {r1, r2, r4, r9, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 3b4:	00000006 	andeq	r0, r0, r6
 3b8:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 3bc:	00000006 	andeq	r0, r0, r6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 3c0:	08000a22 	stmdaeq	r0, {r1, r5, r9, fp}
 3c4:	00000006 	andeq	r0, r0, r6
  return HAL_OK;
 3c8:	08000a28 	stmdaeq	r0, {r3, r5, r9, fp}
}
 3cc:	00000006 	andeq	r0, r0, r6
        return HAL_ERROR;
 3d0:	08000a2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, fp}
        return HAL_ERROR;
 3d4:	00000006 	andeq	r0, r0, r6
}
 3d8:	08000a34 	stmdaeq	r0, {r2, r4, r5, r9, fp}
  return HAL_OK;
 3dc:	00000006 	andeq	r0, r0, r6
 3e0:	08000a3a 	stmdaeq	r0, {r1, r3, r4, r5, r9, fp}
        return HAL_ERROR;
 3e4:	00000006 	andeq	r0, r0, r6
          return HAL_ERROR;
 3e8:	08000a40 	stmdaeq	r0, {r6, r9, fp}
 3ec:	00000006 	andeq	r0, r0, r6
 3f0:	08000a46 	stmdaeq	r0, {r1, r2, r6, r9, fp}
 3f4:	00000006 	andeq	r0, r0, r6
 3f8:	08000a4c 	stmdaeq	r0, {r2, r3, r6, r9, fp}
 3fc:	00000006 	andeq	r0, r0, r6
 400:	08000a52 	stmdaeq	r0, {r1, r4, r6, r9, fp}
 404:	00000006 	andeq	r0, r0, r6
 408:	08000a58 	stmdaeq	r0, {r3, r4, r6, r9, fp}
 40c:	00000006 	andeq	r0, r0, r6
 410:	08000a5e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r9, fp}
 414:	00000006 	andeq	r0, r0, r6
 418:	08000a64 	stmdaeq	r0, {r2, r5, r6, r9, fp}
 41c:	00000006 	andeq	r0, r0, r6
 420:	08000a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp}
 424:	00000006 	andeq	r0, r0, r6
 428:	08000a70 	stmdaeq	r0, {r4, r5, r6, r9, fp}
 42c:	00000006 	andeq	r0, r0, r6
 430:	08000a76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, fp}
 434:	00000006 	andeq	r0, r0, r6
 438:	08000a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp}
 43c:	00000006 	andeq	r0, r0, r6
 440:	08000a82 	stmdaeq	r0, {r1, r7, r9, fp}
 444:	00000006 	andeq	r0, r0, r6
 448:	08000a88 	stmdaeq	r0, {r3, r7, r9, fp}
 44c:	00000006 	andeq	r0, r0, r6
 450:	08000a8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, fp}
 454:	00000006 	andeq	r0, r0, r6
 458:	08000a94 	stmdaeq	r0, {r2, r4, r7, r9, fp}
 45c:	00000006 	andeq	r0, r0, r6
 460:	08000a9a 	stmdaeq	r0, {r1, r3, r4, r7, r9, fp}
 464:	00000006 	andeq	r0, r0, r6
 468:	08000aa0 	stmdaeq	r0, {r5, r7, r9, fp}
 46c:	00000006 	andeq	r0, r0, r6
 470:	08000aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp}
 474:	00000006 	andeq	r0, r0, r6
 478:	08000aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp}
 47c:	00000006 	andeq	r0, r0, r6
 480:	08000ab2 	stmdaeq	r0, {r1, r4, r5, r7, r9, fp}
 484:	00000006 	andeq	r0, r0, r6
 488:	08000ab8 	stmdaeq	r0, {r3, r4, r5, r7, r9, fp}
 48c:	00000006 	andeq	r0, r0, r6
 490:	08000abe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, fp}
 494:	00000006 	andeq	r0, r0, r6
 498:	08000ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp}
 49c:	00000006 	andeq	r0, r0, r6
 4a0:	08000aca 	stmdaeq	r0, {r1, r3, r6, r7, r9, fp}
 4a4:	00000006 	andeq	r0, r0, r6
 4a8:	08000ad0 	stmdaeq	r0, {r4, r6, r7, r9, fp}
 4ac:	00000006 	andeq	r0, r0, r6
 4b0:	08000ad6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9, fp}
 4b4:	00000006 	andeq	r0, r0, r6
 4b8:	08000adc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, fp}
 4bc:	00000006 	andeq	r0, r0, r6
 4c0:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
 4c4:	00000006 	andeq	r0, r0, r6
 4c8:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
 4cc:	00000006 	andeq	r0, r0, r6
 4d0:	08000aee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, fp}
 4d4:	00000006 	andeq	r0, r0, r6
 4d8:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
 4dc:	00000006 	andeq	r0, r0, r6
 4e0:	08000afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp}
 4e4:	00000006 	andeq	r0, r0, r6
 4e8:	08000b00 	stmdaeq	r0, {r8, r9, fp}
 4ec:	00000006 	andeq	r0, r0, r6
 4f0:	08000b06 	stmdaeq	r0, {r1, r2, r8, r9, fp}
 4f4:	00000006 	andeq	r0, r0, r6
 4f8:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
 4fc:	00000006 	andeq	r0, r0, r6
 500:	08000b12 	stmdaeq	r0, {r1, r4, r8, r9, fp}
 504:	00000006 	andeq	r0, r0, r6
 508:	08000b18 	stmdaeq	r0, {r3, r4, r8, r9, fp}
 50c:	00000006 	andeq	r0, r0, r6
 510:	08000b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp}
 514:	00000006 	andeq	r0, r0, r6
 518:	08000b24 	stmdaeq	r0, {r2, r5, r8, r9, fp}
 51c:	00000006 	andeq	r0, r0, r6
 520:	08000b2a 	stmdaeq	r0, {r1, r3, r5, r8, r9, fp}
 524:	00000006 	andeq	r0, r0, r6
 528:	08000b30 	stmdaeq	r0, {r4, r5, r8, r9, fp}
 52c:	00000006 	andeq	r0, r0, r6
 530:	08000b36 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, fp}
 534:	00000006 	andeq	r0, r0, r6
 538:	08000b3c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, fp}
 53c:	00000006 	andeq	r0, r0, r6
 540:	08000b42 	stmdaeq	r0, {r1, r6, r8, r9, fp}
 544:	00000006 	andeq	r0, r0, r6
 548:	08000b48 	stmdaeq	r0, {r3, r6, r8, r9, fp}
 54c:	00000006 	andeq	r0, r0, r6
 550:	08000b4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, fp}
 554:	00000006 	andeq	r0, r0, r6
 558:	08000b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp}
 55c:	00000006 	andeq	r0, r0, r6
 560:	08000b5a 	stmdaeq	r0, {r1, r3, r4, r6, r8, r9, fp}
 564:	00000006 	andeq	r0, r0, r6
 568:	08000b60 	stmdaeq	r0, {r5, r6, r8, r9, fp}
 56c:	00000006 	andeq	r0, r0, r6
 570:	08000b66 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, fp}
 574:	00000006 	andeq	r0, r0, r6
 578:	08000b6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, fp}
 57c:	00000006 	andeq	r0, r0, r6
 580:	08000b72 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, fp}
 584:	00000006 	andeq	r0, r0, r6
 588:	08000b78 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, fp}
 58c:	00000006 	andeq	r0, r0, r6
 590:	08000b7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, fp}
 594:	00000006 	andeq	r0, r0, r6
 598:	08000b84 	stmdaeq	r0, {r2, r7, r8, r9, fp}
 59c:	00000006 	andeq	r0, r0, r6
 5a0:	08000b8a 	stmdaeq	r0, {r1, r3, r7, r8, r9, fp}
 5a4:	00000006 	andeq	r0, r0, r6
 5a8:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
 5ac:	00000006 	andeq	r0, r0, r6
 5b0:	08000b96 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, fp}
 5b4:	00000006 	andeq	r0, r0, r6
 5b8:	08000b9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, fp}
 5bc:	00000006 	andeq	r0, r0, r6
 5c0:	08000ba2 	stmdaeq	r0, {r1, r5, r7, r8, r9, fp}
 5c4:	00000006 	andeq	r0, r0, r6
 5c8:	08000ba8 	stmdaeq	r0, {r3, r5, r7, r8, r9, fp}
 5cc:	00000006 	andeq	r0, r0, r6
 5d0:	08000bae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9, fp}
 5d4:	00000006 	andeq	r0, r0, r6
 5d8:	08000bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp}
 5dc:	00000006 	andeq	r0, r0, r6
	...
 5e8:	0000002c 	andeq	r0, r0, ip, lsr #32
 5ec:	4a790002 	bmi	1e405fc <_Min_Stack_Size+0x1e401fc>
 5f0:	00040000 	andeq	r0, r4, r0
 5f4:	00000000 	andeq	r0, r0, r0
 5f8:	08000bba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, fp}
 5fc:	00000004 	andeq	r0, r0, r4
 600:	08000bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp}
 604:	000000a8 	andeq	r0, r0, r8, lsr #1
 608:	08000c68 	stmdaeq	r0, {r3, r5, r6, sl, fp}
 60c:	00000094 	muleq	r0, r4, r0
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	08000204 	stmdaeq	r0, {r2, r9}
   4:	08000206 	stmdaeq	r0, {r1, r2, r9}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
   8:	08000206 	stmdaeq	r0, {r1, r2, r9}
  __HAL_FLASH_DATA_CACHE_ENABLE();
   c:	08000208 	stmdaeq	r0, {r3, r9}
  10:	08000208 	stmdaeq	r0, {r3, r9}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  14:	0800020a 	stmdaeq	r0, {r1, r3, r9}
  18:	0800020a 	stmdaeq	r0, {r1, r3, r9}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  1c:	0800020c 	stmdaeq	r0, {r2, r3, r9}
  20:	0800020c 	stmdaeq	r0, {r2, r3, r9}
  HAL_InitTick(TICK_INT_PRIORITY);
  24:	0800020e 	stmdaeq	r0, {r1, r2, r3, r9}
  HAL_MspInit();
  28:	0800020e 	stmdaeq	r0, {r1, r2, r3, r9}
}
  2c:	08000210 	stmdaeq	r0, {r4, r9}
  30:	08000210 	stmdaeq	r0, {r4, r9}
  *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL);
  34:	08000212 	stmdaeq	r0, {r1, r4, r9}
  38:	08000212 	stmdaeq	r0, {r1, r4, r9}
  3c:	08000214 	stmdaeq	r0, {r2, r4, r9}
  *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL);
  40:	08000214 	stmdaeq	r0, {r2, r4, r9}
  44:	0800021c 	stmdaeq	r0, {r2, r3, r4, r9}
	...
    return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
  50:	00000001 	andeq	r0, r0, r1
  54:	00000001 	andeq	r0, r0, r1
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
  58:	00000001 	andeq	r0, r0, r1
  5c:	00000001 	andeq	r0, r0, r1
	...
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  68:	00000001 	andeq	r0, r0, r1
      SystemCoreClock = pllvco/pllp;
  6c:	00000001 	andeq	r0, r0, r1
  70:	00000001 	andeq	r0, r0, r1
      break;
  74:	00000001 	andeq	r0, r0, r1
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  78:	00000001 	andeq	r0, r0, r1
  7c:	00000001 	andeq	r0, r0, r1
  80:	00000001 	andeq	r0, r0, r1
  84:	00000001 	andeq	r0, r0, r1
  88:	00000001 	andeq	r0, r0, r1
  8c:	00000001 	andeq	r0, r0, r1
  90:	0800021c 	stmdaeq	r0, {r2, r3, r4, r9}
  94:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
  98:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
  9c:	08000450 	stmdaeq	r0, {r4, r6, sl}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
  a0:	00000001 	andeq	r0, r0, r1
  a4:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
  a8:	00000001 	andeq	r0, r0, r1
  ac:	00000001 	andeq	r0, r0, r1
  b0:	00000001 	andeq	r0, r0, r1
  b4:	00000001 	andeq	r0, r0, r1
  b8:	00000001 	andeq	r0, r0, r1
  if((plli2sused == 1U) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
  bc:	00000001 	andeq	r0, r0, r1
  c0:	00000001 	andeq	r0, r0, r1
  c4:	00000001 	andeq	r0, r0, r1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
  c8:	00000001 	andeq	r0, r0, r1
  cc:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
  d0:	00000001 	andeq	r0, r0, r1
  d4:	00000001 	andeq	r0, r0, r1
	...
  e0:	08000624 	stmdaeq	r0, {r2, r5, r9, sl}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1_AUDIO) == RCC_PERIPHCLK_DFSDM1_AUDIO)
  e4:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
  e8:	08000750 	stmdaeq	r0, {r4, r6, r8, r9, sl}
    __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
  ec:	0800075c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl}
	...
  f8:	00000001 	andeq	r0, r0, r1
  fc:	00000001 	andeq	r0, r0, r1
}
 100:	00000001 	andeq	r0, r0, r1
      plli2sused = 1U;
 104:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_PWR_CLK_ENABLE();
 108:	00000001 	andeq	r0, r0, r1
 10c:	00000001 	andeq	r0, r0, r1
 110:	00000001 	andeq	r0, r0, r1
 114:	00000001 	andeq	r0, r0, r1
 118:	00000001 	andeq	r0, r0, r1
 11c:	00000001 	andeq	r0, r0, r1
    PWR->CR |= PWR_CR_DBP;
 120:	00000001 	andeq	r0, r0, r1
 124:	00000001 	andeq	r0, r0, r1
 128:	00000001 	andeq	r0, r0, r1
    tickstart = HAL_GetTick();
 12c:	00000001 	andeq	r0, r0, r1
    while((PWR->CR & PWR_CR_DBP) == RESET)
 130:	08000450 	stmdaeq	r0, {r4, r6, sl}
 134:	08000860 	stmdaeq	r0, {r5, r6, fp}
 138:	00000001 	andeq	r0, r0, r1
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 13c:	00000001 	andeq	r0, r0, r1
	...
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 148:	0800086a 	stmdaeq	r0, {r1, r3, r5, r6, fp}
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 14c:	0800089c 	stmdaeq	r0, {r2, r3, r4, r7, fp}
 150:	080008b4 	stmdaeq	r0, {r2, r4, r5, r7, fp}
 154:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
	...
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 160:	0800089c 	stmdaeq	r0, {r2, r3, r4, r7, fp}
      __HAL_RCC_BACKUPRESET_FORCE();
 164:	080008b0 	stmdaeq	r0, {r4, r5, r7, fp}
 168:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
      __HAL_RCC_BACKUPRESET_RELEASE();
 16c:	080008c4 	stmdaeq	r0, {r2, r6, r7, fp}
	...
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 178:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 17c:	00000001 	andeq	r0, r0, r1
 180:	00000001 	andeq	r0, r0, r1
 184:	00000001 	andeq	r0, r0, r1
	...
 190:	00000001 	andeq	r0, r0, r1
 194:	00000001 	andeq	r0, r0, r1
 198:	00000001 	andeq	r0, r0, r1
 19c:	00000001 	andeq	r0, r0, r1
	...
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 1a8:	00000001 	andeq	r0, r0, r1
 1ac:	00000001 	andeq	r0, r0, r1
 1b0:	08000860 	stmdaeq	r0, {r5, r6, fp}
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1b4:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 1c0:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 1c4:	00000001 	andeq	r0, r0, r1
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
 1d4:	080008f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp}
 1d8:	00000001 	andeq	r0, r0, r1
      plli2sused = 1U;
 1dc:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_PLLI2S_DISABLE();
 1e0:	00000001 	andeq	r0, r0, r1
    tickstart = HAL_GetTick();
 1e4:	00000001 	andeq	r0, r0, r1
 1e8:	00000001 	andeq	r0, r0, r1
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 1ec:	00000001 	andeq	r0, r0, r1
 1f0:	00000001 	andeq	r0, r0, r1
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 1f4:	00000001 	andeq	r0, r0, r1
 1f8:	00000001 	andeq	r0, r0, r1
 1fc:	00000001 	andeq	r0, r0, r1
        return HAL_TIMEOUT;
 200:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_PLL_I2S_CONFIG(PeriphClkInit->PLLI2SSelection);
 204:	00000001 	andeq	r0, r0, r1
 208:	00000001 	andeq	r0, r0, r1
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB1) == RCC_PERIPHCLK_I2S_APB1) && (PeriphClkInit->I2sApb1ClockSelection == RCC_I2SAPB1CLKSOURCE_PLLI2S)) ||
 20c:	00000001 	andeq	r0, r0, r1
 210:	00000001 	andeq	r0, r0, r1
 214:	00000001 	andeq	r0, r0, r1
 218:	00000001 	andeq	r0, r0, r1
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB2) == RCC_PERIPHCLK_I2S_APB2) && (PeriphClkInit->I2sApb2ClockSelection == RCC_I2SAPB2CLKSOURCE_PLLI2S)) ||
 21c:	00000001 	andeq	r0, r0, r1
 220:	00000001 	andeq	r0, r0, r1
 224:	00000001 	andeq	r0, r0, r1
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)) ||
 228:	00000001 	andeq	r0, r0, r1
 22c:	00000001 	andeq	r0, r0, r1
 230:	00000001 	andeq	r0, r0, r1
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO) && (PeriphClkInit->SdioClockSelection == RCC_SDIOCLKSOURCE_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)))
 234:	00000001 	andeq	r0, r0, r1
	...
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 240:	00000001 	andeq	r0, r0, r1
 244:	00000001 	andeq	r0, r0, r1
 248:	00000001 	andeq	r0, r0, r1
 24c:	00000001 	andeq	r0, r0, r1
 250:	00000001 	andeq	r0, r0, r1
 254:	00000001 	andeq	r0, r0, r1
 258:	080008f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp}
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 25c:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
 260:	00000001 	andeq	r0, r0, r1
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 264:	00000001 	andeq	r0, r0, r1
 268:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
 26c:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
 270:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
 274:	08000968 	stmdaeq	r0, {r3, r5, r6, r8, fp}
 278:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_PLLI2S_ENABLE();
 27c:	00000001 	andeq	r0, r0, r1
 280:	00000001 	andeq	r0, r0, r1
    tickstart = HAL_GetTick();
 284:	00000001 	andeq	r0, r0, r1
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 288:	00000001 	andeq	r0, r0, r1
 28c:	00000001 	andeq	r0, r0, r1
 290:	08000968 	stmdaeq	r0, {r3, r5, r6, r8, fp}
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 294:	08000990 	stmdaeq	r0, {r4, r7, r8, fp}
 298:	00000001 	andeq	r0, r0, r1
 29c:	00000001 	andeq	r0, r0, r1
        return HAL_TIMEOUT;
 2a0:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 2a4:	00000001 	andeq	r0, r0, r1
 2a8:	00000001 	andeq	r0, r0, r1
 2ac:	00000001 	andeq	r0, r0, r1
 2b0:	00000001 	andeq	r0, r0, r1
 2b4:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2b8:	00000001 	andeq	r0, r0, r1
 2bc:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 2c0:	00000001 	andeq	r0, r0, r1
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 2c4:	00000001 	andeq	r0, r0, r1
 2c8:	00000001 	andeq	r0, r0, r1
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 2cc:	00000001 	andeq	r0, r0, r1
 2d0:	00000001 	andeq	r0, r0, r1
 2d4:	00000001 	andeq	r0, r0, r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 2d8:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_DISABLE();
 2dc:	00000001 	andeq	r0, r0, r1
 2e0:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 2e4:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 2e8:	00000001 	andeq	r0, r0, r1
 2ec:	00000001 	andeq	r0, r0, r1
 2f0:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 2f4:	00000001 	andeq	r0, r0, r1
 2f8:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 2fc:	00000001 	andeq	r0, r0, r1
      __HAL_RCC_PWR_CLK_DISABLE();
 300:	00000001 	andeq	r0, r0, r1
 304:	00000001 	andeq	r0, r0, r1
 308:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_DISABLE();
 30c:	00000001 	andeq	r0, r0, r1
 310:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 314:	00000001 	andeq	r0, r0, r1
	...
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 320:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 324:	00000001 	andeq	r0, r0, r1
 328:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 32c:	00000001 	andeq	r0, r0, r1
	...
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 338:	08000990 	stmdaeq	r0, {r4, r7, r8, fp}
 33c:	080009e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp}
 340:	080009e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp}
 344:	080009e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, fp}
 348:	00000001 	andeq	r0, r0, r1
 34c:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_ENABLE();
 350:	00000001 	andeq	r0, r0, r1
 354:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 358:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 35c:	00000001 	andeq	r0, r0, r1
 360:	00000001 	andeq	r0, r0, r1
 364:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 368:	00000001 	andeq	r0, r0, r1
 36c:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 370:	00000001 	andeq	r0, r0, r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 374:	00000001 	andeq	r0, r0, r1
        pll_config = RCC->PLLCFGR;
 378:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 37c:	00000001 	andeq	r0, r0, r1
 380:	00000001 	andeq	r0, r0, r1
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 384:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 388:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 38c:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 390:	080009e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 394:	080009ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, fp}
 398:	080009ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, fp}
 39c:	080009f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 3a0:	080009f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, fp}
 3a4:	080009f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 3a8:	080009f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, fp}
 3ac:	080009fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 3b0:	080009fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 3b4:	08000a04 	stmdaeq	r0, {r2, r9, fp}
 3b8:	08000a04 	stmdaeq	r0, {r2, r9, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 3bc:	08000a0a 	stmdaeq	r0, {r1, r3, r9, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 3c0:	08000a0a 	stmdaeq	r0, {r1, r3, r9, fp}
 3c4:	08000a10 	stmdaeq	r0, {r4, r9, fp}
  return HAL_OK;
 3c8:	08000a10 	stmdaeq	r0, {r4, r9, fp}
}
 3cc:	08000a16 	stmdaeq	r0, {r1, r2, r4, r9, fp}
        return HAL_ERROR;
 3d0:	08000a16 	stmdaeq	r0, {r1, r2, r4, r9, fp}
        return HAL_ERROR;
 3d4:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
}
 3d8:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
  return HAL_OK;
 3dc:	08000a22 	stmdaeq	r0, {r1, r5, r9, fp}
 3e0:	08000a22 	stmdaeq	r0, {r1, r5, r9, fp}
        return HAL_ERROR;
 3e4:	08000a28 	stmdaeq	r0, {r3, r5, r9, fp}
          return HAL_ERROR;
 3e8:	08000a28 	stmdaeq	r0, {r3, r5, r9, fp}
 3ec:	08000a2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, fp}
 3f0:	08000a2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, fp}
 3f4:	08000a34 	stmdaeq	r0, {r2, r4, r5, r9, fp}
 3f8:	08000a34 	stmdaeq	r0, {r2, r4, r5, r9, fp}
 3fc:	08000a3a 	stmdaeq	r0, {r1, r3, r4, r5, r9, fp}
 400:	08000a3a 	stmdaeq	r0, {r1, r3, r4, r5, r9, fp}
 404:	08000a40 	stmdaeq	r0, {r6, r9, fp}
 408:	08000a40 	stmdaeq	r0, {r6, r9, fp}
 40c:	08000a46 	stmdaeq	r0, {r1, r2, r6, r9, fp}
 410:	08000a46 	stmdaeq	r0, {r1, r2, r6, r9, fp}
 414:	08000a4c 	stmdaeq	r0, {r2, r3, r6, r9, fp}
 418:	08000a4c 	stmdaeq	r0, {r2, r3, r6, r9, fp}
 41c:	08000a52 	stmdaeq	r0, {r1, r4, r6, r9, fp}
 420:	08000a52 	stmdaeq	r0, {r1, r4, r6, r9, fp}
 424:	08000a58 	stmdaeq	r0, {r3, r4, r6, r9, fp}
 428:	08000a58 	stmdaeq	r0, {r3, r4, r6, r9, fp}
 42c:	08000a5e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r9, fp}
 430:	08000a5e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r9, fp}
 434:	08000a64 	stmdaeq	r0, {r2, r5, r6, r9, fp}
 438:	08000a64 	stmdaeq	r0, {r2, r5, r6, r9, fp}
 43c:	08000a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp}
 440:	08000a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp}
 444:	08000a70 	stmdaeq	r0, {r4, r5, r6, r9, fp}
 448:	08000a70 	stmdaeq	r0, {r4, r5, r6, r9, fp}
 44c:	08000a76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, fp}
 450:	08000a76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, fp}
 454:	08000a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp}
 458:	08000a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp}
 45c:	08000a82 	stmdaeq	r0, {r1, r7, r9, fp}
 460:	08000a82 	stmdaeq	r0, {r1, r7, r9, fp}
 464:	08000a88 	stmdaeq	r0, {r3, r7, r9, fp}
 468:	08000a88 	stmdaeq	r0, {r3, r7, r9, fp}
 46c:	08000a8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, fp}
 470:	08000a8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, fp}
 474:	08000a94 	stmdaeq	r0, {r2, r4, r7, r9, fp}
 478:	08000a94 	stmdaeq	r0, {r2, r4, r7, r9, fp}
 47c:	08000a9a 	stmdaeq	r0, {r1, r3, r4, r7, r9, fp}
 480:	08000a9a 	stmdaeq	r0, {r1, r3, r4, r7, r9, fp}
 484:	08000aa0 	stmdaeq	r0, {r5, r7, r9, fp}
 488:	08000aa0 	stmdaeq	r0, {r5, r7, r9, fp}
 48c:	08000aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp}
 490:	08000aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp}
 494:	08000aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp}
 498:	08000aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp}
 49c:	08000ab2 	stmdaeq	r0, {r1, r4, r5, r7, r9, fp}
 4a0:	08000ab2 	stmdaeq	r0, {r1, r4, r5, r7, r9, fp}
 4a4:	08000ab8 	stmdaeq	r0, {r3, r4, r5, r7, r9, fp}
 4a8:	08000ab8 	stmdaeq	r0, {r3, r4, r5, r7, r9, fp}
 4ac:	08000abe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, fp}
 4b0:	08000abe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, fp}
 4b4:	08000ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp}
 4b8:	08000ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp}
 4bc:	08000aca 	stmdaeq	r0, {r1, r3, r6, r7, r9, fp}
 4c0:	08000aca 	stmdaeq	r0, {r1, r3, r6, r7, r9, fp}
 4c4:	08000ad0 	stmdaeq	r0, {r4, r6, r7, r9, fp}
 4c8:	08000ad0 	stmdaeq	r0, {r4, r6, r7, r9, fp}
 4cc:	08000ad6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9, fp}
 4d0:	08000ad6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9, fp}
 4d4:	08000adc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, fp}
 4d8:	08000adc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, fp}
 4dc:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
 4e0:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
 4e4:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
 4e8:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
 4ec:	08000aee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, fp}
 4f0:	08000aee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, fp}
 4f4:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
 4f8:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
 4fc:	08000afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp}
 500:	08000afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp}
 504:	08000b00 	stmdaeq	r0, {r8, r9, fp}
 508:	08000b00 	stmdaeq	r0, {r8, r9, fp}
 50c:	08000b06 	stmdaeq	r0, {r1, r2, r8, r9, fp}
 510:	08000b06 	stmdaeq	r0, {r1, r2, r8, r9, fp}
 514:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
 518:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
 51c:	08000b12 	stmdaeq	r0, {r1, r4, r8, r9, fp}
 520:	08000b12 	stmdaeq	r0, {r1, r4, r8, r9, fp}
 524:	08000b18 	stmdaeq	r0, {r3, r4, r8, r9, fp}
 528:	08000b18 	stmdaeq	r0, {r3, r4, r8, r9, fp}
 52c:	08000b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp}
 530:	08000b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp}
 534:	08000b24 	stmdaeq	r0, {r2, r5, r8, r9, fp}
 538:	08000b24 	stmdaeq	r0, {r2, r5, r8, r9, fp}
 53c:	08000b2a 	stmdaeq	r0, {r1, r3, r5, r8, r9, fp}
 540:	08000b2a 	stmdaeq	r0, {r1, r3, r5, r8, r9, fp}
 544:	08000b30 	stmdaeq	r0, {r4, r5, r8, r9, fp}
 548:	08000b30 	stmdaeq	r0, {r4, r5, r8, r9, fp}
 54c:	08000b36 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, fp}
 550:	08000b36 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, fp}
 554:	08000b3c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, fp}
 558:	08000b3c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, fp}
 55c:	08000b42 	stmdaeq	r0, {r1, r6, r8, r9, fp}
 560:	08000b42 	stmdaeq	r0, {r1, r6, r8, r9, fp}
 564:	08000b48 	stmdaeq	r0, {r3, r6, r8, r9, fp}
 568:	08000b48 	stmdaeq	r0, {r3, r6, r8, r9, fp}
 56c:	08000b4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, fp}
 570:	08000b4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, fp}
 574:	08000b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp}
 578:	08000b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp}
 57c:	08000b5a 	stmdaeq	r0, {r1, r3, r4, r6, r8, r9, fp}
 580:	08000b5a 	stmdaeq	r0, {r1, r3, r4, r6, r8, r9, fp}
 584:	08000b60 	stmdaeq	r0, {r5, r6, r8, r9, fp}
 588:	08000b60 	stmdaeq	r0, {r5, r6, r8, r9, fp}
 58c:	08000b66 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, fp}
 590:	08000b66 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, fp}
 594:	08000b6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, fp}
 598:	08000b6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, fp}
 59c:	08000b72 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, fp}
 5a0:	08000b72 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, fp}
 5a4:	08000b78 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, fp}
 5a8:	08000b78 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, fp}
 5ac:	08000b7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, fp}
 5b0:	08000b7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, fp}
 5b4:	08000b84 	stmdaeq	r0, {r2, r7, r8, r9, fp}
 5b8:	08000b84 	stmdaeq	r0, {r2, r7, r8, r9, fp}
 5bc:	08000b8a 	stmdaeq	r0, {r1, r3, r7, r8, r9, fp}
 5c0:	08000b8a 	stmdaeq	r0, {r1, r3, r7, r8, r9, fp}
 5c4:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
 5c8:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
 5cc:	08000b96 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, fp}
 5d0:	08000b96 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, fp}
 5d4:	08000b9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, fp}
 5d8:	08000b9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, fp}
 5dc:	08000ba2 	stmdaeq	r0, {r1, r5, r7, r8, r9, fp}
 5e0:	08000ba2 	stmdaeq	r0, {r1, r5, r7, r8, r9, fp}
 5e4:	08000ba8 	stmdaeq	r0, {r3, r5, r7, r8, r9, fp}
 5e8:	08000ba8 	stmdaeq	r0, {r3, r5, r7, r8, r9, fp}
 5ec:	08000bae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9, fp}
 5f0:	08000bae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9, fp}
 5f4:	08000bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp}
 5f8:	08000bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp}
 5fc:	08000bba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, fp}
	...
 608:	08000bba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, fp}
 60c:	08000bbe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, r9, fp}
 610:	08000bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp}
 614:	08000c68 	stmdaeq	r0, {r3, r5, r6, sl, fp}
 618:	08000c68 	stmdaeq	r0, {r3, r5, r6, sl, fp}
 61c:	08000cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp}
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	00000156 	andeq	r0, r0, r6, asr r1
       4:	00620003 	rsbeq	r0, r2, r3
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
       8:	01020000 	mrseq	r0, (UNDEF: 2)
  __HAL_FLASH_DATA_CACHE_ENABLE();
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	43010000 	movwmi	r0, #4096	; 0x1000
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
      1c:	2f65726f 	svccs	0x0065726f
      20:	00637253 	rsbeq	r7, r3, r3, asr r2
  HAL_InitTick(TICK_INT_PRIORITY);
      24:	76697244 	strbtvc	r7, [r9], -r4, asr #4
  HAL_MspInit();
      28:	2f737265 	svccs	0x00737265
}
      2c:	334d5453 	movtcc	r5, #54355	; 0xd453
      30:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
  *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL);
      34:	41485f78 	hvcmi	34296	; 0x85f8
      38:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
      3c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
  *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL);
      40:	636e492f 	cmnvs	lr, #770048	; 0xbc000
      44:	74730000 	ldrbtvc	r0, [r3], #-0
      48:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
      4c:	5f787834 	svcpl	0x00787834
      50:	632e7469 			; <UNDEFINED> instruction: 0x632e7469
      54:	00000100 	andeq	r0, r0, r0, lsl #2
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
      58:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
      5c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	61685f78 	smcvs	34296	; 0x85f8
      64:	00682e6c 	rsbeq	r2, r8, ip, ror #28
      68:	00000002 	andeq	r0, r0, r2
      SystemCoreClock = pllvco/pllp;
      6c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
      70:	00020402 	andeq	r0, r2, r2, lsl #8
      break;
      74:	00c60308 	sbceq	r0, r6, r8, lsl #6
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	00030501 	andeq	r0, r3, r1, lsl #10
      7c:	17010402 	strne	r0, [r1, -r2, lsl #8]
      80:	01040200 	mrseq	r0, R12_usr
      84:	00010201 	andeq	r0, r1, r1, lsl #4
      88:	01050101 	tsteq	r5, r1, lsl #2
      8c:	06020500 	streq	r0, [r2], -r0, lsl #10
      90:	03080002 	movweq	r0, #32770	; 0x8002
      94:	050100d5 	streq	r0, [r1, #-213]	; 0xffffff2b
      98:	04020003 	streq	r0, [r2], #-3
      9c:	02001601 	andeq	r1, r0, #1048576	; 0x100000
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
      a0:	02010104 	andeq	r0, r1, #4, 2
      a4:	01010001 	tsteq	r1, r1
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
      a8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
      ac:	00020802 	andeq	r0, r2, r2, lsl #16
      b0:	00e40308 	rsceq	r0, r4, r8, lsl #6
      b4:	00030501 	andeq	r0, r3, r1, lsl #10
      b8:	16010402 	strne	r0, [r1], -r2, lsl #8
  if((plli2sused == 1U) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
      bc:	01040200 	mrseq	r0, R12_usr
      c0:	00010201 	andeq	r0, r1, r1, lsl #4
      c4:	01050101 	tsteq	r5, r1, lsl #2
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
      c8:	0a020500 	beq	814d0 <_Min_Stack_Size+0x810d0>
      cc:	03080002 	movweq	r0, #32770	; 0x8002
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
      d0:	050100f3 	streq	r0, [r1, #-243]	; 0xffffff0d
      d4:	04020003 	streq	r0, [r2], #-3
      d8:	02001601 	andeq	r1, r0, #1048576	; 0x100000
      dc:	02010104 	andeq	r0, r1, #4, 2
      e0:	01010001 	tsteq	r1, r1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1_AUDIO) == RCC_PERIPHCLK_DFSDM1_AUDIO)
      e4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
      e8:	00020c02 	andeq	r0, r2, r2, lsl #24
    __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
      ec:	01820308 	orreq	r0, r2, r8, lsl #6
      f0:	00030501 	andeq	r0, r3, r1, lsl #10
      f4:	16010402 	strne	r0, [r1], -r2, lsl #8
      f8:	01040200 	mrseq	r0, R12_usr
      fc:	00010201 	andeq	r0, r1, r1, lsl #4
}
     100:	01050101 	tsteq	r5, r1, lsl #2
      plli2sused = 1U;
     104:	0e020500 	cfsh32eq	mvfx0, mvfx2, #0
    __HAL_RCC_PWR_CLK_ENABLE();
     108:	03080002 	movweq	r0, #32770	; 0x8002
     10c:	06010191 			; <UNDEFINED> instruction: 0x06010191
     110:	00010219 	andeq	r0, r1, r9, lsl r2
     114:	01050101 	tsteq	r5, r1, lsl #2
     118:	10020500 	andne	r0, r2, r0, lsl #10
     11c:	03080002 	movweq	r0, #32770	; 0x8002
    PWR->CR |= PWR_CR_DBP;
     120:	0601019e 			; <UNDEFINED> instruction: 0x0601019e
     124:	00010219 	andeq	r0, r1, r9, lsl r2
     128:	01050101 	tsteq	r5, r1, lsl #2
    tickstart = HAL_GetTick();
     12c:	12020500 	andne	r0, r2, #0, 10
    while((PWR->CR & PWR_CR_DBP) == RESET)
     130:	03080002 	movweq	r0, #32770	; 0x8002
     134:	060101ab 	streq	r0, [r1], -fp, lsr #3
     138:	00010219 	andeq	r0, r1, r9, lsl r2
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
     13c:	01050101 	tsteq	r5, r1, lsl #2
     140:	14020500 	strne	r0, [r2], #-1280	; 0xfffffb00
        return HAL_TIMEOUT;
     144:	03080002 	movweq	r0, #32770	; 0x8002
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
     148:	050101b8 	streq	r0, [r1, #-440]	; 0xfffffe48
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
     14c:	0e052403 	cdpeq	4, 0, cr2, cr5, cr3, {0}
     150:	01050106 	tsteq	r5, r6, lsl #2
     154:	00010232 	andeq	r0, r1, r2, lsr r2
     158:	0b0b0101 	bleq	2c0564 <_Min_Stack_Size+0x2c0164>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
     15c:	00030000 	andeq	r0, r3, r0
     160:	000001e8 	andeq	r0, r0, r8, ror #3
      __HAL_RCC_BACKUPRESET_FORCE();
     164:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     168:	0101000d 	tsteq	r1, sp
      __HAL_RCC_BACKUPRESET_RELEASE();
     16c:	00000101 	andeq	r0, r0, r1, lsl #2
     170:	00000100 	andeq	r0, r0, r0, lsl #2
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
     174:	69724401 	ldmdbvs	r2!, {r0, sl, lr}^
     178:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
     17c:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     180:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     184:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     188:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 190 <_Min_Heap_Size-0x70>
     18c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     190:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
     194:	752f0063 	strvc	r0, [pc, #-99]!	; 139 <_Min_Heap_Size-0xc7>
     198:	622f7273 	eorvs	r7, pc, #805306375	; 0x30000007
     19c:	672f6e69 	strvs	r6, [pc, -r9, ror #28]!
     1a0:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
        tickstart = HAL_GetTick();
     1a4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     1a8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     1ac:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     1b0:	2e30312d 	rsfcssp	f3, f0, #5.0
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     1b4:	30322d33 	eorscc	r2, r2, r3, lsr sp
     1b8:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     1bc:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
            return HAL_TIMEOUT;
     1c0:	6f6e2d6d 	svcvs	0x006e2d6d
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
     1c4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     1c8:	2f696261 	svccs	0x00696261
     1cc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     1d0:	2f656475 	svccs	0x00656475
     1d4:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     1d8:	00656e69 	rsbeq	r6, r5, r9, ror #28
      plli2sused = 1U;
     1dc:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    __HAL_RCC_PLLI2S_DISABLE();
     1e0:	6e69622f 	cdpvs	2, 6, cr6, cr9, cr15, {1}
    tickstart = HAL_GetTick();
     1e4:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
     1e8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
     1ec:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     1f0:	61652d65 	cmnvs	r5, r5, ror #26
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
     1f4:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     1f8:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     1fc:	31323032 	teqcc	r2, r2, lsr r0
        return HAL_TIMEOUT;
     200:	2f30312e 	svccs	0x0030312e
    __HAL_RCC_PLL_I2S_CONFIG(PeriphClkInit->PLLI2SSelection);
     204:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     208:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB1) == RCC_PERIPHCLK_I2S_APB1) && (PeriphClkInit->I2sApb1ClockSelection == RCC_I2SAPB1CLKSOURCE_PLLI2S)) ||
     20c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     210:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
     214:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     218:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB2) == RCC_PERIPHCLK_I2S_APB2) && (PeriphClkInit->I2sApb2ClockSelection == RCC_I2SAPB2CLKSOURCE_PLLI2S)) ||
     21c:	72440073 	subvc	r0, r4, #115	; 0x73
     220:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     224:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)) ||
     228:	2f534953 	svccs	0x00534953
     22c:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     230:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO) && (PeriphClkInit->SdioClockSelection == RCC_SDIOCLKSOURCE_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)))
     234:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
     238:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     23c:	2f787834 	svccs	0x00787834
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
     240:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     244:	00656475 	rsbeq	r6, r5, r5, ror r4
     248:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     24c:	2f737265 	svccs	0x00737265
     250:	334d5453 	movtcc	r5, #54355	; 0xd453
     254:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     258:	41485f78 	hvcmi	34296	; 0x85f8
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
     25c:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
     260:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
     264:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     268:	74730000 	ldrbtvc	r0, [r3], #-0
     26c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     270:	5f787834 	svcpl	0x00787834
     274:	5f6c6168 	svcpl	0x006c6168
     278:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    __HAL_RCC_PLLI2S_ENABLE();
     27c:	00010063 	andeq	r0, r1, r3, rrx
     280:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    tickstart = HAL_GetTick();
     284:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
     288:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     28c:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     290:	00020068 	andeq	r0, r2, r8, rrx
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
     294:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     298:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     29c:	0300682e 	movweq	r6, #2094	; 0x82e
        return HAL_TIMEOUT;
     2a0:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
  return HAL_OK;
     2a4:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     2a8:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
     2ac:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     2b0:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     2b4:	00000400 	andeq	r0, r0, r0, lsl #8
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2b8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     2bc:	31346632 	teqcc	r4, r2, lsr r6
          return HAL_TIMEOUT;
     2c0:	2e787a32 			; <UNDEFINED> instruction: 0x2e787a32
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     2c4:	00040068 	andeq	r0, r4, r8, rrx
     2c8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     2cc:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     2d0:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     2d4:	00000400 	andeq	r0, r0, r0, lsl #8
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     2d8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
        __HAL_RCC_PLL_DISABLE();
     2dc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     2e0:	61685f78 	smcvs	34296	; 0x85f8
        tickstart = HAL_GetTick();
     2e4:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     2e8:	00682e66 	rsbeq	r2, r8, r6, ror #28
     2ec:	73000005 	movwvc	r0, #5
     2f0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     2f4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     2f8:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
            return HAL_TIMEOUT;
     2fc:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
      __HAL_RCC_PWR_CLK_DISABLE();
     300:	2e78655f 	mrccs	5, 3, r6, cr8, cr15, {2}
     304:	00050068 	andeq	r0, r5, r8, rrx
     308:	6d747300 	ldclvs	3, cr7, [r4, #-0]
        __HAL_RCC_PLL_DISABLE();
     30c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     310:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
        tickstart = HAL_GetTick();
     314:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     318:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
     31c:	00000500 	andeq	r0, r0, r0, lsl #10
     320:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     324:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     328:	61685f78 	smcvs	34296	; 0x85f8
            return HAL_TIMEOUT;
     32c:	70675f6c 	rsbvc	r5, r7, ip, ror #30
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     330:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     334:	00000500 	andeq	r0, r0, r0, lsl #10
     338:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     33c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     340:	61685f78 	smcvs	34296	; 0x85f8
     344:	00682e6c 	rsbeq	r2, r8, ip, ror #28
     348:	00000005 	andeq	r0, r0, r5
     34c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
        __HAL_RCC_PLL_ENABLE();
     350:	00000002 	andeq	r0, r0, r2
     354:	01ca0300 	biceq	r0, sl, r0, lsl #6
        tickstart = HAL_GetTick();
     358:	13030501 	movwne	r0, #13569	; 0x3501
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     35c:	13060105 	movwne	r0, #24837	; 0x6105
     360:	01000202 	tsteq	r0, r2, lsl #4
     364:	00010501 	andeq	r0, r1, r1, lsl #10
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     368:	00000205 	andeq	r0, r0, r5, lsl #4
     36c:	dd030000 	stcle	0, cr0, [r3, #-0]
            return HAL_TIMEOUT;
     370:	03050101 	movweq	r0, #20737	; 0x5101
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     374:	01051513 	tsteq	r5, r3, lsl r5
        pll_config = RCC->PLLCFGR;
     378:	03053806 	movweq	r3, #22534	; 0x5806
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     37c:	3c0a0306 	stccc	3, cr0, [sl], {6}
     380:	061b0514 			; <UNDEFINED> instruction: 0x061b0514
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     384:	20030501 	andcs	r0, r3, r1, lsl #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     388:	3f060505 	svccc	0x00060505
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     38c:	06090514 			; <UNDEFINED> instruction: 0x06090514
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     390:	4a3c0501 	bmi	f0179c <_Min_Stack_Size+0xf0139c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     394:	02000905 	andeq	r0, r0, #81920	; 0x14000
     398:	052f0204 	streq	r0, [pc, #-516]!	; 19c <_Min_Heap_Size-0x64>
     39c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     3a0:	07054902 	streq	r4, [r5, -r2, lsl #18]
     3a4:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     3a8:	04020001 	streq	r0, [r2], #-1
     3ac:	02004a02 	andeq	r4, r0, #8192	; 0x2000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
     3b0:	003c0404 	eorseq	r0, ip, r4, lsl #8
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     3b4:	58040402 	stmdapl	r4, {r1, sl}
     3b8:	061e054d 	ldreq	r0, [lr], -sp, asr #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
     3bc:	20070501 	andcs	r0, r7, r1, lsl #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
     3c0:	31060905 	tstcc	r6, r5, lsl #18
     3c4:	01062005 	tsteq	r6, r5
  return HAL_OK;
     3c8:	0609052e 	streq	r0, [r9], -lr, lsr #10
}
     3cc:	01330523 	teqeq	r3, r3, lsr #10
        return HAL_ERROR;
     3d0:	01060f05 	tsteq	r6, r5, lsl #30
        return HAL_ERROR;
     3d4:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
}
     3d8:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
  return HAL_OK;
     3dc:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     3e0:	0b052e1d 	bleq	14bc5c <_Min_Stack_Size+0x14b85c>
        return HAL_ERROR;
     3e4:	30140520 	andscc	r0, r4, r0, lsr #10
          return HAL_ERROR;
     3e8:	69034605 	stmdbvs	r3, {r0, r2, r9, sl, lr}
     3ec:	2e3c052e 	cdpcs	5, 3, cr0, cr12, cr14, {1}
     3f0:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
     3f4:	01060b05 	tsteq	r6, r5, lsl #22
     3f8:	052e3905 	streq	r3, [lr, #-2309]!	; 0xfffff6fb
     3fc:	04020050 	streq	r0, [r2], #-80	; 0xffffffb0
     400:	39053c01 	stmdbcc	r5, {r0, sl, fp, ip, sp}
     404:	01040200 	mrseq	r0, R12_usr
     408:	06030520 	streq	r0, [r3], -r0, lsr #10
     40c:	053c2a03 	ldreq	r2, [ip, #-2563]!	; 0xfffff5fd
     410:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
     414:	05052003 	streq	r2, [r5, #-3]
     418:	15133f06 	ldrne	r3, [r3, #-3846]	; 0xfffff0fa
     41c:	01060905 	tsteq	r6, r5, lsl #18
     420:	052e3c05 	streq	r3, [lr, #-3077]!	; 0xfffff3fb
     424:	04020009 	streq	r0, [r2], #-9
     428:	3c053d02 	stccc	13, cr3, [r5], {2}
     42c:	02040200 	andeq	r0, r4, #0, 4
     430:	06070549 	streq	r0, [r7], -r9, asr #10
     434:	052e1203 	streq	r1, [lr, #-515]!	; 0xfffffdfd
     438:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
     43c:	09052007 	stmdbeq	r5, {r0, r1, r2, sp}
     440:	2e170306 	cdpcs	3, 1, cr0, cr7, cr6, {0}
     444:	0620053f 			; <UNDEFINED> instruction: 0x0620053f
     448:	06090501 	streq	r0, [r9], -r1, lsl #10
     44c:	0133053f 	teqeq	r3, pc, lsr r5
     450:	01060f05 	tsteq	r6, r5, lsl #30
     454:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
     458:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
     45c:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     460:	0b052e1d 	bleq	14bcdc <_Min_Stack_Size+0x14b8dc>
     464:	30140520 	andscc	r0, r4, r0, lsr #10
     468:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     46c:	03060104 	movweq	r0, #24836	; 0x6104
     470:	002e7fa4 	eoreq	r7, lr, r4, lsr #31
     474:	66030402 	strvs	r0, [r3], -r2, lsl #8
     478:	03040200 	movweq	r0, #16896	; 0x4200
     47c:	03090558 	movweq	r0, #38232	; 0x9558
     480:	20055814 	andcs	r5, r5, r4, lsl r8
     484:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     488:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
     48c:	0f050133 	svceq	0x00050133
     490:	33050106 	movwcc	r0, #20742	; 0x5106
     494:	060b052e 	streq	r0, [fp], -lr, lsr #10
     498:	061a053e 			; <UNDEFINED> instruction: 0x061a053e
     49c:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
     4a0:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
     4a4:	46053014 			; <UNDEFINED> instruction: 0x46053014
     4a8:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
     4ac:	07052e3c 	smladxeq	r5, ip, lr, r2
     4b0:	0b053f06 	bleq	1500d0 <_Min_Stack_Size+0x14fcd0>
     4b4:	39050106 	stmdbcc	r5, {r1, r2, r8}
     4b8:	0050052e 	subseq	r0, r0, lr, lsr #10
     4bc:	3c010402 	cfstrscc	mvf0, [r1], {2}
     4c0:	02003905 	andeq	r3, r0, #81920	; 0x14000
     4c4:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     4c8:	05440609 	strbeq	r0, [r4, #-1545]	; 0xfffff9f7
     4cc:	822e0303 	eorhi	r0, lr, #201326592	; 0xc000000
     4d0:	01061b05 	tsteq	r6, r5, lsl #22
     4d4:	05200305 	streq	r0, [r0, #-773]!	; 0xfffffcfb
     4d8:	153f0605 	ldrne	r0, [pc, #-1541]!	; fffffedb <_estack+0xdffbfedb>
     4dc:	01061c05 	tsteq	r6, r5, lsl #24
     4e0:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
     4e4:	4d230607 	stcmi	6, cr0, [r3, #-28]!	; 0xffffffe4
     4e8:	01061e05 	tsteq	r6, r5, lsl #28
     4ec:	3f060705 	svccc	0x00060705
     4f0:	05013105 	streq	r3, [r1, #-261]	; 0xfffffefb
     4f4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     4f8:	09052e31 	stmdbeq	r5, {r0, r4, r5, r9, sl, fp, sp}
     4fc:	18053e06 	stmdane	r5, {r1, r2, r9, sl, fp, ip, sp}
     500:	1b050106 	blne	140920 <_Min_Stack_Size+0x140520>
     504:	2009052e 	andcs	r0, r9, lr, lsr #10
     508:	05301205 	ldreq	r1, [r0, #-517]!	; 0xfffffdfb
     50c:	48030609 	stmdami	r3, {r0, r3, r9, sl}
     510:	20053f2e 	andcs	r3, r5, lr, lsr #30
     514:	09050106 	stmdbeq	r5, {r1, r2, r8}
     518:	33053f06 	movwcc	r3, #24326	; 0x5f06
     51c:	060f0501 	streq	r0, [pc], -r1, lsl #10
     520:	2e330501 	cdpcs	5, 3, cr0, cr3, cr1, {0}
     524:	3e060b05 	vmlacc.f64	d0, d6, d5
     528:	01061a05 	tsteq	r6, r5, lsl #20
     52c:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
     530:	1405200b 	strne	r2, [r5], #-11
     534:	06090530 			; <UNDEFINED> instruction: 0x06090530
     538:	03070533 	movweq	r0, #30003	; 0x7533
     53c:	054d9030 	strbeq	r9, [sp, #-48]	; 0xffffffd0
     540:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
     544:	053f0607 	ldreq	r0, [pc, #-1543]!	; ffffff45 <_estack+0xdffbff45>
     548:	0d050131 	stfeqs	f0, [r5, #-196]	; 0xffffff3c
     54c:	31050106 	tstcc	r5, r6, lsl #2
     550:	0609052e 	streq	r0, [r9], -lr, lsr #10
     554:	0618053e 			; <UNDEFINED> instruction: 0x0618053e
     558:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
     55c:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
     560:	03053012 	movweq	r3, #20498	; 0x5012
     564:	1b053406 	blne	14d584 <_Min_Stack_Size+0x14d184>
     568:	03050106 	movweq	r0, #20742	; 0x5106
     56c:	06050520 	streq	r0, [r5], -r0, lsr #10
     570:	0516153e 	ldreq	r1, [r6, #-1342]	; 0xfffffac2
     574:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     578:	07052e05 	streq	r2, [r5, -r5, lsl #28]
     57c:	2e013e06 	cdpcs	14, 0, cr3, cr1, cr6, {0}
     580:	05214a58 	streq	r4, [r1, #-2648]!	; 0xfffff5a8
     584:	20010615 	andcs	r0, r1, r5, lsl r6
     588:	15060505 	strne	r0, [r6, #-1285]	; 0xfffffafb
     58c:	01060805 	tsteq	r6, r5, lsl #16
     590:	062e0505 	strteq	r0, [lr], -r5, lsl #10
     594:	013c1203 	teqeq	ip, r3, lsl #4
     598:	02040200 	andeq	r0, r4, #0, 4
     59c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
     5a0:	02002e04 	andeq	r2, r0, #4, 28	; 0x40
     5a4:	4c580404 	cfldrdmi	mvd0, [r8], {4}
     5a8:	01061c05 	tsteq	r6, r5, lsl #24
     5ac:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
     5b0:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
     5b4:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
     5b8:	053f0607 	ldreq	r0, [pc, #-1543]!	; ffffffb9 <_estack+0xdffbffb9>
     5bc:	0d050131 	stfeqs	f0, [r5, #-196]	; 0xffffff3c
     5c0:	31050106 	tstcc	r5, r6, lsl #2
     5c4:	0609052e 	streq	r0, [r9], -lr, lsr #10
     5c8:	0618053e 			; <UNDEFINED> instruction: 0x0618053e
     5cc:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
     5d0:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
     5d4:	16054c12 			; <UNDEFINED> instruction: 0x16054c12
     5d8:	052e5503 	streq	r5, [lr, #-1283]!	; 0xfffffafd
     5dc:	10030607 	andne	r0, r3, r7, lsl #12
     5e0:	1e055b2e 	vmlane.f64	d5, d5, d30
     5e4:	07050106 	streq	r0, [r5, -r6, lsl #2]
     5e8:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
     5ec:	5a090501 	bpl	2419f8 <_Min_Stack_Size+0x2415f8>
     5f0:	01061805 	tsteq	r6, r5, lsl #16
     5f4:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
     5f8:	12052009 	andne	r2, r5, #9
     5fc:	00050530 	andeq	r0, r5, r0, lsr r5
     600:	06010402 	streq	r0, [r1], -r2, lsl #8
     604:	04020034 	streq	r0, [r2], #-52	; 0xffffffcc
     608:	02006603 	andeq	r6, r0, #3145728	; 0x300000
     60c:	05580304 	ldrbeq	r0, [r8, #-772]	; 0xfffffcfc
     610:	ba130307 	blt	4c1234 <_Min_Stack_Size+0x4c0e34>
     614:	01061e05 	tsteq	r6, r5, lsl #28
     618:	3f060705 	svccc	0x00060705
     61c:	05013105 	streq	r3, [r1, #-261]	; 0xfffffefb
     620:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     624:	09052e31 	stmdbeq	r5, {r0, r4, r5, r9, sl, fp, sp}
     628:	18053e06 	stmdane	r5, {r1, r2, r9, sl, fp, ip, sp}
     62c:	1b050106 	blne	140a4c <_Min_Stack_Size+0x14064c>
     630:	2009052e 	andcs	r0, r9, lr, lsr #10
     634:	054c1205 	strbeq	r1, [ip, #-517]	; 0xfffffdfb
     638:	06340605 	ldrteq	r0, [r4], -r5, lsl #12
     63c:	06030520 	streq	r0, [r3], -r0, lsr #10
     640:	1f051319 	svcne	0x00051319
     644:	03050106 	movweq	r0, #20742	; 0x5106
     648:	06050520 	streq	r0, [r5], -r0, lsr #10
     64c:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
     650:	4a050501 	bmi	141a5c <_Min_Stack_Size+0x14165c>
     654:	30060705 	andcc	r0, r6, r5, lsl #14
     658:	30030905 	andcc	r0, r3, r5, lsl #18
     65c:	20053f2e 	andcs	r3, r5, lr, lsr #30
     660:	09050106 	stmdbeq	r5, {r1, r2, r8}
     664:	33053f06 	movwcc	r3, #24326	; 0x5f06
     668:	060f0501 	streq	r0, [pc], -r1, lsl #10
     66c:	2e330501 	cdpcs	5, 3, cr0, cr3, cr1, {0}
     670:	3e060b05 	vmlacc.f64	d0, d6, d5
     674:	01061a05 	tsteq	r6, r5, lsl #20
     678:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
     67c:	1405200b 	strne	r2, [r5], #-11
     680:	06070530 			; <UNDEFINED> instruction: 0x06070530
     684:	2e7fbb03 	vaddcs.f64	d27, d15, d3
     688:	09056606 	stmdbeq	r5, {r1, r2, r9, sl, sp, lr}
     68c:	010e0306 	tsteq	lr, r6, lsl #6
     690:	13131313 	tstne	r3, #1275068416	; 0x4c000000
     694:	20053f15 	andcs	r3, r5, r5, lsl pc
     698:	09050106 	stmdbeq	r5, {r1, r2, r8}
     69c:	33053f06 	movwcc	r3, #24326	; 0x5f06
     6a0:	060f0501 	streq	r0, [pc], -r1, lsl #10
     6a4:	2e330501 	cdpcs	5, 3, cr0, cr3, cr1, {0}
     6a8:	3e060b05 	vmlacc.f64	d0, d6, d5
     6ac:	01061a05 	tsteq	r6, r5, lsl #20
     6b0:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
     6b4:	1405200b 	strne	r2, [r5], #-11
     6b8:	06090530 			; <UNDEFINED> instruction: 0x06090530
     6bc:	053ff833 	ldreq	pc, [pc, #-2099]!	; fffffe91 <_estack+0xdffbfe91>
     6c0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
     6c4:	053f0609 	ldreq	r0, [pc, #-1545]!	; c3 <_Min_Heap_Size-0x13d>
     6c8:	0f050133 	svceq	0x00050133
     6cc:	33050106 	movwcc	r0, #20742	; 0x5106
     6d0:	060b052e 	streq	r0, [fp], -lr, lsr #10
     6d4:	061a053e 			; <UNDEFINED> instruction: 0x061a053e
     6d8:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
     6dc:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
     6e0:	07053014 	smladeq	r5, r4, r0, r3
     6e4:	2e190306 	cdpcs	3, 1, cr0, cr9, cr6, {0}
     6e8:	05350905 	ldreq	r0, [r5, #-2309]!	; 0xfffff6fb
     6ec:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     6f0:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
     6f4:	0513060e 	ldreq	r0, [r3, #-1550]	; 0xfffff9f2
     6f8:	40052e51 	andmi	r2, r5, r1, asr lr
     6fc:	300e051f 	andcc	r0, lr, pc, lsl r5
     700:	052e5005 	streq	r5, [lr, #-5]!
     704:	50051f5c 	andpl	r1, r5, ip, asr pc
     708:	1f6f0530 	svcne	0x006f0530
     70c:	05680e05 	strbeq	r0, [r8, #-3589]!	; 0xfffff1fb
     710:	57052e52 	smlsdpl	r5, r2, lr, r2
     714:	205e0520 	subscs	r0, lr, r0, lsr #10
     718:	051f6f05 	ldreq	r6, [pc, #-3845]	; fffff81b <_estack+0xdffbf81b>
     71c:	50053e0e 	andpl	r3, r5, lr, lsl #28
     720:	1f7e052e 	svcne	0x007e052e
     724:	053e0e05 	ldreq	r0, [lr, #-3589]!	; 0xfffff1fb
     728:	6f052e50 	svcvs	0x00052e50
     72c:	030a051f 	movweq	r0, #42271	; 0xa51f
     730:	0c053c10 	stceq	12, cr3, [r5], {16}
     734:	2e7daf03 	cdpcs	15, 7, cr10, cr13, cr3, {0}
     738:	d2030105 	andle	r0, r3, #1073741825	; 0x40000001
     73c:	10052002 	andne	r2, r5, r2
     740:	207dbe03 	rsbscs	fp, sp, r3, lsl #28
     744:	20350320 	eorscs	r0, r5, r0, lsr #6
     748:	8c030a05 			; <UNDEFINED> instruction: 0x8c030a05
     74c:	01052e02 	tsteq	r5, r2, lsl #28
     750:	2d0a0521 	cfstr32cs	mvfx0, [sl, #-132]	; 0xffffff7c
     754:	0310052e 	tsteq	r0, #192937984	; 0xb800000
     758:	12052e64 	andne	r2, r5, #100, 28	; 0x640
     75c:	9e2e1703 	cdpls	7, 2, cr1, cr14, cr3, {0}
     760:	01000602 	tsteq	r0, r2, lsl #12
     764:	00010501 	andeq	r0, r1, r1, lsl #10
     768:	00000205 	andeq	r0, r0, r5, lsl #4
     76c:	89030000 	stmdbhi	r3, {}	; <UNPREDICTABLE>
     770:	01060106 	tsteq	r6, r6, lsl #2
     774:	4b060305 	blmi	181390 <_Min_Stack_Size+0x180f90>
     778:	05141314 	ldreq	r1, [r4, #-788]	; 0xfffffcec
     77c:	01152205 	tsteq	r5, r5, lsl #4
     780:	062e062e 	strteq	r0, [lr], -lr, lsr #12
     784:	05234a3c 	streq	r4, [r3, #-2620]!	; 0xfffff5c4
     788:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
     78c:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     790:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     794:	052f0605 	streq	r0, [pc, #-1541]!	; 197 <_Min_Heap_Size-0x69>
     798:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
     79c:	052f0605 	streq	r0, [pc, #-1541]!	; 19f <_Min_Heap_Size-0x61>
     7a0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     7a4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     7a8:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
     7ac:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     7b0:	20010612 	andcs	r0, r1, r2, lsl r6
     7b4:	06050520 	streq	r0, [r5], -r0, lsr #10
     7b8:	2e4a0631 	mcrcs	6, 2, r0, cr10, cr1, {1}
     7bc:	20030105 	andcs	r0, r3, r5, lsl #2
     7c0:	06050501 	streq	r0, [r5], -r1, lsl #10
     7c4:	152e6a03 	strne	r6, [lr, #-2563]!	; 0xfffff5fd
     7c8:	2e062e01 	cdpcs	14, 0, cr2, cr6, cr1, {0}
     7cc:	234a3c06 	movtcs	r3, #44038	; 0xac06
     7d0:	01061905 	tsteq	r6, r5, lsl #18
     7d4:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     7d8:	01061a05 	tsteq	r6, r5, lsl #20
     7dc:	2f060505 	svccs	0x00060505
     7e0:	01061b05 	tsteq	r6, r5, lsl #22
     7e4:	2f060505 	svccs	0x00060505
     7e8:	01061a05 	tsteq	r6, r5, lsl #20
     7ec:	21060505 	tstcs	r6, r5, lsl #10
     7f0:	01061f05 	tsteq	r6, r5, lsl #30
     7f4:	21060505 	tstcs	r6, r5, lsl #10
     7f8:	01061205 	tsteq	r6, r5, lsl #4
     7fc:	05052020 	streq	r2, [r5, #-32]	; 0xffffffe0
     800:	58063106 	stmdapl	r6, {r1, r2, r8, ip, sp}
     804:	02360105 	eorseq	r0, r6, #1073741825	; 0x40000001
     808:	01010008 	tsteq	r1, r8
     80c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     810:	00000002 	andeq	r0, r0, r2
     814:	06cb0300 	strbeq	r0, [fp], r0, lsl #6
     818:	13030501 	movwne	r0, #13569	; 0x3501
     81c:	01062605 	tsteq	r6, r5, lsl #12
     820:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
     824:	01010003 	tsteq	r1, r3
     828:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     82c:	00000002 	andeq	r0, r0, r2
     830:	06d40300 	ldrbeq	r0, [r4], r0, lsl #6
     834:	13030501 	movwne	r0, #13569	; 0x3501
     838:	01062605 	tsteq	r6, r5, lsl #12
     83c:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
     840:	01010003 	tsteq	r1, r3
     844:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     848:	00021c02 	andeq	r1, r2, r2, lsl #24
     84c:	06f70308 	ldrbteq	r0, [r7], r8, lsl #6
     850:	21030501 	tstcs	r3, r1, lsl #10
     854:	10051513 	andne	r1, r5, r3, lsl r5
     858:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
     85c:	2e03052e 	cfsh32cs	mvfx0, mvfx3, #30
     860:	03060505 	movweq	r0, #25861	; 0x6505
     864:	05134a0c 	ldreq	r4, [r3, #-2572]	; 0xfffff5f4
     868:	13051507 	movwne	r1, #21767	; 0x5507
     86c:	0c050106 	stfeqs	f0, [r5], {6}
     870:	0607052e 	streq	r0, [r7], -lr, lsr #10
     874:	060a052f 	streq	r0, [sl], -pc, lsr #10
     878:	20070501 	andcs	r0, r7, r1, lsl #10
     87c:	3f060905 	svccc	0x00060905
     880:	01064a05 	tsteq	r6, r5, lsl #20
     884:	052e3805 	streq	r3, [lr, #-2053]!	; 0xfffff7fb
     888:	82052e35 	andhi	r2, r5, #848	; 0x350
     88c:	05660801 	strbeq	r0, [r6, #-2049]!	; 0xfffff7ff
     890:	057b0607 	ldrbeq	r0, [fp, #-1543]!	; 0xfffff9f9
     894:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
     898:	4c052e33 	stcmi	14, cr2, [r5], {51}	; 0x33
     89c:	200c052e 	andcs	r0, ip, lr, lsr #10
     8a0:	22060705 	andcs	r0, r6, #1310720	; 0x140000
     8a4:	01061405 	tsteq	r6, r5, lsl #8
     8a8:	2f060705 	svccs	0x00060705
     8ac:	051b0905 	ldreq	r0, [fp, #-2309]	; 0xfffff6fb
     8b0:	0501064a 	streq	r0, [r1, #-1610]	; 0xfffff9b6
     8b4:	35052e38 	strcc	r2, [r5, #-3640]	; 0xfffff1c8
     8b8:	0182052e 	orreq	r0, r2, lr, lsr #10
     8bc:	05746608 	ldrbeq	r6, [r4, #-1544]!	; 0xfffff9f8
     8c0:	20700314 	rsbscs	r0, r0, r4, lsl r3
     8c4:	77030305 	strvc	r0, [r3, -r5, lsl #6]
     8c8:	2603062e 	strcs	r0, [r3], -lr, lsr #12
     8cc:	06010520 	streq	r0, [r1], -r0, lsr #10
     8d0:	00080213 	andeq	r0, r8, r3, lsl r2
     8d4:	01050101 	tsteq	r5, r1, lsl #2
     8d8:	f0020500 			; <UNDEFINED> instruction: 0xf0020500
     8dc:	03080002 	movweq	r0, #32770	; 0x8002
     8e0:	050104d1 	streq	r0, [r1, #-1233]	; 0xfffffb2f
     8e4:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
     8e8:	05380601 	ldreq	r0, [r8, #-1537]!	; 0xfffff9ff
     8ec:	0a030603 	beq	c2100 <_Min_Stack_Size+0xc1d00>
     8f0:	0519133c 	ldreq	r1, [r9, #-828]	; 0xfffffcc4
     8f4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     8f8:	05054a03 	streq	r4, [r5, #-2563]	; 0xfffff5fd
     8fc:	05403106 	strbeq	r3, [r0, #-262]	; 0xfffffefa
     900:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     904:	03053c05 	movweq	r3, #23557	; 0x5c05
     908:	1b054306 	blne	151528 <_Min_Stack_Size+0x151128>
     90c:	03050106 	movweq	r0, #20742	; 0x5106
     910:	06050520 	streq	r0, [r5], -r0, lsr #10
     914:	3e070540 	cfsh32cc	mvfx0, mvfx7, #32
     918:	055b0505 	ldrbeq	r0, [fp, #-1285]	; 0xfffffafb
     91c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
     920:	07052005 	streq	r2, [r5, -r5]
     924:	05053e06 	streq	r3, [r5, #-3590]	; 0xfffff1fa
     928:	5806135b 	stmdapl	r6, {r0, r1, r3, r4, r6, r8, r9, ip}
     92c:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
     930:	01061b05 	tsteq	r6, r5, lsl #22
     934:	05200305 	streq	r0, [r0, #-773]!	; 0xfffffcfb
     938:	153e0605 	ldrne	r0, [lr, #-1541]!	; 0xfffff9fb
     93c:	01061b05 	tsteq	r6, r5, lsl #22
     940:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
     944:	0903060a 	stmdbeq	r3, {r1, r3, r9, sl}
     948:	064c052e 	strbeq	r0, [ip], -lr, lsr #10
     94c:	200a0501 	andcs	r0, sl, r1, lsl #10
     950:	03060705 	movweq	r0, #26373	; 0x6705
     954:	0a052e0d 	beq	14c190 <_Min_Stack_Size+0x14bd90>
     958:	07050106 	streq	r0, [r5, -r6, lsl #2]
     95c:	0605052e 	streq	r0, [r5], -lr, lsr #10
     960:	1c056942 			; <UNDEFINED> instruction: 0x1c056942
     964:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     968:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
     96c:	0c05012a 	stfeqs	f0, [r5], {42}	; 0x2a
     970:	41050106 	tstmi	r5, r6, lsl #2
     974:	202a054a 	eorcs	r0, sl, sl, asr #10
     978:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
     97c:	01061705 	tsteq	r6, r5, lsl #14
     980:	052e1a05 	streq	r1, [lr, #-2565]!	; 0xfffff5fb
     984:	10052007 	andne	r2, r5, r7
     988:	0607054c 	streq	r0, [r7], -ip, asr #10
     98c:	052e5e03 	streq	r5, [lr, #-3587]!	; 0xfffff1fd
     990:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     994:	10052e07 	andne	r2, r5, r7, lsl #28
     998:	0705203e 	smladxeq	r5, lr, r0, r2
     99c:	0a052806 	beq	14a9bc <_Min_Stack_Size+0x14a5bc>
     9a0:	07050106 	streq	r0, [r5, -r6, lsl #2]
     9a4:	3e10052e 	cfmul64cc	mvdx0, mvdx0, mvdx14
     9a8:	06030520 	streq	r0, [r3], -r0, lsr #10
     9ac:	05201c03 	streq	r1, [r0, #-3075]!	; 0xfffff3fd
     9b0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     9b4:	05054a03 	streq	r4, [r5, #-2563]	; 0xfffff5fd
     9b8:	05403106 	strbeq	r3, [r0, #-262]	; 0xfffffefa
     9bc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     9c0:	03053c05 	movweq	r3, #23557	; 0x5c05
     9c4:	1b053506 	blne	14dde4 <_Min_Stack_Size+0x14d9e4>
     9c8:	03050106 	movweq	r0, #20742	; 0x5106
     9cc:	06050520 	streq	r0, [r5], -r0, lsr #10
     9d0:	0305133e 	movweq	r1, #21310	; 0x533e
     9d4:	061b0578 			; <UNDEFINED> instruction: 0x061b0578
     9d8:	20030501 	andcs	r0, r3, r1, lsl #10
     9dc:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
     9e0:	86030513 			; <UNDEFINED> instruction: 0x86030513
     9e4:	01062c05 	tsteq	r6, r5, lsl #24
     9e8:	052e4605 	streq	r4, [lr, #-1541]!	; 0xfffff9fb
     9ec:	6f052e5b 	svcvs	0x00052e5b
     9f0:	2e2f052e 	cfsh64cs	mvdx0, mvdx15, #30
     9f4:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
     9f8:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
     9fc:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     a00:	054c0603 	strbeq	r0, [ip, #-1539]	; 0xfffff9fd
     a04:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     a08:	0c052101 	stfeqs	f2, [r5], {1}
     a0c:	207f8103 	rsbscs	r8, pc, r3, lsl #2
     a10:	ff030105 			; <UNDEFINED> instruction: 0xff030105
     a14:	0e052000 	cdpeq	0, 0, cr2, cr5, cr0, {0}
     a18:	207f9603 	rsbscs	r9, pc, r3, lsl #12
     a1c:	03100520 	tsteq	r0, #32, 10	; 0x8000000
     a20:	05202035 	streq	r2, [r0, #-53]!	; 0xffffffcb
     a24:	201c030e 	andscs	r0, ip, lr, lsl #6
     a28:	01000c02 	tsteq	r0, r2, lsl #24
     a2c:	00010501 	andeq	r0, r1, r1, lsl #10
     a30:	00000205 	andeq	r0, r0, r5, lsl #4
     a34:	af030000 	svcge	0x00030000
     a38:	03050107 	movweq	r0, #20743	; 0x5107
     a3c:	06010513 			; <UNDEFINED> instruction: 0x06010513
     a40:	00060213 	andeq	r0, r6, r3, lsl r2
     a44:	01050101 	tsteq	r5, r1, lsl #2
     a48:	00020500 	andeq	r0, r2, r0, lsl #10
     a4c:	03000000 	movweq	r0, #0
     a50:	050107ba 	streq	r0, [r1, #-1978]	; 0xfffff846
     a54:	1e052203 	cdpne	2, 0, cr2, cr5, cr3, {0}
     a58:	38050106 	stmdacc	r5, {r1, r2, r8}
     a5c:	2e4e052e 	cdpcs	5, 4, cr0, cr14, cr14, {1}
     a60:	052e6305 	streq	r6, [lr, #-773]!	; 0xfffffcfb
     a64:	07022f01 	streq	r2, [r2, -r1, lsl #30]
     a68:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     a6c:	02050001 	andeq	r0, r5, #1
     a70:	00000000 	andeq	r0, r0, r0
     a74:	0107c603 	tsteq	r7, r3, lsl #12
     a78:	05220305 	streq	r0, [r2, #-773]!	; 0xfffffcfb
     a7c:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
     a80:	4d052e37 	stcmi	14, cr2, [r5, #-220]	; 0xffffff24
     a84:	2e62052e 	cdpcs	5, 6, cr0, cr2, cr14, {1}
     a88:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
     a8c:	01010007 	tsteq	r1, r7
     a90:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     a94:	00000002 	andeq	r0, r0, r2
     a98:	07d30300 	ldrbeq	r0, [r3, r0, lsl #6]
     a9c:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     aa0:	01062505 	tsteq	r6, r5, lsl #10
     aa4:	31060305 	tstcc	r6, r5, lsl #6
     aa8:	01060c05 	tsteq	r6, r5, lsl #24
     aac:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
     ab0:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
     ab4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
     ab8:	0c030603 	stceq	6, cr0, [r3], {3}
     abc:	060c053c 			; <UNDEFINED> instruction: 0x060c053c
     ac0:	2e030501 	cfsh32cs	mvfx0, mvfx3, #1
     ac4:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
     ac8:	01062105 	tsteq	r6, r5, lsl #2
     acc:	35060305 	strcc	r0, [r6, #-773]	; 0xfffffcfb
     ad0:	01063d05 	tsteq	r6, r5, lsl #26
     ad4:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
     ad8:	03052e2a 	movweq	r2, #24106	; 0x5e2a
     adc:	0c052306 	stceq	3, cr2, [r5], {6}
     ae0:	03050106 	movweq	r0, #20742	; 0x5106
     ae4:	06050520 	streq	r0, [r5], -r0, lsr #10
     ae8:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
     aec:	06030501 	streq	r0, [r3], -r1, lsl #10
     af0:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
     af4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     af8:	05052e03 	streq	r2, [r5, #-3587]	; 0xfffff1fd
     afc:	21053e06 	tstcs	r5, r6, lsl #28
     b00:	03050106 	movweq	r0, #20742	; 0x5106
     b04:	0c053606 	stceq	6, cr3, [r5], {6}
     b08:	03050106 	movweq	r0, #20742	; 0x5106
     b0c:	0605052e 	streq	r0, [r5], -lr, lsr #10
     b10:	0625053e 			; <UNDEFINED> instruction: 0x0625053e
     b14:	06030501 	streq	r0, [r3], -r1, lsl #10
     b18:	06360534 			; <UNDEFINED> instruction: 0x06360534
     b1c:	2e260501 	cfsh64cs	mvdx0, mvdx6, #1
     b20:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
     b24:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     b28:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
     b2c:	1f052021 	svcne	0x00052021
     b30:	0603052e 	streq	r0, [r3], -lr, lsr #10
     b34:	06320521 	ldrteq	r0, [r2], -r1, lsr #10
     b38:	20210501 	eorcs	r0, r1, r1, lsl #10
     b3c:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
     b40:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     b44:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
     b48:	5005203c 	andpl	r2, r5, ip, lsr r0
     b4c:	2e6d052e 	cdpcs	5, 6, cr0, cr13, cr14, {1}
     b50:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
     b54:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     b58:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
     b5c:	1f052021 	svcne	0x00052021
     b60:	2101052e 	tstcs	r1, lr, lsr #10
     b64:	03060805 	movweq	r0, #26629	; 0x6805
     b68:	11052045 	tstne	r5, r5, asr #32
     b6c:	08050106 	stmdaeq	r5, {r1, r2, r8}
     b70:	0605052e 	streq	r0, [r5], -lr, lsr #10
     b74:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
     b78:	06050501 	streq	r0, [r5], -r1, lsl #10
     b7c:	0621054e 	strteq	r0, [r1], -lr, asr #10
     b80:	06050501 	streq	r0, [r5], -r1, lsl #10
     b84:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
     b88:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
     b8c:	0a030608 	beq	c23b4 <_Min_Stack_Size+0xc1fb4>
     b90:	0611053c 			; <UNDEFINED> instruction: 0x0611053c
     b94:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
     b98:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
     b9c:	01062105 	tsteq	r6, r5, lsl #2
     ba0:	40060505 	andmi	r0, r6, r5, lsl #10
     ba4:	01062105 	tsteq	r6, r5, lsl #2
     ba8:	03060505 	movweq	r0, #25861	; 0x6505
     bac:	21053c0a 	tstcs	r5, sl, lsl #24
     bb0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     bb4:	3c0a0306 	stccc	3, cr0, [sl], {6}
     bb8:	01062505 	tsteq	r6, r5, lsl #10
     bbc:	01000602 	tsteq	r0, r2, lsl #12
     bc0:	00010501 	andeq	r0, r1, r1, lsl #10
     bc4:	00000205 	andeq	r0, r0, r5, lsl #4
     bc8:	a2030000 	andge	r0, r3, #0
     bcc:	03050108 	movweq	r0, #20744	; 0x5108
     bd0:	06200514 			; <UNDEFINED> instruction: 0x06200514
     bd4:	06030501 	streq	r0, [r3], -r1, lsl #10
     bd8:	06350531 			; <UNDEFINED> instruction: 0x06350531
     bdc:	2e250501 	cfsh64cs	mvdx0, mvdx5, #1
     be0:	052e2305 	streq	r2, [lr, #-773]!	; 0xfffffcfb
     be4:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
     be8:	05010636 	streq	r0, [r1, #-1590]	; 0xfffff9ca
     bec:	24052026 	strcs	r2, [r5], #-38	; 0xffffffda
     bf0:	0603052e 	streq	r0, [r3], -lr, lsr #10
     bf4:	06370523 	ldrteq	r0, [r7], -r3, lsr #10
     bf8:	20270501 	eorcs	r0, r7, r1, lsl #10
     bfc:	052e2505 	streq	r2, [lr, #-1285]!	; 0xfffffafb
     c00:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
     c04:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
     c08:	2705204f 	strcs	r2, [r5, -pc, asr #32]
     c0c:	2e250520 	cfsh64cs	mvdx0, mvdx5, #16
     c10:	23060305 	movwcs	r0, #25349	; 0x6305
     c14:	01062205 	tsteq	r6, r5, lsl #4
     c18:	052e1005 	streq	r1, [lr, #-5]!
     c1c:	01052e0e 	tsteq	r5, lr, lsl #28
     c20:	00050221 	andeq	r0, r5, r1, lsr #4
     c24:	01050101 	tsteq	r5, r1, lsl #2
     c28:	00020500 	andeq	r0, r2, r0, lsl #10
     c2c:	03000000 	movweq	r0, #0
     c30:	060108cd 	streq	r0, [r1], -sp, asr #17
     c34:	00010216 	andeq	r0, r1, r6, lsl r2
     c38:	01050101 	tsteq	r5, r1, lsl #2
     c3c:	00020500 	andeq	r0, r2, r0, lsl #10
     c40:	03000000 	movweq	r0, #0
     c44:	050108bc 	streq	r0, [r1, #-2236]	; 0xfffff744
     c48:	06052203 	streq	r2, [r5], -r3, lsl #4
     c4c:	03050106 	movweq	r0, #20742	; 0x5106
     c50:	4401052e 	strmi	r0, [r1], #-1326	; 0xfffffad2
     c54:	1b060505 	blne	182070 <_Min_Stack_Size+0x181c70>
     c58:	01061805 	tsteq	r6, r5, lsl #16
     c5c:	31060505 	tstcc	r6, r5, lsl #10
     c60:	3e060105 	adfccs	f0, f6, f5
     c64:	01000402 	tsteq	r0, r2, lsl #8
     c68:	000e9b01 	andeq	r9, lr, r1, lsl #22
     c6c:	d3000300 	movwle	r0, #768	; 0x300
     c70:	02000001 	andeq	r0, r0, #1
     c74:	0d0efb01 	vstreq	d15, [lr, #-4]
     c78:	01010100 	mrseq	r0, (UNDEF: 17)
     c7c:	00000001 	andeq	r0, r0, r1
     c80:	01000001 	tsteq	r0, r1
     c84:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     c88:	2f737265 	svccs	0x00737265
     c8c:	334d5453 	movtcc	r5, #54355	; 0xd453
     c90:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     c94:	41485f78 	hvcmi	34296	; 0x85f8
     c98:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
     c9c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     ca0:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     ca4:	73752f00 	cmnvc	r5, #0, 30
     ca8:	69622f72 	stmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     cac:	63672f6e 	cmnvs	r7, #440	; 0x1b8
     cb0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     cb4:	6f6e2d6d 	svcvs	0x006e2d6d
     cb8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     cbc:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     cc0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     cc4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     cc8:	30312e31 	eorscc	r2, r1, r1, lsr lr
     ccc:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
     cd0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     cd4:	61652d65 	cmnvs	r5, r5, ror #26
     cd8:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
     cdc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     ce0:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; b58 <_Min_Stack_Size+0x758>
     ce4:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     ce8:	2f00656e 	svccs	0x0000656e
     cec:	2f727375 	svccs	0x00727375
     cf0:	2f6e6962 	svccs	0x006e6962
     cf4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     cf8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     cfc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     d00:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     d04:	30312d69 	eorscc	r2, r1, r9, ror #26
     d08:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     d0c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     d10:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
     d14:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     d18:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     d1c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     d20:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     d24:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     d28:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
     d2c:	69724400 	ldmdbvs	r2!, {sl, lr}^
     d30:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     d34:	534d432f 	movtpl	r4, #54063	; 0xd32f
     d38:	442f5349 	strtmi	r5, [pc], #-841	; d40 <_Min_Stack_Size+0x940>
     d3c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     d40:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
     d44:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     d48:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     d4c:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     d50:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     d54:	44006564 	strmi	r6, [r0], #-1380	; 0xfffffa9c
     d58:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     d5c:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
     d60:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     d64:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
     d68:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
     d6c:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
     d70:	2f726576 	svccs	0x00726576
     d74:	00636e49 	rsbeq	r6, r3, r9, asr #28
     d78:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     d7c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     d80:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     d84:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
     d88:	655f6363 	ldrbvs	r6, [pc, #-867]	; a2d <_Min_Stack_Size+0x62d>
     d8c:	00632e78 	rsbeq	r2, r3, r8, ror lr
     d90:	5f000001 	svcpl	0x00000001
     d94:	61666564 	cmnvs	r6, r4, ror #10
     d98:	5f746c75 	svcpl	0x00746c75
     d9c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     da0:	00682e73 	rsbeq	r2, r8, r3, ror lr
     da4:	5f000002 	svcpl	0x00000002
     da8:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     dac:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     db0:	00000300 	andeq	r0, r0, r0, lsl #6
     db4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     db8:	31346632 	teqcc	r4, r2, lsr r6
     dbc:	2e787a32 			; <UNDEFINED> instruction: 0x2e787a32
     dc0:	00040068 	andeq	r0, r4, r8, rrx
     dc4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     dc8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     dcc:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     dd0:	00000400 	andeq	r0, r0, r0, lsl #8
     dd4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     dd8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     ddc:	61685f78 	smcvs	34296	; 0x85f8
     de0:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
     de4:	00682e66 	rsbeq	r2, r8, r6, ror #28
     de8:	73000005 	movwvc	r0, #5
     dec:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     df0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     df4:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     df8:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
     dfc:	2e78655f 	mrccs	5, 3, r6, cr8, cr15, {2}
     e00:	00050068 	andeq	r0, r5, r8, rrx
     e04:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     e08:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     e0c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     e10:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
     e14:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
     e18:	00000500 	andeq	r0, r0, r0, lsl #10
     e1c:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
     e20:	735f6d65 	cmpvc	pc, #6464	; 0x1940
     e24:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     e28:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     e2c:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     e30:	74730000 	ldrbtvc	r0, [r3], #-0
     e34:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     e38:	5f787834 	svcpl	0x00787834
     e3c:	2e6c6168 	powcsez	f6, f4, #0.0
     e40:	00050068 	andeq	r0, r5, r8, rrx
     e44:	01050000 	mrseq	r0, (UNDEF: 5)
     e48:	00020500 	andeq	r0, r2, r0, lsl #10
     e4c:	03000000 	movweq	r0, #0
     e50:	060109fe 			; <UNDEFINED> instruction: 0x060109fe
     e54:	06030501 	streq	r0, [r3], -r1, lsl #10
     e58:	1516133d 	ldrne	r1, [r6, #-829]	; 0xfffffcc3
     e5c:	06170515 			; <UNDEFINED> instruction: 0x06170515
     e60:	20030501 	andcs	r0, r3, r1, lsl #10
     e64:	3f060505 	svccc	0x00060505
     e68:	17059215 	smladne	r5, r5, r2, r9
     e6c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     e70:	030c0520 	movweq	r0, #50464	; 0xc520
     e74:	03052e72 	movweq	r2, #24178	; 0x5e72
     e78:	20160306 	andscs	r0, r6, r6, lsl #6
     e7c:	01061705 	tsteq	r6, r5, lsl #14
     e80:	05200305 	streq	r0, [r0, #-773]!	; 0xfffffcfb
     e84:	153f0605 	ldrne	r0, [pc, #-1541]!	; 887 <_Min_Stack_Size+0x487>
     e88:	06170592 			; <UNDEFINED> instruction: 0x06170592
     e8c:	20050501 	andcs	r0, r5, r1, lsl #10
     e90:	05221205 	streq	r1, [r2, #-517]!	; 0xfffffdfb
     e94:	3a030603 	bcc	c26a8 <_Min_Stack_Size+0xc22a8>
     e98:	06170520 	ldreq	r0, [r7], -r0, lsr #10
     e9c:	20030501 	andcs	r0, r3, r1, lsl #10
     ea0:	3603063c 			; <UNDEFINED> instruction: 0x3603063c
     ea4:	06170501 	ldreq	r0, [r7], -r1, lsl #10
     ea8:	20030501 	andcs	r0, r3, r1, lsl #10
     eac:	3f060505 	svccc	0x00060505
     eb0:	055d0305 	ldrbeq	r0, [sp, #-773]	; 0xfffffcfb
     eb4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
     eb8:	05052003 	streq	r2, [r5, #-3]
     ebc:	05153f06 	ldreq	r3, [r5, #-3846]	; 0xfffff0fa
     ec0:	17059503 	strne	r9, [r5, -r3, lsl #10]
     ec4:	03050106 	movweq	r0, #20742	; 0x5106
     ec8:	06050520 	streq	r0, [r5], -r0, lsr #10
     ecc:	0593153f 	ldreq	r1, [r3, #1343]	; 0x53f
     ed0:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
     ed4:	03052005 	movweq	r2, #20485	; 0x5005
     ed8:	17055206 	strne	r5, [r5, -r6, lsl #4]
     edc:	03050106 	movweq	r0, #20742	; 0x5106
     ee0:	06050520 	streq	r0, [r5], -r0, lsr #10
     ee4:	0305153f 	movweq	r1, #21823	; 0x553f
     ee8:	002c0597 	mlaeq	ip, r7, r5, r0
     eec:	06010402 	streq	r0, [r1], -r2, lsl #8
     ef0:	0019053c 	andseq	r0, r9, ip, lsr r5
     ef4:	20010402 	andcs	r0, r1, r2, lsl #8
     ef8:	03060305 	movweq	r0, #25349	; 0x6305
     efc:	053c00dc 	ldreq	r0, [ip, #-220]!	; 0xffffff24
     f00:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
     f04:	05052003 	streq	r2, [r5, #-3]
     f08:	05153f06 	ldreq	r3, [r5, #-3846]	; 0xfffff0fa
     f0c:	17059503 	strne	r9, [r5, -r3, lsl #10]
     f10:	03050106 	movweq	r0, #20742	; 0x5106
     f14:	06050520 	streq	r0, [r5], -r0, lsr #10
     f18:	0a05154d 	beq	146454 <_Min_Stack_Size+0x146054>
     f1c:	90270306 	eorls	r0, r7, r6, lsl #6
     f20:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
     f24:	7dba0312 	ldcvc	3, cr0, [sl, #72]!	; 0x48
     f28:	0605052e 	streq	r0, [r5], -lr, lsr #10
     f2c:	2e00cd03 	cdpcs	13, 0, cr12, cr0, cr3, {0}
     f30:	582e0115 	stmdapl	lr!, {r0, r2, r4, r8}
     f34:	0d05234a 	stceq	3, cr2, [r5, #-296]	; 0xfffffed8
     f38:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f3c:	1c055b06 			; <UNDEFINED> instruction: 0x1c055b06
     f40:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     f44:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
     f48:	11050122 	tstne	r5, r2, lsr #2
     f4c:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
     f50:	0607052e 	streq	r0, [r7], -lr, lsr #10
     f54:	0616053e 			; <UNDEFINED> instruction: 0x0616053e
     f58:	2e190501 	cfmul32cs	mvfx0, mvfx9, mvfx1
     f5c:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
     f60:	05053010 	streq	r3, [r5, #-16]
     f64:	15053206 	strne	r3, [r5, #-518]	; 0xfffffdfa
     f68:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f6c:	2e062f06 	cdpcs	15, 0, cr2, cr6, cr6, {0}
     f70:	02004205 	andeq	r4, r0, #1342177280	; 0x50000000
     f74:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     f78:	04020054 	streq	r0, [r2], #-84	; 0xffffffac
     f7c:	21052001 	tstcs	r5, r1
     f80:	01040200 	mrseq	r0, R12_usr
     f84:	0607052e 	streq	r0, [r7], -lr, lsr #10
     f88:	06170531 			; <UNDEFINED> instruction: 0x06170531
     f8c:	0f052001 	svceq	0x00052001
     f90:	06070520 	streq	r0, [r7], -r0, lsr #10
     f94:	053e4b30 	ldreq	r4, [lr, #-2864]!	; 0xfffff4d0
     f98:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     f9c:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
     fa0:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     fa4:	05052007 	streq	r2, [r5, #-7]
     fa8:	3c0f0306 	stccc	3, cr0, [pc], {6}
     fac:	04020001 	streq	r0, [r2], #-1
     fb0:	00660602 	rsbeq	r0, r6, r2, lsl #12
     fb4:	06040402 	streq	r0, [r4], -r2, lsl #8
     fb8:	03090558 	movweq	r0, #38232	; 0x9558
     fbc:	20058274 	andcs	r8, r5, r4, ror r2
     fc0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     fc4:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
     fc8:	0f050133 	svceq	0x00050133
     fcc:	33050106 	movwcc	r0, #20742	; 0x5106
     fd0:	060b052e 	streq	r0, [fp], -lr, lsr #10
     fd4:	061a053e 			; <UNDEFINED> instruction: 0x061a053e
     fd8:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
     fdc:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
     fe0:	05054c14 	streq	r4, [r5, #-3092]	; 0xfffff3ec
     fe4:	01040200 	mrseq	r0, R12_usr
     fe8:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
     fec:	1205ac01 	andne	sl, r5, #256	; 0x100
     ff0:	20012303 	andcs	r2, r1, r3, lsl #6
     ff4:	03060505 	movweq	r0, #25861	; 0x6505
     ff8:	053e2016 	ldreq	r2, [lr, #-22]!	; 0xffffffea
     ffc:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    1000:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    1004:	0b050133 	bleq	1414d8 <_Min_Stack_Size+0x1410d8>
    1008:	33050106 	movwcc	r0, #20742	; 0x5106
    100c:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1010:	0616053e 			; <UNDEFINED> instruction: 0x0616053e
    1014:	2e190501 	cfmul32cs	mvfx0, mvfx9, mvfx1
    1018:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    101c:	05053110 	streq	r3, [r5, #-272]	; 0xfffffef0
    1020:	13133306 	tstne	r3, #402653184	; 0x18000000
    1024:	1b054d14 	blne	15447c <_Min_Stack_Size+0x15407c>
    1028:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    102c:	00790520 	rsbseq	r0, r9, r0, lsr #10
    1030:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1034:	02006605 	andeq	r6, r0, #5242880	; 0x500000
    1038:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    103c:	020001b0 	andeq	r0, r0, #176, 2	; 0x2c
    1040:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    1044:	66053d79 			; <UNDEFINED> instruction: 0x66053d79
    1048:	01b00520 	lsrseq	r0, r0, #10
    104c:	01040200 	mrseq	r0, R12_usr
    1050:	3d730520 	cfldr64cc	mvdx0, [r3, #-128]!	; 0xffffff80
    1054:	05206005 	streq	r6, [r0, #-5]!
    1058:	020001a7 	andeq	r0, r0, #-1073741783	; 0xc0000029
    105c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    1060:	5e053d71 	mcrpl	13, 0, r3, cr5, cr1, {3}
    1064:	01b30520 			; <UNDEFINED> instruction: 0x01b30520
    1068:	01040200 	mrseq	r0, R12_usr
    106c:	01a00520 	lsreq	r0, r0, #10
    1070:	01040200 	mrseq	r0, R12_usr
    1074:	06070520 	streq	r0, [r7], -r0, lsr #10
    1078:	0517133f 	ldreq	r1, [r7, #-831]	; 0xfffffcc1
    107c:	c81b0305 	ldmdagt	fp, {r0, r2, r8, r9}
    1080:	01061805 	tsteq	r6, r5, lsl #16
    1084:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    1088:	133f0607 	teqne	pc, #7340032	; 0x700000
    108c:	cc050517 	cfstr32gt	mvfx0, [r5], {23}
    1090:	061c053e 			; <UNDEFINED> instruction: 0x061c053e
    1094:	06050501 	streq	r0, [r5], -r1, lsl #10
    1098:	0133053e 	teqeq	r3, lr, lsr r5
    109c:	01060b05 	tsteq	r6, r5, lsl #22
    10a0:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
    10a4:	054c0607 	strbeq	r0, [ip, #-1543]	; 0xfffff9f9
    10a8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    10ac:	07052e19 	smladeq	r5, r9, lr, r2
    10b0:	31100520 	tstcc	r0, r0, lsr #10
    10b4:	3f030a05 	svccc	0x00030a05
    10b8:	000b022e 	andeq	r0, fp, lr, lsr #4
    10bc:	01050101 	tsteq	r5, r1, lsl #2
    10c0:	00020500 	andeq	r0, r2, r0, lsl #10
    10c4:	03000000 	movweq	r0, #0
    10c8:	05010ce4 	streq	r0, [r1, #-3300]	; 0xfffff31c
    10cc:	0c031303 	stceq	3, cr1, [r3], {3}
    10d0:	06270501 	strteq	r0, [r7], -r1, lsl #10
    10d4:	06030501 	streq	r0, [r3], -r1, lsl #10
    10d8:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    10dc:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    10e0:	21053c23 	tstcs	r5, r3, lsr #24
    10e4:	0603052e 	streq	r0, [r3], -lr, lsr #10
    10e8:	06340521 	ldrteq	r0, [r4], -r1, lsr #10
    10ec:	2e230501 	cfsh64cs	mvdx0, mvdx3, #1
    10f0:	052e2105 	streq	r2, [lr, #-261]!	; 0xfffffefb
    10f4:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    10f8:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    10fc:	21052e23 	tstcs	r5, r3, lsr #28
    1100:	0603052e 	streq	r0, [r3], -lr, lsr #10
    1104:	06340521 	ldrteq	r0, [r4], -r1, lsr #10
    1108:	2e230501 	cfsh64cs	mvdx0, mvdx3, #1
    110c:	052e2105 	streq	r2, [lr, #-261]!	; 0xfffffefb
    1110:	05280603 	streq	r0, [r8, #-1539]!	; 0xfffff9fd
    1114:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    1118:	03054a28 	movweq	r4, #23080	; 0x5a28
    111c:	2a052306 	bcs	149d3c <_Min_Stack_Size+0x14993c>
    1120:	28050106 	stmdacs	r5, {r1, r2, r8}
    1124:	0603054a 	streq	r0, [r3], -sl, asr #10
    1128:	06130523 	ldreq	r0, [r3], -r3, lsr #10
    112c:	200b0501 	andcs	r0, fp, r1, lsl #10
    1130:	2f060305 	svccs	0x00060305
    1134:	01064305 	tsteq	r6, r5, lsl #6
    1138:	05204805 	streq	r4, [r0, #-2053]!	; 0xfffff7fb
    113c:	24052e3b 	strcs	r2, [r5], #-3643	; 0xfffff1c5
    1140:	06030520 	streq	r0, [r3], -r0, lsr #10
    1144:	062a0523 	strteq	r0, [sl], -r3, lsr #10
    1148:	4a280501 	bmi	a02554 <_Min_Stack_Size+0xa02154>
    114c:	23060305 	movwcs	r0, #25349	; 0x6305
    1150:	01062805 	tsteq	r6, r5, lsl #16
    1154:	054a2605 	strbeq	r2, [sl, #-1541]	; 0xfffff9fb
    1158:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    115c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    1160:	03054a25 	movweq	r4, #23077	; 0x5a25
    1164:	29052306 	stmdbcs	r5, {r1, r2, r8, r9, sp}
    1168:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    116c:	0603054a 	streq	r0, [r3], -sl, asr #10
    1170:	062e0523 	strteq	r0, [lr], -r3, lsr #10
    1174:	4a2c0501 	bmi	b02580 <_Min_Stack_Size+0xb02180>
    1178:	03060305 	movweq	r0, #25349	; 0x6305
    117c:	0d052014 	stceq	0, cr2, [r5, #-80]	; 0xffffffb0
    1180:	03050106 	movweq	r0, #20742	; 0x5106
    1184:	0605052e 	streq	r0, [r5], -lr, lsr #10
    1188:	0625053e 			; <UNDEFINED> instruction: 0x0625053e
    118c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1190:	0625054e 	strteq	r0, [r5], -lr, asr #10
    1194:	3e010501 	cfsh32cc	mvfx0, mvfx1, #1
    1198:	01000302 	tsteq	r0, r2, lsl #6
    119c:	00010501 	andeq	r0, r1, r1, lsl #10
    11a0:	00000205 	andeq	r0, r0, r5, lsl #4
    11a4:	c4030000 	strgt	r0, [r3], #-0
    11a8:	0305010d 	movweq	r0, #20749	; 0x510d
    11ac:	14131414 	ldrne	r1, [r3], #-1044	; 0xfffffbec
    11b0:	06580613 			; <UNDEFINED> instruction: 0x06580613
    11b4:	13050522 	movwne	r0, #21794	; 0x5522
    11b8:	05140705 	ldreq	r0, [r4, #-1797]	; 0xfffff8fb
    11bc:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    11c0:	07053c0e 	streq	r3, [r5, -lr, lsl #24]
    11c4:	9e062f06 	cdpls	15, 0, cr2, cr6, cr6, {0}
    11c8:	3d030620 	stccc	6, cr0, [r3, #-128]	; 0xffffff80
    11cc:	1309053c 	movwne	r0, #38204	; 0x953c
    11d0:	05130b05 	ldreq	r0, [r3, #-2821]	; 0xfffff4fb
    11d4:	20010614 	andcs	r0, r1, r4, lsl r6
    11d8:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    11dc:	05204c17 	streq	r4, [r0, #-3095]!	; 0xfffff3e9
    11e0:	200b0315 	andcs	r0, fp, r5, lsl r3
    11e4:	06070520 	streq	r0, [r7], -r0, lsr #10
    11e8:	207fbe03 	rsbscs	fp, pc, r3, lsl #28
    11ec:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    11f0:	1405130b 	strne	r1, [r5], #-779	; 0xfffffcf5
    11f4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    11f8:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    11fc:	4a053f06 	bmi	150e1c <_Min_Stack_Size+0x150a1c>
    1200:	3a050106 	bcc	141620 <_Min_Stack_Size+0x141220>
    1204:	2e16053c 	mrccs	5, 0, r0, cr6, cr12, {1}
    1208:	060b0520 	streq	r0, [fp], -r0, lsr #10
    120c:	052e1203 	streq	r1, [lr, #-515]!	; 0xfffffdfd
    1210:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    1214:	15053c61 	strne	r3, [r5, #-3169]	; 0xfffff39f
    1218:	060b052e 	streq	r0, [fp], -lr, lsr #10
    121c:	06350530 			; <UNDEFINED> instruction: 0x06350530
    1220:	2e620501 	cdpcs	5, 6, cr0, cr2, cr1, {0}
    1224:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    1228:	052f060b 	streq	r0, [pc, #-1547]!	; c25 <_Min_Stack_Size+0x825>
    122c:	2071030d 	rsbscs	r0, r1, sp, lsl #6
    1230:	01061605 	tsteq	r6, r5, lsl #12
    1234:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    1238:	053f060f 	ldreq	r0, [pc, #-1551]!	; c31 <_Min_Stack_Size+0x831>
    123c:	05010641 	streq	r0, [r1, #-1601]	; 0xfffff9bf
    1240:	18053c31 	stmdane	r5, {r0, r4, r5, sl, fp, ip, sp}
    1244:	052e202e 	streq	r2, [lr, #-46]!	; 0xffffffd2
    1248:	0525060f 	streq	r0, [r5, #-1551]!	; 0xfffff9f1
    124c:	05010641 	streq	r0, [r1, #-1601]	; 0xfffff9bf
    1250:	18053c31 	stmdane	r5, {r0, r4, r5, sl, fp, ip, sp}
    1254:	052e202e 	streq	r2, [lr, #-46]!	; 0xffffffd2
    1258:	0a030607 	beq	c2a7c <_Min_Stack_Size+0xc267c>
    125c:	13090520 	movwne	r0, #38176	; 0x9520
    1260:	05150b05 	ldreq	r0, [r5, #-2821]	; 0xfffff4fb
    1264:	20010614 	andcs	r0, r1, r4, lsl r6
    1268:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    126c:	053f060d 	ldreq	r0, [pc, #-1549]!	; c67 <_Min_Stack_Size+0x867>
    1270:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    1274:	16052e2f 	strne	r2, [r5], -pc, lsr #28
    1278:	0b05202e 	bleq	149338 <_Min_Stack_Size+0x148f38>
    127c:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    1280:	01063505 	tsteq	r6, r5, lsl #10
    1284:	052e5805 	streq	r5, [lr, #-2053]!	; 0xfffff7fb
    1288:	0b052e15 	bleq	14cae4 <_Min_Stack_Size+0x14c6e4>
    128c:	35053006 	strcc	r3, [r5, #-6]
    1290:	59050106 	stmdbpl	r5, {r1, r2, r8}
    1294:	2e150520 	cfmul64cs	mvdx0, mvdx5, mvdx0
    1298:	2f060b05 	svccs	0x00060b05
    129c:	79030d05 	stmdbvc	r3, {r0, r2, r8, sl, fp}
    12a0:	063f0520 	ldrteq	r0, [pc], -r0, lsr #10
    12a4:	2e2f0501 	cfsh64cs	mvdx0, mvdx15, #1
    12a8:	202e1605 	eorcs	r1, lr, r5, lsl #12
    12ac:	0603052e 	streq	r0, [r3], -lr, lsr #10
    12b0:	05201f03 	streq	r1, [r0, #-3843]!	; 0xfffff0fd
    12b4:	07051305 	streq	r1, [r5, -r5, lsl #6]
    12b8:	06100514 			; <UNDEFINED> instruction: 0x06100514
    12bc:	3c0e0501 	cfstr32cc	mvfx0, [lr], {1}
    12c0:	2f060705 	svccs	0x00060705
    12c4:	06209006 	strteq	r9, [r0], -r6
    12c8:	053c3d03 	ldreq	r3, [ip, #-3331]!	; 0xfffff2fd
    12cc:	0b051309 	bleq	145ef8 <_Min_Stack_Size+0x145af8>
    12d0:	06140513 			; <UNDEFINED> instruction: 0x06140513
    12d4:	0b052001 	bleq	1492e0 <_Min_Stack_Size+0x148ee0>
    12d8:	3e170520 	cfmul64cc	mvdx0, mvdx7, mvdx0
    12dc:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    12e0:	0520200b 	streq	r2, [r0, #-11]!
    12e4:	be030607 	cfmadd32lt	mvax0, mvfx0, mvfx3, mvfx7
    12e8:	0905207f 	stmdbeq	r5, {r0, r1, r2, r3, r4, r5, r6, sp}
    12ec:	130b0513 	movwne	r0, #46355	; 0xb513
    12f0:	01061405 	tsteq	r6, r5, lsl #8
    12f4:	2e0b0520 	cfsh32cs	mvfx0, mvfx11, #16
    12f8:	3f060d05 	svccc	0x00060d05
    12fc:	01064a05 	tsteq	r6, r5, lsl #20
    1300:	053c3a05 	ldreq	r3, [ip, #-2565]!	; 0xfffff5fb
    1304:	05202e16 	streq	r2, [r0, #-3606]!	; 0xfffff1ea
    1308:	1203060b 	andne	r0, r3, #11534336	; 0xb00000
    130c:	0635052e 	ldrteq	r0, [r5], -lr, lsr #10
    1310:	3c610501 	cfstr64cc	mvdx0, [r1], #-4
    1314:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    1318:	0530060b 	ldreq	r0, [r0, #-1547]!	; 0xfffff9f5
    131c:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    1320:	15052e62 	strne	r2, [r5, #-3682]	; 0xfffff19e
    1324:	060b052e 	streq	r0, [fp], -lr, lsr #10
    1328:	030d052f 	movweq	r0, #54575	; 0xd52f
    132c:	16052071 			; <UNDEFINED> instruction: 0x16052071
    1330:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    1334:	060f052e 	streq	r0, [pc], -lr, lsr #10
    1338:	0641053f 			; <UNDEFINED> instruction: 0x0641053f
    133c:	3c310501 	cfldr32cc	mvfx0, [r1], #-4
    1340:	202e1805 	eorcs	r1, lr, r5, lsl #16
    1344:	060f052e 	streq	r0, [pc], -lr, lsr #10
    1348:	06410525 	strbeq	r0, [r1], -r5, lsr #10
    134c:	3c310501 	cfldr32cc	mvfx0, [r1], #-4
    1350:	202e1805 	eorcs	r1, lr, r5, lsl #16
    1354:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1358:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    135c:	0b051309 	bleq	145f88 <_Min_Stack_Size+0x145b88>
    1360:	06140515 			; <UNDEFINED> instruction: 0x06140515
    1364:	0b052001 	bleq	149370 <_Min_Stack_Size+0x148f70>
    1368:	060d0520 	streq	r0, [sp], -r0, lsr #10
    136c:	063f053f 			; <UNDEFINED> instruction: 0x063f053f
    1370:	2e2f0501 	cfsh64cs	mvdx0, mvdx15, #1
    1374:	202e1605 	eorcs	r1, lr, r5, lsl #12
    1378:	03060b05 	movweq	r0, #27397	; 0x6b05
    137c:	35052e09 	strcc	r2, [r5, #-3593]	; 0xfffff1f7
    1380:	58050106 	stmdapl	r5, {r1, r2, r8}
    1384:	2e15052e 	cfmul64cs	mvdx0, mvdx5, mvdx14
    1388:	30060b05 	andcc	r0, r6, r5, lsl #22
    138c:	01063505 	tsteq	r6, r5, lsl #10
    1390:	05205905 	streq	r5, [r0, #-2309]!	; 0xfffff6fb
    1394:	0b052e15 	bleq	14cbf0 <_Min_Stack_Size+0x14c7f0>
    1398:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    139c:	05207903 	streq	r7, [r0, #-2307]!	; 0xfffff6fd
    13a0:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    13a4:	16052e2f 	strne	r2, [r5], -pc, lsr #28
    13a8:	052e202e 	streq	r2, [lr, #-46]!	; 0xffffffd2
    13ac:	20430315 	subcs	r0, r3, r5, lsl r3
    13b0:	03170520 	tsteq	r7, #32, 10	; 0x8000000
    13b4:	05202079 	streq	r2, [r0, #-121]!	; 0xffffff87
    13b8:	00dd0315 	sbcseq	r0, sp, r5, lsl r3
    13bc:	17052020 	strne	r2, [r5, -r0, lsr #32]
    13c0:	05207903 	streq	r7, [r0, #-2307]!	; 0xfffff6fd
    13c4:	0e030603 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx3
    13c8:	06010520 	streq	r0, [r1], -r0, lsr #10
    13cc:	00090213 	andeq	r0, r9, r3, lsl r2
    13d0:	01050101 	tsteq	r5, r1, lsl #2
    13d4:	00020500 	andeq	r0, r2, r0, lsl #10
    13d8:	03000000 	movweq	r0, #0
    13dc:	050115d0 	streq	r1, [r1, #-1488]	; 0xfffffa30
    13e0:	05131403 	ldreq	r1, [r3, #-1027]	; 0xfffffbfd
    13e4:	01053405 	tsteq	r5, r5, lsl #8
    13e8:	05055a06 	streq	r5, [r5, #-2566]	; 0xfffff5fa
    13ec:	207a0306 	rsbscs	r0, sl, r6, lsl #6
    13f0:	01000802 	tsteq	r0, r2, lsl #16
    13f4:	00010501 	andeq	r0, r1, r1, lsl #10
    13f8:	00000205 	andeq	r0, r0, r5, lsl #4
    13fc:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    1400:	01060115 	tsteq	r6, r5, lsl r1
    1404:	2f060305 	svccs	0x00060305
    1408:	18141315 	ldmdane	r4, {r0, r2, r4, r8, r9, ip}
    140c:	1a053f16 	bne	15106c <_Min_Stack_Size+0x150c6c>
    1410:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    1414:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    1418:	09050130 	stmdbeq	r5, {r4, r5, r8}
    141c:	30050106 	andcc	r0, r5, r6, lsl #2
    1420:	0605052e 	streq	r0, [r5], -lr, lsr #10
    1424:	0614053e 			; <UNDEFINED> instruction: 0x0614053e
    1428:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    142c:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    1430:	0105310e 	tsteq	r5, lr, lsl #2
    1434:	05203203 	streq	r3, [r0, #-515]!	; 0xfffffdfd
    1438:	5f030603 	svcpl	0x00030603
    143c:	c8130320 	ldmdagt	r3, {r5, r8, r9}
    1440:	061a053f 			; <UNDEFINED> instruction: 0x061a053f
    1444:	06030501 	streq	r0, [r3], -r1, lsl #10
    1448:	0130053d 	teqeq	r0, sp, lsr r5
    144c:	01060905 	tsteq	r6, r5, lsl #18
    1450:	052e3005 	streq	r3, [lr, #-5]!
    1454:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    1458:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    145c:	05052e17 	streq	r2, [r5, #-3607]	; 0xfffff1e9
    1460:	310e0520 	tstcc	lr, r0, lsr #10
    1464:	02320905 	eorseq	r0, r2, #81920	; 0x14000
    1468:	01010007 	tsteq	r1, r7
    146c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1470:	00000002 	andeq	r0, r0, r2
    1474:	16c80300 	strbne	r0, [r8], r0, lsl #6
    1478:	21030501 	tstcs	r3, r1, lsl #10
    147c:	1a053f15 	bne	1510d8 <_Min_Stack_Size+0x150cd8>
    1480:	03050106 	movweq	r0, #20742	; 0x5106
    1484:	2d053d06 	stccs	13, cr3, [r5, #-24]	; 0xffffffe8
    1488:	06090501 	streq	r0, [r9], -r1, lsl #10
    148c:	2e2d0501 	cfsh64cs	mvdx0, mvdx13, #1
    1490:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    1494:	01061405 	tsteq	r6, r5, lsl #8
    1498:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    149c:	0e052005 	cdpeq	0, 0, cr2, cr5, cr5, {0}
    14a0:	320a0531 	andcc	r0, sl, #205520896	; 0xc400000
    14a4:	20210105 	eorcs	r0, r1, r5, lsl #2
    14a8:	01000502 	tsteq	r0, r2, lsl #10
    14ac:	00010501 	andeq	r0, r1, r1, lsl #10
    14b0:	00000205 	andeq	r0, r0, r5, lsl #4
    14b4:	c9030000 	stmdbgt	r3, {}	; <UNPREDICTABLE>
    14b8:	03050118 	movweq	r0, #20760	; 0x5118
    14bc:	1a051521 	bne	146948 <_Min_Stack_Size+0x146548>
    14c0:	03050106 	movweq	r0, #20742	; 0x5106
    14c4:	055b3f06 	ldrbeq	r3, [fp, #-3846]	; 0xfffff0fa
    14c8:	0a05012b 	beq	14197c <_Min_Stack_Size+0x14157c>
    14cc:	2b050106 	blcs	1418ec <_Min_Stack_Size+0x1414ec>
    14d0:	0605052e 	streq	r0, [r5], -lr, lsr #10
    14d4:	0615053e 			; <UNDEFINED> instruction: 0x0615053e
    14d8:	2e180501 	cfmul32cs	mvfx0, mvfx8, mvfx1
    14dc:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    14e0:	0105300e 	tsteq	r5, lr
    14e4:	20019b03 	andcs	r9, r1, r3, lsl #22
    14e8:	03060305 	movweq	r0, #25349	; 0x6305
    14ec:	5b207eea 	blpl	82109c <_Min_Stack_Size+0x820c9c>
    14f0:	01061a05 	tsteq	r6, r5, lsl #20
    14f4:	3f060305 	svccc	0x00060305
    14f8:	012c0531 			; <UNDEFINED> instruction: 0x012c0531
    14fc:	01060a05 	tsteq	r6, r5, lsl #20
    1500:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
    1504:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    1508:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    150c:	05052e18 	streq	r2, [r5, #-3608]	; 0xfffff1e8
    1510:	4c0e0520 	cfstr32mi	mvfx0, [lr], {32}
    1514:	33060305 	movwcc	r0, #25349	; 0x6305
    1518:	01061a05 	tsteq	r6, r5, lsl #20
    151c:	3f060305 	svccc	0x00060305
    1520:	012b055b 			; <UNDEFINED> instruction: 0x012b055b
    1524:	01060a05 	tsteq	r6, r5, lsl #20
    1528:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
    152c:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    1530:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    1534:	05052e18 	streq	r2, [r5, #-3608]	; 0xfffff1e8
    1538:	300e0520 	andcc	r0, lr, r0, lsr #10
    153c:	33060305 	movwcc	r0, #25349	; 0x6305
    1540:	01061a05 	tsteq	r6, r5, lsl #20
    1544:	3f060305 	svccc	0x00060305
    1548:	012b055b 			; <UNDEFINED> instruction: 0x012b055b
    154c:	01060a05 	tsteq	r6, r5, lsl #20
    1550:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
    1554:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    1558:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    155c:	05052e18 	streq	r2, [r5, #-3608]	; 0xfffff1e8
    1560:	300e0520 	andcc	r0, lr, r0, lsr #10
    1564:	34060305 	strcc	r0, [r6], #-773	; 0xfffffcfb
    1568:	01061a05 	tsteq	r6, r5, lsl #20
    156c:	3f060305 	svccc	0x00060305
    1570:	012e055b 			; <UNDEFINED> instruction: 0x012e055b
    1574:	01060a05 	tsteq	r6, r5, lsl #20
    1578:	052e2e05 	streq	r2, [lr, #-3589]!	; 0xfffff1fb
    157c:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    1580:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    1584:	05052e18 	streq	r2, [r5, #-3608]	; 0xfffff1e8
    1588:	300e0520 	andcc	r0, lr, r0, lsr #10
    158c:	03060305 	movweq	r0, #25349	; 0x6305
    1590:	10052e19 	andne	r2, r5, r9, lsl lr
    1594:	03050106 	movweq	r0, #20742	; 0x5106
    1598:	3c0a0306 	stccc	3, cr0, [sl], {6}
    159c:	01061305 	tsteq	r6, r5, lsl #6
    15a0:	03060305 	movweq	r0, #25349	; 0x6305
    15a4:	524d2e11 	subpl	r2, sp, #272	; 0x110
    15a8:	4d4d524d 	sfmmi	f5, 2, [sp, #-308]	; 0xfffffecc
    15ac:	01061305 	tsteq	r6, r5, lsl #6
    15b0:	3f060305 	svccc	0x00060305
    15b4:	01061205 	tsteq	r6, r5, lsl #4
    15b8:	054a0305 	strbeq	r0, [sl, #-773]	; 0xfffffcfb
    15bc:	0d02300c 	stceq	0, cr3, [r2, #-48]	; 0xffffffd0
    15c0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    15c4:	02050001 	andeq	r0, r5, #1
    15c8:	08000450 	stmdaeq	r0, {r4, r6, sl}
    15cc:	011a8703 	tsteq	sl, r3, lsl #14
    15d0:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    15d4:	38060105 	stmdacc	r6, {r0, r2, r8}
    15d8:	03060305 	movweq	r0, #25349	; 0x6305
    15dc:	05143c0a 	ldreq	r3, [r4, #-3082]	; 0xfffff3f6
    15e0:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    15e4:	05052003 	streq	r2, [r5, #-3]
    15e8:	05193f06 	ldreq	r3, [r9, #-3846]	; 0xfffff0fa
    15ec:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    15f0:	054a0180 	strbeq	r0, [sl, #-384]	; 0xfffffe80
    15f4:	04020009 	streq	r0, [r2], #-9
    15f8:	80052f02 	andhi	r2, r5, r2, lsl #30
    15fc:	04020001 	streq	r0, [r2], #-1
    1600:	07054902 	streq	r4, [r5, -r2, lsl #18]
    1604:	2e0c0306 	cdpcs	3, 0, cr0, cr12, cr6, {0}
    1608:	04020001 	streq	r0, [r2], #-1
    160c:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    1610:	003c0404 	eorseq	r0, ip, r4, lsl #8
    1614:	58040402 	stmdapl	r4, {r1, sl}
    1618:	061e054d 	ldreq	r0, [lr], -sp, asr #10
    161c:	20070501 	andcs	r0, r7, r1, lsl #10
    1620:	31060905 	tstcc	r6, r5, lsl #18
    1624:	01062005 	tsteq	r6, r5
    1628:	0609052e 	streq	r0, [r9], -lr, lsr #10
    162c:	01330523 	teqeq	r3, r3, lsr #10
    1630:	01060f05 	tsteq	r6, r5, lsl #30
    1634:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
    1638:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    163c:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    1640:	0b052e1d 	bleq	14cebc <_Min_Stack_Size+0x14cabc>
    1644:	30140520 	andscc	r0, r4, r0, lsr #10
    1648:	68034605 	stmdavs	r3, {r0, r2, r9, sl, lr}
    164c:	2e3c052e 	cdpcs	5, 3, cr0, cr12, cr14, {1}
    1650:	3f060705 	svccc	0x00060705
    1654:	01060b05 	tsteq	r6, r5, lsl #22
    1658:	052e3905 	streq	r3, [lr, #-2309]!	; 0xfffff6fb
    165c:	04020050 	streq	r0, [r2], #-80	; 0xffffffb0
    1660:	39053c01 	stmdbcc	r5, {r0, sl, fp, ip, sp}
    1664:	01040200 	mrseq	r0, R12_usr
    1668:	06030520 	streq	r0, [r3], -r0, lsr #10
    166c:	053c2a03 	ldreq	r2, [ip, #-2563]!	; 0xfffff5fd
    1670:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    1674:	05052003 	streq	r2, [r5, #-3]
    1678:	1a133f06 	bne	4d1298 <_Min_Stack_Size+0x4d0e98>
    167c:	01060905 	tsteq	r6, r5, lsl #18
    1680:	2e018005 	cdpcs	0, 0, cr8, cr1, cr5, {0}
    1684:	02000905 	andeq	r0, r0, #81920	; 0x14000
    1688:	053d0204 	ldreq	r0, [sp, #-516]!	; 0xfffffdfc
    168c:	02000180 	andeq	r0, r0, #128, 2
    1690:	05490204 	strbeq	r0, [r9, #-516]	; 0xfffffdfc
    1694:	13030607 	movwne	r0, #13831	; 0x3607
    1698:	061e052e 	ldreq	r0, [lr], -lr, lsr #10
    169c:	20070501 	andcs	r0, r7, r1, lsl #10
    16a0:	03060905 	movweq	r0, #26885	; 0x6905
    16a4:	053f2e17 	ldreq	r2, [pc, #-3607]!	; 895 <_Min_Stack_Size+0x495>
    16a8:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    16ac:	053f0609 	ldreq	r0, [pc, #-1545]!	; 10ab <_Min_Stack_Size+0xcab>
    16b0:	0f050133 	svceq	0x00050133
    16b4:	33050106 	movwcc	r0, #20742	; 0x5106
    16b8:	060b052e 	streq	r0, [fp], -lr, lsr #10
    16bc:	061a053e 			; <UNDEFINED> instruction: 0x061a053e
    16c0:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    16c4:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    16c8:	07053014 	smladeq	r5, r4, r0, r3
    16cc:	01040200 	mrseq	r0, R12_usr
    16d0:	7f9e0306 	svcvc	0x009e0306
    16d4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    16d8:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    16dc:	05580304 	ldrbeq	r0, [r8, #-772]	; 0xfffffcfc
    16e0:	58140309 	ldmdapl	r4, {r0, r3, r8, r9}
    16e4:	01062005 	tsteq	r6, r5
    16e8:	0609052e 	streq	r0, [r9], -lr, lsr #10
    16ec:	01330523 	teqeq	r3, r3, lsr #10
    16f0:	01060f05 	tsteq	r6, r5, lsl #30
    16f4:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
    16f8:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    16fc:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    1700:	0b052e1d 	bleq	14cf7c <_Min_Stack_Size+0x14cb7c>
    1704:	30140520 	andscc	r0, r4, r0, lsr #10
    1708:	14034605 	strne	r4, [r3], #-1541	; 0xfffff9fb
    170c:	2e3c052e 	cdpcs	5, 3, cr0, cr12, cr14, {1}
    1710:	40060705 	andmi	r0, r6, r5, lsl #14
    1714:	01060b05 	tsteq	r6, r5, lsl #22
    1718:	052e3905 	streq	r3, [lr, #-2309]!	; 0xfffff6fb
    171c:	04020050 	streq	r0, [r2], #-80	; 0xffffffb0
    1720:	39053c01 	stmdbcc	r5, {r0, sl, fp, ip, sp}
    1724:	01040200 	mrseq	r0, R12_usr
    1728:	06090520 	streq	r0, [r9], -r0, lsr #10
    172c:	03030544 	movweq	r0, #13636	; 0x3544
    1730:	1b05822e 	blne	161ff0 <_Min_Stack_Size+0x161bf0>
    1734:	03050106 	movweq	r0, #20742	; 0x5106
    1738:	06050520 	streq	r0, [r5], -r0, lsr #10
    173c:	1c05153f 	cfstr32ne	mvfx1, [r5], {63}	; 0x3f
    1740:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1744:	06070520 	streq	r0, [r7], -r0, lsr #10
    1748:	1e054d23 	cdpne	13, 0, cr4, cr5, cr3, {1}
    174c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1750:	31053f06 	tstcc	r5, r6, lsl #30
    1754:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1758:	2e310501 	cdpcs	5, 3, cr0, cr1, cr1, {0}
    175c:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    1760:	01061805 	tsteq	r6, r5, lsl #16
    1764:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    1768:	12052009 	andne	r2, r5, #9
    176c:	06090530 			; <UNDEFINED> instruction: 0x06090530
    1770:	3f2e4803 	svccc	0x002e4803
    1774:	01062005 	tsteq	r6, r5
    1778:	3f060905 	svccc	0x00060905
    177c:	05013305 	streq	r3, [r1, #-773]	; 0xfffffcfb
    1780:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1784:	0b052e33 	bleq	14d058 <_Min_Stack_Size+0x14cc58>
    1788:	1a053e06 	bne	150fa8 <_Min_Stack_Size+0x150ba8>
    178c:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    1790:	200b052e 	andcs	r0, fp, lr, lsr #10
    1794:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    1798:	05330609 	ldreq	r0, [r3, #-1545]!	; 0xfffff9f7
    179c:	90300307 	eorsls	r0, r0, r7, lsl #6
    17a0:	061e054d 	ldreq	r0, [lr], -sp, asr #10
    17a4:	06070501 	streq	r0, [r7], -r1, lsl #10
    17a8:	0131053f 	teqeq	r1, pc, lsr r5
    17ac:	01060d05 	tsteq	r6, r5, lsl #26
    17b0:	052e3105 	streq	r3, [lr, #-261]!	; 0xfffffefb
    17b4:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    17b8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    17bc:	09052e1b 	stmdbeq	r5, {r0, r1, r3, r4, r9, sl, fp, sp}
    17c0:	30120520 	andscc	r0, r2, r0, lsr #10
    17c4:	34060305 	strcc	r0, [r6], #-773	; 0xfffffcfb
    17c8:	01061b05 	tsteq	r6, r5, lsl #22
    17cc:	05200305 	streq	r0, [r0, #-773]!	; 0xfffffcfb
    17d0:	153e0605 	ldrne	r0, [lr, #-1541]!	; 0xfffff9fb
    17d4:	06080516 			; <UNDEFINED> instruction: 0x06080516
    17d8:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    17dc:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    17e0:	4a582e01 	bmi	160cfec <_Min_Stack_Size+0x160cbec>
    17e4:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    17e8:	05052001 	streq	r2, [r5, #-1]
    17ec:	08051506 	stmdaeq	r5, {r1, r2, r8, sl, ip}
    17f0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    17f4:	1203062e 	andne	r0, r3, #48234496	; 0x2e00000
    17f8:	0200013c 	andeq	r0, r0, #60, 2
    17fc:	003c0204 	eorseq	r0, ip, r4, lsl #4
    1800:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    1804:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1808:	1c054c58 	stcne	12, cr4, [r5], {88}	; 0x58
    180c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1810:	06070520 	streq	r0, [r7], -r0, lsr #10
    1814:	061e0531 			; <UNDEFINED> instruction: 0x061e0531
    1818:	06070501 	streq	r0, [r7], -r1, lsl #10
    181c:	0131053f 	teqeq	r1, pc, lsr r5
    1820:	01060d05 	tsteq	r6, r5, lsl #26
    1824:	052e3105 	streq	r3, [lr, #-261]!	; 0xfffffefb
    1828:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    182c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1830:	09052e1b 	stmdbeq	r5, {r0, r1, r3, r4, r9, sl, fp, sp}
    1834:	4c120520 	cfldr32mi	mvfx0, [r2], {32}
    1838:	55031605 	strpl	r1, [r3, #-1541]	; 0xfffff9fb
    183c:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1840:	5b2e1003 	blpl	b85854 <_Min_Stack_Size+0xb85454>
    1844:	01061e05 	tsteq	r6, r5, lsl #28
    1848:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    184c:	05010d05 	streq	r0, [r1, #-3333]	; 0xfffff2fb
    1850:	18055a09 	stmdane	r5, {r0, r3, r9, fp, ip, lr}
    1854:	1b050106 	blne	141c74 <_Min_Stack_Size+0x141874>
    1858:	2009052e 	andcs	r0, r9, lr, lsr #10
    185c:	05301205 	ldreq	r1, [r0, #-517]!	; 0xfffffdfb
    1860:	04020005 	streq	r0, [r2], #-5
    1864:	00340601 	eorseq	r0, r4, r1, lsl #12
    1868:	66030402 	strvs	r0, [r3], -r2, lsl #8
    186c:	03040200 	movweq	r0, #16896	; 0x4200
    1870:	03070558 	movweq	r0, #30040	; 0x7558
    1874:	1e05ba13 			; <UNDEFINED> instruction: 0x1e05ba13
    1878:	07050106 	streq	r0, [r5, -r6, lsl #2]
    187c:	31053f06 	tstcc	r5, r6, lsl #30
    1880:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1884:	2e310501 	cdpcs	5, 3, cr0, cr1, cr1, {0}
    1888:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    188c:	01061805 	tsteq	r6, r5, lsl #16
    1890:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    1894:	12052009 	andne	r2, r5, #9
    1898:	0605054c 	streq	r0, [r5], -ip, asr #10
    189c:	05200634 	streq	r0, [r0, #-1588]!	; 0xfffff9cc
    18a0:	13190603 	tstne	r9, #3145728	; 0x300000
    18a4:	01061f05 	tsteq	r6, r5, lsl #30
    18a8:	05200305 	streq	r0, [r0, #-773]!	; 0xfffffcfb
    18ac:	053f0605 	ldreq	r0, [pc, #-1541]!	; 12af <_Min_Stack_Size+0xeaf>
    18b0:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    18b4:	07054a05 	streq	r4, [r5, -r5, lsl #20]
    18b8:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    18bc:	3f2e3203 	svccc	0x002e3203
    18c0:	01062005 	tsteq	r6, r5
    18c4:	3f060905 	svccc	0x00060905
    18c8:	05013305 	streq	r3, [r1, #-773]	; 0xfffffcfb
    18cc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    18d0:	0b052e33 	bleq	14d1a4 <_Min_Stack_Size+0x14cda4>
    18d4:	1a053e06 	bne	1510f4 <_Min_Stack_Size+0x150cf4>
    18d8:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    18dc:	200b052e 	andcs	r0, fp, lr, lsr #10
    18e0:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    18e4:	b9030607 	stmdblt	r3, {r0, r1, r2, r9, sl}
    18e8:	66062e7f 			; <UNDEFINED> instruction: 0x66062e7f
    18ec:	03060905 	movweq	r0, #26885	; 0x6905
    18f0:	1313010e 	tstne	r3, #-2147483645	; 0x80000003
    18f4:	15131313 	ldrne	r1, [r3, #-787]	; 0xfffffced
    18f8:	0620053f 			; <UNDEFINED> instruction: 0x0620053f
    18fc:	06090501 	streq	r0, [r9], -r1, lsl #10
    1900:	0133053f 	teqeq	r3, pc, lsr r5
    1904:	01060f05 	tsteq	r6, r5, lsl #30
    1908:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
    190c:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    1910:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    1914:	0b052e1d 	bleq	14d190 <_Min_Stack_Size+0x14cd90>
    1918:	30140520 	andscc	r0, r4, r0, lsr #10
    191c:	33060905 	movwcc	r0, #26885	; 0x6905
    1920:	053f3508 	ldreq	r3, [pc, #-1288]!	; 1420 <_Min_Stack_Size+0x1020>
    1924:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    1928:	053f0609 	ldreq	r0, [pc, #-1545]!	; 1327 <_Min_Stack_Size+0xf27>
    192c:	0f050133 	svceq	0x00050133
    1930:	33050106 	movwcc	r0, #20742	; 0x5106
    1934:	060b052e 	streq	r0, [fp], -lr, lsr #10
    1938:	061a053e 			; <UNDEFINED> instruction: 0x061a053e
    193c:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    1940:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    1944:	07053014 	smladeq	r5, r4, r0, r3
    1948:	2e190306 	cdpcs	3, 1, cr0, cr9, cr6, {0}
    194c:	05350905 	ldreq	r0, [r5, #-2309]!	; 0xfffff6fb
    1950:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1954:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    1958:	0513060e 	ldreq	r0, [r3, #-1550]	; 0xfffff9f2
    195c:	40052e51 	andmi	r2, r5, r1, asr lr
    1960:	300e051f 	andcc	r0, lr, pc, lsl r5
    1964:	052e5005 	streq	r5, [lr, #-5]!
    1968:	50051f5c 	andpl	r1, r5, ip, asr pc
    196c:	1f6f0530 	svcne	0x006f0530
    1970:	05680e05 	strbeq	r0, [r8, #-3589]!	; 0xfffff1fb
    1974:	57052e52 	smlsdpl	r5, r2, lr, r2
    1978:	205e0520 	subscs	r0, lr, r0, lsr #10
    197c:	051f6f05 	ldreq	r6, [pc, #-3845]	; a7f <_Min_Stack_Size+0x67f>
    1980:	50053e0e 	andpl	r3, r5, lr, lsl #28
    1984:	1f7e052e 	svcne	0x007e052e
    1988:	053e0e05 	ldreq	r0, [lr, #-3589]!	; 0xfffff1fb
    198c:	6f052e50 	svcvs	0x00052e50
    1990:	030a051f 	movweq	r0, #42271	; 0xa51f
    1994:	0c053c10 	stceq	12, cr3, [r5], {16}
    1998:	2e7da103 	expcse	f2, f3
    199c:	e0030105 	and	r0, r3, r5, lsl #2
    19a0:	10052002 	andne	r2, r5, r2
    19a4:	207db603 	rsbscs	fp, sp, r3, lsl #12
    19a8:	203b0320 	eorscs	r0, fp, r0, lsr #6
    19ac:	8e030a05 	vmlahi.f32	s0, s6, s10
    19b0:	01052e02 	tsteq	r5, r2, lsl #28
    19b4:	2d0a0521 	cfstr32cs	mvfx0, [sl, #-132]	; 0xffffff7c
    19b8:	0310052e 	tsteq	r0, #192937984	; 0xb800000
    19bc:	12052e64 	andne	r2, r5, #100, 28	; 0x640
    19c0:	9e2e1703 	cdpls	7, 2, cr1, cr14, cr3, {0}
    19c4:	01000702 	tsteq	r0, r2, lsl #14
    19c8:	00010501 	andeq	r0, r1, r1, lsl #10
    19cc:	00000205 	andeq	r0, r0, r5, lsl #4
    19d0:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    19d4:	0305011c 	movweq	r0, #20764	; 0x511c
    19d8:	06250514 			; <UNDEFINED> instruction: 0x06250514
    19dc:	06030501 	streq	r0, [r3], -r1, lsl #10
    19e0:	060c0531 			; <UNDEFINED> instruction: 0x060c0531
    19e4:	2e030501 	cfsh32cs	mvfx0, mvfx3, #1
    19e8:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    19ec:	01062105 	tsteq	r6, r5, lsl #2
    19f0:	03060305 	movweq	r0, #25349	; 0x6305
    19f4:	0c053c0c 	stceq	12, cr3, [r5], {12}
    19f8:	03050106 	movweq	r0, #20742	; 0x5106
    19fc:	0605052e 	streq	r0, [r5], -lr, lsr #10
    1a00:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
    1a04:	06030501 	streq	r0, [r3], -r1, lsl #10
    1a08:	063d0535 			; <UNDEFINED> instruction: 0x063d0535
    1a0c:	2e2c0501 	cfsh64cs	mvdx0, mvdx12, #1
    1a10:	052e2a05 	streq	r2, [lr, #-2565]!	; 0xfffff5fb
    1a14:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    1a18:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1a1c:	05052003 	streq	r2, [r5, #-3]
    1a20:	21053e06 	tstcs	r5, r6, lsl #28
    1a24:	03050106 	movweq	r0, #20742	; 0x5106
    1a28:	2e0c0306 	cdpcs	3, 0, cr0, cr12, cr6, {0}
    1a2c:	01060c05 	tsteq	r6, r5, lsl #24
    1a30:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
    1a34:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    1a38:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    1a3c:	05360603 	ldreq	r0, [r6, #-1539]!	; 0xfffff9fd
    1a40:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1a44:	05052e03 	streq	r2, [r5, #-3587]	; 0xfffff1fd
    1a48:	25053e06 	strcs	r3, [r5, #-3590]	; 0xfffff1fa
    1a4c:	03050106 	movweq	r0, #20742	; 0x5106
    1a50:	36053406 	strcc	r3, [r5], -r6, lsl #8
    1a54:	26050106 	strcs	r0, [r5], -r6, lsl #2
    1a58:	2e24052e 	cfsh64cs	mvdx0, mvdx4, #30
    1a5c:	21060305 	tstcs	r6, r5, lsl #6
    1a60:	01063105 	tsteq	r6, r5, lsl #2
    1a64:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    1a68:	03052e1f 	movweq	r2, #24095	; 0x5e1f
    1a6c:	32052106 	andcc	r2, r5, #-2147483647	; 0x80000001
    1a70:	21050106 	tstcs	r5, r6, lsl #2
    1a74:	2e1f0520 	cfmul64cs	mvdx0, mvdx15, mvdx0
    1a78:	21060305 	tstcs	r6, r5, lsl #6
    1a7c:	01063405 	tsteq	r6, r5, lsl #8
    1a80:	05203c05 	streq	r3, [r0, #-3077]!	; 0xfffff3fb
    1a84:	6d052e50 	stcvs	14, cr2, [r5, #-320]	; 0xfffffec0
    1a88:	201f052e 	andscs	r0, pc, lr, lsr #10
    1a8c:	21060305 	tstcs	r6, r5, lsl #6
    1a90:	01063205 	tsteq	r6, r5, lsl #4
    1a94:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    1a98:	03052e1f 	movweq	r2, #24095	; 0x5e1f
    1a9c:	32052106 	andcc	r2, r5, #-2147483647	; 0x80000001
    1aa0:	21050106 	tstcs	r5, r6, lsl #2
    1aa4:	2e1f0520 	cfmul64cs	mvdx0, mvdx15, mvdx0
    1aa8:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    1aac:	44030608 	strmi	r0, [r3], #-1544	; 0xfffff9f8
    1ab0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    1ab4:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
    1ab8:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    1abc:	01062105 	tsteq	r6, r5, lsl #2
    1ac0:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    1ac4:	01062105 	tsteq	r6, r5, lsl #2
    1ac8:	03060505 	movweq	r0, #25861	; 0x6505
    1acc:	21053c0a 	tstcs	r5, sl, lsl #24
    1ad0:	08050106 	stmdaeq	r5, {r1, r2, r8}
    1ad4:	3c0a0306 	stccc	3, cr0, [sl], {6}
    1ad8:	01061105 	tsteq	r6, r5, lsl #2
    1adc:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    1ae0:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    1ae4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    1ae8:	05400605 	strbeq	r0, [r0, #-1541]	; 0xfffff9fb
    1aec:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    1af0:	0a030605 	beq	c330c <_Min_Stack_Size+0xc2f0c>
    1af4:	0621053c 			; <UNDEFINED> instruction: 0x0621053c
    1af8:	06050501 	streq	r0, [r5], -r1, lsl #10
    1afc:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    1b00:	02010625 	andeq	r0, r1, #38797312	; 0x2500000
    1b04:	01010006 	tsteq	r1, r6
    1b08:	00000744 	andeq	r0, r0, r4, asr #14
    1b0c:	01af0003 			; <UNDEFINED> instruction: 0x01af0003
    1b10:	01020000 	mrseq	r0, (UNDEF: 2)
    1b14:	000d0efb 	strdeq	r0, [sp], -fp
    1b18:	01010101 	tsteq	r1, r1, lsl #2
    1b1c:	01000000 	mrseq	r0, (UNDEF: 0)
    1b20:	44010000 	strmi	r0, [r1], #-0
    1b24:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1b28:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    1b2c:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    1b30:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    1b34:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    1b38:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1b3c:	2f726576 	svccs	0x00726576
    1b40:	00637253 	rsbeq	r7, r3, r3, asr r2
    1b44:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1b48:	2f737265 	svccs	0x00737265
    1b4c:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    1b50:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    1b54:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1b58:	72440065 	subvc	r0, r4, #101	; 0x65
    1b5c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1b60:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    1b64:	2f534953 	svccs	0x00534953
    1b68:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    1b6c:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    1b70:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    1b74:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    1b78:	2f787834 	svccs	0x00787834
    1b7c:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    1b80:	00656475 	rsbeq	r6, r5, r5, ror r4
    1b84:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    1b88:	6e69622f 	cdpvs	2, 6, cr6, cr9, cr15, {1}
    1b8c:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    1b90:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    1b94:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1b98:	61652d65 	cmnvs	r5, r5, ror #26
    1b9c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    1ba0:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    1ba4:	31323032 	teqcc	r2, r2, lsr r0
    1ba8:	2f30312e 	svccs	0x0030312e
    1bac:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1bb0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1bb4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1bb8:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    1bbc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1bc0:	616d2f65 	cmnvs	sp, r5, ror #30
    1bc4:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    1bc8:	752f0065 	strvc	r0, [pc, #-101]!	; 1b6b <_Min_Stack_Size+0x176b>
    1bcc:	622f7273 	eorvs	r7, pc, #805306375	; 0x30000007
    1bd0:	672f6e69 	strvs	r6, [pc, -r9, ror #28]!
    1bd4:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1bd8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1bdc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1be0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1be4:	2e30312d 	rsfcssp	f3, f0, #5.0
    1be8:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1bec:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1bf0:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    1bf4:	6f6e2d6d 	svcvs	0x006e2d6d
    1bf8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1bfc:	2f696261 	svccs	0x00696261
    1c00:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1c04:	2f656475 	svccs	0x00656475
    1c08:	00737973 	rsbseq	r7, r3, r3, ror r9
    1c0c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1c10:	2f737265 	svccs	0x00737265
    1c14:	334d5453 	movtcc	r5, #54355	; 0xd453
    1c18:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    1c1c:	41485f78 	hvcmi	34296	; 0x85f8
    1c20:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    1c24:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1c28:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    1c2c:	74730000 	ldrbtvc	r0, [r3], #-0
    1c30:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1c34:	5f787834 	svcpl	0x00787834
    1c38:	5f6c6168 	svcpl	0x006c6168
    1c3c:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    1c40:	632e7865 			; <UNDEFINED> instruction: 0x632e7865
    1c44:	00000100 	andeq	r0, r0, r0, lsl #2
    1c48:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    1c4c:	346d635f 	strbtcc	r6, [sp], #-863	; 0xfffffca1
    1c50:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1c54:	6d630000 	stclvs	0, cr0, [r3, #-0]
    1c58:	5f736973 	svcpl	0x00736973
    1c5c:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    1c60:	00020068 	andeq	r0, r2, r8, rrx
    1c64:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1c68:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1c6c:	787a3231 	ldmdavc	sl!, {r0, r4, r5, r9, ip, sp}^
    1c70:	0300682e 	movweq	r6, #2094	; 0x82e
    1c74:	645f0000 	ldrbvs	r0, [pc], #-0	; 1c7c <_Min_Stack_Size+0x187c>
    1c78:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    1c7c:	745f746c 	ldrbvc	r7, [pc], #-1132	; 1c84 <_Min_Stack_Size+0x1884>
    1c80:	73657079 	cmnvc	r5, #121	; 0x79
    1c84:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    1c88:	735f0000 	cmpvc	pc, #0
    1c8c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    1c90:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1c94:	73000005 	movwvc	r0, #5
    1c98:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1c9c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1ca0:	0300682e 	movweq	r6, #2094	; 0x82e
    1ca4:	74730000 	ldrbtvc	r0, [r3], #-0
    1ca8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1cac:	5f787834 	svcpl	0x00787834
    1cb0:	5f6c6168 	svcpl	0x006c6168
    1cb4:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    1cb8:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
    1cbc:	00000600 	andeq	r0, r0, r0, lsl #12
    1cc0:	00010500 	andeq	r0, r1, r0, lsl #10
    1cc4:	00000205 	andeq	r0, r0, r5, lsl #4
    1cc8:	8f030000 	svchi	0x00030000
    1ccc:	03050101 	movweq	r0, #20737	; 0x5101
    1cd0:	02041514 	andeq	r1, r4, #20, 10	; 0x5000000
    1cd4:	e4031605 	str	r1, [r3], #-1541	; 0xfffff9fb
    1cd8:	0305010b 	movweq	r0, #20747	; 0x510b
    1cdc:	05141314 	ldreq	r1, [r4, #-788]	; 0xfffffcec
    1ce0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1ce4:	052f0603 	streq	r0, [pc, #-1539]!	; 16e9 <_Min_Stack_Size+0x12e9>
    1ce8:	2e01060d 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx13
    1cec:	2f060305 	svccs	0x00060305
    1cf0:	14062305 	strne	r2, [r6], #-773	; 0xfffffcfb
    1cf4:	2d3e0520 	cfldr32cs	mvfx0, [lr, #-128]!	; 0xffffff80
    1cf8:	051f0e05 	ldreq	r0, [pc, #-3589]	; efb <_Min_Stack_Size+0xafb>
    1cfc:	054d0603 	strbeq	r0, [sp, #-1539]	; 0xfffff9fd
    1d00:	2001060e 	andcs	r0, r1, lr, lsl #12
    1d04:	01050104 	tsteq	r5, r4, lsl #2
    1d08:	01749303 	cmneq	r4, r3, lsl #6
    1d0c:	01000302 	tsteq	r0, r2, lsl #6
    1d10:	00010501 	andeq	r0, r1, r1, lsl #10
    1d14:	08600205 	stmdaeq	r0!, {r0, r2, r9}^
    1d18:	a5030800 	strge	r0, [r3, #-2048]	; 0xfffff800
    1d1c:	01060101 	tsteq	r6, r1, lsl #2
    1d20:	21060305 	tstcs	r6, r5, lsl #6
    1d24:	04141315 	ldreq	r1, [r4], #-789	; 0xfffffceb
    1d28:	031a0502 	tsteq	sl, #8388608	; 0x800000
    1d2c:	05010bdf 	streq	r0, [r1, #-3039]	; 0xfffff421
    1d30:	1c051403 	cfstrsne	mvf1, [r5], {3}
    1d34:	56050106 	strpl	r0, [r5], -r6, lsl #2
    1d38:	01042e2e 	tsteq	r4, lr, lsr #28
    1d3c:	03060305 	movweq	r0, #25349	; 0x6305
    1d40:	040174a1 	streq	r7, [r1], #-1185	; 0xfffffb5f
    1d44:	031a0502 	tsteq	sl, #8388608	; 0x800000
    1d48:	05010d98 	streq	r0, [r1, #-3480]	; 0xfffff268
    1d4c:	13131403 	tstne	r3, #50331648	; 0x3000000
    1d50:	061f0514 			; <UNDEFINED> instruction: 0x061f0514
    1d54:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    1d58:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
    1d5c:	01062c05 	tsteq	r6, r5, lsl #24
    1d60:	052e5d05 	streq	r5, [lr, #-3333]!	; 0xfffff2fb
    1d64:	054c0603 	strbeq	r0, [ip, #-1539]	; 0xfffff9fd
    1d68:	2e13061e 	mrccs	6, 0, r0, cr3, cr14, {0}
    1d6c:	2e52052e 	cdpcs	5, 5, cr0, cr2, cr14, {1}
    1d70:	2e211e05 	cdpcs	14, 2, cr1, cr1, cr5, {0}
    1d74:	202f0a05 	eorcs	r0, pc, r5, lsl #20
    1d78:	03061605 	movweq	r1, #26117	; 0x6605
    1d7c:	03050145 	movweq	r0, #20805	; 0x5145
    1d80:	30050514 	andcc	r0, r5, r4, lsl r5
    1d84:	01064405 	tsteq	r6, r5, lsl #8
    1d88:	202e0520 	eorcs	r0, lr, r0, lsr #10
    1d8c:	01044a2e 	tsteq	r4, lr, lsr #20
    1d90:	94030105 	strls	r0, [r3], #-261	; 0xfffffefb
    1d94:	02040173 	andeq	r0, r4, #-1073741796	; 0xc000001c
    1d98:	9e035d05 	cdpls	13, 0, cr5, cr3, cr5, {0}
    1d9c:	20202e0d 	eorcs	r2, r0, sp, lsl #28
    1da0:	03060505 	movweq	r0, #25861	; 0x6505
    1da4:	20050152 	andcs	r0, r5, r2, asr r1
    1da8:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
    1dac:	2e05202e 	cdpcs	0, 0, cr2, cr5, cr14, {1}
    1db0:	01042e20 	tsteq	r4, r0, lsr #28
    1db4:	90030105 	andls	r0, r3, r5, lsl #2
    1db8:	06020173 			; <UNDEFINED> instruction: 0x06020173
    1dbc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1dc0:	02050001 	andeq	r0, r5, #1
    1dc4:	00000000 	andeq	r0, r0, r0
    1dc8:	0101bb03 	tsteq	r1, r3, lsl #22
    1dcc:	15140305 	ldrne	r0, [r4, #-773]	; 0xfffffcfb
    1dd0:	16050204 	strne	r0, [r5], -r4, lsl #4
    1dd4:	010bd703 	tsteq	fp, r3, lsl #14
    1dd8:	06140305 	ldreq	r0, [r4], -r5, lsl #6
    1ddc:	06050520 	streq	r0, [r5], -r0, lsr #10
    1de0:	06510522 	ldrbeq	r0, [r1], -r2, lsr #10
    1de4:	2e220501 	cfsh64cs	mvdx0, mvdx2, #1
    1de8:	05203c05 	streq	r3, [r0, #-3077]!	; 0xfffff3fb
    1dec:	043c2e2b 	ldrteq	r2, [ip], #-3627	; 0xfffff1d5
    1df0:	03010501 	movweq	r0, #5377	; 0x1501
    1df4:	020174a6 	andeq	r7, r1, #-1509949440	; 0xa6000000
    1df8:	01010004 	tsteq	r1, r4
    1dfc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1e00:	00000002 	andeq	r0, r0, r2
    1e04:	01cb0300 	biceq	r0, fp, r0, lsl #6
    1e08:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1e0c:	05020415 	streq	r0, [r2, #-1045]	; 0xfffffbeb
    1e10:	0beb0316 	bleq	ffac2a70 <_estack+0xdfa82a70>
    1e14:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1e18:	05052006 	streq	r2, [r5, #-6]
    1e1c:	51052206 	tstpl	r5, r6, lsl #4
    1e20:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    1e24:	203c052e 	eorscs	r0, ip, lr, lsr #10
    1e28:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
    1e2c:	044b0605 	strbeq	r0, [fp], #-1541	; 0xfffff9fb
    1e30:	031b0503 	tsteq	fp, #12582912	; 0xc00000
    1e34:	050179ac 	streq	r7, [r1, #-2476]	; 0xfffff654
    1e38:	02041403 	andeq	r1, r4, #50331648	; 0x3000000
    1e3c:	d3030505 	movwle	r0, #13573	; 0x3505
    1e40:	03042e06 	movweq	r2, #19974	; 0x4e06
    1e44:	a0031b05 	andge	r1, r3, r5, lsl #22
    1e48:	03050179 	movweq	r0, #20857	; 0x5179
    1e4c:	042e0614 	strteq	r0, [lr], #-1556	; 0xfffff9ec
    1e50:	03010501 	movweq	r0, #5377	; 0x1501
    1e54:	02017aee 	andeq	r7, r1, #974848	; 0xee000
    1e58:	01010003 	tsteq	r1, r3
    1e5c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1e60:	00000002 	andeq	r0, r0, r2
    1e64:	01d80300 	bicseq	r0, r8, r0, lsl #6
    1e68:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1e6c:	22050204 	andcs	r0, r5, #4, 4	; 0x40000000
    1e70:	010db803 	tsteq	sp, r3, lsl #16
    1e74:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    1e78:	031b0503 	tsteq	fp, #12582912	; 0xc00000
    1e7c:	050177d8 	streq	r7, [r1, #-2008]	; 0xfffff828
    1e80:	02041403 	andeq	r1, r4, #50331648	; 0x3000000
    1e84:	2e08a803 	cdpcs	8, 0, cr10, cr8, cr3, {0}
    1e88:	13062205 	movwne	r2, #25093	; 0x6205
    1e8c:	052e2805 	streq	r2, [lr, #-2053]!	; 0xfffff7fb
    1e90:	0f052e42 	svceq	0x00052e42
    1e94:	0603052d 	streq	r0, [r3], -sp, lsr #10
    1e98:	05030423 	streq	r0, [r3, #-1059]	; 0xfffffbdd
    1e9c:	77d3031b 	bfivc	r0, fp, #6, #14
    1ea0:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1ea4:	ad030204 	sfmge	f0, 4, [r3, #-16]
    1ea8:	05052e08 	streq	r2, [r5, #-3592]	; 0xfffff1f8
    1eac:	1e030514 	mcrne	5, 0, r0, cr3, cr4, {0}
    1eb0:	01000602 	tsteq	r0, r2, lsl #12
    1eb4:	00010501 	andeq	r0, r1, r1, lsl #10
    1eb8:	08d00205 	ldmeq	r0, {r0, r2, r9}^
    1ebc:	e5030800 	str	r0, [r3, #-2048]	; 0xfffff800
    1ec0:	04050101 	streq	r0, [r5], #-257	; 0xfffffeff
    1ec4:	05020413 	streq	r0, [r2, #-1043]	; 0xfffffbed
    1ec8:	0dff031a 	ldcleq	3, cr0, [pc, #104]!	; 1f38 <_Min_Stack_Size+0x1b38>
    1ecc:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1ed0:	01060e05 	tsteq	r6, r5, lsl #28
    1ed4:	06200305 	strteq	r0, [r0], -r5, lsl #6
    1ed8:	06120541 	ldreq	r0, [r2], -r1, asr #10
    1edc:	06030501 	streq	r0, [r3], -r1, lsl #10
    1ee0:	0316053d 	tsteq	r6, #255852544	; 0xf400000
    1ee4:	05017eaa 	streq	r7, [r1, #-3754]	; 0xfffff156
    1ee8:	05051403 	streq	r1, [r5, #-1027]	; 0xfffffbfd
    1eec:	062e0518 			; <UNDEFINED> instruction: 0x062e0518
    1ef0:	03054a01 	movweq	r4, #23041	; 0x5a01
    1ef4:	01cf0306 	biceq	r0, pc, r6, lsl #6
    1ef8:	06120501 	ldreq	r0, [r2], -r1, lsl #10
    1efc:	03052001 	movweq	r2, #20481	; 0x5001
    1f00:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
    1f04:	03050106 	movweq	r0, #20742	; 0x5106
    1f08:	0e053106 	adfeqs	f3, f5, f6
    1f0c:	10050106 	andne	r0, r5, r6, lsl #2
    1f10:	20207703 	eorcs	r7, r0, r3, lsl #14
    1f14:	01050104 	tsteq	r5, r4, lsl #2
    1f18:	0171fe03 	cmneq	r1, r3, lsl #28	; <UNPREDICTABLE>
    1f1c:	01000302 	tsteq	r0, r2, lsl #6
    1f20:	00010501 	andeq	r0, r1, r1, lsl #10
    1f24:	00000205 	andeq	r0, r0, r5, lsl #4
    1f28:	82030000 	andhi	r0, r3, #0
    1f2c:	03050102 	movweq	r0, #20738	; 0x5102
    1f30:	05030414 	streq	r0, [r3, #-1044]	; 0xfffffbec
    1f34:	04f3031b 	ldrbteq	r0, [r3], #795	; 0x31b
    1f38:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1f3c:	8e030104 	adfhis	f0, f3, f4
    1f40:	0e052e7b 	mcreq	14, 0, r2, cr5, cr11, {3}
    1f44:	03050106 	movweq	r0, #20742	; 0x5106
    1f48:	0d055b06 	vstreq	d5, [r5, #-24]	; 0xffffffe8
    1f4c:	01050106 	tsteq	r5, r6, lsl #2
    1f50:	0004023d 	andeq	r0, r4, sp, lsr r2
    1f54:	01050101 	tsteq	r5, r1, lsl #2
    1f58:	00020500 	andeq	r0, r2, r0, lsl #10
    1f5c:	03000000 	movweq	r0, #0
    1f60:	05010299 	streq	r0, [r1, #-665]	; 0xfffffd67
    1f64:	1b051403 	blne	146f78 <_Min_Stack_Size+0x146b78>
    1f68:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    1f6c:	0603052e 	streq	r0, [r3], -lr, lsr #10
    1f70:	060e053f 			; <UNDEFINED> instruction: 0x060e053f
    1f74:	06030501 	streq	r0, [r3], -r1, lsl #10
    1f78:	0503044d 	streq	r0, [r3, #-1101]	; 0xfffffbb3
    1f7c:	04cb031b 	strbeq	r0, [fp], #795	; 0x31b
    1f80:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1f84:	b4030104 	strlt	r0, [r3], #-260	; 0xfffffefc
    1f88:	03042e7b 	movweq	r2, #20091	; 0x4e7b
    1f8c:	bf031b05 	svclt	0x00031b05
    1f90:	03050104 	movweq	r0, #20740	; 0x5104
    1f94:	05010414 	streq	r0, [r1, #-1044]	; 0xfffffbec
    1f98:	c0030601 	andgt	r0, r3, r1, lsl #12
    1f9c:	03022e7b 	movweq	r2, #11899	; 0x2e7b
    1fa0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1fa4:	02050001 	andeq	r0, r5, #1
    1fa8:	00000000 	andeq	r0, r0, r0
    1fac:	0102ac03 	tsteq	r2, r3, lsl #24
    1fb0:	13140305 	tstne	r4, #335544320	; 0x14000000
    1fb4:	06180515 			; <UNDEFINED> instruction: 0x06180515
    1fb8:	200c0501 	andcs	r0, ip, r1, lsl #10
    1fbc:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    1fc0:	01061205 	tsteq	r6, r5, lsl #4
    1fc4:	05200305 	streq	r0, [r0, #-773]!	; 0xfffffcfb
    1fc8:	13230605 			; <UNDEFINED> instruction: 0x13230605
    1fcc:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    1fd0:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    1fd4:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    1fd8:	0505200f 	streq	r2, [r5, #-15]
    1fdc:	26053d06 	strcs	r3, [r5], -r6, lsl #26
    1fe0:	05210106 	streq	r0, [r1, #-262]!	; 0xfffffefa
    1fe4:	5405203e 	strpl	r2, [r5], #-62	; 0xffffffc2
    1fe8:	3026051f 	eorcc	r0, r6, pc, lsl r5
    1fec:	051f5405 	ldreq	r5, [pc, #-1029]	; 1bef <_Min_Stack_Size+0x17ef>
    1ff0:	54053026 	strpl	r3, [r5], #-38	; 0xffffffda
    1ff4:	3026051f 	eorcc	r0, r6, pc, lsl r5
    1ff8:	051f5405 	ldreq	r5, [pc, #-1029]	; 1bfb <_Min_Stack_Size+0x17fb>
    1ffc:	54053026 	strpl	r3, [r5], #-38	; 0xffffffda
    2000:	3026051f 	eorcc	r0, r6, pc, lsl r5
    2004:	051f5405 	ldreq	r5, [pc, #-1029]	; 1c07 <_Min_Stack_Size+0x1807>
    2008:	54053026 	strpl	r3, [r5], #-38	; 0xffffffda
    200c:	3026051f 	eorcc	r0, r6, pc, lsl r5
    2010:	051f5405 	ldreq	r5, [pc, #-1029]	; 1c13 <_Min_Stack_Size+0x1813>
    2014:	2079030f 	rsbscs	r0, r9, pc, lsl #6
    2018:	03060505 	movweq	r0, #25861	; 0x6505
    201c:	0f053c0c 	svceq	0x00053c0c
    2020:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2024:	0f054b06 	svceq	0x00054b06
    2028:	01050106 	tsteq	r5, r6, lsl #2
    202c:	00040230 	andeq	r0, r4, r0, lsr r2
    2030:	01050101 	tsteq	r5, r1, lsl #2
    2034:	00020500 	andeq	r0, r2, r0, lsl #10
    2038:	03000000 	movweq	r0, #0
    203c:	050102d8 	streq	r0, [r1, #-728]	; 0xfffffd28
    2040:	02041403 	andeq	r1, r4, #50331648	; 0x3000000
    2044:	b1031a05 	tstlt	r3, r5, lsl #20
    2048:	0305010a 	movweq	r0, #20746	; 0x510a
    204c:	061c0514 			; <UNDEFINED> instruction: 0x061c0514
    2050:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2054:	75ce0301 	strbvc	r0, [lr, #769]	; 0x301
    2058:	0006022e 	andeq	r0, r6, lr, lsr #4
    205c:	01050101 	tsteq	r5, r1, lsl #2
    2060:	00020500 	andeq	r0, r2, r0, lsl #10
    2064:	03000000 	movweq	r0, #0
    2068:	060102f3 			; <UNDEFINED> instruction: 0x060102f3
    206c:	06030501 	streq	r0, [r3], -r1, lsl #10
    2070:	02041422 	andeq	r1, r4, #570425344	; 0x22000000
    2074:	b6031a05 	strlt	r1, [r3], -r5, lsl #20
    2078:	0305010b 	movweq	r0, #20747	; 0x510b
    207c:	05200615 	streq	r0, [r0, #-1557]!	; 0xfffff9eb
    2080:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    2084:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    2088:	05206640 	streq	r6, [r0, #-1600]!	; 0xfffff9c0
    208c:	2f030616 	svccs	0x00030616
    2090:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    2094:	01060c05 	tsteq	r6, r5, lsl #24
    2098:	2f060305 	svccs	0x00060305
    209c:	1f051413 	svcne	0x00051413
    20a0:	17050106 	strne	r0, [r5, -r6, lsl #2]
    20a4:	0603052e 	streq	r0, [r3], -lr, lsr #10
    20a8:	062c0559 			; <UNDEFINED> instruction: 0x062c0559
    20ac:	205d0501 	subscs	r0, sp, r1, lsl #10
    20b0:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    20b4:	01062105 	tsteq	r6, r5, lsl #2
    20b8:	4a2e3505 	bmi	b8f4d4 <_Min_Stack_Size+0xb8f0d4>
    20bc:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    20c0:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    20c4:	2e010635 	mcrcs	6, 0, r0, cr1, cr5, {1}
    20c8:	202e1505 	eorcs	r1, lr, r5, lsl #10
    20cc:	01050104 	tsteq	r5, r4, lsl #2
    20d0:	01748d03 	cmneq	r4, r3, lsl #26
    20d4:	05050204 	streq	r0, [r5, #-516]	; 0xfffffdfc
    20d8:	0bbe0306 	bleq	fef82cf8 <_estack+0xdef42cf8>
    20dc:	06320520 	ldrteq	r0, [r2], -r0, lsr #10
    20e0:	2e3e0501 	cdpcs	5, 3, cr0, cr14, cr1, {0}
    20e4:	052e4005 	streq	r4, [lr, #-5]!
    20e8:	0520205b 	streq	r2, [r0, #-91]!	; 0xffffffa5
    20ec:	0132035d 	teqeq	r2, sp, asr r3
    20f0:	00030220 	andeq	r0, r3, r0, lsr #4
    20f4:	01050101 	tsteq	r5, r1, lsl #2
    20f8:	00020500 	andeq	r0, r2, r0, lsl #10
    20fc:	03000000 	movweq	r0, #0
    2100:	05010382 	streq	r0, [r1, #-898]	; 0xfffffc7e
    2104:	04151403 	ldreq	r1, [r5], #-1027	; 0xfffffbfd
    2108:	03160502 	tsteq	r6, #8388608	; 0x800000
    210c:	05010ada 	streq	r0, [r1, #-2778]	; 0xfffff526
    2110:	20061403 	andcs	r1, r6, r3, lsl #8
    2114:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    2118:	01065105 	tsteq	r6, r5, lsl #2
    211c:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
    2120:	2b05203c 	blcs	14a218 <_Min_Stack_Size+0x149e18>
    2124:	01044a2e 	tsteq	r4, lr, lsr #20
    2128:	a3030105 	movwge	r0, #12549	; 0x3105
    212c:	03020175 	movweq	r0, #8565	; 0x2175
    2130:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2134:	02050001 	andeq	r0, r5, #1
    2138:	00000000 	andeq	r0, r0, r0
    213c:	01039403 	tsteq	r3, r3, lsl #8
    2140:	15140305 	ldrne	r0, [r4, #-773]	; 0xfffffcfb
    2144:	1a050204 	bne	14295c <_Min_Stack_Size+0x14255c>
    2148:	010ab503 	tsteq	sl, r3, lsl #10
    214c:	06140305 	ldreq	r0, [r4], -r5, lsl #6
    2150:	06050520 	streq	r0, [r5], -r0, lsr #10
    2154:	06360522 	ldrteq	r0, [r6], -r2, lsr #10
    2158:	203d0501 	eorscs	r0, sp, r1, lsl #10
    215c:	054a5b05 	strbeq	r5, [sl, #-2821]	; 0xfffff4fb
    2160:	7b052e67 	blvc	14db04 <_Min_Stack_Size+0x14d704>
    2164:	400e052e 	andmi	r0, lr, lr, lsr #10
    2168:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    216c:	75c40301 	strbvc	r0, [r4, #769]	; 0x301
    2170:	00030201 	andeq	r0, r3, r1, lsl #4
    2174:	01050101 	tsteq	r5, r1, lsl #2
    2178:	00020500 	andeq	r0, r2, r0, lsl #10
    217c:	03000000 	movweq	r0, #0
    2180:	050103a4 	streq	r0, [r1, #-932]	; 0xfffffc5c
    2184:	04151403 	ldreq	r1, [r5], #-1027	; 0xfffffbfd
    2188:	03160502 	tsteq	r6, #8388608	; 0x800000
    218c:	05010ac7 	streq	r0, [r1, #-2759]	; 0xfffff539
    2190:	20061403 	andcs	r1, r6, r3, lsl #8
    2194:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    2198:	01065105 	tsteq	r6, r5, lsl #2
    219c:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
    21a0:	2b05203c 	blcs	14a298 <_Min_Stack_Size+0x149e98>
    21a4:	01044a2e 	tsteq	r4, lr, lsr #20
    21a8:	b6030105 	strlt	r0, [r3], -r5, lsl #2
    21ac:	03020175 	movweq	r0, #8565	; 0x2175
    21b0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    21b4:	02050001 	andeq	r0, r5, #1
    21b8:	00000000 	andeq	r0, r0, r0
    21bc:	0103b503 	tsteq	r3, r3, lsl #10
    21c0:	15140305 	ldrne	r0, [r4, #-773]	; 0xfffffcfb
    21c4:	1a050204 	bne	1429dc <_Min_Stack_Size+0x1425dc>
    21c8:	010ac703 	tsteq	sl, r3, lsl #14
    21cc:	06140305 	ldreq	r0, [r4], -r5, lsl #6
    21d0:	06050520 	streq	r0, [r5], -r0, lsr #10
    21d4:	06360522 	ldrteq	r0, [r6], -r2, lsr #10
    21d8:	203d0501 	eorscs	r0, sp, r1, lsl #10
    21dc:	054a5b05 	strbeq	r5, [sl, #-2821]	; 0xfffff4fb
    21e0:	7b052e67 	blvc	14db84 <_Min_Stack_Size+0x14d784>
    21e4:	400e052e 	andmi	r0, lr, lr, lsr #10
    21e8:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    21ec:	75b20301 	ldrvc	r0, [r2, #769]!	; 0x301
    21f0:	00030201 	andeq	r0, r3, r1, lsl #4
    21f4:	01050101 	tsteq	r5, r1, lsl #2
    21f8:	00020500 	andeq	r0, r2, r0, lsl #10
    21fc:	03000000 	movweq	r0, #0
    2200:	050103c6 	streq	r0, [r1, #-966]	; 0xfffffc3a
    2204:	05131403 	ldreq	r1, [r3, #-1027]	; 0xfffffbfd
    2208:	13053405 	movwne	r3, #21509	; 0x5405
    220c:	01050106 	tsteq	r5, r6, lsl #2
    2210:	06050568 	streq	r0, [r5], -r8, ror #10
    2214:	05207a03 	streq	r7, [r0, #-2563]!	; 0xfffff5fd
    2218:	02010613 	andeq	r0, r1, #19922944	; 0x1300000
    221c:	01010007 	tsteq	r1, r7
    2220:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2224:	00000002 	andeq	r0, r0, r2
    2228:	03e10300 	mvneq	r0, #0, 6
    222c:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    2230:	01010001 	tsteq	r1, r1
    2234:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2238:	00000002 	andeq	r0, r0, r2
    223c:	03d80300 	bicseq	r0, r8, #0, 6
    2240:	21030501 	tstcs	r3, r1, lsl #10
    2244:	01061705 	tsteq	r6, r5, lsl #14
    2248:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    224c:	01010001 	tsteq	r1, r1
    2250:	00000552 	andeq	r0, r0, r2, asr r5
    2254:	01d90003 	bicseq	r0, r9, r3
    2258:	01020000 	mrseq	r0, (UNDEF: 2)
    225c:	000d0efb 	strdeq	r0, [sp], -fp
    2260:	01010101 	tsteq	r1, r1, lsl #2
    2264:	01000000 	mrseq	r0, (UNDEF: 0)
    2268:	44010000 	strmi	r0, [r1], #-0
    226c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2270:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    2274:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    2278:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    227c:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    2280:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2284:	2f726576 	svccs	0x00726576
    2288:	00637253 	rsbeq	r7, r3, r3, asr r2
    228c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2290:	2f737265 	svccs	0x00737265
    2294:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    2298:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    229c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    22a0:	2f54532f 	svccs	0x0054532f
    22a4:	334d5453 	movtcc	r5, #54355	; 0xd453
    22a8:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    22ac:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    22b0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    22b4:	752f0065 	strvc	r0, [pc, #-101]!	; 2257 <_Min_Stack_Size+0x1e57>
    22b8:	622f7273 	eorvs	r7, pc, #805306375	; 0x30000007
    22bc:	672f6e69 	strvs	r6, [pc, -r9, ror #28]!
    22c0:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    22c4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    22c8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    22cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    22d0:	2e30312d 	rsfcssp	f3, f0, #5.0
    22d4:	30322d33 	eorscc	r2, r2, r3, lsr sp
    22d8:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    22dc:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    22e0:	6f6e2d6d 	svcvs	0x006e2d6d
    22e4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    22e8:	2f696261 	svccs	0x00696261
    22ec:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    22f0:	2f656475 	svccs	0x00656475
    22f4:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    22f8:	00656e69 	rsbeq	r6, r5, r9, ror #28
    22fc:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    2300:	6e69622f 	cdpvs	2, 6, cr6, cr9, cr15, {1}
    2304:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    2308:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    230c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2310:	61652d65 	cmnvs	r5, r5, ror #26
    2314:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    2318:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    231c:	31323032 	teqcc	r2, r2, lsr r0
    2320:	2f30312e 	svccs	0x0030312e
    2324:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2328:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    232c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2330:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    2334:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2338:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    233c:	72440073 	subvc	r0, r4, #115	; 0x73
    2340:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2344:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    2348:	2f534953 	svccs	0x00534953
    234c:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    2350:	00656475 	rsbeq	r6, r5, r5, ror r4
    2354:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2358:	2f737265 	svccs	0x00737265
    235c:	334d5453 	movtcc	r5, #54355	; 0xd453
    2360:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    2364:	41485f78 	hvcmi	34296	; 0x85f8
    2368:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    236c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2370:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    2374:	74730000 	ldrbtvc	r0, [r3], #-0
    2378:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    237c:	5f787834 	svcpl	0x00787834
    2380:	2e6c6168 	powcsez	f6, f4, #0.0
    2384:	00010063 	andeq	r0, r1, r3, rrx
    2388:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    238c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2390:	787a3231 	ldmdavc	sl!, {r0, r4, r5, r9, ip, sp}^
    2394:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2398:	645f0000 	ldrbvs	r0, [pc], #-0	; 23a0 <_Min_Stack_Size+0x1fa0>
    239c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    23a0:	745f746c 	ldrbvc	r7, [pc], #-1132	; 23a8 <_Min_Stack_Size+0x1fa8>
    23a4:	73657079 	cmnvc	r5, #121	; 0x79
    23a8:	0300682e 	movweq	r6, #2094	; 0x82e
    23ac:	735f0000 	cmpvc	pc, #0
    23b0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    23b4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    23b8:	63000004 	movwvs	r0, #4
    23bc:	5f65726f 	svcpl	0x0065726f
    23c0:	2e346d63 	cdpcs	13, 3, cr6, cr4, cr3, {3}
    23c4:	00050068 	andeq	r0, r5, r8, rrx
    23c8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    23cc:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    23d0:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    23d4:	00000200 	andeq	r0, r0, r0, lsl #4
    23d8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    23dc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    23e0:	61685f78 	smcvs	34296	; 0x85f8
    23e4:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
    23e8:	00682e66 	rsbeq	r2, r8, r6, ror #28
    23ec:	73000006 	movwvc	r0, #6
    23f0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    23f4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    23f8:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    23fc:	0600682e 	streq	r6, [r0], -lr, lsr #16
    2400:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    2404:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2408:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    240c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2410:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    2414:	00000200 	andeq	r0, r0, r0, lsl #4
    2418:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    241c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    2420:	61685f78 	smcvs	34296	; 0x85f8
    2424:	6f635f6c 	svcvs	0x00635f6c
    2428:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    242c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    2430:	05000000 	streq	r0, [r0, #-0]
    2434:	02050001 	andeq	r0, r5, #1
    2438:	00000000 	andeq	r0, r0, r0
    243c:	0101db03 	tsteq	r1, r3, lsl #22
    2440:	01021606 	tsteq	r2, r6, lsl #12
    2444:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2448:	02050001 	andeq	r0, r5, #1
    244c:	00000000 	andeq	r0, r0, r0
    2450:	0101e603 	tsteq	r1, r3, lsl #12
    2454:	01021606 	tsteq	r2, r6, lsl #12
    2458:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    245c:	02050001 	andeq	r0, r5, #1
    2460:	00000000 	andeq	r0, r0, r0
    2464:	0101be03 	tsteq	r1, r3, lsl #28
    2468:	4b220305 	blmi	883084 <_Min_Stack_Size+0x882c84>
    246c:	21222130 			; <UNDEFINED> instruction: 0x21222130
    2470:	21222122 			; <UNDEFINED> instruction: 0x21222122
    2474:	06100523 	ldreq	r0, [r0], -r3, lsr #10
    2478:	06030501 	streq	r0, [r3], -r1, lsl #10
    247c:	06010531 			; <UNDEFINED> instruction: 0x06010531
    2480:	00050213 	andeq	r0, r5, r3, lsl r2
    2484:	01050101 	tsteq	r5, r1, lsl #2
    2488:	f8020500 			; <UNDEFINED> instruction: 0xf8020500
    248c:	03080008 	movweq	r0, #32776	; 0x8008
    2490:	060101fd 			; <UNDEFINED> instruction: 0x060101fd
    2494:	06030501 	streq	r0, [r3], -r1, lsl #10
    2498:	06350530 			; <UNDEFINED> instruction: 0x06350530
    249c:	2e330501 	cdpcs	5, 3, cr0, cr3, cr1, {0}
    24a0:	054a1905 	strbeq	r1, [sl, #-2309]	; 0xfffff6fb
    24a4:	26066603 	strcs	r6, [r6], -r3, lsl #12
    24a8:	35060c05 	strcc	r0, [r6, #-3077]	; 0xfffff3fb
    24ac:	29060505 	stmdbcs	r6, {r0, r2, r8, sl}
    24b0:	01061905 	tsteq	r6, r5, lsl #18
    24b4:	67060505 	strvs	r0, [r6, -r5, lsl #10]
    24b8:	01061005 	tsteq	r6, r5
    24bc:	36060305 	strcc	r0, [r6], -r5, lsl #6
    24c0:	01060a05 	tsteq	r6, r5, lsl #20
    24c4:	71030c05 	tstvc	r3, r5, lsl #24
    24c8:	0301052e 	movweq	r0, #5422	; 0x152e
    24cc:	02202010 	eoreq	r2, r0, #16
    24d0:	01010007 	tsteq	r1, r7
    24d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    24d8:	00000002 	andeq	r0, r0, r2
    24dc:	019d0300 	orrseq	r0, sp, r0, lsl #6
    24e0:	23030501 	movwcs	r0, #13569	; 0x3501
    24e4:	054e4e5c 	strbeq	r4, [lr, #-3676]	; 0xfffff1a4
    24e8:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    24ec:	053f0603 	ldreq	r0, [pc, #-1539]!	; 1ef1 <_Min_Stack_Size+0x1af1>
    24f0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    24f4:	053f0603 	ldreq	r0, [pc, #-1539]!	; 1ef9 <_Min_Stack_Size+0x1af9>
    24f8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    24fc:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    2500:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    2504:	01010004 	tsteq	r1, r4
    2508:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    250c:	00094402 	andeq	r4, r9, r2, lsl #8
    2510:	02b80308 	adcseq	r0, r8, #8, 6	; 0x20000000
    2514:	13030501 	movwne	r0, #13569	; 0x3501
    2518:	01060d05 	tsteq	r6, r5, lsl #26
    251c:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    2520:	06024b01 	streq	r4, [r2], -r1, lsl #22
    2524:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2528:	02050001 	andeq	r0, r5, #1
    252c:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
    2530:	0102c303 	tsteq	r2, r3, lsl #6
    2534:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    2538:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    253c:	04022f01 	streq	r2, [r2], #-3841	; 0xfffff0ff
    2540:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2544:	02050001 	andeq	r0, r5, #1
    2548:	00000000 	andeq	r0, r0, r0
    254c:	0102cc03 	tsteq	r2, r3, lsl #24
    2550:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    2554:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    2558:	01010006 	tsteq	r1, r6
    255c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2560:	00000002 	andeq	r0, r0, r2
    2564:	02d50300 	sbcseq	r0, r5, #0, 6
    2568:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    256c:	13210603 			; <UNDEFINED> instruction: 0x13210603
    2570:	12051414 	andne	r1, r5, #20, 8	; 0x14000000
    2574:	03050106 	movweq	r0, #20742	; 0x5106
    2578:	2915052e 	ldmdbcs	r5, {r1, r2, r3, r5, r8, sl}
    257c:	03060305 	movweq	r0, #25349	; 0x6305
    2580:	01052017 	tsteq	r5, r7, lsl r0
    2584:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
    2588:	20700306 	rsbscs	r0, r0, r6, lsl #6
    258c:	06100515 			; <UNDEFINED> instruction: 0x06100515
    2590:	06050501 	streq	r0, [r5], -r1, lsl #10
    2594:	061a0523 	ldreq	r0, [sl], -r3, lsr #10
    2598:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    259c:	07053006 	streq	r3, [r5, -r6]
    25a0:	06120531 			; <UNDEFINED> instruction: 0x06120531
    25a4:	00080201 	andeq	r0, r8, r1, lsl #4
    25a8:	01050101 	tsteq	r5, r1, lsl #2
    25ac:	00020500 	andeq	r0, r2, r0, lsl #10
    25b0:	03000000 	movweq	r0, #0
    25b4:	050102f5 	streq	r0, [r1, #-757]	; 0xfffffd0b
    25b8:	01051303 	tsteq	r5, r3, lsl #6
    25bc:	06021306 	streq	r1, [r2], -r6, lsl #6
    25c0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    25c4:	02050001 	andeq	r0, r5, #1
    25c8:	08000968 	stmdaeq	r0, {r3, r5, r6, r8, fp}
    25cc:	01038503 	tsteq	r3, r3, lsl #10
    25d0:	03050106 	movweq	r0, #20742	; 0x5106
    25d4:	23052f06 	movwcs	r2, #24326	; 0x5f06
    25d8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    25dc:	15210603 	strne	r0, [r1, #-1539]!	; 0xfffff9fd
    25e0:	053e0505 	ldreq	r0, [lr, #-1285]!	; 0xfffffafb
    25e4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    25e8:	03052e0a 	movweq	r2, #24074	; 0x5e0a
    25ec:	25052306 	strcs	r2, [r5, #-774]	; 0xfffffcfa
    25f0:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    25f4:	2e180501 	cfmul32cs	mvfx0, mvfx8, mvfx1
    25f8:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
    25fc:	02203101 	eoreq	r3, r0, #1073741824	; 0x40000000
    2600:	01010003 	tsteq	r1, r3
    2604:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2608:	00000002 	andeq	r0, r0, r2
    260c:	039f0300 	orrseq	r0, pc, #0, 6
    2610:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    2614:	01061105 	tsteq	r6, r5, lsl #2
    2618:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
    261c:	01010001 	tsteq	r1, r1
    2620:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2624:	00000002 	andeq	r0, r0, r2
    2628:	03af0300 			; <UNDEFINED> instruction: 0x03af0300
    262c:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    2630:	01061205 	tsteq	r6, r5, lsl #4
    2634:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
    2638:	01010001 	tsteq	r1, r1
    263c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2640:	00000002 	andeq	r0, r0, r2
    2644:	03b90300 			; <UNDEFINED> instruction: 0x03b90300
    2648:	13030501 	movwne	r0, #13569	; 0x3501
    264c:	13060105 	movwne	r0, #24837	; 0x6105
    2650:	01000402 	tsteq	r0, r2, lsl #8
    2654:	00010501 	andeq	r0, r1, r1, lsl #10
    2658:	00000205 	andeq	r0, r0, r5, lsl #4
    265c:	c2030000 	andgt	r0, r3, #0
    2660:	03050103 	movweq	r0, #20739	; 0x5103
    2664:	06130513 			; <UNDEFINED> instruction: 0x06130513
    2668:	2f010501 	svccs	0x00010501
    266c:	01000402 	tsteq	r0, r2, lsl #8
    2670:	00010501 	andeq	r0, r1, r1, lsl #10
    2674:	00000205 	andeq	r0, r0, r5, lsl #4
    2678:	cb030000 	blgt	c2680 <_Min_Stack_Size+0xc2280>
    267c:	03050103 	movweq	r0, #20739	; 0x5103
    2680:	06130513 			; <UNDEFINED> instruction: 0x06130513
    2684:	2f010501 	svccs	0x00010501
    2688:	01000602 	tsteq	r0, r2, lsl #12
    268c:	00010501 	andeq	r0, r1, r1, lsl #10
    2690:	00000205 	andeq	r0, r0, r5, lsl #4
    2694:	d4030000 	strle	r0, [r3], #-0
    2698:	03050103 	movweq	r0, #20739	; 0x5103
    269c:	06010513 			; <UNDEFINED> instruction: 0x06010513
    26a0:	00030259 	andeq	r0, r3, r9, asr r2
    26a4:	01050101 	tsteq	r5, r1, lsl #2
    26a8:	00020500 	andeq	r0, r2, r0, lsl #10
    26ac:	03000000 	movweq	r0, #0
    26b0:	050103dd 	streq	r0, [r1, #-989]	; 0xfffffc23
    26b4:	01051303 	tsteq	r5, r3, lsl #6
    26b8:	03025906 	movweq	r5, #10502	; 0x2906
    26bc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    26c0:	02050001 	andeq	r0, r5, #1
    26c4:	00000000 	andeq	r0, r0, r0
    26c8:	0103e603 	tsteq	r3, r3, lsl #12
    26cc:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    26d0:	02590601 	subseq	r0, r9, #1048576	; 0x100000
    26d4:	01010003 	tsteq	r1, r3
    26d8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    26dc:	00000002 	andeq	r0, r0, r2
    26e0:	03ef0300 	mvneq	r0, #0, 6
    26e4:	13030501 	movwne	r0, #13569	; 0x3501
    26e8:	59060105 	stmdbpl	r6, {r0, r2, r8}
    26ec:	01000302 	tsteq	r0, r2, lsl #6
    26f0:	00010501 	andeq	r0, r1, r1, lsl #10
    26f4:	00000205 	andeq	r0, r0, r5, lsl #4
    26f8:	f8030000 			; <UNDEFINED> instruction: 0xf8030000
    26fc:	03050103 	movweq	r0, #20739	; 0x5103
    2700:	06010513 			; <UNDEFINED> instruction: 0x06010513
    2704:	00030259 	andeq	r0, r3, r9, asr r2
    2708:	01050101 	tsteq	r5, r1, lsl #2
    270c:	00020500 	andeq	r0, r2, r0, lsl #10
    2710:	03000000 	movweq	r0, #0
    2714:	05010481 	streq	r0, [r1, #-1153]	; 0xfffffb7f
    2718:	01051303 	tsteq	r5, r3, lsl #6
    271c:	03025906 	movweq	r5, #10502	; 0x2906
    2720:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2724:	02050001 	andeq	r0, r5, #1
    2728:	00000000 	andeq	r0, r0, r0
    272c:	01048c03 	tsteq	r4, r3, lsl #24
    2730:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    2734:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    2738:	04024b01 	streq	r4, [r2], #-2817	; 0xfffff4ff
    273c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2740:	02050001 	andeq	r0, r5, #1
    2744:	00000000 	andeq	r0, r0, r0
    2748:	01049703 	tsteq	r4, r3, lsl #14
    274c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    2750:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    2754:	04024b01 	streq	r4, [r2], #-2817	; 0xfffff4ff
    2758:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    275c:	02050001 	andeq	r0, r5, #1
    2760:	00000000 	andeq	r0, r0, r0
    2764:	0104a003 	tsteq	r4, r3
    2768:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    276c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    2770:	01010006 	tsteq	r1, r6
    2774:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2778:	00000002 	andeq	r0, r0, r2
    277c:	04a90300 	strteq	r0, [r9], #768	; 0x300
    2780:	13030501 	movwne	r0, #13569	; 0x3501
    2784:	13060105 	movwne	r0, #24837	; 0x6105
    2788:	01000602 	tsteq	r0, r2, lsl #12
    278c:	00010501 	andeq	r0, r1, r1, lsl #10
    2790:	00000205 	andeq	r0, r0, r5, lsl #4
    2794:	b2030000 	andlt	r0, r3, #0
    2798:	03050104 	movweq	r0, #20740	; 0x5104
    279c:	06010513 			; <UNDEFINED> instruction: 0x06010513
    27a0:	00060213 	andeq	r0, r6, r3, lsl r2
    27a4:	02840101 	addeq	r0, r4, #1073741824	; 0x40000000
    27a8:	00030000 	andeq	r0, r3, r0
    27ac:	00000193 	muleq	r0, r3, r1
    27b0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    27b4:	0101000d 	tsteq	r1, sp
    27b8:	00000101 	andeq	r0, r0, r1, lsl #2
    27bc:	00000100 	andeq	r0, r0, r0, lsl #2
    27c0:	726f4301 	rsbvc	r4, pc, #67108864	; 0x4000000
    27c4:	72532f65 	subsvc	r2, r3, #404	; 0x194
    27c8:	752f0063 	strvc	r0, [pc, #-99]!	; 276d <_Min_Stack_Size+0x236d>
    27cc:	622f7273 	eorvs	r7, pc, #805306375	; 0x30000007
    27d0:	672f6e69 	strvs	r6, [pc, -r9, ror #28]!
    27d4:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    27d8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    27dc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    27e0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    27e4:	2e30312d 	rsfcssp	f3, f0, #5.0
    27e8:	30322d33 	eorscc	r2, r2, r3, lsr sp
    27ec:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    27f0:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    27f4:	6f6e2d6d 	svcvs	0x006e2d6d
    27f8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    27fc:	2f696261 	svccs	0x00696261
    2800:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2804:	2f656475 	svccs	0x00656475
    2808:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    280c:	00656e69 	rsbeq	r6, r5, r9, ror #28
    2810:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    2814:	6e69622f 	cdpvs	2, 6, cr6, cr9, cr15, {1}
    2818:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    281c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    2820:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2824:	61652d65 	cmnvs	r5, r5, ror #26
    2828:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    282c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    2830:	31323032 	teqcc	r2, r2, lsr r0
    2834:	2f30312e 	svccs	0x0030312e
    2838:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    283c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2840:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2844:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    2848:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    284c:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2850:	72440073 	subvc	r0, r4, #115	; 0x73
    2854:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2858:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    285c:	2f534953 	svccs	0x00534953
    2860:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    2864:	00656475 	rsbeq	r6, r5, r5, ror r4
    2868:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    286c:	2f737265 	svccs	0x00737265
    2870:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    2874:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    2878:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    287c:	2f54532f 	svccs	0x0054532f
    2880:	334d5453 	movtcc	r5, #54355	; 0xd453
    2884:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    2888:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    288c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2890:	72440065 	subvc	r0, r4, #101	; 0x65
    2894:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2898:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    289c:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    28a0:	5f787834 	svcpl	0x00787834
    28a4:	5f4c4148 	svcpl	0x004c4148
    28a8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    28ac:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
    28b0:	0000636e 	andeq	r6, r0, lr, ror #6
    28b4:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    28b8:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    28bc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    28c0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    28c4:	0100632e 	tsteq	r0, lr, lsr #6
    28c8:	645f0000 	ldrbvs	r0, [pc], #-0	; 28d0 <_Min_Stack_Size+0x24d0>
    28cc:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    28d0:	745f746c 	ldrbvc	r7, [pc], #-1132	; 28d8 <_Min_Stack_Size+0x24d8>
    28d4:	73657079 	cmnvc	r5, #121	; 0x79
    28d8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    28dc:	735f0000 	cmpvc	pc, #0
    28e0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    28e4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    28e8:	63000003 	movwvs	r0, #3
    28ec:	5f65726f 	svcpl	0x0065726f
    28f0:	2e346d63 	cdpcs	13, 3, cr6, cr4, cr3, {3}
    28f4:	00040068 	andeq	r0, r4, r8, rrx
    28f8:	73797300 	cmnvc	r9, #0, 6
    28fc:	5f6d6574 	svcpl	0x006d6574
    2900:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    2904:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    2908:	00682e78 	rsbeq	r2, r8, r8, ror lr
    290c:	73000005 	movwvc	r0, #5
    2910:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    2914:	32313466 	eorscc	r3, r1, #1711276032	; 0x66000000
    2918:	682e787a 	stmdavs	lr!, {r1, r3, r4, r5, r6, fp, ip, sp, lr}
    291c:	00000500 	andeq	r0, r0, r0, lsl #10
    2920:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    2924:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    2928:	00682e78 	rsbeq	r2, r8, r8, ror lr
    292c:	73000005 	movwvc	r0, #5
    2930:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    2934:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    2938:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    293c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    2940:	05000000 	streq	r0, [r0, #-0]
    2944:	02050001 	andeq	r0, r5, #1
    2948:	00000000 	andeq	r0, r0, r0
    294c:	0101a803 	tsteq	r1, r3, lsl #16
    2950:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    2954:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    2958:	740b0301 	strvc	r0, [fp], #-769	; 0xfffffcff
    295c:	01000302 	tsteq	r0, r2, lsl #6
    2960:	00010501 	andeq	r0, r1, r1, lsl #10
    2964:	00000205 	andeq	r0, r0, r5, lsl #4
    2968:	dd030000 	stcle	0, cr0, [r3, #-0]
    296c:	03050101 	movweq	r0, #20737	; 0x5101
    2970:	0e051513 	mcreq	5, 0, r1, cr5, cr3, {0}
    2974:	07050106 	streq	r0, [r5, -r6, lsl #2]
    2978:	0603052e 	streq	r0, [r3], -lr, lsr #10
    297c:	03050530 	movweq	r0, #21808	; 0x5530
    2980:	0705581e 	smladeq	r5, lr, r8, r5
    2984:	06170513 			; <UNDEFINED> instruction: 0x06170513
    2988:	07052001 	streq	r2, [r5, -r1]
    298c:	05052f06 	streq	r2, [r5, #-3846]	; 0xfffff0fa
    2990:	05206203 	streq	r6, [r0, #-515]!	; 0xfffffdfd
    2994:	17051307 	strne	r1, [r5, -r7, lsl #6]
    2998:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    299c:	052f0607 	streq	r0, [pc, #-1543]!	; 239d <_Min_Stack_Size+0x1f9d>
    29a0:	01200303 			; <UNDEFINED> instruction: 0x01200303
    29a4:	01061e05 	tsteq	r6, r5, lsl #28
    29a8:	052e3405 	streq	r3, [lr, #-1029]!	; 0xfffffbfb
    29ac:	03052e39 	movweq	r2, #24121	; 0x5e39
    29b0:	13053006 	movwne	r3, #20486	; 0x5006
    29b4:	01050106 	tsteq	r5, r6, lsl #2
    29b8:	0605054b 	streq	r0, [r5], -fp, asr #10
    29bc:	05205e03 	streq	r5, [r0, #-3587]!	; 0xfffff1fd
    29c0:	17051307 	strne	r1, [r5, -r7, lsl #6]
    29c4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    29c8:	052f0607 	streq	r0, [pc, #-1543]!	; 23c9 <_Min_Stack_Size+0x1fc9>
    29cc:	07052105 	streq	r2, [r5, -r5, lsl #2]
    29d0:	06190517 			; <UNDEFINED> instruction: 0x06190517
    29d4:	07052001 	streq	r2, [r5, -r1]
    29d8:	13052106 	movwne	r2, #20742	; 0x5106
    29dc:	0c050106 	stfeqs	f0, [r5], {6}
    29e0:	06070520 	streq	r0, [r7], -r0, lsr #10
    29e4:	3f090530 	svccc	0x00090530
    29e8:	01061d05 	tsteq	r6, r5, lsl #26
    29ec:	203c2e05 	eorscs	r2, ip, r5, lsl #28
    29f0:	05204a05 	streq	r4, [r0, #-2565]!	; 0xfffff5fb
    29f4:	07052e10 	smladeq	r5, r0, lr, r2
    29f8:	16053606 	strne	r3, [r5], -r6, lsl #12
    29fc:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    2a00:	2e38052e 	cdpcs	5, 3, cr0, cr8, cr14, {1}
    2a04:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    2a08:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    2a0c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    2a10:	05202e17 	streq	r2, [r0, #-3607]!	; 0xfffff1e9
    2a14:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    2a18:	1d051b09 	vstrne	d1, [r5, #-36]	; 0xffffffdc
    2a1c:	2e050106 	adfcss	f0, f5, f6
    2a20:	4a05203c 	bmi	14ab18 <_Min_Stack_Size+0x14a718>
    2a24:	2e100520 	cfmul64cs	mvdx0, mvdx0, mvdx0
    2a28:	000c022e 	andeq	r0, ip, lr, lsr #4
    2a2c:	09c90101 	stmibeq	r9, {r0, r8}^
    2a30:	00030000 	andeq	r0, r3, r0
    2a34:	000000c9 	andeq	r0, r0, r9, asr #1
    2a38:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2a3c:	0101000d 	tsteq	r1, sp
    2a40:	00000101 	andeq	r0, r0, r1, lsl #2
    2a44:	00000100 	andeq	r0, r0, r0, lsl #2
    2a48:	73752f01 	cmnvc	r5, #1, 30
    2a4c:	69622f72 	stmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2a50:	63672f6e 	cmnvs	r7, #440	; 0x1b8
    2a54:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    2a58:	6f6e2d6d 	svcvs	0x006e2d6d
    2a5c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    2a60:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    2a64:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    2a68:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    2a6c:	30312e31 	eorscc	r2, r1, r1, lsr lr
    2a70:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    2a74:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2a78:	61652d65 	cmnvs	r5, r5, ror #26
    2a7c:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    2a80:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2a84:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; 28fc <_Min_Stack_Size+0x24fc>
    2a88:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    2a8c:	2f00656e 	svccs	0x0000656e
    2a90:	2f727375 	svccs	0x00727375
    2a94:	2f6e6962 	svccs	0x006e6962
    2a98:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2a9c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2aa0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2aa4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2aa8:	30312d69 	eorscc	r2, r1, r9, ror #26
    2aac:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    2ab0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2ab4:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
    2ab8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2abc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2ac0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2ac4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2ac8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2acc:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
    2ad0:	74730000 	ldrbtvc	r0, [r3], #-0
    2ad4:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    2ad8:	00632e70 	rsbeq	r2, r3, r0, ror lr
    2adc:	5f000000 	svcpl	0x00000000
    2ae0:	61666564 	cmnvs	r6, r4, ror #10
    2ae4:	5f746c75 	svcpl	0x00746c75
    2ae8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    2aec:	00682e73 	rsbeq	r2, r8, r3, ror lr
    2af0:	5f000001 	svcpl	0x00000001
    2af4:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    2af8:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    2afc:	00000200 	andeq	r0, r0, r0, lsl #4
    2b00:	00010500 	andeq	r0, r1, r0, lsl #10
    2b04:	09900205 	ldmibeq	r0, {r0, r2, r9}
    2b08:	15030800 	strne	r0, [r3, #-2048]	; 0xfffff800
    2b0c:	21050501 	tstcs	r5, r1, lsl #10
    2b10:	01061405 	tsteq	r6, r5, lsl #8
    2b14:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    2b18:	20060104 	andcs	r0, r6, r4, lsl #2
    2b1c:	053e0905 	ldreq	r0, [lr, #-2309]!	; 0xfffff6fb
    2b20:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    2b24:	06203a05 	strteq	r3, [r0], -r5, lsl #20
    2b28:	06131317 			; <UNDEFINED> instruction: 0x06131317
    2b2c:	060d052e 	streq	r0, [sp], -lr, lsr #10
    2b30:	061b0540 	ldreq	r0, [fp], -r0, asr #10
    2b34:	2e190501 	cfmul32cs	mvfx0, mvfx9, mvfx1
    2b38:	2c060905 			; <UNDEFINED> instruction: 0x2c060905
    2b3c:	05011905 	streq	r1, [r1, #-2309]	; 0xfffff6fb
    2b40:	05134305 	ldreq	r4, [r3, #-773]	; 0xfffffcfb
    2b44:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2b48:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
    2b4c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    2b50:	052f0605 	streq	r0, [pc, #-1541]!	; 2553 <_Min_Stack_Size+0x2153>
    2b54:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    2b58:	04020005 	streq	r0, [r2], #-5
    2b5c:	00300601 	eorseq	r0, r0, r1, lsl #12
    2b60:	01010402 	tsteq	r1, r2, lsl #8
    2b64:	01000b02 	tsteq	r0, r2, lsl #22
    2b68:	00010501 	andeq	r0, r1, r1, lsl #10
    2b6c:	09e40205 	stmibeq	r4!, {r0, r2, r9}^
    2b70:	2f030800 	svccs	0x00030800
    2b74:	00050501 	andeq	r0, r5, r1, lsl #10
    2b78:	13010402 	movwne	r0, #5122	; 0x1402
    2b7c:	01040200 	mrseq	r0, R12_usr
    2b80:	00010201 	andeq	r0, r1, r1, lsl #4
    2b84:	29050101 	stmdbcs	r5, {r0, r8}
    2b88:	00020500 	andeq	r0, r2, r0, lsl #10
    2b8c:	03000000 	movweq	r0, #0
    2b90:	2b050134 	blcs	143068 <_Min_Stack_Size+0x142c68>
    2b94:	063a0520 	ldrteq	r0, [sl], -r0, lsr #10
    2b98:	00020201 	andeq	r0, r2, r1, lsl #4
    2b9c:	29050101 	stmdbcs	r5, {r0, r8}
    2ba0:	00020500 	andeq	r0, r2, r0, lsl #10
    2ba4:	03000000 	movweq	r0, #0
    2ba8:	2b050135 	blcs	143084 <_Min_Stack_Size+0x142c84>
    2bac:	063a0520 	ldrteq	r0, [sl], -r0, lsr #10
    2bb0:	00020201 	andeq	r0, r2, r1, lsl #4
    2bb4:	29050101 	stmdbcs	r5, {r0, r8}
    2bb8:	00020500 	andeq	r0, r2, r0, lsl #10
    2bbc:	03000000 	movweq	r0, #0
    2bc0:	2b050136 	blcs	1430a0 <_Min_Stack_Size+0x142ca0>
    2bc4:	063a0520 	ldrteq	r0, [sl], -r0, lsr #10
    2bc8:	00020201 	andeq	r0, r2, r1, lsl #4
    2bcc:	29050101 	stmdbcs	r5, {r0, r8}
    2bd0:	00020500 	andeq	r0, r2, r0, lsl #10
    2bd4:	03000000 	movweq	r0, #0
    2bd8:	2b050137 	blcs	1430bc <_Min_Stack_Size+0x142cbc>
    2bdc:	063a0520 	ldrteq	r0, [sl], -r0, lsr #10
    2be0:	00020201 	andeq	r0, r2, r1, lsl #4
    2be4:	29050101 	stmdbcs	r5, {r0, r8}
    2be8:	00020500 	andeq	r0, r2, r0, lsl #10
    2bec:	03000000 	movweq	r0, #0
    2bf0:	2b050138 	blcs	1430d8 <_Min_Stack_Size+0x142cd8>
    2bf4:	063a0520 	ldrteq	r0, [sl], -r0, lsr #10
    2bf8:	00020201 	andeq	r0, r2, r1, lsl #4
    2bfc:	29050101 	stmdbcs	r5, {r0, r8}
    2c00:	00020500 	andeq	r0, r2, r0, lsl #10
    2c04:	03000000 	movweq	r0, #0
    2c08:	2b050139 	blcs	1430f4 <_Min_Stack_Size+0x142cf4>
    2c0c:	063a0520 	ldrteq	r0, [sl], -r0, lsr #10
    2c10:	00020201 	andeq	r0, r2, r1, lsl #4
    2c14:	29050101 	stmdbcs	r5, {r0, r8}
    2c18:	00020500 	andeq	r0, r2, r0, lsl #10
    2c1c:	03000000 	movweq	r0, #0
    2c20:	2b05013a 	blcs	143110 <_Min_Stack_Size+0x142d10>
    2c24:	063a0520 	ldrteq	r0, [sl], -r0, lsr #10
    2c28:	00020201 	andeq	r0, r2, r1, lsl #4
    2c2c:	29050101 	stmdbcs	r5, {r0, r8}
    2c30:	00020500 	andeq	r0, r2, r0, lsl #10
    2c34:	03000000 	movweq	r0, #0
    2c38:	2b05013b 	blcs	14312c <_Min_Stack_Size+0x142d2c>
    2c3c:	063a0520 	ldrteq	r0, [sl], -r0, lsr #10
    2c40:	00020201 	andeq	r0, r2, r1, lsl #4
    2c44:	29050101 	stmdbcs	r5, {r0, r8}
    2c48:	00020500 	andeq	r0, r2, r0, lsl #10
    2c4c:	03000000 	movweq	r0, #0
    2c50:	2b05013c 	blcs	143148 <_Min_Stack_Size+0x142d48>
    2c54:	063a0520 	ldrteq	r0, [sl], -r0, lsr #10
    2c58:	00020201 	andeq	r0, r2, r1, lsl #4
    2c5c:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    2c60:	e6020500 	str	r0, [r2], -r0, lsl #10
    2c64:	03080009 	movweq	r0, #32777	; 0x8009
    2c68:	3405013f 	strcc	r0, [r5], #-319	; 0xfffffec1
    2c6c:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    2c70:	00020201 	andeq	r0, r2, r1, lsl #4
    2c74:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    2c78:	ec020500 	cfstr32	mvfx0, [r2], {-0}
    2c7c:	03080009 	movweq	r0, #32777	; 0x8009
    2c80:	050100c0 	streq	r0, [r1, #-192]	; 0xffffff40
    2c84:	43052034 	movwmi	r2, #20532	; 0x5034
    2c88:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2c8c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2c90:	02050032 	andeq	r0, r5, #50	; 0x32
    2c94:	080009f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, fp}
    2c98:	0100c103 	tsteq	r0, r3, lsl #2
    2c9c:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    2ca0:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    2ca4:	01010002 	tsteq	r1, r2
    2ca8:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    2cac:	0009f802 	andeq	pc, r9, r2, lsl #16
    2cb0:	00c20308 	sbceq	r0, r2, r8, lsl #6
    2cb4:	20340501 	eorscs	r0, r4, r1, lsl #10
    2cb8:	01064305 	tsteq	r6, r5, lsl #6
    2cbc:	01000202 	tsteq	r0, r2, lsl #4
    2cc0:	00320501 	eorseq	r0, r2, r1, lsl #10
    2cc4:	09fe0205 	ldmibeq	lr!, {r0, r2, r9}^
    2cc8:	c3030800 	movwgt	r0, #14336	; 0x3800
    2ccc:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    2cd0:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    2cd4:	00020201 	andeq	r0, r2, r1, lsl #4
    2cd8:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    2cdc:	04020500 	streq	r0, [r2], #-1280	; 0xfffffb00
    2ce0:	0308000a 	movweq	r0, #32778	; 0x800a
    2ce4:	050100c4 	streq	r0, [r1, #-196]	; 0xffffff3c
    2ce8:	43052034 	movwmi	r2, #20532	; 0x5034
    2cec:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2cf0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2cf4:	02050032 	andeq	r0, r5, #50	; 0x32
    2cf8:	08000a0a 	stmdaeq	r0, {r1, r3, r9, fp}
    2cfc:	0100c503 	tsteq	r0, r3, lsl #10
    2d00:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    2d04:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    2d08:	01010002 	tsteq	r1, r2
    2d0c:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    2d10:	000a1002 	andeq	r1, sl, r2
    2d14:	00c60308 	sbceq	r0, r6, r8, lsl #6
    2d18:	20340501 	eorscs	r0, r4, r1, lsl #10
    2d1c:	01064305 	tsteq	r6, r5, lsl #6
    2d20:	01000202 	tsteq	r0, r2, lsl #4
    2d24:	00320501 	eorseq	r0, r2, r1, lsl #10
    2d28:	0a160205 	beq	583544 <_Min_Stack_Size+0x583144>
    2d2c:	c7030800 	strgt	r0, [r3, -r0, lsl #16]
    2d30:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    2d34:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    2d38:	00020201 	andeq	r0, r2, r1, lsl #4
    2d3c:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    2d40:	1c020500 	cfstr32ne	mvfx0, [r2], {-0}
    2d44:	0308000a 	movweq	r0, #32778	; 0x800a
    2d48:	050100c8 	streq	r0, [r1, #-200]	; 0xffffff38
    2d4c:	43052034 	movwmi	r2, #20532	; 0x5034
    2d50:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2d54:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2d58:	02050032 	andeq	r0, r5, #50	; 0x32
    2d5c:	08000a22 	stmdaeq	r0, {r1, r5, r9, fp}
    2d60:	0100c903 	tsteq	r0, r3, lsl #18
    2d64:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    2d68:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    2d6c:	01010002 	tsteq	r1, r2
    2d70:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    2d74:	000a2802 	andeq	r2, sl, r2, lsl #16
    2d78:	00ca0308 	sbceq	r0, sl, r8, lsl #6
    2d7c:	20340501 	eorscs	r0, r4, r1, lsl #10
    2d80:	01064305 	tsteq	r6, r5, lsl #6
    2d84:	01000202 	tsteq	r0, r2, lsl #4
    2d88:	00320501 	eorseq	r0, r2, r1, lsl #10
    2d8c:	0a2e0205 	beq	b835a8 <_Min_Stack_Size+0xb831a8>
    2d90:	cb030800 	blgt	c4d98 <_Min_Stack_Size+0xc4998>
    2d94:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    2d98:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    2d9c:	00020201 	andeq	r0, r2, r1, lsl #4
    2da0:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    2da4:	34020500 	strcc	r0, [r2], #-1280	; 0xfffffb00
    2da8:	0308000a 	movweq	r0, #32778	; 0x800a
    2dac:	050100cc 	streq	r0, [r1, #-204]	; 0xffffff34
    2db0:	43052034 	movwmi	r2, #20532	; 0x5034
    2db4:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2db8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2dbc:	02050032 	andeq	r0, r5, #50	; 0x32
    2dc0:	08000a3a 	stmdaeq	r0, {r1, r3, r4, r5, r9, fp}
    2dc4:	0100cd03 	tsteq	r0, r3, lsl #26
    2dc8:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    2dcc:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    2dd0:	01010002 	tsteq	r1, r2
    2dd4:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    2dd8:	000a4002 	andeq	r4, sl, r2
    2ddc:	00ce0308 	sbceq	r0, lr, r8, lsl #6
    2de0:	20340501 	eorscs	r0, r4, r1, lsl #10
    2de4:	01064305 	tsteq	r6, r5, lsl #6
    2de8:	01000202 	tsteq	r0, r2, lsl #4
    2dec:	00320501 	eorseq	r0, r2, r1, lsl #10
    2df0:	0a460205 	beq	118360c <_Min_Stack_Size+0x118320c>
    2df4:	cf030800 	svcgt	0x00030800
    2df8:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    2dfc:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    2e00:	00020201 	andeq	r0, r2, r1, lsl #4
    2e04:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    2e08:	4c020500 	cfstr32mi	mvfx0, [r2], {-0}
    2e0c:	0308000a 	movweq	r0, #32778	; 0x800a
    2e10:	050100d0 	streq	r0, [r1, #-208]	; 0xffffff30
    2e14:	43052034 	movwmi	r2, #20532	; 0x5034
    2e18:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2e1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2e20:	02050032 	andeq	r0, r5, #50	; 0x32
    2e24:	08000a52 	stmdaeq	r0, {r1, r4, r6, r9, fp}
    2e28:	0100d103 	tsteq	r0, r3, lsl #2
    2e2c:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    2e30:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    2e34:	01010002 	tsteq	r1, r2
    2e38:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    2e3c:	000a5802 	andeq	r5, sl, r2, lsl #16
    2e40:	00d20308 	sbcseq	r0, r2, r8, lsl #6
    2e44:	20340501 	eorscs	r0, r4, r1, lsl #10
    2e48:	01064305 	tsteq	r6, r5, lsl #6
    2e4c:	01000202 	tsteq	r0, r2, lsl #4
    2e50:	00320501 	eorseq	r0, r2, r1, lsl #10
    2e54:	0a5e0205 	beq	1783670 <_Min_Stack_Size+0x1783270>
    2e58:	d3030800 	movwle	r0, #14336	; 0x3800
    2e5c:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    2e60:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    2e64:	00020201 	andeq	r0, r2, r1, lsl #4
    2e68:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    2e6c:	64020500 	strvs	r0, [r2], #-1280	; 0xfffffb00
    2e70:	0308000a 	movweq	r0, #32778	; 0x800a
    2e74:	050100d4 	streq	r0, [r1, #-212]	; 0xffffff2c
    2e78:	43052034 	movwmi	r2, #20532	; 0x5034
    2e7c:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2e80:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2e84:	02050032 	andeq	r0, r5, #50	; 0x32
    2e88:	08000a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp}
    2e8c:	0100d503 	tsteq	r0, r3, lsl #10
    2e90:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    2e94:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    2e98:	01010002 	tsteq	r1, r2
    2e9c:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    2ea0:	000a7002 	andeq	r7, sl, r2
    2ea4:	00d60308 	sbcseq	r0, r6, r8, lsl #6
    2ea8:	20340501 	eorscs	r0, r4, r1, lsl #10
    2eac:	01064305 	tsteq	r6, r5, lsl #6
    2eb0:	01000202 	tsteq	r0, r2, lsl #4
    2eb4:	00320501 	eorseq	r0, r2, r1, lsl #10
    2eb8:	0a760205 	beq	1d836d4 <_Min_Stack_Size+0x1d832d4>
    2ebc:	d7030800 	strle	r0, [r3, -r0, lsl #16]
    2ec0:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    2ec4:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    2ec8:	00020201 	andeq	r0, r2, r1, lsl #4
    2ecc:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    2ed0:	7c020500 	cfstr32vc	mvfx0, [r2], {-0}
    2ed4:	0308000a 	movweq	r0, #32778	; 0x800a
    2ed8:	050100d8 	streq	r0, [r1, #-216]	; 0xffffff28
    2edc:	43052034 	movwmi	r2, #20532	; 0x5034
    2ee0:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2ee4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2ee8:	02050032 	andeq	r0, r5, #50	; 0x32
    2eec:	08000a82 	stmdaeq	r0, {r1, r7, r9, fp}
    2ef0:	0100d903 	tsteq	r0, r3, lsl #18
    2ef4:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    2ef8:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    2efc:	01010002 	tsteq	r1, r2
    2f00:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    2f04:	000a8802 	andeq	r8, sl, r2, lsl #16
    2f08:	00da0308 	sbcseq	r0, sl, r8, lsl #6
    2f0c:	20340501 	eorscs	r0, r4, r1, lsl #10
    2f10:	01064305 	tsteq	r6, r5, lsl #6
    2f14:	01000202 	tsteq	r0, r2, lsl #4
    2f18:	00320501 	eorseq	r0, r2, r1, lsl #10
    2f1c:	0a8e0205 	beq	fe383738 <_estack+0xde343738>
    2f20:	db030800 	blle	c4f28 <_Min_Stack_Size+0xc4b28>
    2f24:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    2f28:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    2f2c:	00020201 	andeq	r0, r2, r1, lsl #4
    2f30:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    2f34:	94020500 	strls	r0, [r2], #-1280	; 0xfffffb00
    2f38:	0308000a 	movweq	r0, #32778	; 0x800a
    2f3c:	050100dc 	streq	r0, [r1, #-220]	; 0xffffff24
    2f40:	43052034 	movwmi	r2, #20532	; 0x5034
    2f44:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2f48:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2f4c:	02050032 	andeq	r0, r5, #50	; 0x32
    2f50:	08000a9a 	stmdaeq	r0, {r1, r3, r4, r7, r9, fp}
    2f54:	0100dd03 	tsteq	r0, r3, lsl #26
    2f58:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    2f5c:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    2f60:	01010002 	tsteq	r1, r2
    2f64:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    2f68:	000aa002 	andeq	sl, sl, r2
    2f6c:	00de0308 	sbcseq	r0, lr, r8, lsl #6
    2f70:	20340501 	eorscs	r0, r4, r1, lsl #10
    2f74:	01064305 	tsteq	r6, r5, lsl #6
    2f78:	01000202 	tsteq	r0, r2, lsl #4
    2f7c:	00320501 	eorseq	r0, r2, r1, lsl #10
    2f80:	0aa60205 	beq	fe98379c <_estack+0xde94379c>
    2f84:	df030800 	svcle	0x00030800
    2f88:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    2f8c:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    2f90:	00020201 	andeq	r0, r2, r1, lsl #4
    2f94:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    2f98:	ac020500 	cfstr32ge	mvfx0, [r2], {-0}
    2f9c:	0308000a 	movweq	r0, #32778	; 0x800a
    2fa0:	050100e0 	streq	r0, [r1, #-224]	; 0xffffff20
    2fa4:	43052034 	movwmi	r2, #20532	; 0x5034
    2fa8:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2fac:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2fb0:	02050032 	andeq	r0, r5, #50	; 0x32
    2fb4:	08000ab2 	stmdaeq	r0, {r1, r4, r5, r7, r9, fp}
    2fb8:	0100e103 	tsteq	r0, r3, lsl #2
    2fbc:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    2fc0:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    2fc4:	01010002 	tsteq	r1, r2
    2fc8:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    2fcc:	000ab802 	andeq	fp, sl, r2, lsl #16
    2fd0:	00e20308 	rsceq	r0, r2, r8, lsl #6
    2fd4:	20340501 	eorscs	r0, r4, r1, lsl #10
    2fd8:	01064305 	tsteq	r6, r5, lsl #6
    2fdc:	01000202 	tsteq	r0, r2, lsl #4
    2fe0:	00320501 	eorseq	r0, r2, r1, lsl #10
    2fe4:	0abe0205 	beq	fef83800 <_estack+0xdef43800>
    2fe8:	e3030800 	movw	r0, #14336	; 0x3800
    2fec:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    2ff0:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    2ff4:	00020201 	andeq	r0, r2, r1, lsl #4
    2ff8:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    2ffc:	c4020500 	strgt	r0, [r2], #-1280	; 0xfffffb00
    3000:	0308000a 	movweq	r0, #32778	; 0x800a
    3004:	050100e4 	streq	r0, [r1, #-228]	; 0xffffff1c
    3008:	43052034 	movwmi	r2, #20532	; 0x5034
    300c:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    3010:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3014:	02050032 	andeq	r0, r5, #50	; 0x32
    3018:	08000aca 	stmdaeq	r0, {r1, r3, r6, r7, r9, fp}
    301c:	0100e503 	tsteq	r0, r3, lsl #10
    3020:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    3024:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    3028:	01010002 	tsteq	r1, r2
    302c:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    3030:	000ad002 	andeq	sp, sl, r2
    3034:	00e60308 	rsceq	r0, r6, r8, lsl #6
    3038:	20340501 	eorscs	r0, r4, r1, lsl #10
    303c:	01064305 	tsteq	r6, r5, lsl #6
    3040:	01000202 	tsteq	r0, r2, lsl #4
    3044:	00320501 	eorseq	r0, r2, r1, lsl #10
    3048:	0ad60205 	beq	ff583864 <_estack+0xdf543864>
    304c:	e7030800 	str	r0, [r3, -r0, lsl #16]
    3050:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    3054:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    3058:	00020201 	andeq	r0, r2, r1, lsl #4
    305c:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    3060:	dc020500 	cfstr32le	mvfx0, [r2], {-0}
    3064:	0308000a 	movweq	r0, #32778	; 0x800a
    3068:	050100e8 	streq	r0, [r1, #-232]	; 0xffffff18
    306c:	43052034 	movwmi	r2, #20532	; 0x5034
    3070:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    3074:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3078:	02050032 	andeq	r0, r5, #50	; 0x32
    307c:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
    3080:	0100e903 	tsteq	r0, r3, lsl #18
    3084:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    3088:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    308c:	01010002 	tsteq	r1, r2
    3090:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    3094:	000ae802 	andeq	lr, sl, r2, lsl #16
    3098:	00ea0308 	rsceq	r0, sl, r8, lsl #6
    309c:	20340501 	eorscs	r0, r4, r1, lsl #10
    30a0:	01064305 	tsteq	r6, r5, lsl #6
    30a4:	01000202 	tsteq	r0, r2, lsl #4
    30a8:	00320501 	eorseq	r0, r2, r1, lsl #10
    30ac:	0aee0205 	beq	ffb838c8 <_estack+0xdfb438c8>
    30b0:	eb030800 	bl	c50b8 <_Min_Stack_Size+0xc4cb8>
    30b4:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    30b8:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    30bc:	00020201 	andeq	r0, r2, r1, lsl #4
    30c0:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    30c4:	f4020500 	vst3.8	{d0,d2,d4}, [r2], r0
    30c8:	0308000a 	movweq	r0, #32778	; 0x800a
    30cc:	050100ec 	streq	r0, [r1, #-236]	; 0xffffff14
    30d0:	43052034 	movwmi	r2, #20532	; 0x5034
    30d4:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    30d8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    30dc:	02050032 	andeq	r0, r5, #50	; 0x32
    30e0:	08000afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp}
    30e4:	0100ed03 	tsteq	r0, r3, lsl #26
    30e8:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    30ec:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    30f0:	01010002 	tsteq	r1, r2
    30f4:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    30f8:	000b0002 	andeq	r0, fp, r2
    30fc:	00ee0308 	rsceq	r0, lr, r8, lsl #6
    3100:	20340501 	eorscs	r0, r4, r1, lsl #10
    3104:	01064305 	tsteq	r6, r5, lsl #6
    3108:	01000202 	tsteq	r0, r2, lsl #4
    310c:	00320501 	eorseq	r0, r2, r1, lsl #10
    3110:	0b060205 	bleq	18392c <_Min_Stack_Size+0x18352c>
    3114:	ef030800 	svc	0x00030800
    3118:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    311c:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    3120:	00020201 	andeq	r0, r2, r1, lsl #4
    3124:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    3128:	0c020500 	cfstr32eq	mvfx0, [r2], {-0}
    312c:	0308000b 	movweq	r0, #32779	; 0x800b
    3130:	050100f0 	streq	r0, [r1, #-240]	; 0xffffff10
    3134:	43052034 	movwmi	r2, #20532	; 0x5034
    3138:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    313c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3140:	02050032 	andeq	r0, r5, #50	; 0x32
    3144:	08000b12 	stmdaeq	r0, {r1, r4, r8, r9, fp}
    3148:	0100f103 	tsteq	r0, r3, lsl #2	; <UNPREDICTABLE>
    314c:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    3150:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    3154:	01010002 	tsteq	r1, r2
    3158:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    315c:	000b1802 	andeq	r1, fp, r2, lsl #16
    3160:	00f20308 	rscseq	r0, r2, r8, lsl #6
    3164:	20340501 	eorscs	r0, r4, r1, lsl #10
    3168:	01064305 	tsteq	r6, r5, lsl #6
    316c:	01000202 	tsteq	r0, r2, lsl #4
    3170:	00320501 	eorseq	r0, r2, r1, lsl #10
    3174:	0b1e0205 	bleq	783990 <_Min_Stack_Size+0x783590>
    3178:	f3030800 	vsub.i8	d0, d3, d0
    317c:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    3180:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    3184:	00020201 	andeq	r0, r2, r1, lsl #4
    3188:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    318c:	24020500 	strcs	r0, [r2], #-1280	; 0xfffffb00
    3190:	0308000b 	movweq	r0, #32779	; 0x800b
    3194:	050100f4 	streq	r0, [r1, #-244]	; 0xffffff0c
    3198:	43052034 	movwmi	r2, #20532	; 0x5034
    319c:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    31a0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    31a4:	02050032 	andeq	r0, r5, #50	; 0x32
    31a8:	08000b2a 	stmdaeq	r0, {r1, r3, r5, r8, r9, fp}
    31ac:	0100f503 	tsteq	r0, r3, lsl #10	; <UNPREDICTABLE>
    31b0:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    31b4:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    31b8:	01010002 	tsteq	r1, r2
    31bc:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    31c0:	000b3002 	andeq	r3, fp, r2
    31c4:	00f60308 	rscseq	r0, r6, r8, lsl #6
    31c8:	20340501 	eorscs	r0, r4, r1, lsl #10
    31cc:	01064305 	tsteq	r6, r5, lsl #6
    31d0:	01000202 	tsteq	r0, r2, lsl #4
    31d4:	00320501 	eorseq	r0, r2, r1, lsl #10
    31d8:	0b360205 	bleq	d839f4 <_Min_Stack_Size+0xd835f4>
    31dc:	f7030800 			; <UNDEFINED> instruction: 0xf7030800
    31e0:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    31e4:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    31e8:	00020201 	andeq	r0, r2, r1, lsl #4
    31ec:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    31f0:	3c020500 	cfstr32cc	mvfx0, [r2], {-0}
    31f4:	0308000b 	movweq	r0, #32779	; 0x800b
    31f8:	050100f8 	streq	r0, [r1, #-248]	; 0xffffff08
    31fc:	43052034 	movwmi	r2, #20532	; 0x5034
    3200:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    3204:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3208:	02050032 	andeq	r0, r5, #50	; 0x32
    320c:	08000b42 	stmdaeq	r0, {r1, r6, r8, r9, fp}
    3210:	0100f903 	tsteq	r0, r3, lsl #18	; <UNPREDICTABLE>
    3214:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    3218:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    321c:	01010002 	tsteq	r1, r2
    3220:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    3224:	000b4802 	andeq	r4, fp, r2, lsl #16
    3228:	00fa0308 	rscseq	r0, sl, r8, lsl #6
    322c:	20340501 	eorscs	r0, r4, r1, lsl #10
    3230:	01064305 	tsteq	r6, r5, lsl #6
    3234:	01000202 	tsteq	r0, r2, lsl #4
    3238:	00320501 	eorseq	r0, r2, r1, lsl #10
    323c:	0b4e0205 	bleq	1383a58 <_Min_Stack_Size+0x1383658>
    3240:	fb030800 	blx	c524a <_Min_Stack_Size+0xc4e4a>
    3244:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    3248:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    324c:	00020201 	andeq	r0, r2, r1, lsl #4
    3250:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    3254:	54020500 	strpl	r0, [r2], #-1280	; 0xfffffb00
    3258:	0308000b 	movweq	r0, #32779	; 0x800b
    325c:	050100fc 	streq	r0, [r1, #-252]	; 0xffffff04
    3260:	43052034 	movwmi	r2, #20532	; 0x5034
    3264:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    3268:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    326c:	02050032 	andeq	r0, r5, #50	; 0x32
    3270:	08000b5a 	stmdaeq	r0, {r1, r3, r4, r6, r8, r9, fp}
    3274:	0100fd03 	tsteq	r0, r3, lsl #26	; <UNPREDICTABLE>
    3278:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    327c:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    3280:	01010002 	tsteq	r1, r2
    3284:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    3288:	000b6002 	andeq	r6, fp, r2
    328c:	00fe0308 	rscseq	r0, lr, r8, lsl #6
    3290:	20340501 	eorscs	r0, r4, r1, lsl #10
    3294:	01064305 	tsteq	r6, r5, lsl #6
    3298:	01000202 	tsteq	r0, r2, lsl #4
    329c:	00320501 	eorseq	r0, r2, r1, lsl #10
    32a0:	0b660205 	bleq	1983abc <_Min_Stack_Size+0x19836bc>
    32a4:	ff030800 			; <UNDEFINED> instruction: 0xff030800
    32a8:	34050100 	strcc	r0, [r5], #-256	; 0xffffff00
    32ac:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    32b0:	00020201 	andeq	r0, r2, r1, lsl #4
    32b4:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    32b8:	6c020500 	cfstr32vs	mvfx0, [r2], {-0}
    32bc:	0308000b 	movweq	r0, #32779	; 0x800b
    32c0:	05010180 	streq	r0, [r1, #-384]	; 0xfffffe80
    32c4:	43052034 	movwmi	r2, #20532	; 0x5034
    32c8:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    32cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    32d0:	02050032 	andeq	r0, r5, #50	; 0x32
    32d4:	08000b72 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, fp}
    32d8:	01018103 	tsteq	r1, r3, lsl #2
    32dc:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    32e0:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    32e4:	01010002 	tsteq	r1, r2
    32e8:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    32ec:	000b7802 	andeq	r7, fp, r2, lsl #16
    32f0:	01820308 	orreq	r0, r2, r8, lsl #6
    32f4:	20340501 	eorscs	r0, r4, r1, lsl #10
    32f8:	01064305 	tsteq	r6, r5, lsl #6
    32fc:	01000202 	tsteq	r0, r2, lsl #4
    3300:	00320501 	eorseq	r0, r2, r1, lsl #10
    3304:	0b7e0205 	bleq	1f83b20 <_Min_Stack_Size+0x1f83720>
    3308:	83030800 	movwhi	r0, #14336	; 0x3800
    330c:	34050101 	strcc	r0, [r5], #-257	; 0xfffffeff
    3310:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    3314:	00020201 	andeq	r0, r2, r1, lsl #4
    3318:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    331c:	84020500 	strhi	r0, [r2], #-1280	; 0xfffffb00
    3320:	0308000b 	movweq	r0, #32779	; 0x800b
    3324:	05010184 	streq	r0, [r1, #-388]	; 0xfffffe7c
    3328:	43052034 	movwmi	r2, #20532	; 0x5034
    332c:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    3330:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3334:	02050032 	andeq	r0, r5, #50	; 0x32
    3338:	08000b8a 	stmdaeq	r0, {r1, r3, r7, r8, r9, fp}
    333c:	01018503 	tsteq	r1, r3, lsl #10
    3340:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    3344:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    3348:	01010002 	tsteq	r1, r2
    334c:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    3350:	000b9002 	andeq	r9, fp, r2
    3354:	01860308 	orreq	r0, r6, r8, lsl #6
    3358:	20340501 	eorscs	r0, r4, r1, lsl #10
    335c:	01064305 	tsteq	r6, r5, lsl #6
    3360:	01000202 	tsteq	r0, r2, lsl #4
    3364:	00320501 	eorseq	r0, r2, r1, lsl #10
    3368:	0b960205 	bleq	fe583b84 <_estack+0xde543b84>
    336c:	87030800 	strhi	r0, [r3, -r0, lsl #16]
    3370:	34050101 	strcc	r0, [r5], #-257	; 0xfffffeff
    3374:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    3378:	00020201 	andeq	r0, r2, r1, lsl #4
    337c:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    3380:	9c020500 	cfstr32ls	mvfx0, [r2], {-0}
    3384:	0308000b 	movweq	r0, #32779	; 0x800b
    3388:	05010188 	streq	r0, [r1, #-392]	; 0xfffffe78
    338c:	43052034 	movwmi	r2, #20532	; 0x5034
    3390:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    3394:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3398:	02050032 	andeq	r0, r5, #50	; 0x32
    339c:	08000ba2 	stmdaeq	r0, {r1, r5, r7, r8, r9, fp}
    33a0:	01018903 	tsteq	r1, r3, lsl #18
    33a4:	05203405 	streq	r3, [r0, #-1029]!	; 0xfffffbfb
    33a8:	02010643 	andeq	r0, r1, #70254592	; 0x4300000
    33ac:	01010002 	tsteq	r1, r2
    33b0:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
    33b4:	000ba802 	andeq	sl, fp, r2, lsl #16
    33b8:	018a0308 	orreq	r0, sl, r8, lsl #6
    33bc:	20340501 	eorscs	r0, r4, r1, lsl #10
    33c0:	01064305 	tsteq	r6, r5, lsl #6
    33c4:	01000202 	tsteq	r0, r2, lsl #4
    33c8:	00320501 	eorseq	r0, r2, r1, lsl #10
    33cc:	0bae0205 	bleq	feb83be8 <_estack+0xdeb43be8>
    33d0:	8b030800 	blhi	c53d8 <_Min_Stack_Size+0xc4fd8>
    33d4:	34050101 	strcc	r0, [r5], #-257	; 0xfffffeff
    33d8:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    33dc:	00020201 	andeq	r0, r2, r1, lsl #4
    33e0:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    33e4:	b4020500 	strlt	r0, [r2], #-1280	; 0xfffffb00
    33e8:	0308000b 	movweq	r0, #32779	; 0x800b
    33ec:	0501018c 	streq	r0, [r1, #-396]	; 0xfffffe74
    33f0:	43052034 	movwmi	r2, #20532	; 0x5034
    33f4:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    33f8:	e3010100 	movw	r0, #4352	; 0x1100
    33fc:	03000003 	movweq	r0, #3
    3400:	00021800 	andeq	r1, r2, r0, lsl #16
    3404:	fb010200 	blx	43c0e <_Min_Stack_Size+0x4380e>
    3408:	01000d0e 	tsteq	r0, lr, lsl #26
    340c:	00010101 	andeq	r0, r1, r1, lsl #2
    3410:	00010000 	andeq	r0, r1, r0
    3414:	6f430100 	svcvs	0x00430100
    3418:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
    341c:	44006372 	strmi	r6, [r0], #-882	; 0xfffffc8e
    3420:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    3424:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    3428:	5349534d 	movtpl	r5, #37709	; 0x934d
    342c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    3430:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3434:	73752f00 	cmnvc	r5, #0, 30
    3438:	69622f72 	stmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    343c:	63672f6e 	cmnvs	r7, #440	; 0x1b8
    3440:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    3444:	6f6e2d6d 	svcvs	0x006e2d6d
    3448:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    344c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    3450:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    3454:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    3458:	30312e31 	eorscc	r2, r1, r1, lsr lr
    345c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    3460:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    3464:	61652d65 	cmnvs	r5, r5, ror #26
    3468:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    346c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    3470:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; 32e8 <_Min_Stack_Size+0x2ee8>
    3474:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    3478:	2f00656e 	svccs	0x0000656e
    347c:	2f727375 	svccs	0x00727375
    3480:	2f6e6962 	svccs	0x006e6962
    3484:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    3488:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    348c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    3490:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    3494:	30312d69 	eorscc	r2, r1, r9, ror #26
    3498:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    349c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    34a0:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
    34a4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    34a8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    34ac:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    34b0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    34b4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    34b8:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
    34bc:	69724400 	ldmdbvs	r2!, {sl, lr}^
    34c0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    34c4:	534d432f 	movtpl	r4, #54063	; 0xd32f
    34c8:	442f5349 	strtmi	r5, [pc], #-841	; 34d0 <_Min_Stack_Size+0x30d0>
    34cc:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    34d0:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    34d4:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    34d8:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    34dc:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    34e0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    34e4:	44006564 	strmi	r6, [r0], #-1380	; 0xfffffa9c
    34e8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    34ec:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    34f0:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    34f4:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    34f8:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    34fc:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    3500:	2f726576 	svccs	0x00726576
    3504:	00636e49 	rsbeq	r6, r3, r9, asr #28
    3508:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
    350c:	70632e6e 	rsbvc	r2, r3, lr, ror #28
    3510:	00010070 	andeq	r0, r1, r0, ror r0
    3514:	736d6300 	cmnvc	sp, #0, 6
    3518:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
    351c:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    3520:	00000200 	andeq	r0, r0, r0, lsl #4
    3524:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    3528:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    352c:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    3530:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    3534:	00000300 	andeq	r0, r0, r0, lsl #6
    3538:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    353c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    3540:	00040068 	andeq	r0, r4, r8, rrx
    3544:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    3548:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    354c:	787a3231 	ldmdavc	sl!, {r0, r4, r5, r9, ip, sp}^
    3550:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    3554:	74730000 	ldrbtvc	r0, [r3], #-0
    3558:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    355c:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    3560:	00050068 	andeq	r0, r5, r8, rrx
    3564:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    3568:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    356c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    3570:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 3578 <_Min_Stack_Size+0x3178>
    3574:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    3578:	00000600 	andeq	r0, r0, r0, lsl #12
    357c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    3580:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    3584:	61685f78 	smcvs	34296	; 0x85f8
    3588:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
    358c:	78655f63 	stmdavc	r5!, {r0, r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    3590:	0600682e 	streq	r6, [r0], -lr, lsr #16
    3594:	74730000 	ldrbtvc	r0, [r3], #-0
    3598:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    359c:	5f787834 	svcpl	0x00787834
    35a0:	5f6c6168 	svcpl	0x006c6168
    35a4:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    35a8:	00060068 	andeq	r0, r6, r8, rrx
    35ac:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    35b0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    35b4:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    35b8:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 35c0 <_Min_Stack_Size+0x31c0>
    35bc:	682e616d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}
    35c0:	00000600 	andeq	r0, r0, r0, lsl #12
    35c4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    35c8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    35cc:	61685f78 	smcvs	34296	; 0x85f8
    35d0:	61755f6c 	cmnvs	r5, ip, ror #30
    35d4:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    35d8:	00000600 	andeq	r0, r0, r0, lsl #12
    35dc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    35e0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    35e4:	6c6c5f78 	stclvs	15, cr5, [ip], #-480	; 0xfffffe20
    35e8:	6273755f 	rsbsvs	r7, r3, #398458880	; 0x17c00000
    35ec:	0600682e 	streq	r6, [r0], -lr, lsr #16
    35f0:	74730000 	ldrbtvc	r0, [r3], #-0
    35f4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    35f8:	5f787834 	svcpl	0x00787834
    35fc:	5f6c6168 	svcpl	0x006c6168
    3600:	2e646370 	mcrcs	3, 3, r6, cr4, cr0, {3}
    3604:	00060068 	andeq	r0, r6, r8, rrx
    3608:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    360c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    3610:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    3614:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    3618:	00000600 	andeq	r0, r0, r0, lsl #12
    361c:	00010500 	andeq	r0, r1, r0, lsl #10
    3620:	0bba0205 	bleq	fee83e3c <_estack+0xdee43e3c>
    3624:	e3030800 	movw	r0, #14336	; 0x3800
    3628:	03050102 	movweq	r0, #20738	; 0x5102
    362c:	05020415 	streq	r0, [r2, #-1045]	; 0xfffffbeb
    3630:	7ea5031b 	mcrvc	3, 5, r0, cr5, cr11, {0}
    3634:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    3638:	02000104 	andeq	r0, r0, #4, 2
    363c:	da030104 	ble	c3a54 <_Min_Stack_Size+0xc3654>
    3640:	02002001 	andeq	r2, r0, #1
    3644:	02010104 	andeq	r0, r1, #4, 2
    3648:	01010001 	tsteq	r1, r1
    364c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3650:	000bc002 	andeq	ip, fp, r2
    3654:	01bb0308 			; <UNDEFINED> instruction: 0x01bb0308
    3658:	2f030501 	svccs	0x00030501
    365c:	01061605 	tsteq	r6, r5, lsl #12
    3660:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
    3664:	01061605 	tsteq	r6, r5, lsl #12
    3668:	6a060305 	bvs	184284 <_Min_Stack_Size+0x183e84>
    366c:	4a582001 	bmi	160b678 <_Min_Stack_Size+0x160b278>
    3670:	58200121 	stmdapl	r0!, {r0, r5, r8}
    3674:	2405244a 	strcs	r2, [r5], #-1098	; 0xfffffbb6
    3678:	03050106 	movweq	r0, #20742	; 0x5106
    367c:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
    3680:	03050106 	movweq	r0, #20742	; 0x5106
    3684:	22053d06 	andcs	r3, r5, #384	; 0x180
    3688:	03050106 	movweq	r0, #20742	; 0x5106
    368c:	23052f06 	movwcs	r2, #24326	; 0x5f06
    3690:	03050106 	movweq	r0, #20742	; 0x5106
    3694:	1e053d06 	cdpne	13, 0, cr3, cr5, cr6, {0}
    3698:	03050106 	movweq	r0, #20742	; 0x5106
    369c:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
    36a0:	03050106 	movweq	r0, #20742	; 0x5106
    36a4:	1e053d06 	cdpne	13, 0, cr3, cr5, cr6, {0}
    36a8:	03050106 	movweq	r0, #20742	; 0x5106
    36ac:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
    36b0:	03050106 	movweq	r0, #20742	; 0x5106
    36b4:	1e052106 	adfnes	f2, f5, f6
    36b8:	03050106 	movweq	r0, #20742	; 0x5106
    36bc:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    36c0:	03050106 	movweq	r0, #20742	; 0x5106
    36c4:	0526063c 	streq	r0, [r6, #-1596]!	; 0xfffff9c4
    36c8:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    36cc:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    36d0:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    36d4:	052f0603 	streq	r0, [pc, #-1539]!	; 30d9 <_Min_Stack_Size+0x2cd9>
    36d8:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    36dc:	052f0603 	streq	r0, [pc, #-1539]!	; 30e1 <_Min_Stack_Size+0x2ce1>
    36e0:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    36e4:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    36e8:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    36ec:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    36f0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    36f4:	01054a03 	tsteq	r5, r3, lsl #20
    36f8:	06050524 	streq	r0, [r5], -r4, lsr #10
    36fc:	053c7103 	ldreq	r7, [ip, #-259]!	; 0xfffffefd
    3700:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    3704:	0d030605 	stceq	6, cr0, [r3, #-20]	; 0xffffffec
    3708:	0612052e 	ldreq	r0, [r2], -lr, lsr #10
    370c:	00060201 	andeq	r0, r6, r1, lsl #4
    3710:	01050101 	tsteq	r5, r1, lsl #2
    3714:	68020500 	stmdavs	r2, {r8, sl}
    3718:	0308000c 	movweq	r0, #32780	; 0x800c
    371c:	050100e9 	streq	r0, [r1, #-233]	; 0xffffff17
    3720:	200f0303 	andcs	r0, pc, r3, lsl #6
    3724:	01061505 	tsteq	r6, r5, lsl #10
    3728:	03060305 	movweq	r0, #25349	; 0x6305
    372c:	14052e0e 	strne	r2, [r5], #-3598	; 0xfffff1f2
    3730:	05014403 	streq	r4, [r1, #-1027]	; 0xfffffbfd
    3734:	13131503 	tstne	r3, #12582912	; 0xc00000
    3738:	01060d05 	tsteq	r6, r5, lsl #26
    373c:	76060305 	strvc	r0, [r6], -r5, lsl #6
    3740:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    3744:	01060b05 	tsteq	r6, r5, lsl #22
    3748:	75060305 	strvc	r0, [r6, #-773]	; 0xfffffcfb
    374c:	01060b05 	tsteq	r6, r5, lsl #22
    3750:	67060305 	strvs	r0, [r6, -r5, lsl #6]
    3754:	01060c05 	tsteq	r6, r5, lsl #24
    3758:	83060305 	movwhi	r0, #25349	; 0x6305
    375c:	01060d05 	tsteq	r6, r5, lsl #26
    3760:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
    3764:	01060b05 	tsteq	r6, r5, lsl #22
    3768:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    376c:	03060104 	movweq	r0, #24836	; 0x6104
    3770:	05055831 	streq	r5, [r5, #-2097]	; 0xfffff7cf
    3774:	01040200 	mrseq	r0, R12_usr
    3778:	00140514 	andseq	r0, r4, r4, lsl r5
    377c:	03010402 	movweq	r0, #5122	; 0x1402
    3780:	03050152 	movweq	r0, #20818	; 0x5152
    3784:	01040200 	mrseq	r0, R12_usr
    3788:	000a0514 	andeq	r0, sl, r4, lsl r5
    378c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3790:	00050501 	andeq	r0, r5, r1, lsl #10
    3794:	06010402 	streq	r0, [r1], -r2, lsl #8
    3798:	05902d03 	ldreq	r2, [r0, #3331]	; 0xd03
    379c:	0402000e 	streq	r0, [r2], #-14
    37a0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    37a4:	04020005 	streq	r0, [r2], #-5
    37a8:	053d0601 	ldreq	r0, [sp, #-1537]!	; 0xfffff9ff
    37ac:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    37b0:	01550301 	cmpeq	r5, r1, lsl #6
    37b4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    37b8:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    37bc:	0402000a 	streq	r0, [r2], #-10
    37c0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    37c4:	04020005 	streq	r0, [r2], #-5
    37c8:	2a030601 	bcs	c4fd4 <_Min_Stack_Size+0xc4bd4>
    37cc:	000e0582 	andeq	r0, lr, r2, lsl #11
    37d0:	06010402 	streq	r0, [r1], -r2, lsl #8
    37d4:	00030501 	andeq	r0, r3, r1, lsl #10
    37d8:	06010402 	streq	r0, [r1], -r2, lsl #8
    37dc:	000a0237 	andeq	r0, sl, r7, lsr r2
    37e0:	Address 0x00000000000037e0 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
       4:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
       8:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
  __HAL_FLASH_DATA_CACHE_ENABLE();
       c:	65500074 	ldrbvs	r0, [r0, #-116]	; 0xffffff8c
      10:	5653646e 	ldrbpl	r6, [r3], -lr, ror #8
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
      14:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
      18:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
      1c:	63656400 	cmnvs	r5, #0, 8
      20:	7079746c 	rsbsvc	r7, r9, ip, ror #8
  HAL_InitTick(TICK_INT_PRIORITY);
      24:	756e2865 	strbvc	r2, [lr, #-2149]!	; 0xfffff79b
  HAL_MspInit();
      28:	74706c6c 	ldrbtvc	r6, [r0], #-3180	; 0xfffff394
}
      2c:	2f002972 	svccs	0x00002972
      30:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
  *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL);
      34:	63616a2f 	cmnvs	r1, #192512	; 0x2f000
      38:	722f626f 	eorvc	r6, pc, #-268435450	; 0xf0000006
      3c:	736f7065 	cmnvc	pc, #101	; 0x65
  *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL);
      40:	63756e2f 	cmnvs	r5, #752	; 0x2f0
      44:	496f656c 	stmdbmi	pc!, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
      48:	2f74696e 	svccs	0x0074696e
    return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
      4c:	6c63754e 	cfstr64vs	mvdx7, [r3], #-312	; 0xfffffec8
      50:	6e496f65 	cdpvs	15, 4, cr6, cr9, cr5, {3}
      54:	48007469 	stmdami	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
      58:	495f4c41 	ldmdbmi	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
      5c:	6954636e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	55006b63 	strpl	r6, [r0, #-2915]	; 0xfffff49d
      64:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
      68:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
      SystemCoreClock = pllvco/pllp;
      6c:	61485f74 	hvcvs	34292	; 0x85f4
      70:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
      break;
      74:	75420072 	strbvc	r0, [r2, #-114]	; 0xffffff8e
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	75614673 	strbvc	r4, [r1, #-1651]!	; 0xfffff98d
      7c:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
      80:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
      84:	6c007265 	sfmvs	f7, 4, [r0], {101}	; 0x65
      88:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      8c:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
      90:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
      94:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
      98:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
      9c:	61480074 	hvcvs	32772	; 0x8004
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
      a0:	61466472 	hvcvs	26178	; 0x6642
      a4:	5f746c75 	svcpl	0x00746c75
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
      a8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
      ac:	0072656c 	rsbseq	r6, r2, ip, ror #10
      b0:	5f494d4e 	svcpl	0x00494d4e
      b4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
      b8:	0072656c 	rsbseq	r6, r2, ip, ror #10
  if((plli2sused == 1U) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
      bc:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
      c0:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
      c4:	61686320 	cmnvs	r8, r0, lsr #6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
      c8:	654d0072 	strbvs	r0, [sp, #-114]	; 0xffffff8e
      cc:	6e614d6d 	cdpvs	13, 6, cr4, cr1, cr13, {3}
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
      d0:	5f656761 	svcpl	0x00656761
      d4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
      d8:	0072656c 	rsbseq	r6, r2, ip, ror #10
      dc:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
      e0:	5f6b6369 	svcpl	0x006b6369
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1_AUDIO) == RCC_PERIPHCLK_DFSDM1_AUDIO)
      e4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
      e8:	0072656c 	rsbseq	r6, r2, ip, ror #10
    __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
      ec:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
      f0:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
      f4:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
      f8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
      fc:	695f7878 	ldmdbvs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
}
     100:	00632e74 	rsbeq	r2, r3, r4, ror lr
      plli2sused = 1U;
     104:	20554e47 	subscs	r4, r5, r7, asr #28
    __HAL_RCC_PWR_CLK_ENABLE();
     108:	312b2b43 			; <UNDEFINED> instruction: 0x312b2b43
     10c:	30312034 	eorscc	r2, r1, r4, lsr r0
     110:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
     114:	32303220 	eorscc	r3, r0, #32, 4
     118:	32383031 	eorscc	r3, r8, #49	; 0x31
     11c:	72282034 	eorvc	r2, r8, #52	; 0x34
    PWR->CR |= PWR_CR_DBP;
     120:	61656c65 	cmnvs	r5, r5, ror #24
     124:	20296573 	eorcs	r6, r9, r3, ror r5
     128:	70636d2d 	rsbvc	r6, r3, sp, lsr #26
    tickstart = HAL_GetTick();
     12c:	6f633d75 	svcvs	0x00633d75
    while((PWR->CR & PWR_CR_DBP) == RESET)
     130:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
     134:	20346d2d 	eorscs	r6, r4, sp, lsr #26
     138:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
     13c:	20626d75 	rsbcs	r6, r2, r5, ror sp
     140:	70666d2d 	rsbvc	r6, r6, sp, lsr #26
        return HAL_TIMEOUT;
     144:	70663d75 	rsbvc	r3, r6, r5, ror sp
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
     148:	732d3476 			; <UNDEFINED> instruction: 0x732d3476
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
     14c:	31642d70 	smccc	17104	; 0x42d0
     150:	6d2d2036 	stcvs	0, cr2, [sp, #-216]!	; 0xffffff28
     154:	616f6c66 	cmnvs	pc, r6, ror #24
     158:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
     15c:	61683d69 	cmnvs	r8, r9, ror #26
     160:	2d206472 	cfstrscs	mvf6, [r0, #-456]!	; 0xfffffe38
      __HAL_RCC_BACKUPRESET_FORCE();
     164:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
     168:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
      __HAL_RCC_BACKUPRESET_RELEASE();
     16c:	6537766d 	ldrvs	r7, [r7, #-1645]!	; 0xfffff993
     170:	662b6d2d 	strtvs	r6, [fp], -sp, lsr #26
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
     174:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
     178:	64672d20 	strbtvs	r2, [r7], #-3360	; 0xfffff2e0
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
     17c:	66726177 			; <UNDEFINED> instruction: 0x66726177
     180:	2d20322d 	sfmcs	f3, 4, [r0, #-180]!	; 0xffffff4c
     184:	2d20674f 	stccs	7, cr6, [r0, #-316]!	; 0xfffffec4
     188:	74616466 	strbtvc	r6, [r1], #-1126	; 0xfffffb9a
     18c:	65732d61 	ldrbvs	r2, [r3, #-3425]!	; 0xfffff29f
     190:	6f697463 	svcvs	0x00697463
     194:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
     198:	6e756666 	cdpvs	6, 7, cr6, cr5, cr6, {3}
     19c:	6f697463 	svcvs	0x00697463
     1a0:	65732d6e 	ldrbvs	r2, [r3, #-3438]!	; 0xfffff292
        tickstart = HAL_GetTick();
     1a4:	6f697463 	svcvs	0x00697463
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     1a8:	7300736e 	movwvc	r7, #878	; 0x36e
     1ac:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     1b0:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     1b4:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     1b8:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     1bc:	6f6c0074 	svcvs	0x006c0074
            return HAL_TIMEOUT;
     1c0:	6420676e 	strtvs	r6, [r0], #-1902	; 0xfffff892
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
     1c4:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
     1c8:	56530065 	ldrbpl	r0, [r3], -r5, rrx
     1cc:	61485f43 	cmpvs	r8, r3, asr #30
     1d0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     1d4:	65440072 	strbvs	r0, [r4, #-114]	; 0xffffff8e
     1d8:	4d677562 	cfstr64mi	mvdx7, [r7, #-392]!	; 0xfffffe78
      plli2sused = 1U;
     1dc:	485f6e6f 	ldmdami	pc, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    __HAL_RCC_PLLI2S_DISABLE();
     1e0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    tickstart = HAL_GetTick();
     1e4:	73007265 	movwvc	r7, #613	; 0x265
     1e8:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
     1ec:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     1f0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
     1f4:	4343525f 	movtmi	r5, #12895	; 0x325f
     1f8:	5353435f 	cmppl	r3, #2080374785	; 0x7c000001
     1fc:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
        return HAL_TIMEOUT;
     200:	6b636162 	blvs	18d8790 <_Min_Stack_Size+0x18d8390>
    __HAL_RCC_PLL_I2S_CONFIG(PeriphClkInit->PLLI2SSelection);
     204:	4b434c00 	blmi	10d320c <_Min_Stack_Size+0x10d2e0c>
     208:	33310052 	teqcc	r1, #82	; 0x52
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB1) == RCC_PERIPHCLK_I2S_APB1) && (PeriphClkInit->I2sApb1ClockSelection == RCC_I2SAPB1CLKSOURCE_PLLI2S)) ||
     20c:	53414c46 	movtpl	r4, #7238	; 0x1c46
     210:	79545f48 	ldmdbvc	r4, {r3, r6, r8, r9, sl, fp, ip, lr}^
     214:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     218:	50410066 	subpl	r0, r1, r6, rrx
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB2) == RCC_PERIPHCLK_I2S_APB2) && (PeriphClkInit->I2sApb2ClockSelection == RCC_I2SAPB2CLKSOURCE_PLLI2S)) ||
     21c:	4c433142 	stfmie	f3, [r3], {66}	; 0x42
     220:	7669444b 	strbtvc	r4, [r9], -fp, asr #8
     224:	72656469 	rsbvc	r6, r5, #1761607680	; 0x69000000
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)) ||
     228:	6c6c7000 	stclvs	0, cr7, [ip], #-0
     22c:	5f5f0070 	svcpl	0x005f0070
     230:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO) && (PeriphClkInit->SdioClockSelection == RCC_SDIOCLKSOURCE_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)))
     234:	00745f38 	rsbseq	r5, r4, r8, lsr pc
     238:	5059544f 	subspl	r5, r9, pc, asr #8
     23c:	50005245 	andpl	r5, r0, r5, asr #4
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
     240:	74534c4c 	ldrbvc	r4, [r3], #-3148	; 0xfffff3b4
     244:	00657461 	rsbeq	r7, r5, r1, ror #8
     248:	63727770 	cmnvs	r2, #112, 14	; 0x1c00000
     24c:	68636b6c 	stmdavs	r3!, {r2, r3, r5, r6, r8, r9, fp, sp, lr}^
     250:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
     254:	50410064 	subpl	r0, r1, r4, rrx
     258:	65725042 	ldrbvs	r5, [r2, #-66]!	; 0xffffffbe
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
     25c:	61546373 	cmpvs	r4, r3, ror r3
     260:	00656c62 	rsbeq	r6, r5, r2, ror #24
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
     264:	4d4c4c50 	stclmi	12, cr4, [ip, #-320]	; 0xfffffec0
     268:	4c4c5000 	marmi	acc0, r5, ip
     26c:	504f004e 	subpl	r0, pc, lr, asr #32
     270:	00524354 	subseq	r4, r2, r4, asr r3
     274:	504c4c50 	subpl	r4, ip, r0, asr ip
     278:	4c4c5000 	marmi	acc0, r5, ip
    __HAL_RCC_PLLI2S_ENABLE();
     27c:	4c500051 	mrrcmi	0, 5, r0, r0, cr1	; <UNPREDICTABLE>
     280:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
    tickstart = HAL_GetTick();
     284:	5245444f 	subpl	r4, r5, #1325400064	; 0x4f000000
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
     288:	50555000 	subspl	r5, r5, r0
     28c:	4c005244 	sfmmi	f5, 4, [r0], {68}	; 0x44
     290:	74534553 	ldrbvc	r4, [r3], #-1363	; 0xfffffaad
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
     294:	00657461 	rsbeq	r7, r5, r1, ror #8
     298:	5f434352 	svcpl	0x00434352
     29c:	4963734f 	stmdbmi	r3!, {r0, r1, r2, r3, r6, r8, r9, ip, sp, lr}^
        return HAL_TIMEOUT;
     2a0:	5374696e 	cmnpl	r4, #1802240	; 0x1b8000
  return HAL_OK;
     2a4:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
     2a8:	48410074 	stmdami	r1, {r2, r4, r5, r6}^
     2ac:	504c3142 	subpl	r3, ip, r2, asr #2
     2b0:	00524e45 	subseq	r4, r2, r5, asr #28
     2b4:	65746c41 	ldrbvs	r6, [r4, #-3137]!	; 0xfffff3bf
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2b8:	74616e72 	strbtvc	r6, [r1], #-3698	; 0xfffff18e
     2bc:	43440065 	movtmi	r0, #16485	; 0x4065
          return HAL_TIMEOUT;
     2c0:	4746434b 	strbmi	r4, [r6, -fp, asr #6]
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     2c4:	53420052 	movtpl	r0, #8274	; 0x2052
     2c8:	41005252 	tstmi	r0, r2, asr r2
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     2cc:	52314248 	eorspl	r4, r1, #72, 4	; 0x80000004
     2d0:	00525453 	subseq	r5, r2, r3, asr r4
     2d4:	434b4344 	movtmi	r4, #45892	; 0xb344
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     2d8:	32524746 	subscc	r4, r2, #18350080	; 0x1180000
        __HAL_RCC_PLL_DISABLE();
     2dc:	47323100 	ldrmi	r3, [r2, -r0, lsl #2]!
     2e0:	5f4f4950 	svcpl	0x004f4950
        tickstart = HAL_GetTick();
     2e4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     2e8:	00666544 	rsbeq	r6, r6, r4, asr #10
     2ec:	43495348 	movtmi	r5, #37704	; 0x9348
     2f0:	62696c61 	rsbvs	r6, r9, #24832	; 0x6100
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     2f4:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     2f8:	61566e6f 	cmpvs	r6, pc, ror #28
            return HAL_TIMEOUT;
     2fc:	0065756c 	rsbeq	r7, r5, ip, ror #10
      __HAL_RCC_PWR_CLK_DISABLE();
     300:	72706d74 	rsbsvc	r6, r0, #116, 26	; 0x1d00
     304:	41006765 	tstmi	r0, r5, ror #14
     308:	52324250 	eorspl	r4, r2, #80, 4
        __HAL_RCC_PLL_DISABLE();
     30c:	00525453 	subseq	r5, r2, r3, asr r4
     310:	5349534c 	movtpl	r5, #37708	; 0x934c
        tickstart = HAL_GetTick();
     314:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     318:	414e4500 	cmpmi	lr, r0, lsl #10
     31c:	00454c42 	subeq	r4, r5, r2, asr #24
     320:	53495348 	movtpl	r5, #37704	; 0x9348
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     324:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     328:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
            return HAL_TIMEOUT;
     32c:	5259454b 	subspl	r4, r9, #314572800	; 0x12c00000
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     330:	46353100 	ldrtmi	r3, [r5], -r0, lsl #2
     334:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
     338:	616e6f69 	cmnvs	lr, r9, ror #30
     33c:	6174536c 	cmnvs	r4, ip, ror #6
     340:	50006574 	andpl	r6, r0, r4, ror r5
     344:	46434c4c 	strbmi	r4, [r3], -ip, asr #24
     348:	4f005247 	svcmi	0x00005247
     34c:	45455053 	strbmi	r5, [r5, #-83]	; 0xffffffad
        __HAL_RCC_PLL_ENABLE();
     350:	5f005244 	svcpl	0x00005244
     354:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
        tickstart = HAL_GetTick();
     358:	5f323374 	svcpl	0x00323374
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     35c:	43520074 	cmpmi	r2, #116	; 0x74
     360:	6c435f43 	mcrrvs	15, 4, r5, r3, cr3
     364:	696e496b 	stmdbvs	lr!, {r0, r1, r3, r5, r6, r8, fp, lr}^
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     368:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
     36c:	00746375 	rsbseq	r6, r4, r5, ror r3
            return HAL_TIMEOUT;
     370:	766c6c70 			; <UNDEFINED> instruction: 0x766c6c70
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     374:	48006f63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, sl, fp, sp, lr}
        pll_config = RCC->PLLCFGR;
     378:	74534553 	ldrbvc	r4, [r3], #-1363	; 0xfffffaad
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     37c:	00657461 	rsbeq	r7, r5, r1, ror #8
     380:	41534944 	cmpmi	r3, r4, asr #18
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     384:	00454c42 	subeq	r4, r5, r2, asr #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     388:	4354504f 	cmpmi	r4, #79	; 0x4f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     38c:	47003152 	smlsdmi	r0, r2, r1, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     390:	5f4f4950 	svcpl	0x004f4950
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     394:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     398:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
     39c:	31007463 	tstcc	r0, r3, ror #8
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     3a0:	43435238 	movtmi	r5, #12856	; 0x3238
     3a4:	6b6c435f 	blvs	1b11128 <_Min_Stack_Size+0x1b10d28>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     3a8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     3ac:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
     3b0:	00666544 	rsbeq	r6, r6, r4, asr #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     3b4:	5f434352 	svcpl	0x00434352
     3b8:	444f434d 	strbmi	r4, [pc], #-845	; 3c0 <_Min_Heap_Size+0x1c0>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
     3bc:	48007669 	stmdami	r0, {r0, r3, r5, r6, r9, sl, ip, sp, lr}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
     3c0:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 3c8 <_Min_Heap_Size+0x1c8>
     3c4:	4f454d49 	svcmi	0x00454d49
  return HAL_OK;
     3c8:	48005455 	stmdami	r0, {r0, r2, r4, r6, sl, ip, lr}
}
     3cc:	4f5f4c41 	svcmi	0x005f4c41
        return HAL_ERROR;
     3d0:	5041004b 	subpl	r0, r1, fp, asr #32
        return HAL_ERROR;
     3d4:	504c3142 	subpl	r3, ip, r2, asr #2
}
     3d8:	00524e45 	subseq	r4, r2, r5, asr #28
  return HAL_OK;
     3dc:	494c4c50 	stmdbmi	ip, {r4, r6, sl, fp, lr}^
     3e0:	46435332 			; <UNDEFINED> instruction: 0x46435332
        return HAL_ERROR;
     3e4:	31005247 	tstcc	r0, r7, asr #4
          return HAL_ERROR;
     3e8:	43435231 	movtmi	r5, #12849	; 0x3231
     3ec:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     3f0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     3f4:	46303100 	ldrtmi	r3, [r0], -r0, lsl #2
     3f8:	5367616c 	cmnpl	r7, #108, 2
     3fc:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
     400:	41480073 	hvcmi	32771	; 0x8003
     404:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
     408:	6e455f43 	cdpvs	15, 4, cr5, cr5, cr3, {2}
     40c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     410:	00535343 	subseq	r5, r3, r3, asr #6
     414:	32425041 	subcc	r5, r2, #65	; 0x41
     418:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     41c:	48410052 	stmdami	r1, {r1, r4, r6}^
     420:	65725042 	ldrbvs	r5, [r2, #-66]!	; 0xffffffbe
     424:	61546373 	cmpvs	r4, r3, ror r3
     428:	00656c62 	rsbeq	r6, r5, r2, ror #24
     42c:	43424841 	movtmi	r4, #10305	; 0x2841
     430:	69444b4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, fp, lr}^
     434:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
     438:	79730072 	ldmdbvc	r3!, {r1, r4, r5, r6}^
     43c:	6f6c6373 	svcvs	0x006c6373
     440:	72666b63 	rsbvc	r6, r6, #101376	; 0x18c00
     444:	48007165 	stmdami	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
     448:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
     44c:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
     450:	53006b63 	movwpl	r6, #2915	; 0xb63
     454:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
     458:	42484100 	submi	r4, r8, #0, 2
     45c:	524e4533 	subpl	r4, lr, #213909504	; 0xcc00000
     460:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     464:	4343525f 	movtmi	r5, #12895	; 0x325f
     468:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
     46c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     470:	00535343 	subseq	r5, r3, r3, asr #6
     474:	5f4c4148 	svcpl	0x004c4148
     478:	4f495047 	svcmi	0x00495047
     47c:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     480:	38310074 	ldmdacc	r1!, {r2, r4, r5, r6}
     484:	5f434352 	svcpl	0x00434352
     488:	494c4c50 	stmdbmi	ip, {r4, r6, sl, fp, lr}^
     48c:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     490:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     494:	41006665 	tstmi	r0, r5, ror #12
     498:	4c324248 	lfmmi	f4, 4, [r2], #-288	; 0xfffffee0
     49c:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     4a0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     4a4:	4343525f 	movtmi	r5, #12895	; 0x325f
     4a8:	4f434d5f 	svcmi	0x00434d5f
     4ac:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     4b0:	41006769 	tstmi	r0, r9, ror #14
     4b4:	52314250 	eorspl	r4, r1, #80, 4
     4b8:	00525453 	subseq	r5, r2, r3, asr r4
     4bc:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     4c0:	3436746e 	ldrtcc	r7, [r6], #-1134	; 0xfffffb92
     4c4:	5300745f 	movwpl	r7, #1119	; 0x45f
     4c8:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     4cc:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
     4d0:	6f6c4365 	svcvs	0x006c4365
     4d4:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     4d8:	495f4c41 	ldmdbmi	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
     4dc:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     4e0:	006b6369 	rsbeq	r6, fp, r9, ror #6
     4e4:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     4e8:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     4ec:	38310030 	ldmdacc	r1!, {r4, r5}
     4f0:	5f434352 	svcpl	0x00434352
     4f4:	4963734f 	stmdbmi	r3!, {r0, r1, r2, r3, r6, r8, r9, ip, sp, lr}^
     4f8:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     4fc:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     500:	52006665 	andpl	r6, r0, #105906176	; 0x6500000
     504:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     508:	32444556 	subcc	r4, r4, #360710144	; 0x15800000
     50c:	53455200 	movtpl	r5, #20992	; 0x5200
     510:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     514:	52003444 	andpl	r3, r0, #68, 8	; 0x44000000
     518:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     51c:	35444556 	strbcc	r4, [r4, #-1366]	; 0xfffffaaa
     520:	53455200 	movtpl	r5, #20992	; 0x5200
     524:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     528:	52003644 	andpl	r3, r0, #68, 12	; 0x4400000
     52c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     530:	37444556 	smlsldcc	r4, r4, r6, r5	; <UNPREDICTABLE>
     534:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     538:	4343525f 	movtmi	r5, #12895	; 0x325f
     53c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
     540:	4b4c4350 	blmi	1311288 <_Min_Stack_Size+0x1310e88>
     544:	65724632 	ldrbvs	r4, [r2, #-1586]!	; 0xfffff9ce
     548:	6c700071 	ldclvs	0, cr0, [r0], #-452	; 0xfffffe3c
     54c:	6f635f6c 	svcvs	0x00635f6c
     550:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     554:	42484100 	submi	r4, r8, #0, 2
     558:	45504c33 	ldrbmi	r4, [r0, #-3123]	; 0xfffff3cd
     55c:	7400524e 	strvc	r5, [r0], #-590	; 0xfffffdb2
     560:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
     564:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     568:	4c4c5000 	marmi	acc0, r5, ip
     56c:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
     570:	41006563 	tstmi	r0, r3, ror #10
     574:	45324250 	ldrmi	r4, [r2, #-592]!	; 0xfffffdb0
     578:	4100524e 	tstmi	r0, lr, asr #4
     57c:	52334248 	eorspl	r4, r3, #72, 4	; 0x80000004
     580:	00525453 	subseq	r5, r2, r3, asr r4
     584:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     588:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     58c:	45520031 	ldrbmi	r0, [r2, #-49]	; 0xffffffcf
     590:	56524553 			; <UNDEFINED> instruction: 0x56524553
     594:	00334445 	eorseq	r4, r3, r5, asr #8
     598:	5f4c4148 	svcpl	0x004c4148
     59c:	4f525245 	svcmi	0x00525245
     5a0:	41480052 	qdaddmi	r0, r2, r8
     5a4:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
     5a8:	734f5f43 	movtvc	r5, #65347	; 0xff43
     5ac:	6e6f4363 	cdpvs	3, 6, cr4, cr15, cr3, {3}
     5b0:	00676966 	rsbeq	r6, r7, r6, ror #18
     5b4:	69547775 	ldmdbvs	r4, {r0, r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
     5b8:	72506b63 	subsvc	r6, r0, #101376	; 0x18c00
     5bc:	70006f69 	andvc	r6, r0, r9, ror #30
     5c0:	006d6c6c 	rsbeq	r6, sp, ip, ror #24
     5c4:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     5c8:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
     5cc:	4100745f 	tstmi	r0, pc, asr r4
     5d0:	52324248 	eorspl	r4, r2, #72, 4	; 0x80000004
     5d4:	00525453 	subseq	r5, r2, r3, asr r4
     5d8:	50473631 	subpl	r3, r7, r1, lsr r6
     5dc:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     5e0:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     5e4:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     5e8:	44006665 	strmi	r6, [r0], #-1637	; 0xfffff99b
     5ec:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     5f0:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
     5f4:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     5f8:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
     5fc:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
     600:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
     604:	2f726576 	svccs	0x00726576
     608:	2f637253 	svccs	0x00637253
     60c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     610:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     614:	61685f78 	smcvs	34296	; 0x85f8
     618:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
     61c:	00632e63 	rsbeq	r2, r3, r3, ror #28
     620:	32425041 	subcc	r5, r2, #65	; 0x41
     624:	444b4c43 	strbmi	r4, [fp], #-3139	; 0xfffff3bd
     628:	64697669 	strbtvs	r7, [r9], #-1641	; 0xfffff997
     62c:	52007265 	andpl	r7, r0, #1342177286	; 0x50000006
     630:	4d5f4343 	ldclmi	3, cr4, [pc, #-268]	; 52c <_Min_Stack_Size+0x12c>
     634:	6f534f43 	svcvs	0x00534f43
     638:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
     63c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     640:	4343525f 	movtmi	r5, #12895	; 0x325f
     644:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
     648:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     64c:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
     650:	00676966 	rsbeq	r6, r7, r6, ror #18
     654:	31425041 	cmpcc	r2, r1, asr #32
     658:	00524e45 	subseq	r4, r2, r5, asr #28
     65c:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     660:	00524e45 	subseq	r4, r2, r5, asr #28
     664:	5f4c4148 	svcpl	0x004c4148
     668:	5f434352 	svcpl	0x00434352
     66c:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
     670:	6c437379 	mcrrvs	3, 7, r7, r3, cr9
     674:	466b636f 	strbtmi	r6, [fp], -pc, ror #6
     678:	00716572 	rsbseq	r6, r1, r2, ror r5
     67c:	5f4c4148 	svcpl	0x004c4148
     680:	5f434352 	svcpl	0x00434352
     684:	48746547 	ldmdami	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
     688:	464b4c43 	strbmi	r4, [fp], -r3, asr #24
     68c:	00716572 	rsbseq	r6, r1, r2, ror r5
     690:	47435353 	smlsldmi	r5, r3, r3, r3
     694:	41480052 	qdaddmi	r0, r2, r8
     698:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
     69c:	6c435f43 	mcrrvs	15, 4, r5, r3, cr3
     6a0:	436b636f 	cmnmi	fp, #-1140850687	; 0xbc000001
     6a4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     6a8:	37310067 	ldrcc	r0, [r1, -r7, rrx]!
     6ac:	5f4c4148 	svcpl	0x004c4148
     6b0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     6b4:	79547375 	ldmdbvc	r4, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
     6b8:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     6bc:	4b430066 	blmi	10c085c <_Min_Stack_Size+0x10c045c>
     6c0:	45544147 	ldrbmi	r4, [r4, #-327]	; 0xfffffeb9
     6c4:	4200524e 	andmi	r5, r0, #-536870908	; 0xe0000004
     6c8:	00524344 	subseq	r4, r2, r4, asr #6
     6cc:	6963734f 	stmdbvs	r3!, {r0, r1, r2, r3, r6, r8, r9, ip, sp, lr}^
     6d0:	74616c6c 	strbtvc	r6, [r1], #-3180	; 0xfffff394
     6d4:	7954726f 	ldmdbvc	r4, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
     6d8:	43006570 	movwmi	r6, #1392	; 0x570
     6dc:	6b636f6c 	blvs	18dc494 <_Min_Stack_Size+0x18dc094>
     6e0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     6e4:	50313100 	eorspl	r3, r1, r0, lsl #2
     6e8:	545f5257 	ldrbpl	r5, [pc], #-599	; 6f0 <_Min_Stack_Size+0x2f0>
     6ec:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     6f0:	48006665 	stmdami	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
     6f4:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
     6f8:	445f4343 	ldrbmi	r4, [pc], #-835	; 700 <_Min_Stack_Size+0x300>
     6fc:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
     700:	48410074 	stmdami	r1, {r2, r4, r5, r6}^
     704:	4e453142 	dvfmism	f3, f5, f2
     708:	75500052 	ldrbvc	r0, [r0, #-82]	; 0xffffffae
     70c:	52006c6c 	andpl	r6, r0, #108, 24	; 0x6c00
     710:	4d5f4343 	ldclmi	3, cr4, [pc, #-268]	; 60c <_Min_Stack_Size+0x20c>
     714:	00784f43 	rsbseq	r4, r8, r3, asr #30
     718:	614c4670 	hvcvs	50272	; 0xc460
     71c:	636e6574 	cmnvs	lr, #116, 10	; 0x1d000000
     720:	41480079 	hvcmi	32777	; 0x8009
     724:	55425f4c 	strbpl	r5, [r2, #-3916]	; 0xfffff0b4
     728:	5f005953 	svcpl	0x00005953
     72c:	6165615f 	cmnvs	r5, pc, asr r1
     730:	755f6962 	ldrbvc	r6, [pc, #-2402]	; fffffdd6 <_estack+0xdffbfdd6>
     734:	7669646c 	strbtvc	r6, [r9], -ip, ror #8
     738:	00646f6d 	rsbeq	r6, r4, sp, ror #30
     73c:	5f4c4148 	svcpl	0x004c4148
     740:	5f434352 	svcpl	0x00434352
     744:	4f746547 	svcmi	0x00746547
     748:	6f436373 	svcvs	0x00436373
     74c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     750:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     754:	4343525f 	movtmi	r5, #12895	; 0x325f
     758:	494d4e5f 	stmdbmi	sp, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
     75c:	5152495f 	cmppl	r2, pc, asr r9
     760:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     764:	0072656c 	rsbseq	r6, r2, ip, ror #10
     768:	5f4c4148 	svcpl	0x004c4148
     76c:	5f434352 	svcpl	0x00434352
     770:	50746547 	rsbspl	r6, r4, r7, asr #10
     774:	314b4c43 	cmpcc	fp, r3, asr #24
     778:	71657246 	cmnvc	r5, r6, asr #4
     77c:	53595300 	cmppl	r9, #0, 6
     780:	534b4c43 	movtpl	r4, #48195	; 0xbc43
     784:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
     788:	4c500065 	mrrcmi	0, 6, r0, r0, cr5	; <UNPREDICTABLE>
     78c:	5332494c 	teqpl	r2, #76, 18	; 0x130000
     790:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0xfffffaad
     794:	6f697463 	svcvs	0x00697463
     798:	6550006e 	ldrbvs	r0, [r0, #-110]	; 0xffffff92
     79c:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     7a0:	496b6c43 	stmdbmi	fp!, {r0, r1, r6, sl, fp, sp, lr}^
     7a4:	0074696e 	rsbseq	r6, r4, lr, ror #18
     7a8:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
     7ac:	6c436870 	mcrrvs	8, 7, r6, r3, cr0
     7b0:	4c50006b 	mrrcmi	0, 6, r0, r0, cr11	; <UNPREDICTABLE>
     7b4:	5332494c 	teqpl	r2, #76, 18	; 0x130000
     7b8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     7bc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     7c0:	4343525f 	movtmi	r5, #12895	; 0x325f
     7c4:	475f7845 	ldrbmi	r7, [pc, -r5, asr #16]
     7c8:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
     7cc:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     7d0:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     7d4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     7d8:	41480067 	cmpmi	r8, r7, rrx
     7dc:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
     7e0:	5f784543 	svcpl	0x00784543
     7e4:	61736944 	cmnvs	r3, r4, asr #18
     7e8:	50656c62 	rsbpl	r6, r5, r2, ror #24
     7ec:	32494c4c 	subcc	r4, r9, #76, 24	; 0x4c00
     7f0:	72660053 	rsbvc	r0, r6, #83	; 0x53
     7f4:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
     7f8:	0079636e 	rsbseq	r6, r9, lr, ror #6
     7fc:	43523132 	cmpmi	r2, #-2147483636	; 0x8000000c
     800:	4c505f43 	mrrcmi	15, 4, r5, r0, cr3
     804:	5332494c 	teqpl	r2, #76, 18	; 0x130000
     808:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     80c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     810:	00666544 	rsbeq	r6, r6, r4, asr #10
     814:	64736644 	ldrbtvs	r6, [r3], #-1604	; 0xfffff9bc
     818:	7541316d 	strbvc	r3, [r1, #-365]	; 0xfffffe93
     81c:	436f6964 	cmnmi	pc, #100, 18	; 0x190000
     820:	6b636f6c 	blvs	18dc5d8 <_Min_Stack_Size+0x18dc1d8>
     824:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0xfffffaad
     828:	6f697463 	svcvs	0x00697463
     82c:	7244006e 	subvc	r0, r4, #110	; 0x6e
     830:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     834:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
     838:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     83c:	5f787834 	svcpl	0x00787834
     840:	5f4c4148 	svcpl	0x004c4148
     844:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     848:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
     84c:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
     850:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     854:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     858:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     85c:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
     860:	2e78655f 	mrccs	5, 3, r6, cr8, cr15, {2}
     864:	72730063 	rsbsvc	r0, r3, #99	; 0x63
     868:	6b6c6363 	blvs	1b195fc <_Min_Stack_Size+0x1b191fc>
     86c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     870:	4343525f 	movtmi	r5, #12895	; 0x325f
     874:	455f7845 	ldrbmi	r7, [pc, #-2117]	; 37 <_Min_Heap_Size-0x1c9>
     878:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
     87c:	4c4c5065 	mcrrmi	0, 6, r5, ip, cr5
     880:	00533249 	subseq	r3, r3, r9, asr #4
     884:	5f4c4148 	svcpl	0x004c4148
     888:	45434352 	strbmi	r4, [r3, #-850]	; 0xfffffcae
     88c:	65505f78 	ldrbvs	r5, [r0, #-3960]	; 0xfffff088
     890:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     894:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     898:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     89c:	32490067 	subcc	r0, r9, #103	; 0x67
     8a0:	62704173 	rsbsvs	r4, r0, #-1073741796	; 0xc000001c
     8a4:	6f6c4332 	svcvs	0x006c4332
     8a8:	65536b63 	ldrbvs	r6, [r3, #-2915]	; 0xfffff49d
     8ac:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
     8b0:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     8b4:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
     8b8:	6c436870 	mcrrvs	8, 7, r6, r3, cr0
     8bc:	536b636f 	cmnpl	fp, #-1140850687	; 0xbc000001
     8c0:	63656c65 	cmnvs	r5, #25856	; 0x6500
     8c4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     8c8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     8cc:	4343525f 	movtmi	r5, #12895	; 0x325f
     8d0:	535f7845 	cmppl	pc, #4521984	; 0x450000
     8d4:	63656c65 	cmnvs	r5, #25856	; 0x6500
     8d8:	45534c74 	ldrbmi	r4, [r3, #-3188]	; 0xfffff38c
     8dc:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
     8e0:	6c6c7000 	stclvs	0, cr7, [ip], #-0
     8e4:	75733269 	ldrbvc	r3, [r3, #-617]!	; 0xfffffd97
     8e8:	00646573 	rsbeq	r6, r4, r3, ror r5
     8ec:	64736644 	ldrbtvs	r6, [r3], #-1604	; 0xfffff9bc
     8f0:	6c43316d 	stfvse	f3, [r3], {109}	; 0x6d
     8f4:	536b636f 	cmnpl	fp, #-1140850687	; 0xbc000001
     8f8:	63656c65 	cmnvs	r5, #25856	; 0x6500
     8fc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     900:	706d7400 	rsbvc	r7, sp, r0, lsl #8
     904:	31676572 	smccc	30290	; 0x7652
     908:	6b6c4300 	blvs	1b11510 <_Min_Stack_Size+0x1b11110>
     90c:	6c433834 	mcrrvs	8, 3, r3, r3, cr4
     910:	536b636f 	cmnpl	fp, #-1140850687	; 0xbc000001
     914:	63656c65 	cmnvs	r5, #25856	; 0x6500
     918:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     91c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     920:	73657250 	cmnvc	r5, #80, 4
     924:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0xfffffaad
     928:	6f697463 	svcvs	0x00697463
     92c:	6453006e 	ldrbvs	r0, [r3], #-110	; 0xffffff92
     930:	6c436f69 	mcrrvs	15, 6, r6, r3, cr9
     934:	536b636f 	cmnpl	fp, #-1140850687	; 0xbc000001
     938:	63656c65 	cmnvs	r5, #25856	; 0x6500
     93c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     940:	43545200 	cmpmi	r4, #0, 4
     944:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     948:	6c65536b 	stclvs	3, cr5, [r5], #-428	; 0xfffffe54
     94c:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     950:	74006e6f 	strvc	r6, [r0], #-3695	; 0xfffff191
     954:	72706d65 	rsbsvc	r6, r0, #6464	; 0x1940
     958:	48006765 	stmdami	r0, {r0, r2, r5, r6, r8, r9, sl, sp, lr}
     95c:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
     960:	78454343 	stmdavc	r5, {r0, r1, r6, r8, r9, lr}^
     964:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
     968:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
     96c:	4c436870 	mcrrmi	8, 7, r6, r3, cr0
     970:	6572464b 	ldrbvs	r4, [r2, #-1611]!	; 0xfffff9b5
     974:	63760071 	cmnvs	r6, #113	; 0x71
     978:	74756f6f 	ldrbtvc	r6, [r5], #-3951	; 0xfffff091
     97c:	00747570 	rsbseq	r7, r4, r0, ror r5
     980:	43523432 	cmpmi	r2, #838860800	; 0x32000000
     984:	65505f43 	ldrbvs	r5, [r0, #-3907]	; 0xfffff0bd
     988:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     98c:	494b4c43 	stmdbmi	fp, {r0, r1, r6, sl, fp, lr}^
     990:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     994:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     998:	50006665 	andpl	r6, r0, r5, ror #12
     99c:	32494c4c 	subcc	r4, r9, #76, 24	; 0x4c00
     9a0:	76004e53 			; <UNDEFINED> instruction: 0x76004e53
     9a4:	6e696f63 	cdpvs	15, 6, cr6, cr9, cr3, {3}
     9a8:	00747570 	rsbseq	r7, r4, r0, ror r5
     9ac:	494c4c50 	stmdbmi	ip, {r4, r6, sl, fp, lr}^
     9b0:	004d5332 	subeq	r5, sp, r2, lsr r3
     9b4:	494c4c50 	stmdbmi	ip, {r4, r6, sl, fp, lr}^
     9b8:	00515332 	subseq	r5, r1, r2, lsr r3
     9bc:	494c4c50 	stmdbmi	ip, {r4, r6, sl, fp, lr}^
     9c0:	00525332 	subseq	r5, r2, r2, lsr r3
     9c4:	69706d46 	ldmdbvs	r0!, {r1, r2, r6, r8, sl, fp, sp, lr}^
     9c8:	43316332 	teqmi	r1, #-939524096	; 0xc8000000
     9cc:	6b636f6c 	blvs	18dc784 <_Min_Stack_Size+0x18dc384>
     9d0:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0xfffffaad
     9d4:	6f697463 	svcvs	0x00697463
     9d8:	3249006e 	subcc	r0, r9, #110	; 0x6e
     9dc:	62704173 	rsbsvs	r4, r0, #-1073741796	; 0xc000001c
     9e0:	6f6c4331 	svcvs	0x006c4331
     9e4:	65536b63 	ldrbvs	r6, [r3, #-2915]	; 0xfffff49d
     9e8:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
     9ec:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     9f0:	52504349 	subspl	r4, r0, #603979777	; 0x24000001
     9f4:	70795400 	rsbsvc	r5, r9, r0, lsl #8
     9f8:	74784565 	ldrbtvc	r4, [r8], #-1381	; 0xfffffa9b
     9fc:	6c656946 			; <UNDEFINED> instruction: 0x6c656946
     a00:	49390064 	ldmdbmi	r9!, {r2, r5, r6}
     a04:	5f6e5152 	svcpl	0x006e5152
     a08:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     a0c:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     a10:	58525f31 	ldmdapl	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     a14:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     a18:	50006e51 	andpl	r6, r0, r1, asr lr
     a1c:	495f4456 	ldmdbmi	pc, {r1, r2, r4, r6, sl, lr}^	; <UNPREDICTABLE>
     a20:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a24:	324e4143 	subcc	r4, lr, #-1073741808	; 0xc0000010
     a28:	3058525f 	subscc	r5, r8, pc, asr r2
     a2c:	5152495f 	cmppl	r2, pc, asr r9
     a30:	3249006e 	subcc	r0, r9, #110	; 0x6e
     a34:	455f3343 	ldrbmi	r3, [pc, #-835]	; 6f9 <_Min_Stack_Size+0x2f9>
     a38:	52495f52 	subpl	r5, r9, #328	; 0x148
     a3c:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     a40:	535f4c41 	cmppl	pc, #16640	; 0x4100
     a44:	49545359 	ldmdbmi	r4, {r0, r3, r4, r6, r8, r9, ip, lr}^
     a48:	435f4b43 	cmpmi	pc, #68608	; 0x10c00
     a4c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     a50:	4d440067 	stclmi	0, cr0, [r4, #-412]	; 0xfffffe64
     a54:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     a58:	61657274 	smcvs	22308	; 0x5724
     a5c:	495f356d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     a60:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a64:	314e4143 	cmpcc	lr, r3, asr #2
     a68:	3158525f 	cmpcc	r8, pc, asr r2
     a6c:	5152495f 	cmppl	r2, pc, asr r9
     a70:	5053006e 	subspl	r0, r3, lr, rrx
     a74:	495f3449 	ldmdbmi	pc, {r0, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     a78:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a7c:	79533231 	ldmdbvc	r3, {r0, r4, r5, r9, ip, sp}^
     a80:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     a84:	79545f6b 	ldmdbvc	r4, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     a88:	52006570 	andpl	r6, r0, #112, 10	; 0x1c000000
     a8c:	415f4354 	cmpmi	pc, r4, asr r3	; <UNPREDICTABLE>
     a90:	6d72616c 	ldfvse	f6, [r2, #-432]!	; 0xfffffe50
     a94:	5152495f 	cmppl	r2, pc, asr r9
     a98:	3249006e 	subcc	r0, r9, #110	; 0x6e
     a9c:	455f3243 	ldrbmi	r3, [pc, #-579]	; 861 <_Min_Stack_Size+0x461>
     aa0:	52495f52 	subpl	r5, r9, #328	; 0x148
     aa4:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     aa8:	5f344d49 	svcpl	0x00344d49
     aac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ab0:	53415200 	movtpl	r5, #4608	; 0x1200
     ab4:	33415f52 	movtcc	r5, #8018	; 0x1f52
     ab8:	43545200 	cmpmi	r4, #0, 4
     abc:	554b575f 	strbpl	r5, [fp, #-1887]	; 0xfffff8a1
     ac0:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     ac4:	57006e51 	smlsdpl	r0, r1, lr, r6
     ac8:	5f474457 	svcpl	0x00474457
     acc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ad0:	49445300 	stmdbmi	r4, {r8, r9, ip, lr}^
     ad4:	52495f4f 	subpl	r5, r9, #316	; 0x13c
     ad8:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     adc:	00525053 	subseq	r5, r2, r3, asr r0
     ae0:	75427349 	strbvc	r7, [r2, #-841]	; 0xfffffcb7
     ae4:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     ae8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     aec:	69725000 	ldmdbvs	r2!, {ip, lr}^
     af0:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     af4:	6f724779 	svcvs	0x00724779
     af8:	54007075 	strpl	r7, [r0], #-117	; 0xffffff8b
     afc:	5f384d49 	svcpl	0x00384d49
     b00:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     b04:	006e5152 	rsbeq	r5, lr, r2, asr r1
     b08:	52415349 	subpl	r5, r1, #603979777	; 0x24000001
     b0c:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     b10:	58525f32 	ldmdapl	r2, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     b14:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     b18:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     b1c:	535f4c41 	cmppl	pc, #16640	; 0x4100
     b20:	49545359 	ldmdbmi	r4, {r0, r3, r4, r6, r8, r9, ip, lr}^
     b24:	495f4b43 	ldmdbmi	pc, {r0, r1, r6, r8, r9, fp, lr}^	; <UNPREDICTABLE>
     b28:	61485152 	cmpvs	r8, r2, asr r1
     b2c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     b30:	41480072 	hvcmi	32770	; 0x8002
     b34:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
     b38:	435f4349 	cmpmi	pc, #603979777	; 0x24000001
     b3c:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
     b40:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
     b44:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
     b48:	44005152 	strmi	r5, [r0], #-338	; 0xfffffeae
     b4c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     b50:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
     b54:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     b58:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
     b5c:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
     b60:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
     b64:	2f726576 	svccs	0x00726576
     b68:	2f637253 	svccs	0x00637253
     b6c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     b70:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     b74:	61685f78 	smcvs	34296	; 0x85f8
     b78:	6f635f6c 	svcvs	0x00635f6c
     b7c:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
     b80:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
     b84:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; a88 <_Min_Stack_Size+0x688>
     b88:	445f5550 	ldrbmi	r5, [pc], #-1360	; b90 <_Min_Stack_Size+0x790>
     b8c:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
     b90:	5200656c 	andpl	r6, r0, #108, 10	; 0x1b000000
     b94:	5f525341 	svcpl	0x00525341
     b98:	44003141 	strmi	r3, [r0], #-321	; 0xfffffebf
     b9c:	5f32414d 	svcpl	0x0032414d
     ba0:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     ba4:	5f366d61 	svcpl	0x00366d61
     ba8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     bac:	55504d00 	ldrbpl	r4, [r0, #-3328]	; 0xfffff300
     bb0:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
     bb4:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 9ec <_Min_Stack_Size+0x5ec>
     bb8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     bbc:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
     bc0:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
     bc4:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
     bc8:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     bcc:	5f5f0079 	svcpl	0x005f0079
     bd0:	4349564e 	movtmi	r5, #38478	; 0x964e
     bd4:	656c435f 	strbvs	r4, [ip, #-863]!	; 0xfffffca1
     bd8:	65507261 	ldrbvs	r7, [r0, #-609]	; 0xfffffd9f
     bdc:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
     be0:	51524967 	cmppl	r2, r7, ror #18
     be4:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
     be8:	5f434956 	svcpl	0x00434956
     bec:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     bf0:	65526d65 	ldrbvs	r6, [r2, #-3429]	; 0xfffff29b
     bf4:	00746573 	rsbseq	r6, r4, r3, ror r5
     bf8:	35495053 	strbcc	r5, [r9, #-83]	; 0xffffffad
     bfc:	5152495f 	cmppl	r2, pc, asr r9
     c00:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     c04:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     c08:	61657274 	smcvs	22308	; 0x5724
     c0c:	495f356d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     c10:	006e5152 	rsbeq	r5, lr, r2, asr r1
     c14:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     c18:	5f355f39 	svcpl	0x00355f39
     c1c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c20:	41425200 	mrsmi	r5, (UNDEF: 98)
     c24:	31415f52 	cmpcc	r1, r2, asr pc
     c28:	41425200 	mrsmi	r5, (UNDEF: 98)
     c2c:	32415f52 	subcc	r5, r1, #328	; 0x148
     c30:	41425200 	mrsmi	r5, (UNDEF: 98)
     c34:	33415f52 	movtcc	r5, #8018	; 0x1f52
     c38:	55504d00 	ldrbpl	r4, [r0, #-3328]	; 0xfffff300
     c3c:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     c40:	72500074 	subsvc	r0, r0, #116	; 0x74
     c44:	706d6565 	rsbvc	r6, sp, r5, ror #10
     c48:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
     c4c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     c50:	74694279 	strbtvc	r4, [r9], #-633	; 0xfffffd87
     c54:	4e520073 	mrcmi	0, 2, r0, cr2, cr3, {3}
     c58:	52495f47 	subpl	r5, r9, #284	; 0x11c
     c5c:	52006e51 	andpl	r6, r0, #1296	; 0x510
     c60:	5f525341 	svcpl	0x00525341
     c64:	49003241 	stmdbmi	r0, {r0, r6, r9, ip, sp}
     c68:	63614373 	cmnvs	r1, #-872415231	; 0xcc000001
     c6c:	62616568 	rsbvs	r6, r1, #104, 10	; 0x1a000000
     c70:	5000656c 	andpl	r6, r0, ip, ror #10
     c74:	53646e65 	cmnpl	r4, #1616	; 0x650
     c78:	52495f56 	subpl	r5, r9, #344	; 0x158
     c7c:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     c80:	5f384d49 	svcpl	0x00384d49
     c84:	545f5055 	ldrbpl	r5, [pc], #-85	; c8c <_Min_Stack_Size+0x88c>
     c88:	33314d49 	teqcc	r1, #4672	; 0x1240
     c8c:	5152495f 	cmppl	r2, pc, asr r9
     c90:	5f5f006e 	svcpl	0x005f006e
     c94:	4349564e 	movtmi	r5, #38478	; 0x964e
     c98:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
     c9c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     ca0:	00515249 	subseq	r5, r1, r9, asr #4
     ca4:	52534641 	subspl	r4, r3, #68157440	; 0x4100000
     ca8:	73754200 	cmnvc	r5, #0, 4
     cac:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     cb0:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     cb4:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     cb8:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
     cbc:	5f434956 	svcpl	0x00434956
     cc0:	50746547 	rsbspl	r6, r4, r7, asr #10
     cc4:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     cc8:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
     ccc:	4d440051 	stclmi	0, cr0, [r4, #-324]	; 0xfffffebc
     cd0:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     cd4:	61657274 	smcvs	22308	; 0x5724
     cd8:	495f376d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     cdc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ce0:	5f4c4148 	svcpl	0x004c4148
     ce4:	4349564e 	movtmi	r5, #38478	; 0x964e
     ce8:	7379535f 	cmnvc	r9, #2080374785	; 0x7c000001
     cec:	526d6574 	rsbpl	r6, sp, #116, 10	; 0x1d000000
     cf0:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     cf4:	414d4400 	cmpmi	sp, r0, lsl #8
     cf8:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     cfc:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     d00:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     d04:	4f006e51 	svcmi	0x00006e51
     d08:	465f4754 			; <UNDEFINED> instruction: 0x465f4754
     d0c:	4b575f53 	blmi	15d8a60 <_Min_Stack_Size+0x15d8660>
     d10:	495f5055 	ldmdbmi	pc, {r0, r2, r4, r6, ip, lr}^	; <UNPREDICTABLE>
     d14:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d18:	5f676572 	svcpl	0x00676572
     d1c:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
     d20:	41430065 	cmpmi	r3, r5, rrx
     d24:	0042494c 	subeq	r4, r2, ip, asr #18
     d28:	31414d44 	cmpcc	r1, r4, asr #26
     d2c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     d30:	366d6165 	strbtcc	r6, [sp], -r5, ror #2
     d34:	5152495f 	cmppl	r2, pc, asr r9
     d38:	654d006e 	strbvs	r0, [sp, #-110]	; 0xffffff92
     d3c:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     d40:	616e614d 	cmnvs	lr, sp, asr #2
     d44:	656d6567 	strbvs	r6, [sp, #-1383]!	; 0xfffffa99
     d48:	495f746e 	ldmdbmi	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     d4c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d50:	5f4c4148 	svcpl	0x004c4148
     d54:	4349564e 	movtmi	r5, #38478	; 0x964e
     d58:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
     d5c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     d60:	00515249 	subseq	r5, r1, r9, asr #4
     d64:	33433249 	movtcc	r3, #12873	; 0x3249
     d68:	5f56455f 	svcpl	0x0056455f
     d6c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d70:	504d4600 	subpl	r4, sp, r0, lsl #12
     d74:	31433249 	cmpcc	r3, r9, asr #4
     d78:	5f56455f 	svcpl	0x0056455f
     d7c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d80:	72507000 	subsvc	r7, r0, #0
     d84:	706d6565 	rsbvc	r6, sp, r5, ror #10
     d88:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
     d8c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     d90:	54560079 	ldrbpl	r0, [r6], #-121	; 0xffffff87
     d94:	5300524f 	movwpl	r5, #591	; 0x24f
     d98:	6c614356 	stclvs	3, cr4, [r1], #-344	; 0xfffffea8
     d9c:	52495f6c 	subpl	r5, r9, #108, 30	; 0x1b0
     da0:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     da4:	5f32414d 	svcpl	0x0032414d
     da8:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     dac:	5f326d61 	svcpl	0x00326d61
     db0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     db4:	63634100 	cmnvs	r3, #0, 2
     db8:	50737365 	rsbspl	r7, r3, r5, ror #6
     dbc:	696d7265 	stmdbvs	sp!, {r0, r2, r5, r6, r9, ip, sp, lr}^
     dc0:	6f697373 	svcvs	0x00697373
     dc4:	4143006e 	cmpmi	r3, lr, rrx
     dc8:	545f314e 	ldrbpl	r3, [pc], #-334	; dd0 <_Min_Stack_Size+0x9d0>
     dcc:	52495f58 	subpl	r5, r9, #88, 30	; 0x160
     dd0:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     dd4:	00525343 	subseq	r5, r2, r3, asr #6
     dd8:	43524941 	cmpmi	r2, #1064960	; 0x104000
     ddc:	46440052 			; <UNDEFINED> instruction: 0x46440052
     de0:	45005253 	strmi	r5, [r0, #-595]	; 0xfffffdad
     de4:	31495458 	cmpcc	r9, r8, asr r4
     de8:	30315f35 	eorscc	r5, r1, r5, lsr pc
     dec:	5152495f 	cmppl	r2, pc, asr r9
     df0:	4d38006e 	ldcmi	0, cr0, [r8, #-440]!	; 0xfffffe48
     df4:	545f5550 	ldrbpl	r5, [pc], #-1360	; dfc <_Min_Stack_Size+0x9fc>
     df8:	00657079 	rsbeq	r7, r5, r9, ror r0
     dfc:	41464d4d 	cmpmi	r6, sp, asr #26
     e00:	50530052 	subspl	r0, r3, r2, asr r0
     e04:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     e08:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e0c:	31414d44 	cmpcc	r1, r4, asr #26
     e10:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     e14:	316d6165 	cmncc	sp, r5, ror #2
     e18:	5152495f 	cmppl	r2, pc, asr r9
     e1c:	7270006e 	rsbsvc	r0, r0, #110	; 0x6e
     e20:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     e24:	32007974 	andcc	r7, r0, #116, 18	; 0x1d0000
     e28:	55504d32 	ldrbpl	r4, [r0, #-3378]	; 0xfffff2ce
     e2c:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
     e30:	5f6e6f69 	svcpl	0x006e6f69
     e34:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     e38:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     e3c:	00666544 	rsbeq	r6, r6, r4, asr #10
     e40:	52464d4d 	subpl	r4, r6, #4928	; 0x1340
     e44:	695f5f00 	ldmdbvs	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
     e48:	3233746e 	eorscc	r7, r3, #1845493760	; 0x6e000000
     e4c:	5400745f 	strpl	r7, [r0], #-1119	; 0xfffffba1
     e50:	5f384d49 	svcpl	0x00384d49
     e54:	5f4b5242 	svcpl	0x004b5242
     e58:	314d4954 	cmpcc	sp, r4, asr r9
     e5c:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     e60:	5f006e51 	svcpl	0x00006e51
     e64:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
     e68:	65535f43 	ldrbvs	r5, [r3, #-3907]	; 0xfffff0bd
     e6c:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
     e70:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     e74:	6f724779 	svcvs	0x00724779
     e78:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
     e7c:	41480067 	cmpmi	r8, r7, rrx
     e80:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
     e84:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
     e88:	63417465 	movtvs	r7, #5221	; 0x1465
     e8c:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
     e90:	73795300 	cmnvc	r9, #0, 6
     e94:	6b636954 	blvs	18db3ec <_Min_Stack_Size+0x18dafec>
     e98:	5152495f 	cmppl	r2, pc, asr r9
     e9c:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     ea0:	435f314d 	cmpmi	pc, #1073741843	; 0x40000013
     ea4:	52495f43 	subpl	r5, r9, #268	; 0x10c
     ea8:	5f006e51 	svcpl	0x00006e51
     eac:	4253445f 	subsmi	r4, r3, #1593835520	; 0x5f000000
     eb0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     eb4:	52545f38 	subspl	r5, r4, #56, 30	; 0xe0
     eb8:	4f435f47 	svcmi	0x00435f47
     ebc:	49545f4d 	ldmdbmi	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     ec0:	5f34314d 	svcpl	0x0034314d
     ec4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ec8:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
     ecc:	5f434956 	svcpl	0x00434956
     ed0:	50746547 	rsbspl	r6, r4, r7, asr #10
     ed4:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     ed8:	00797469 	rsbseq	r7, r9, r9, ror #8
     edc:	62755370 	rsbsvs	r5, r5, #112, 6	; 0xc0000001
     ee0:	6f697250 	svcvs	0x00697250
     ee4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     ee8:	6d754e00 	ldclvs	14, cr4, [r5, #-0]
     eec:	00726562 	rsbseq	r6, r2, r2, ror #10
     ef0:	6f697270 	svcvs	0x00697270
     ef4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     ef8:	756f7267 	strbvc	r7, [pc, #-615]!	; c99 <_Min_Stack_Size+0x899>
     efc:	4f4c0070 	svcmi	0x004c0070
     f00:	54004441 	strpl	r4, [r0], #-1089	; 0xfffffbbf
     f04:	5f314d49 	svcpl	0x00314d49
     f08:	545f5055 	ldrbpl	r5, [pc], #-85	; f10 <_Min_Stack_Size+0xb10>
     f0c:	30314d49 	eorscc	r4, r1, r9, asr #26
     f10:	5152495f 	cmppl	r2, pc, asr r9
     f14:	6974006e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6}^
     f18:	00736b63 	rsbseq	r6, r3, r3, ror #22
     f1c:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     f20:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     f24:	336d6165 	cmncc	sp, #1073741849	; 0x40000019
     f28:	5152495f 	cmppl	r2, pc, asr r9
     f2c:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     f30:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     f34:	61657274 	smcvs	22308	; 0x5724
     f38:	495f346d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     f3c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f40:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
     f44:	42414900 	submi	r4, r1, #0, 18
     f48:	53550052 	cmppl	r5, #82	; 0x52
     f4c:	36545241 	ldrbcc	r5, [r4], -r1, asr #4
     f50:	5152495f 	cmppl	r2, pc, asr r9
     f54:	5f5f006e 	svcpl	0x005f006e
     f58:	4349564e 	movtmi	r5, #38478	; 0x964e
     f5c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
     f60:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
     f64:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
     f68:	54005152 	strpl	r5, [r0], #-338	; 0xfffffeae
     f6c:	5f354d49 	svcpl	0x00354d49
     f70:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f74:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     f78:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
     f7c:	6e455f43 	cdpvs	15, 4, cr5, cr5, cr3, {2}
     f80:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     f84:	00515249 	subseq	r5, r1, r9, asr #4
     f88:	32495053 	subcc	r5, r9, #83	; 0x53
     f8c:	5152495f 	cmppl	r2, pc, asr r9
     f90:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     f94:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     f98:	61657274 	smcvs	22308	; 0x5724
     f9c:	495f326d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     fa0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     fa4:	53495f5f 	movtpl	r5, #40799	; 0x9f5f
     fa8:	564e0042 	strbpl	r0, [lr], -r2, asr #32
     fac:	455f4349 	ldrbmi	r4, [pc, #-841]	; c6b <_Min_Stack_Size+0x86b>
     fb0:	646f636e 	strbtvs	r6, [pc], #-878	; fb8 <_Min_Stack_Size+0xbb8>
     fb4:	69725065 	ldmdbvs	r2!, {r0, r2, r5, r6, ip, lr}^
     fb8:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     fbc:	544f0079 	strbpl	r0, [pc], #-121	; fc4 <_Min_Stack_Size+0xbc4>
     fc0:	53465f47 	movtpl	r5, #28487	; 0x6f47
     fc4:	5152495f 	cmppl	r2, pc, asr r9
     fc8:	4349006e 	movtmi	r0, #36974	; 0x906e
     fcc:	53005245 	movwpl	r5, #581	; 0x245
     fd0:	72506275 	subsvc	r6, r0, #1342177287	; 0x50000007
     fd4:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     fd8:	69427974 	stmdbvs	r2, {r2, r4, r5, r6, r8, fp, ip, sp, lr}^
     fdc:	4e007374 	mcrmi	3, 0, r7, cr0, cr4, {3}
     fe0:	5f434956 	svcpl	0x00434956
     fe4:	6f636544 	svcvs	0x00636544
     fe8:	72506564 	subsvc	r6, r0, #100, 10	; 0x19000000
     fec:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     ff0:	48007974 	stmdami	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
     ff4:	535f4c41 	cmppl	pc, #16640	; 0x4100
     ff8:	49545359 	ldmdbmi	r4, {r0, r3, r4, r6, r8, r9, ip, lr}^
     ffc:	435f4b43 	cmpmi	pc, #68608	; 0x10c00
    1000:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1004:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1008:	49555043 	ldmdbmi	r5, {r0, r1, r6, ip, lr}^
    100c:	69440044 	stmdbvs	r4, {r2, r6}^
    1010:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    1014:	65784565 	ldrbvs	r4, [r8, #-1381]!	; 0xfffffa9b
    1018:	50530063 	subspl	r0, r3, r3, rrx
    101c:	495f3349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
    1020:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1024:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
    1028:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    102c:	346d6165 	strbtcc	r6, [sp], #-357	; 0xfffffe9b
    1030:	5152495f 	cmppl	r2, pc, asr r9
    1034:	4642006e 	strbmi	r0, [r2], -lr, rrx
    1038:	53005241 	movwpl	r5, #577	; 0x241
    103c:	52534348 	subspl	r4, r3, #72, 6	; 0x20000001
    1040:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    1044:	52425f31 	subpl	r5, r2, #49, 30	; 0xc4
    1048:	49545f4b 	ldmdbmi	r4, {r0, r1, r3, r6, r8, r9, sl, fp, ip, lr}^
    104c:	495f394d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, fp, ip, sp}^	; <UNPREDICTABLE>
    1050:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1054:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    1058:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
    105c:	5f006e51 	svcpl	0x00006e51
    1060:	424d445f 	submi	r4, sp, #1593835520	; 0x5f000000
    1064:	62755300 	rsbsvs	r5, r5, #0, 6
    1068:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    106c:	69446e6f 	stmdbvs	r4, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1070:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    1074:	53490065 	movtpl	r0, #36965	; 0x9065
    1078:	54005245 	strpl	r5, [r0], #-581	; 0xfffffdbb
    107c:	5f314d49 	svcpl	0x00314d49
    1080:	5f475254 	svcpl	0x00475254
    1084:	5f4d4f43 	svcpl	0x004d4f43
    1088:	314d4954 	cmpcc	sp, r4, asr r9
    108c:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    1090:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
    1094:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    1098:	5f434956 	svcpl	0x00434956
    109c:	50746553 	rsbspl	r6, r4, r3, asr r5
    10a0:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    10a4:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    10a8:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    10ac:	00676e69 	rsbeq	r6, r7, r9, ror #28
    10b0:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    10b4:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
    10b8:	46006e51 			; <UNDEFINED> instruction: 0x46006e51
    10bc:	3249504d 	subcc	r5, r9, #77	; 0x4d
    10c0:	455f3143 	ldrbmi	r3, [pc, #-323]	; f85 <_Min_Stack_Size+0xb85>
    10c4:	52495f52 	subpl	r5, r9, #328	; 0x148
    10c8:	5f006e51 	svcpl	0x00006e51
    10cc:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    10d0:	65535f43 	ldrbvs	r5, [r3, #-3907]	; 0xfffff0bd
    10d4:	6e655074 	mcrvs	0, 3, r5, cr5, cr4, {3}
    10d8:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    10dc:	00515249 	subseq	r5, r1, r9, asr #4
    10e0:	364d4954 			; <UNDEFINED> instruction: 0x364d4954
    10e4:	5152495f 	cmppl	r2, pc, asr r9
    10e8:	5f5f006e 	svcpl	0x005f006e
    10ec:	4349564e 	movtmi	r5, #38478	; 0x964e
    10f0:	616e455f 	cmnvs	lr, pc, asr r5
    10f4:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    10f8:	46005152 			; <UNDEFINED> instruction: 0x46005152
    10fc:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
    1100:	5152495f 	cmppl	r2, pc, asr r9
    1104:	4252006e 	subsmi	r0, r2, #110	; 0x6e
    1108:	50005241 	andpl	r5, r0, r1, asr #4
    110c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1110:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    1114:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    1118:	00706d54 	rsbseq	r6, r0, r4, asr sp
    111c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    1120:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
    1124:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1128:	67617355 			; <UNDEFINED> instruction: 0x67617355
    112c:	75614665 	strbvc	r4, [r1, #-1637]!	; 0xfffff99b
    1130:	495f746c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1134:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1138:	31414d44 	cmpcc	r1, r4, asr #26
    113c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1140:	376d6165 	strbcc	r6, [sp, -r5, ror #2]!
    1144:	5152495f 	cmppl	r2, pc, asr r9
    1148:	4644006e 	strbmi	r0, [r4], -lr, rrx
    114c:	314d4453 	cmpcc	sp, r3, asr r4
    1150:	544c465f 	strbpl	r4, [ip], #-1631	; 0xfffff9a1
    1154:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    1158:	51006e51 	tstpl	r0, r1, asr lr
    115c:	53444155 	movtpl	r4, #16725	; 0x4155
    1160:	495f4950 	ldmdbmi	pc, {r4, r6, r8, fp, lr}^	; <UNPREDICTABLE>
    1164:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1168:	5f4c4148 	svcpl	0x004c4148
    116c:	4349564e 	movtmi	r5, #38478	; 0x964e
    1170:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    1174:	6f697250 	svcvs	0x00697250
    1178:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    117c:	63695400 	cmnvs	r9, #0, 8
    1180:	754e736b 	strbvc	r7, [lr, #-875]	; 0xfffffc95
    1184:	5200626d 	andpl	r6, r0, #-805306362	; 0xd0000006
    1188:	00525341 	subseq	r5, r2, r1, asr #6
    118c:	374d4954 	smlsldcc	r4, sp, r4, r9
    1190:	5152495f 	cmppl	r2, pc, asr r9
    1194:	4148006e 	cmpmi	r8, lr, rrx
    1198:	59535f4c 	ldmdbpl	r3, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    119c:	43495453 	movtmi	r5, #37971	; 0x9453
    11a0:	4c435f4b 	mcrrmi	15, 4, r5, r3, cr11
    11a4:	756f534b 	strbvc	r5, [pc, #-843]!	; e61 <_Min_Stack_Size+0xa61>
    11a8:	43656372 	cmnmi	r5, #-939524095	; 0xc8000001
    11ac:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    11b0:	6f4e0067 	svcvs	0x004e0067
    11b4:	73614d6e 	cmnvc	r1, #7040	; 0x1b80
    11b8:	6c62616b 	stfvse	f6, [r2], #-428	; 0xfffffe54
    11bc:	746e4965 	strbtvc	r4, [lr], #-2405	; 0xfffff69b
    11c0:	5152495f 	cmppl	r2, pc, asr r9
    11c4:	5954006e 	ldmdbpl	r4, {r1, r2, r3, r5, r6}^
    11c8:	38004550 	stmdacc	r0, {r4, r6, r8, sl, lr}
    11cc:	5f424353 	svcpl	0x00424353
    11d0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    11d4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    11d8:	55504d5f 	ldrbpl	r4, [r0, #-3423]	; 0xfffff2a1
    11dc:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    11e0:	52676966 	rsbpl	r6, r7, #1671168	; 0x198000
    11e4:	6f696765 	svcvs	0x00696765
    11e8:	4644006e 	strbmi	r0, [r4], -lr, rrx
    11ec:	314d4453 	cmpcc	sp, r3, asr r4
    11f0:	544c465f 	strbpl	r4, [ip], #-1631	; 0xfffff9a1
    11f4:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
    11f8:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
    11fc:	5f504d41 	svcpl	0x00504d41
    1200:	4d415453 	cfstrdmi	mvd5, [r1, #-332]	; 0xfffffeb4
    1204:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
    1208:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
    120c:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    1210:	5f434956 	svcpl	0x00434956
    1214:	50746547 	rsbspl	r6, r4, r7, asr #10
    1218:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    121c:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    1220:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    1224:	00676e69 	rsbeq	r6, r7, r9, ror #28
    1228:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
    122c:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
    1230:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    1234:	5152495f 	cmppl	r2, pc, asr r9
    1238:	4148006e 	cmpmi	r8, lr, rrx
    123c:	504d5f4c 	subpl	r5, sp, ip, asr #30
    1240:	6e455f55 	mcrvs	15, 2, r5, cr5, cr5, {2}
    1244:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1248:	414d4400 	cmpmi	sp, r0, lsl #8
    124c:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
    1250:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    1254:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
    1258:	43006e51 	movwmi	r6, #3665	; 0xe51
    125c:	004c5254 	subeq	r5, ip, r4, asr r2
    1260:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    1264:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    1268:	63417465 	movtvs	r7, #5221	; 0x1465
    126c:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
    1270:	43324900 	teqmi	r2, #0, 18
    1274:	56455f32 			; <UNDEFINED> instruction: 0x56455f32
    1278:	5152495f 	cmppl	r2, pc, asr r9
    127c:	5355006e 	cmppl	r5, #110	; 0x6e
    1280:	33545241 	cmpcc	r4, #268435460	; 0x10000004
    1284:	5152495f 	cmppl	r2, pc, asr r9
    1288:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
    128c:	495f324d 	ldmdbmi	pc, {r0, r2, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
    1290:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1294:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    1298:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
    129c:	43006e51 	movwmi	r6, #3665	; 0xe51
    12a0:	5f324e41 	svcpl	0x00324e41
    12a4:	495f5854 	ldmdbmi	pc, {r2, r4, r6, fp, ip, lr}^	; <UNPREDICTABLE>
    12a8:	006e5152 	rsbeq	r5, lr, r2, asr r1
    12ac:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    12b0:	495f3154 	ldmdbmi	pc, {r2, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    12b4:	006e5152 	rsbeq	r5, lr, r2, asr r1
    12b8:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    12bc:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
    12c0:	5f006e51 	svcpl	0x00006e51
    12c4:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    12c8:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    12cc:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    12d0:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    12d4:	6f724779 	svcvs	0x00724779
    12d8:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
    12dc:	53520067 	cmppl	r2, #103	; 0x67
    12e0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
    12e4:	53003144 	movwpl	r3, #324	; 0x144
    12e8:	00524954 	subseq	r4, r2, r4, asr r9
    12ec:	68537349 	ldmdavs	r3, {r0, r3, r6, r8, r9, ip, sp, lr}^
    12f0:	61657261 	cmnvs	r5, r1, ror #4
    12f4:	00656c62 	rsbeq	r6, r5, r2, ror #24
    12f8:	5f555046 	svcpl	0x00555046
    12fc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1300:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    1304:	5f434956 	svcpl	0x00434956
    1308:	50746553 	rsbspl	r6, r4, r3, asr r5
    130c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1310:	00797469 	rsbseq	r7, r9, r9, ror #8
    1314:	5f4c4148 	svcpl	0x004c4148
    1318:	4349564e 	movtmi	r5, #38478	; 0x964e
    131c:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    1320:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1324:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    1328:	39005152 	stmdbcc	r0, {r1, r4, r6, r8, ip, lr}
    132c:	4349564e 	movtmi	r5, #38478	; 0x964e
    1330:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    1334:	44410065 	strbmi	r0, [r1], #-101	; 0xffffff9b
    1338:	52495f43 	subpl	r5, r9, #268	; 0x10c
    133c:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
    1340:	5f32414d 	svcpl	0x0032414d
    1344:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
    1348:	5f316d61 	svcpl	0x00316d61
    134c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1350:	41504300 	cmpmi	r0, r0, lsl #6
    1354:	48005243 	stmdami	r0, {r0, r1, r6, r9, ip, lr}
    1358:	00525346 	subseq	r5, r2, r6, asr #6
    135c:	314e4143 	cmpcc	lr, r3, asr #2
    1360:	4543535f 	strbmi	r5, [r3, #-863]	; 0xfffffca1
    1364:	5152495f 	cmppl	r2, pc, asr r9
    1368:	4143006e 	cmpmi	r3, lr, rrx
    136c:	535f324e 	cmppl	pc, #-536870908	; 0xe0000004
    1370:	495f4543 	ldmdbmi	pc, {r0, r1, r6, r8, sl, lr}^	; <UNPREDICTABLE>
    1374:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1378:	5f434352 	svcpl	0x00434352
    137c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1380:	73795300 	cmnvc	r9, #0, 6
    1384:	6b636954 	blvs	18db8dc <_Min_Stack_Size+0x18db4dc>
    1388:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    138c:	00676966 	rsbeq	r6, r7, r6, ror #18
    1390:	334d4954 	movtcc	r4, #55636	; 0xd954
    1394:	5152495f 	cmppl	r2, pc, asr r9
    1398:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
    139c:	5f314954 	svcpl	0x00314954
    13a0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    13a4:	414d4400 	cmpmi	sp, r0, lsl #8
    13a8:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
    13ac:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    13b0:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
    13b4:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
    13b8:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    13bc:	61487465 	cmpvs	r8, r5, ror #8
    13c0:	7265566c 	rsbvc	r5, r5, #108, 12	; 0x6c00000
    13c4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    13c8:	45313100 	ldrmi	r3, [r1, #-256]!	; 0xffffff00
    13cc:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    13d0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    13d4:	44007375 	strmi	r7, [r0], #-885	; 0xfffffc8b
    13d8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    13dc:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    13e0:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    13e4:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    13e8:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    13ec:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    13f0:	2f726576 	svccs	0x00726576
    13f4:	2f637253 	svccs	0x00637253
    13f8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    13fc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1400:	61685f78 	smcvs	34296	; 0x85f8
    1404:	00632e6c 	rsbeq	r2, r3, ip, ror #28
    1408:	5f4c4148 	svcpl	0x004c4148
    140c:	54746553 	ldrbtpl	r6, [r4], #-1363	; 0xfffffaad
    1410:	466b6369 	strbtmi	r6, [fp], -r9, ror #6
    1414:	00716572 	rsbseq	r6, r1, r2, ror r5
    1418:	4f434449 	svcmi	0x00434449
    141c:	48004544 	stmdami	r0, {r2, r6, r8, sl, lr}
    1420:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    1424:	49557465 	ldmdbmi	r5, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1428:	00327744 	eorseq	r7, r2, r4, asr #14
    142c:	5f4c4148 	svcpl	0x004c4148
    1430:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    1434:	455f5543 	ldrbmi	r5, [pc, #-1347]	; ef9 <_Min_Stack_Size+0xaf9>
    1438:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    143c:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    1440:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    1444:	4d796264 	lfmmi	f6, 2, [r9, #-400]!	; 0xfffffe70
    1448:	0065646f 	rsbeq	r6, r5, pc, ror #8
    144c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
    1450:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1454:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1458:	6b636954 	blvs	18db9b0 <_Min_Stack_Size+0x18db5b0>
    145c:	6f697250 	svcvs	0x00697250
    1460:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1464:	70734d5f 	rsbsvc	r4, r3, pc, asr sp
    1468:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    146c:	48007469 	stmdami	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    1470:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1478 <_Min_Stack_Size+0x1078>
    1474:	434d4742 	movtmi	r4, #55106	; 0xd742
    1478:	69445f55 	stmdbvs	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    147c:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    1480:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    1484:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    1488:	646f4d70 	strbtvs	r4, [pc], #-3440	; 1490 <_Min_Stack_Size+0x1090>
    148c:	41480065 	cmpmi	r8, r5, rrx
    1490:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1494:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
    1498:	5f514552 	svcpl	0x00514552
    149c:	48303031 	ldmdami	r0!, {r0, r4, r5, ip, sp}
    14a0:	4148005a 	qdaddmi	r0, sl, r8
    14a4:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    14a8:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    14ac:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    14b0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    14b4:	53474244 	movtpl	r4, #29252	; 0x7244
    14b8:	4d706f74 	ldclmi	15, cr6, [r0, #-464]!	; 0xfffffe30
    14bc:	0065646f 	rsbeq	r6, r5, pc, ror #8
    14c0:	5f4c4148 	svcpl	0x004c4148
    14c4:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    14c8:	75007469 	strvc	r7, [r0, #-1129]	; 0xfffffb97
    14cc:	63695477 	cmnvs	r9, #1996488704	; 0x77000000
    14d0:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    14d4:	77750071 			; <UNDEFINED> instruction: 0x77750071
    14d8:	6b636954 	blvs	18dba30 <_Min_Stack_Size+0x18db630>
    14dc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    14e0:	4349545f 	movtmi	r5, #37983	; 0x945f
    14e4:	52465f4b 	subpl	r5, r6, #300	; 0x12c
    14e8:	315f5145 	cmpcc	pc, r5, asr #2
    14ec:	005a484b 	subseq	r4, sl, fp, asr #16
    14f0:	41483931 	cmpmi	r8, r1, lsr r9
    14f4:	69545f4c 	ldmdbvs	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    14f8:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    14fc:	79547165 	ldmdbvc	r4, {r0, r2, r5, r6, r8, ip, sp, lr}^
    1500:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1504:	41480066 	cmpmi	r8, r6, rrx
    1508:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    150c:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    1510:	616e455f 	cmnvs	lr, pc, asr r5
    1514:	44656c62 	strbtmi	r6, [r5], #-3170	; 0xfffff39e
    1518:	74534742 	ldrbvc	r4, [r3], #-1858	; 0xfffff8be
    151c:	6f4d706f 	svcvs	0x004d706f
    1520:	48006564 	stmdami	r0, {r2, r5, r6, r8, sl, sp, lr}
    1524:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 1428 <_Min_Stack_Size+0x1028>
    1528:	6e497073 	mcrvs	0, 2, r7, cr9, cr3, {3}
    152c:	41007469 	tstmi	r0, r9, ror #8
    1530:	46324250 			; <UNDEFINED> instruction: 0x46324250
    1534:	4148005a 	qdaddmi	r0, sl, r8
    1538:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    153c:	44495574 	strbmi	r5, [r9], #-1396	; 0xfffffa8c
    1540:	48003077 	stmdami	r0, {r0, r1, r2, r4, r5, r6, ip, sp}
    1544:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    1548:	49557465 	ldmdbmi	r5, {r0, r2, r5, r6, sl, ip, sp, lr}^
    154c:	00317744 	eorseq	r7, r1, r4, asr #14
    1550:	5f4c4148 	svcpl	0x004c4148
    1554:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1558:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    155c:	4349545f 	movtmi	r5, #37983	; 0x945f
    1560:	52465f4b 	subpl	r5, r6, #300	; 0x12c
    1564:	445f5145 	ldrbmi	r5, [pc], #-325	; 156c <_Min_Stack_Size+0x116c>
    1568:	55414645 	strbpl	r4, [r1, #-1605]	; 0xfffff9bb
    156c:	4800544c 	stmdami	r0, {r2, r3, r6, sl, ip, lr}
    1570:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1574:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    1578:	63695465 	cmnvs	r9, #1694498816	; 0x65000000
    157c:	5041006b 	subpl	r0, r1, fp, rrx
    1580:	5a463142 	bpl	118da90 <_Min_Stack_Size+0x118d690>
    1584:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1588:	4742445f 	smlsldmi	r4, r2, pc, r4	; <UNPREDICTABLE>
    158c:	5f55434d 	svcpl	0x0055434d
    1590:	61736944 	cmnvs	r3, r4, asr #18
    1594:	44656c62 	strbtmi	r6, [r5], #-3170	; 0xfffff39e
    1598:	74534742 	ldrbvc	r4, [r3], #-1858	; 0xfffff8be
    159c:	62646e61 	rsbvs	r6, r4, #1552	; 0x610
    15a0:	646f4d79 	strbtvs	r4, [pc], #-3449	; 15a8 <_Min_Stack_Size+0x11a8>
    15a4:	41480065 	cmpmi	r8, r5, rrx
    15a8:	75535f4c 	ldrbvc	r5, [r3, #-3916]	; 0xfffff0b4
    15ac:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    15b0:	63695464 	cmnvs	r9, #100, 8	; 0x64000000
    15b4:	4148006b 	cmpmi	r8, fp, rrx
    15b8:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    15bc:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    15c0:	616e455f 	cmnvs	lr, pc, asr r5
    15c4:	44656c62 	strbtmi	r6, [r5], #-3170	; 0xfffff39e
    15c8:	6c534742 	mrrcvs	7, 4, r4, r3, cr2
    15cc:	4d706565 	cfldr64mi	mvdx6, [r0, #-404]!	; 0xfffffe6c
    15d0:	0065646f 	rsbeq	r6, r5, pc, ror #8
    15d4:	5f4c4148 	svcpl	0x004c4148
    15d8:	52746547 	rsbspl	r6, r4, #297795584	; 0x11c00000
    15dc:	44495645 	strbmi	r5, [r9], #-1605	; 0xfffff9bb
    15e0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    15e4:	6c65445f 	cfstrdvs	mvd4, [r5], #-380	; 0xfffffe84
    15e8:	48007961 	stmdami	r0, {r0, r5, r6, r8, fp, ip, sp, lr}
    15ec:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    15f0:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    15f4:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    15f8:	54007165 	strpl	r7, [r0], #-357	; 0xfffffe9b
    15fc:	506b6369 	rsbpl	r6, fp, r9, ror #6
    1600:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1604:	00797469 	rsbseq	r7, r9, r9, ror #8
    1608:	76657270 			; <UNDEFINED> instruction: 0x76657270
    160c:	6b636954 	blvs	18dbb64 <_Min_Stack_Size+0x18db764>
    1610:	71657246 	cmnvc	r5, r6, asr #4
    1614:	61747300 	cmnvs	r4, r0, lsl #6
    1618:	00737574 	rsbseq	r7, r3, r4, ror r5
    161c:	42443431 	submi	r3, r4, #822083584	; 0x31000000
    1620:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    1624:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    1628:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    162c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1630:	616e455f 	cmnvs	lr, pc, asr r5
    1634:	43656c62 	cmnmi	r5, #25088	; 0x6200
    1638:	65706d6f 	ldrbvs	r6, [r0, #-3439]!	; 0xfffff291
    163c:	7461736e 	strbtvc	r7, [r1], #-878	; 0xfffffc92
    1640:	436e6f69 	cmnmi	lr, #420	; 0x1a4
    1644:	006c6c65 	rsbeq	r6, ip, r5, ror #24
    1648:	43435553 	movtmi	r5, #13651	; 0x3553
    164c:	00535345 	subseq	r5, r3, r5, asr #6
    1650:	5f4c4148 	svcpl	0x004c4148
    1654:	4b434954 	blmi	10d3bac <_Min_Stack_Size+0x10d37ac>
    1658:	4552465f 	ldrbmi	r4, [r2, #-1631]	; 0xfffff9a1
    165c:	30315f51 	eorscc	r5, r1, r1, asr pc
    1660:	48005a48 	stmdami	r0, {r3, r6, r9, fp, ip, lr}
    1664:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 166c <_Min_Stack_Size+0x126c>
    1668:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    166c:	6f43656c 	svcvs	0x0043656c
    1670:	6e65706d 	cdpvs	0, 6, cr7, cr5, cr13, {3}
    1674:	69746173 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, sp, lr}^
    1678:	65436e6f 	strbvs	r6, [r3, #-3695]	; 0xfffff191
    167c:	48006c6c 	stmdami	r0, {r2, r3, r5, r6, sl, fp, sp, lr}
    1680:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    1684:	45447465 	strbmi	r7, [r4, #-1125]	; 0xfffffb9b
    1688:	00444956 	subeq	r4, r4, r6, asr r9
    168c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    1690:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1694:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
    1698:	5f6d6574 	svcpl	0x006d6574
    169c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    16a0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    16a4:	00632e78 	rsbeq	r2, r3, r8, ror lr
    16a8:	736c6c70 	cmnvc	ip, #112, 24	; 0x7000
    16ac:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    16b0:	79530065 	ldmdbvc	r3, {r0, r2, r5, r6}^
    16b4:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    16b8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    16bc:	73795300 	cmnvc	r9, #0, 6
    16c0:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
    16c4:	4365726f 	cmnmi	r5, #-268435450	; 0xf0000006
    16c8:	6b636f6c 	blvs	18dd480 <_Min_Stack_Size+0x18dd080>
    16cc:	61647055 	qdsubvs	r7, r5, r4
    16d0:	44006574 	strmi	r6, [r0], #-1396	; 0xfffffa8c
    16d4:	5f32414d 	svcpl	0x0032414d
    16d8:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
    16dc:	5f366d61 	svcpl	0x00366d61
    16e0:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    16e4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    16e8:	55007265 	strpl	r7, [r0, #-613]	; 0xfffffd9b
    16ec:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
    16f0:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    16f4:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    16f8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    16fc:	43324900 	teqmi	r2, #0, 18
    1700:	52455f33 	subpl	r5, r5, #51, 30	; 0xcc
    1704:	5152495f 	cmppl	r2, pc, asr r9
    1708:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    170c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1710:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
    1714:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1718:	376d6165 	strbcc	r6, [sp, -r5, ror #2]!
    171c:	5152495f 	cmppl	r2, pc, asr r9
    1720:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1724:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1728:	6164735f 	cmnvs	r4, pc, asr r3
    172c:	43006174 	movwmi	r6, #372	; 0x174
    1730:	5f324e41 	svcpl	0x00324e41
    1734:	5f305852 	svcpl	0x00305852
    1738:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    173c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1740:	46007265 	strmi	r7, [r0], -r5, ror #4
    1744:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
    1748:	5152495f 	cmppl	r2, pc, asr r9
    174c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1750:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1754:	31414d44 	cmpcc	r1, r4, asr #26
    1758:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    175c:	366d6165 	strbtcc	r6, [sp], -r5, ror #2
    1760:	5152495f 	cmppl	r2, pc, asr r9
    1764:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1768:	0072656c 	rsbseq	r6, r2, ip, ror #10
    176c:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
    1770:	5f43435f 	svcpl	0x0043435f
    1774:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1778:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    177c:	43007265 	movwmi	r7, #613	; 0x265
    1780:	5f324e41 	svcpl	0x00324e41
    1784:	5f315852 	svcpl	0x00315852
    1788:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    178c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1790:	5f007265 	svcpl	0x00007265
    1794:	74616465 	strbtvc	r6, [r1], #-1125	; 0xfffffb9b
    1798:	4d440061 	stclmi	0, cr0, [r4, #-388]	; 0xfffffe7c
    179c:	535f3241 	cmppl	pc, #268435460	; 0x10000004
    17a0:	61657274 	smcvs	22308	; 0x5724
    17a4:	495f316d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    17a8:	61485152 	cmpvs	r8, r2, asr r1
    17ac:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    17b0:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    17b4:	495f334d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
    17b8:	61485152 	cmpvs	r8, r2, asr r1
    17bc:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    17c0:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    17c4:	495f324d 	ldmdbmi	pc, {r0, r2, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
    17c8:	61485152 	cmpvs	r8, r2, asr r1
    17cc:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    17d0:	735f0072 	cmpvc	pc, #114	; 0x72
    17d4:	74616469 	strbtvc	r6, [r1], #-1129	; 0xfffffb97
    17d8:	4e520061 	cdpmi	0, 5, cr0, cr2, cr1, {3}
    17dc:	52495f47 	subpl	r5, r9, #284	; 0x11c
    17e0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    17e4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    17e8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    17ec:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
    17f0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    17f4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    17f8:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
    17fc:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
    1800:	555f384d 	ldrbpl	r3, [pc, #-2125]	; fbb <_Min_Stack_Size+0xbbb>
    1804:	49545f50 	ldmdbmi	r4, {r4, r6, r8, r9, sl, fp, ip, lr}^
    1808:	5f33314d 	svcpl	0x0033314d
    180c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1810:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1814:	51007265 	tstpl	r0, r5, ror #4
    1818:	53444155 	movtpl	r4, #16725	; 0x4155
    181c:	495f4950 	ldmdbmi	pc, {r4, r6, r8, fp, lr}^	; <UNPREDICTABLE>
    1820:	61485152 	cmpvs	r8, r2, asr r1
    1824:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1828:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    182c:	495f354d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
    1830:	61485152 	cmpvs	r8, r2, asr r1
    1834:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1838:	58450072 	stmdapl	r5, {r1, r4, r5, r6}^
    183c:	5f344954 	svcpl	0x00344954
    1840:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1844:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1848:	53007265 	movwpl	r7, #613	; 0x265
    184c:	5f314950 	svcpl	0x00314950
    1850:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1854:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1858:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
    185c:	5f384d49 	svcpl	0x00384d49
    1860:	5f475254 	svcpl	0x00475254
    1864:	5f4d4f43 	svcpl	0x004d4f43
    1868:	314d4954 	cmpcc	sp, r4, asr r9
    186c:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
    1870:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1874:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1878:	414d4400 	cmpmi	sp, r0, lsl #8
    187c:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
    1880:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    1884:	52495f37 	subpl	r5, r9, #55, 30	; 0xdc
    1888:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    188c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1890:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
    1894:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
    1898:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    189c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    18a0:	47544f00 	ldrbmi	r4, [r4, -r0, lsl #30]
    18a4:	5f53465f 	svcpl	0x0053465f
    18a8:	50554b57 	subspl	r4, r5, r7, asr fp
    18ac:	5152495f 	cmppl	r2, pc, asr r9
    18b0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    18b4:	0072656c 	rsbseq	r6, r2, ip, ror #10
    18b8:	74636556 	strbtvc	r6, [r3], #-1366	; 0xfffffaaa
    18bc:	6154726f 	cmpvs	r4, pc, ror #4
    18c0:	00656c62 	rsbeq	r6, r5, r2, ror #24
    18c4:	33495053 	movtcc	r5, #36947	; 0x9053
    18c8:	5152495f 	cmppl	r2, pc, asr r9
    18cc:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    18d0:	0072656c 	rsbseq	r6, r2, ip, ror #10
    18d4:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    18d8:	495f3654 	ldmdbmi	pc, {r2, r4, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
    18dc:	61485152 	cmpvs	r8, r2, asr r1
    18e0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    18e4:	56500072 			; <UNDEFINED> instruction: 0x56500072
    18e8:	52495f44 	subpl	r5, r9, #68, 30	; 0x110
    18ec:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    18f0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    18f4:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
    18f8:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    18fc:	61485152 	cmpvs	r8, r2, asr r1
    1900:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1904:	50530072 	subspl	r0, r3, r2, ror r0
    1908:	495f3449 	ldmdbmi	pc, {r0, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
    190c:	61485152 	cmpvs	r8, r2, asr r1
    1910:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1914:	44410072 	strbmi	r0, [r1], #-114	; 0xffffff8e
    1918:	52495f43 	subpl	r5, r9, #268	; 0x10c
    191c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1920:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1924:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    1928:	43435f31 	movtmi	r5, #16177	; 0x3f31
    192c:	5152495f 	cmppl	r2, pc, asr r9
    1930:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1934:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1938:	314d4954 	cmpcc	sp, r4, asr r9
    193c:	4752545f 			; <UNDEFINED> instruction: 0x4752545f
    1940:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; 17cc <_Min_Stack_Size+0x13cc>
    1944:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
    1948:	495f3131 	ldmdbmi	pc, {r0, r4, r5, r8, ip, sp}^	; <UNPREDICTABLE>
    194c:	61485152 	cmpvs	r8, r2, asr r1
    1950:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1954:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    1958:	425f384d 	subsmi	r3, pc, #5046272	; 0x4d0000
    195c:	545f4b52 	ldrbpl	r4, [pc], #-2898	; 1964 <_Min_Stack_Size+0x1564>
    1960:	32314d49 	eorscc	r4, r1, #4672	; 0x1240
    1964:	5152495f 	cmppl	r2, pc, asr r9
    1968:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    196c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1970:	7362655f 	cmnvc	r2, #398458880	; 0x17c00000
    1974:	41540073 	cmpmi	r4, r3, ror r0
    1978:	535f504d 	cmppl	pc, #77	; 0x4d
    197c:	504d4154 	subpl	r4, sp, r4, asr r1
    1980:	5152495f 	cmppl	r2, pc, asr r9
    1984:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1988:	0072656c 	rsbseq	r6, r2, ip, ror #10
    198c:	314d4954 	cmpcc	sp, r4, asr r9
    1990:	5f50555f 	svcpl	0x0050555f
    1994:	314d4954 	cmpcc	sp, r4, asr r9
    1998:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
    199c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    19a0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    19a4:	414d4400 	cmpmi	sp, r0, lsl #8
    19a8:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
    19ac:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    19b0:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
    19b4:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    19b8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    19bc:	73736200 	cmnvc	r3, #0, 4
    19c0:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    19c4:	73655f00 	cmnvc	r5, #0, 30
    19c8:	6b636174 	blvs	18d9fa0 <_Min_Stack_Size+0x18d9ba0>
    19cc:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
    19d0:	5f353149 	svcpl	0x00353149
    19d4:	495f3031 	ldmdbmi	pc, {r0, r4, r5, ip, sp}^	; <UNPREDICTABLE>
    19d8:	61485152 	cmpvs	r8, r2, asr r1
    19dc:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    19e0:	32490072 	subcc	r0, r9, #114	; 0x72
    19e4:	455f3243 	ldrbmi	r3, [pc, #-579]	; 17a9 <_Min_Stack_Size+0x13a9>
    19e8:	52495f56 	subpl	r5, r9, #344	; 0x158
    19ec:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    19f0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    19f4:	55504600 	ldrbpl	r4, [r0, #-1536]	; 0xfffffa00
    19f8:	5152495f 	cmppl	r2, pc, asr r9
    19fc:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1a00:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1a04:	31414d44 	cmpcc	r1, r4, asr #26
    1a08:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1a0c:	316d6165 	cmncc	sp, r5, ror #2
    1a10:	5152495f 	cmppl	r2, pc, asr r9
    1a14:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1a18:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1a1c:	324e4143 	subcc	r4, lr, #-1073741808	; 0xc0000010
    1a20:	5f58545f 	svcpl	0x0058545f
    1a24:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1a28:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1a2c:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
    1a30:	5f314d49 	svcpl	0x00314d49
    1a34:	5f4b5242 	svcpl	0x004b5242
    1a38:	394d4954 	stmdbcc	sp, {r2, r4, r6, r8, fp, lr}^
    1a3c:	5152495f 	cmppl	r2, pc, asr r9
    1a40:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1a44:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1a48:	314e4143 	cmpcc	lr, r3, asr #2
    1a4c:	4543535f 	strbmi	r5, [r3, #-863]	; 0xfffffca1
    1a50:	5152495f 	cmppl	r2, pc, asr r9
    1a54:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1a58:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1a5c:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
    1a60:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1a64:	346d6165 	strbtcc	r6, [sp], #-357	; 0xfffffe9b
    1a68:	5152495f 	cmppl	r2, pc, asr r9
    1a6c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1a70:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1a74:	31414d44 	cmpcc	r1, r4, asr #26
    1a78:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1a7c:	326d6165 	rsbcc	r6, sp, #1073741849	; 0x40000019
    1a80:	5152495f 	cmppl	r2, pc, asr r9
    1a84:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1a88:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1a8c:	314e4143 	cmpcc	lr, r3, asr #2
    1a90:	3058525f 	subscc	r5, r8, pc, asr r2
    1a94:	5152495f 	cmppl	r2, pc, asr r9
    1a98:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1a9c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1aa0:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    1aa4:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
    1aa8:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1aac:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1ab0:	414d4400 	cmpmi	sp, r0, lsl #8
    1ab4:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
    1ab8:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    1abc:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
    1ac0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1ac4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1ac8:	414d4400 	cmpmi	sp, r0, lsl #8
    1acc:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
    1ad0:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    1ad4:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
    1ad8:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1adc:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1ae0:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
    1ae4:	495f3349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
    1ae8:	61485152 	cmpvs	r8, r2, asr r1
    1aec:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1af0:	44530072 	ldrbmi	r0, [r3], #-114	; 0xffffff8e
    1af4:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
    1af8:	61485152 	cmpvs	r8, r2, asr r1
    1afc:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1b00:	58450072 	stmdapl	r5, {r1, r4, r5, r6}^
    1b04:	5f394954 	svcpl	0x00394954
    1b08:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
    1b0c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1b10:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1b14:	414d4400 	cmpmi	sp, r0, lsl #8
    1b18:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
    1b1c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    1b20:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
    1b24:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1b28:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1b2c:	73655200 	cmnvc	r5, #0, 4
    1b30:	485f7465 	ldmdami	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1b34:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1b38:	52007265 	andpl	r7, r0, #1342177286	; 0x50000006
    1b3c:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
    1b40:	61485152 	cmpvs	r8, r2, asr r1
    1b44:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1b48:	65440072 	strbvs	r0, [r4, #-114]	; 0xffffff8e
    1b4c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1b50:	61485f74 	hvcvs	34292	; 0x85f4
    1b54:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1b58:	41430072 	hvcmi	12290	; 0x3002
    1b5c:	535f324e 	cmppl	pc, #-536870908	; 0xe0000004
    1b60:	495f4543 	ldmdbmi	pc, {r0, r1, r6, r8, sl, lr}^	; <UNPREDICTABLE>
    1b64:	61485152 	cmpvs	r8, r2, asr r1
    1b68:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1b6c:	57570072 			; <UNDEFINED> instruction: 0x57570072
    1b70:	495f4744 	ldmdbmi	pc, {r2, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
    1b74:	61485152 	cmpvs	r8, r2, asr r1
    1b78:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1b7c:	46440072 			; <UNDEFINED> instruction: 0x46440072
    1b80:	314d4453 	cmpcc	sp, r3, asr r4
    1b84:	544c465f 	strbpl	r4, [ip], #-1631	; 0xfffff9a1
    1b88:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    1b8c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1b90:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1b94:	43324900 	teqmi	r2, #0, 18
    1b98:	56455f33 			; <UNDEFINED> instruction: 0x56455f33
    1b9c:	5152495f 	cmppl	r2, pc, asr r9
    1ba0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1ba4:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1ba8:	314e4143 	cmpcc	lr, r3, asr #2
    1bac:	5f58545f 	svcpl	0x0058545f
    1bb0:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1bb4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1bb8:	73007265 	movwvc	r7, #613	; 0x265
    1bbc:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1bc0:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
    1bc4:	504d4600 	subpl	r4, sp, r0, lsl #12
    1bc8:	31433249 	cmpcc	r3, r9, asr #4
    1bcc:	5f56455f 	svcpl	0x0056455f
    1bd0:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1bd4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1bd8:	5f007265 	svcpl	0x00007265
    1bdc:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    1be0:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
    1be4:	615f7469 	cmpvs	pc, r9, ror #8
    1be8:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    1bec:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    1bf0:	52495f36 	subpl	r5, r9, #54, 30	; 0xd8
    1bf4:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1bf8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1bfc:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    1c00:	61765f74 	cmnvs	r6, r4, ror pc
    1c04:	7365756c 	cmnvc	r5, #108, 10	; 0x1b000000
    1c08:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    1c0c:	414d4400 	cmpmi	sp, r0, lsl #8
    1c10:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
    1c14:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    1c18:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
    1c1c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1c20:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1c24:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    1c28:	52495f37 	subpl	r5, r9, #55, 30	; 0xdc
    1c2c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1c30:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1c34:	43324900 	teqmi	r2, #0, 18
    1c38:	52455f32 	subpl	r5, r5, #50, 30	; 0xc8
    1c3c:	5152495f 	cmppl	r2, pc, asr r9
    1c40:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1c44:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1c48:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
    1c4c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1c50:	306d6165 	rsbcc	r6, sp, r5, ror #2
    1c54:	5152495f 	cmppl	r2, pc, asr r9
    1c58:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1c5c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1c60:	5f435452 	svcpl	0x00435452
    1c64:	50554b57 	subspl	r4, r5, r7, asr fp
    1c68:	5152495f 	cmppl	r2, pc, asr r9
    1c6c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1c70:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1c74:	35495053 	strbcc	r5, [r9, #-83]	; 0xffffffad
    1c78:	5152495f 	cmppl	r2, pc, asr r9
    1c7c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1c80:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1c84:	31414d44 	cmpcc	r1, r4, asr #26
    1c88:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1c8c:	356d6165 	strbcc	r6, [sp, #-357]!	; 0xfffffe9b
    1c90:	5152495f 	cmppl	r2, pc, asr r9
    1c94:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1c98:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1c9c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    1ca0:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
    1ca4:	61485152 	cmpvs	r8, r2, asr r1
    1ca8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1cac:	4d440072 	stclmi	0, cr0, [r4, #-456]	; 0xfffffe38
    1cb0:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
    1cb4:	61657274 	smcvs	22308	; 0x5724
    1cb8:	495f306d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, ip, sp}^	; <UNPREDICTABLE>
    1cbc:	61485152 	cmpvs	r8, r2, asr r1
    1cc0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1cc4:	53550072 	cmppl	r5, #114	; 0x72
    1cc8:	33545241 	cmpcc	r4, #268435460	; 0x10000004
    1ccc:	5152495f 	cmppl	r2, pc, asr r9
    1cd0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1cd4:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1cd8:	5f435452 	svcpl	0x00435452
    1cdc:	72616c41 	rsbvc	r6, r1, #16640	; 0x4100
    1ce0:	52495f6d 	subpl	r5, r9, #436	; 0x1b4
    1ce4:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1ce8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1cec:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
    1cf0:	495f3049 	ldmdbmi	pc, {r0, r3, r6, ip, sp}^	; <UNPREDICTABLE>
    1cf4:	61485152 	cmpvs	r8, r2, asr r1
    1cf8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1cfc:	4d460072 	stclmi	0, cr0, [r6, #-456]	; 0xfffffe38
    1d00:	43324950 	teqmi	r2, #80, 18	; 0x140000
    1d04:	52455f31 	subpl	r5, r5, #49, 30	; 0xc4
    1d08:	5152495f 	cmppl	r2, pc, asr r9
    1d0c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1d10:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1d14:	5f47544f 	svcpl	0x0047544f
    1d18:	495f5346 	ldmdbmi	pc, {r1, r2, r6, r8, r9, ip, lr}^	; <UNPREDICTABLE>
    1d1c:	61485152 	cmpvs	r8, r2, asr r1
    1d20:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1d24:	735f0072 	cmpvc	pc, #114	; 0x72
    1d28:	00737362 	rsbseq	r7, r3, r2, ror #6
    1d2c:	61746164 	cmnvs	r4, r4, ror #2
    1d30:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    1d34:	53464400 	movtpl	r4, #25600	; 0x6400
    1d38:	5f314d44 	svcpl	0x00314d44
    1d3c:	30544c46 	subscc	r4, r4, r6, asr #24
    1d40:	5152495f 	cmppl	r2, pc, asr r9
    1d44:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1d48:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1d4c:	314e4143 	cmpcc	lr, r3, asr #2
    1d50:	3158525f 	cmpcc	r8, pc, asr r2
    1d54:	5152495f 	cmppl	r2, pc, asr r9
    1d58:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1d5c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1d60:	5241314d 	subpl	r3, r1, #1073741843	; 0x40000013
    1d64:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    1d68:	44007075 	strmi	r7, [r0], #-117	; 0xffffff8b
    1d6c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
    1d70:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1d74:	65766500 	ldrbvs	r6, [r6, #-1280]!	; 0xfffffb00
    1d78:	646f5f6e 	strbtvs	r5, [pc], #-3950	; 1d80 <_Min_Stack_Size+0x1980>
    1d7c:	72665f64 	rsbvc	r5, r6, #100, 30	; 0x190
    1d80:	00656d61 	rsbeq	r6, r5, r1, ror #26
    1d84:	5f444350 	svcpl	0x00444350
    1d88:	79545045 	ldmdbvc	r4, {r0, r2, r6, ip, lr}^
    1d8c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1d90:	61420066 	cmpvs	r2, r6, rrx
    1d94:	61526475 	cmpvs	r2, r5, ror r4
    1d98:	52006574 	andpl	r6, r0, #116, 10	; 0x1d000000
    1d9c:	65665878 	strbvs	r5, [r6, #-2168]!	; 0xfffff788
    1da0:	7a695372 	bvc	1a56b70 <_Min_Stack_Size+0x1a56770>
    1da4:	75680065 	strbvc	r0, [r8, #-101]!	; 0xffffff9b
    1da8:	33747261 	cmncc	r4, #268435462	; 0x10000006
    1dac:	53454200 	movtpl	r4, #20992	; 0x5200
    1db0:	4350004c 	cmpmi	r0, #76	; 0x4c
    1db4:	79545f44 	ldmdbvc	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    1db8:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1dbc:	6d640066 	stclvs	0, cr0, [r4, #-408]!	; 0xfffffe68
    1dc0:	64615f61 	strbtvs	r5, [r1], #-3937	; 0xfffff09f
    1dc4:	47007264 	strmi	r7, [r0, -r4, ror #4]
    1dc8:	46435748 	strbmi	r5, [r3], -r8, asr #14
    1dcc:	4c003347 	stcmi	3, cr3, [r0], {71}	; 0x47
    1dd0:	535f4d50 	cmppl	pc, #80, 26	; 0x1400
    1dd4:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1dd8:	70797400 	rsbsvc	r7, r9, r0, lsl #8
    1ddc:	74530065 	ldrbvc	r0, [r3], #-101	; 0xffffff9b
    1de0:	6942706f 	stmdbvs	r2, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    1de4:	4c007374 	stcmi	3, cr7, [r0], {116}	; 0x74
    1de8:	006b636f 	rsbeq	r6, fp, pc, ror #6
    1dec:	5f4c4148 	svcpl	0x004c4148
    1df0:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1df4:	4154535f 	cmpmi	r4, pc, asr r3
    1df8:	525f4554 	subspl	r4, pc, #84, 10	; 0x15000000
    1dfc:	54455345 	strbpl	r5, [r5], #-837	; 0xfffffcbb
    1e00:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
    1e04:	6d615372 	stclvs	3, cr5, [r1, #-456]!	; 0xfffffe38
    1e08:	6e696c70 	mcrvs	12, 3, r6, cr9, cr0, {3}
    1e0c:	65640067 	strbvs	r0, [r4, #-103]!	; 0xffffff99
    1e10:	6e655f76 	mcrvs	15, 3, r5, cr5, cr6, {3}
    1e14:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
    1e18:	0073746e 	rsbseq	r7, r3, lr, ror #8
    1e1c:	75625f5f 	strbvc	r5, [r2, #-3935]!	; 0xfffff0a1
    1e20:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
    1e24:	656d5f6e 	strbvs	r5, [sp, #-3950]!	; 0xfffff092
    1e28:	7465736d 	strbtvc	r7, [r5], #-877	; 0xfffffc93
    1e2c:	78527000 	ldmdavc	r2, {ip, sp, lr}^
    1e30:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    1e34:	00727450 	rsbseq	r7, r2, r0, asr r4
    1e38:	6f727245 	svcvs	0x00727245
    1e3c:	646f4372 	strbtvs	r4, [pc], #-882	; 1e44 <_Min_Stack_Size+0x1a44>
    1e40:	554f0065 	strbpl	r0, [pc, #-101]	; 1de3 <_Min_Stack_Size+0x19e3>
    1e44:	70655f54 	rsbvc	r5, r5, r4, asr pc
    1e48:	5f4e4900 	svcpl	0x004e4900
    1e4c:	43007065 	movwmi	r7, #101	; 0x65
    1e50:	6e6e6168 	powvsez	f6, f6, #0.0
    1e54:	50006c65 	andpl	r6, r0, r5, ror #24
    1e58:	495f4443 	ldmdbmi	pc, {r0, r1, r6, sl, lr}^	; <UNPREDICTABLE>
    1e5c:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
    1e60:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1e64:	31006665 	tstcc	r0, r5, ror #12
    1e68:	44435036 	strbmi	r5, [r3], #-54	; 0xffffffca
    1e6c:	6174535f 	cmnvs	r4, pc, asr r3
    1e70:	79546574 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
    1e74:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1e78:	6d640066 	stclvs	0, cr0, [r4, #-408]!	; 0xfffffe68
    1e7c:	6e655f61 	cdpvs	15, 6, cr5, cr5, cr1, {3}
    1e80:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1e84:	43435200 	movtmi	r5, #12800	; 0x3200
    1e88:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
    1e8c:	43520031 	cmpmi	r2, #49	; 0x31
    1e90:	41425f43 	cmpmi	r2, r3, asr #30
    1e94:	545f4553 	ldrbpl	r4, [pc], #-1363	; 1e9c <_Min_Stack_Size+0x1a9c>
    1e98:	00504d45 	subseq	r4, r0, r5, asr #26
    1e9c:	46434347 	strbmi	r4, [r3], -r7, asr #6
    1ea0:	38310047 	ldmdacc	r1!, {r0, r1, r2, r6}
    1ea4:	5f425355 	svcpl	0x00425355
    1ea8:	5f47544f 	svcpl	0x0047544f
    1eac:	54676643 	strbtpl	r6, [r7], #-1603	; 0xfffff9bd
    1eb0:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1eb4:	64006665 	strvs	r6, [r0], #-1637	; 0xfffff99b
    1eb8:	5f617461 	svcpl	0x00617461
    1ebc:	5f646970 	svcpl	0x00646970
    1ec0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    1ec4:	41480074 	hvcmi	32772	; 0x8004
    1ec8:	41555f4c 	cmpmi	r5, ip, asr #30
    1ecc:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    1ed0:	70795478 	rsbsvc	r5, r9, r8, ror r4
    1ed4:	70795465 	rsbsvc	r5, r9, r5, ror #8
    1ed8:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1edc:	524f5000 	subpl	r5, pc, #0
    1ee0:	5f425f54 	svcpl	0x00425f54
    1ee4:	45534142 	ldrbmi	r4, [r3, #-322]	; 0xfffffebe
    1ee8:	30706500 	rsbscc	r6, r0, r0, lsl #10
    1eec:	73706d5f 	cmnvc	r0, #6080	; 0x17c0
    1ef0:	46444700 	strbmi	r4, [r4], -r0, lsl #14
    1ef4:	434f4649 	movtmi	r4, #63049	; 0xf649
    1ef8:	68004746 	stmdavs	r0, {r1, r2, r6, r8, r9, sl, lr}
    1efc:	72616d64 	rsbvc	r6, r1, #100, 26	; 0x1900
    1f00:	49460078 	stmdbmi	r6, {r3, r4, r5, r6}^
    1f04:	6f4d4f46 	svcvs	0x004d4f46
    1f08:	48006564 	stmdami	r0, {r2, r5, r6, r8, sl, sp, lr}
    1f0c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1f14 <_Min_Stack_Size+0x1b14>
    1f10:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
    1f14:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
    1f18:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
    1f1c:	6300524f 	movwvs	r5, #591	; 0x24f
    1f20:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1f24:	7364654c 	cmnvc	r4, #76, 10	; 0x13000000
    1f28:	726f5700 	rsbvc	r5, pc, #0, 14
    1f2c:	6e654c64 	cdpvs	12, 6, cr4, cr5, cr4, {3}
    1f30:	00687467 	rsbeq	r7, r8, r7, ror #8
    1f34:	5f4c4148 	svcpl	0x004c4148
    1f38:	5f444350 	svcpl	0x00444350
    1f3c:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    1f40:	45525f45 	ldrbmi	r5, [r2, #-3909]	; 0xfffff0bb
    1f44:	00594441 	subseq	r4, r9, r1, asr #8
    1f48:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    1f4c:	6e496870 	mcrvs	8, 2, r6, cr9, cr0, {3}
    1f50:	72450063 	subvc	r0, r5, #99	; 0x63
    1f54:	5f726f72 	svcpl	0x00726f72
    1f58:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1f5c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1f60:	5f4c4148 	svcpl	0x004c4148
    1f64:	5f414d44 	svcpl	0x00414d44
    1f68:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    1f6c:	42415f45 	submi	r5, r1, #276	; 0x114
    1f70:	0054524f 	subseq	r5, r4, pc, asr #4
    1f74:	41483132 	cmpmi	r8, r2, lsr r1
    1f78:	41555f4c 	cmpmi	r5, ip, asr #30
    1f7c:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
    1f80:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1f84:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1f88:	00666544 	rsbeq	r6, r6, r4, asr #10
    1f8c:	426d654d 	rsbmi	r6, sp, #322961408	; 0x13400000
    1f90:	74737275 	ldrbtvc	r7, [r3], #-629	; 0xfffffd8b
    1f94:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
    1f98:	6f624172 	svcvs	0x00624172
    1f9c:	61437472 	hvcvs	14146	; 0x3742
    1fa0:	61626c6c 	cmnvs	r2, ip, ror #24
    1fa4:	52006b63 	andpl	r6, r0, #101376	; 0x18c00
    1fa8:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
    1fac:	33646576 	cmncc	r4, #494927872	; 0x1d800000
    1fb0:	62760030 	rsbsvs	r0, r6, #48	; 0x30
    1fb4:	735f7375 	cmpvc	pc, #-738197503	; 0xd4000001
    1fb8:	69736e65 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1fbc:	655f676e 	ldrbvs	r6, [pc, #-1902]	; 1856 <_Min_Stack_Size+0x1456>
    1fc0:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    1fc4:	706c0065 	rsbvc	r0, ip, r5, rrx
    1fc8:	63615f6d 	cmnvs	r1, #436	; 0x1b4
    1fcc:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
    1fd0:	44353100 	ldrtmi	r3, [r5], #-256	; 0xffffff00
    1fd4:	495f414d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1fd8:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
    1fdc:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1fe0:	68006665 	stmdavs	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
    1fe4:	74616d64 	strbtvc	r6, [r1], #-3428	; 0xfffff29c
    1fe8:	444f0078 	strbmi	r0, [pc], #-120	; 1ff0 <_Min_Stack_Size+0x1bf0>
    1fec:	00425f52 	subeq	r5, r2, r2, asr pc
    1ff0:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
    1ff4:	6148314d 	cmpvs	r8, sp, asr #2
    1ff8:	7043666c 	subvc	r6, r3, ip, ror #12
    1ffc:	6143746c 	cmpvs	r3, ip, ror #8
    2000:	61626c6c 	cmnvs	r2, ip, ror #24
    2004:	73006b63 	movwvc	r6, #2915	; 0xb63
    2008:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
    200c:	53524700 	cmppl	r2, #0, 14
    2010:	4c544354 	mrrcmi	3, 5, r4, r4, cr4	; <UNPREDICTABLE>
    2014:	73655200 	cmnvc	r5, #0, 4
    2018:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
    201c:	00333464 	eorseq	r3, r3, r4, ror #8
    2020:	5f4d504c 	svcpl	0x004d504c
    2024:	4c00304c 	stcmi	0, cr3, [r0], {76}	; 0x4c
    2028:	4c5f4d50 	mrrcmi	13, 5, r4, pc, cr0	; <UNPREDICTABLE>
    202c:	504c0031 	subpl	r0, ip, r1, lsr r0
    2030:	324c5f4d 	subcc	r5, ip, #308	; 0x134
    2034:	4d504c00 	ldclmi	12, cr4, [r0, #-0]
    2038:	00334c5f 	eorseq	r4, r3, pc, asr ip
    203c:	46585247 	ldrbmi	r5, [r8], -r7, asr #4
    2040:	005a4953 	subseq	r4, sl, r3, asr r9
    2044:	74736e49 	ldrbtvc	r6, [r3], #-3657	; 0xfffff1b7
    2048:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    204c:	46494600 	strbmi	r4, [r9], -r0, lsl #12
    2050:	7268544f 	rsbvc	r5, r8, #1325400064	; 0x4f000000
    2054:	6f687365 	svcvs	0x00687365
    2058:	4800646c 	stmdami	r0, {r2, r3, r5, r6, sl, sp, lr}
    205c:	6f6c4677 	svcvs	0x006c4677
    2060:	6c744377 	ldclvs	3, cr4, [r4], #-476	; 0xfffffe24
    2064:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
    2068:	43314d72 	teqmi	r1, #7296	; 0x1c80
    206c:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    2070:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    2074:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2078:	50454944 	subpl	r4, r5, r4, asr #18
    207c:	00465854 	subeq	r5, r6, r4, asr r8
    2080:	4c746573 	cfldr64mi	mvdx6, [r4], #-460	; 0xfffffe34
    2084:	00736465 	rsbseq	r6, r3, r5, ror #8
    2088:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    208c:	75426870 	strbvc	r6, [r2, #-2160]	; 0xfffff790
    2090:	00747372 	rsbseq	r7, r4, r2, ror r3
    2094:	20554e47 	subscs	r4, r5, r7, asr #28
    2098:	312b2b43 			; <UNDEFINED> instruction: 0x312b2b43
    209c:	30312037 	eorscc	r2, r1, r7, lsr r0
    20a0:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    20a4:	32303220 	eorscc	r3, r0, #32, 4
    20a8:	32383031 	eorscc	r3, r8, #49	; 0x31
    20ac:	72282034 	eorvc	r2, r8, #52	; 0x34
    20b0:	61656c65 	cmnvs	r5, r5, ror #24
    20b4:	20296573 	eorcs	r6, r9, r3, ror r5
    20b8:	70636d2d 	rsbvc	r6, r3, sp, lsr #26
    20bc:	6f633d75 	svcvs	0x00633d75
    20c0:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    20c4:	20346d2d 	eorscs	r6, r4, sp, lsr #26
    20c8:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
    20cc:	20626d75 	rsbcs	r6, r2, r5, ror sp
    20d0:	70666d2d 	rsbvc	r6, r6, sp, lsr #26
    20d4:	70663d75 	rsbvc	r3, r6, r5, ror sp
    20d8:	732d3476 			; <UNDEFINED> instruction: 0x732d3476
    20dc:	31642d70 	smccc	17104	; 0x42d0
    20e0:	6d2d2036 	stcvs	0, cr2, [sp, #-216]!	; 0xffffff28
    20e4:	616f6c66 	cmnvs	pc, r6, ror #24
    20e8:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
    20ec:	61683d69 	cmnvs	r8, r9, ror #26
    20f0:	2d206472 	cfstrscs	mvf6, [r0, #-456]!	; 0xfffffe38
    20f4:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
    20f8:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
    20fc:	6537766d 	ldrvs	r7, [r7, #-1645]!	; 0xfffff993
    2100:	662b6d2d 	strtvs	r6, [fp], -sp, lsr #26
    2104:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
    2108:	64672d20 	strbtvs	r2, [r7], #-3360	; 0xfffff2e0
    210c:	66726177 			; <UNDEFINED> instruction: 0x66726177
    2110:	2d20322d 	sfmcs	f3, 4, [r0, #-180]!	; 0xffffff4c
    2114:	2d20674f 	stccs	7, cr6, [r0, #-316]!	; 0xfffffec4
    2118:	2d20674f 	stccs	7, cr6, [r0, #-316]!	; 0xfffffec4
    211c:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
    2120:	312b2b63 			; <UNDEFINED> instruction: 0x312b2b63
    2124:	662d2037 			; <UNDEFINED> instruction: 0x662d2037
    2128:	61746164 	cmnvs	r4, r4, ror #2
    212c:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
    2130:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2134:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
    2138:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
    213c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2140:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
    2144:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2148:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
    214c:	652d6f6e 	strvs	r6, [sp, #-3950]!	; 0xfffff092
    2150:	70656378 	rsbvc	r6, r5, r8, ror r3
    2154:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2158:	41470073 	hvcmi	28675	; 0x7003
    215c:	46434248 	strbmi	r4, [r3], -r8, asr #4
    2160:	37310047 	ldrcc	r0, [r1, -r7, asr #32]!
    2164:	5f444350 	svcpl	0x00444350
    2168:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    216c:	7954656c 	ldmdbvc	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
    2170:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    2174:	41480066 	cmpmi	r8, r6, rrx
    2178:	41555f4c 	cmpmi	r5, ip, asr #30
    217c:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
    2180:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
    2184:	5355425f 	cmppl	r5, #-268435451	; 0xf0000005
    2188:	58525f59 	ldmdapl	r2, {r0, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    218c:	55313200 	ldrpl	r3, [r1, #-512]!	; 0xfffffe00
    2190:	4f5f4253 	svcmi	0x005f4253
    2194:	475f4754 			; <UNDEFINED> instruction: 0x475f4754
    2198:	61626f6c 	cmnvs	r2, ip, ror #30
    219c:	7079546c 	rsbsvc	r5, r9, ip, ror #8
    21a0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    21a4:	315a5f00 	cmpcc	sl, r0, lsl #30
    21a8:	73795338 	cmnvc	r9, #56, 6	; 0xe0000000
    21ac:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
    21b0:	6b636f6c 	blvs	18ddf68 <_Min_Stack_Size+0x18ddb68>
    21b4:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    21b8:	76676966 	strbtvc	r6, [r7], -r6, ror #18
    21bc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    21c0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    21c4:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
    21c8:	5f455441 	svcpl	0x00455441
    21cc:	44414552 	strbmi	r4, [r1], #-1362	; 0xfffffaae
    21d0:	5f5f0059 	svcpl	0x005f0059
    21d4:	61736964 	cmnvs	r3, r4, ror #18
    21d8:	5f656c62 	svcpl	0x00656c62
    21dc:	00717269 	rsbseq	r7, r1, r9, ror #4
    21e0:	735f7369 	cmpvc	pc, #-1543503871	; 0xa4000001
    21e4:	6c6c6174 	stfvse	f6, [ip], #-464	; 0xfffffe30
    21e8:	544f4700 	strbpl	r4, [pc], #-1792	; 21f0 <_Min_Stack_Size+0x1df0>
    21ec:	4c544347 	mrrcmi	3, 4, r4, r4, cr7	; <UNPREDICTABLE>
    21f0:	58785200 	ldmdapl	r8!, {r9, ip, lr}^
    21f4:	43726566 	cmnmi	r2, #427819008	; 0x19800000
    21f8:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    21fc:	58524700 	ldmdapl	r2, {r8, r9, sl, lr}^
    2200:	52535453 	subspl	r5, r3, #1392508928	; 0x53000000
    2204:	6d654d00 	stclvs	13, cr4, [r5, #-0]
    2208:	61746144 	cmnvs	r4, r4, asr #2
    220c:	67696c41 	strbvs	r6, [r9, -r1, asr #24]!
    2210:	6e656d6e 	cdpvs	13, 6, cr6, cr5, cr14, {3}
    2214:	4f470074 	svcmi	0x00470074
    2218:	4e494754 	mcrmi	7, 2, r4, cr9, cr4, {2}
    221c:	4c470054 	mcrrmi	0, 5, r0, r7, cr4
    2220:	46434d50 			; <UNDEFINED> instruction: 0x46434d50
    2224:	52470047 	subpl	r0, r7, #71	; 0x47
    2228:	53545358 	cmppl	r4, #88, 6	; 0x60000001
    222c:	65500050 	ldrbvs	r0, [r0, #-80]	; 0xffffffb0
    2230:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2234:	61746144 	cmnvs	r4, r4, asr #2
    2238:	67696c41 	strbvs	r6, [r9, -r1, asr #24]!
    223c:	6e656d6e 	cdpvs	13, 6, cr6, cr5, cr14, {3}
    2240:	41480074 	hvcmi	32772	; 0x8004
    2244:	41555f4c 	cmpmi	r5, ip, asr #30
    2248:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
    224c:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
    2250:	5355425f 	cmppl	r5, #-268435451	; 0xf0000005
    2254:	58545f59 	ldmdapl	r4, {r0, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    2258:	55363100 	ldrpl	r3, [r6, #-256]!	; 0xffffff00
    225c:	5f545241 	svcpl	0x00545241
    2260:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    2264:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    2268:	00666544 	rsbeq	r6, r6, r4, asr #10
    226c:	4d443831 	stclmi	8, cr3, [r4, #-196]	; 0xffffff3c
    2270:	74535f41 	ldrbvc	r5, [r3], #-3905	; 0xfffff0bf
    2274:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    2278:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    227c:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    2280:	50544700 	subspl	r4, r4, r0, lsl #14
    2284:	534f0052 	movtpl	r0, #61522	; 0xf052
    2288:	44454550 	strbmi	r4, [r5], #-1360	; 0xfffffab0
    228c:	6c004252 	sfmvs	f4, 4, [r0], {82}	; 0x52
    2290:	705f776f 	subsvc	r7, pc, pc, ror #14
    2294:	7265776f 	rsbvc	r7, r5, #29097984	; 0x1bc0000
    2298:	616e655f 	cmnvs	lr, pc, asr r5
    229c:	00656c62 	rsbeq	r6, r5, r2, ror #24
    22a0:	41483032 	cmpmi	r8, r2, lsr r0
    22a4:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    22a8:	74535f41 	ldrbvc	r5, [r3], #-3905	; 0xfffff0bf
    22ac:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
    22b0:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    22b4:	53006665 	movwpl	r6, #1637	; 0x665
    22b8:	61657274 	smcvs	22308	; 0x5724
    22bc:	646e496d 	strbtvs	r4, [lr], #-2413	; 0xfffff693
    22c0:	69007865 	stmdbvs	r0, {r0, r2, r5, r6, fp, ip, sp, lr}
    22c4:	4c74696e 			; <UNDEFINED> instruction: 0x4c74696e
    22c8:	00736465 	rsbseq	r6, r3, r5, ror #8
    22cc:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    22d0:	6f697470 	svcvs	0x00697470
    22d4:	7079546e 	rsbsvc	r5, r9, lr, ror #8
    22d8:	79530065 	ldmdbvc	r3, {r0, r2, r5, r6}^
    22dc:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    22e0:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    22e4:	6f435f6b 	svcvs	0x00435f6b
    22e8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    22ec:	726f4300 	rsbvc	r4, pc, #0, 6
    22f0:	72532f65 	subsvc	r2, r3, #404	; 0x194
    22f4:	616d2f63 	cmnvs	sp, r3, ror #30
    22f8:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
    22fc:	48007070 	stmdami	r0, {r4, r5, r6, ip, sp, lr}
    2300:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2308 <_Min_Stack_Size+0x1f08>
    2304:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
    2308:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
    230c:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
    2310:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
    2314:	555f5f00 	ldrbpl	r5, [pc, #-3840]	; 141c <_Min_Stack_Size+0x101c>
    2318:	5f545241 	svcpl	0x00545241
    231c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    2320:	7954656c 	ldmdbvc	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
    2324:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    2328:	66780066 	ldrbtvs	r0, [r8], -r6, rrx
    232c:	625f7265 	subsvs	r7, pc, #1342177286	; 0x50000006
    2330:	00666675 	rsbeq	r6, r6, r5, ror r6
    2334:	72656678 	rsbvc	r6, r5, #120, 12	; 0x7800000
    2338:	6e656c5f 	mcrvs	12, 3, r6, cr5, cr15, {2}
    233c:	74616200 	strbtvc	r6, [r1], #-512	; 0xfffffe00
    2340:	79726574 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    2344:	6168635f 	cmnvs	r8, pc, asr r3
    2348:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
    234c:	6e655f67 	cdpvs	15, 6, cr5, cr5, cr7, {3}
    2350:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2354:	666f5300 	strbtvs	r5, [pc], -r0, lsl #6
    2358:	616e655f 	cmnvs	lr, pc, asr r5
    235c:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2360:	45444f4d 	strbmi	r4, [r4, #-3917]	; 0xfffff0b3
    2364:	68004252 	stmdavs	r0, {r1, r4, r6, r9, lr}
    2368:	5f646370 	svcpl	0x00646370
    236c:	5f425355 	svcpl	0x00425355
    2370:	5f47544f 	svcpl	0x0047544f
    2374:	67005346 	strvs	r5, [r0, -r6, asr #6]
    2378:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    237c:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
    2380:	76726573 			; <UNDEFINED> instruction: 0x76726573
    2384:	50006465 	andpl	r6, r0, r5, ror #8
    2388:	6e657261 	cdpvs	2, 6, cr7, cr5, cr1, {3}
    238c:	61500074 	cmpvs	r0, r4, ror r0
    2390:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2394:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2398:	414d445f 	cmpmi	sp, pc, asr r4
    239c:	4154535f 	cmpmi	r4, pc, asr r3
    23a0:	525f4554 	subspl	r4, pc, #84, 10	; 0x15000000
    23a4:	54455345 	strbpl	r5, [r5], #-837	; 0xfffffcbb
    23a8:	78547000 	ldmdavc	r4, {ip, sp, lr}^
    23ac:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    23b0:	00727450 	rsbseq	r7, r2, r0, asr r4
    23b4:	544e4947 	strbpl	r4, [lr], #-2375	; 0xfffff6b9
    23b8:	004b534d 	subeq	r5, fp, sp, asr #6
    23bc:	5f657375 	svcpl	0x00657375
    23c0:	69646564 	stmdbvs	r4!, {r2, r5, r6, r8, sl, sp, lr}^
    23c4:	65746163 	ldrbvs	r6, [r4, #-355]!	; 0xfffffe9d
    23c8:	70655f64 	rsbvc	r5, r5, r4, ror #30
    23cc:	654d0031 	strbvs	r0, [sp, #-49]	; 0xffffffcf
    23d0:	636e496d 	cmnvs	lr, #1785856	; 0x1b4000
    23d4:	55373100 	ldrpl	r3, [r7, #-256]!	; 0xffffff00
    23d8:	4f5f4253 	svcmi	0x005f4253
    23dc:	455f4754 	ldrbmi	r4, [pc, #-1876]	; 1c90 <_Min_Stack_Size+0x1890>
    23e0:	70795450 	rsbsvc	r5, r9, r0, asr r4
    23e4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    23e8:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
    23ec:	72724572 	rsbsvc	r4, r2, #478150656	; 0x1c800000
    23f0:	6143726f 	cmpvs	r3, pc, ror #4
    23f4:	61626c6c 	cmnvs	r2, ip, ror #24
    23f8:	32006b63 	andcc	r6, r0, #101376	; 0x18c00
    23fc:	44435030 	strbmi	r5, [r3], #-48	; 0xffffffd0
    2400:	4d504c5f 	ldclmi	12, cr4, [r0, #-380]	; 0xfffffe84
    2404:	6174535f 	cmnvs	r4, pc, asr r3
    2408:	79546574 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
    240c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    2410:	78740066 	ldmdavc	r4!, {r1, r2, r5, r6}^
    2414:	6669665f 			; <UNDEFINED> instruction: 0x6669665f
    2418:	756e5f6f 	strbvc	r5, [lr, #-3951]!	; 0xfffff091
    241c:	4944006d 	stmdbmi	r4, {r0, r2, r3, r5, r6}^
    2420:	58545045 	ldmdapl	r4, {r0, r2, r6, ip, lr}^
    2424:	485f3046 	ldmdami	pc, {r1, r2, r6, ip, sp}^	; <UNPREDICTABLE>
    2428:	5854504e 	ldmdapl	r4, {r1, r2, r3, r6, ip, lr}^
    242c:	5a495346 	bpl	125714c <_Min_Stack_Size+0x1256d4c>
    2430:	50555000 	subspl	r5, r5, r0
    2434:	00425244 	subeq	r5, r2, r4, asr #4
    2438:	66587854 			; <UNDEFINED> instruction: 0x66587854
    243c:	69537265 	ldmdbvs	r3, {r0, r2, r5, r6, r9, ip, sp, lr}^
    2440:	4800657a 	stmdami	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2444:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 180b <_Min_Stack_Size+0x140b>
    2448:	5f545241 	svcpl	0x00545241
    244c:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    2450:	49545f45 	ldmdbmi	r4, {r0, r2, r6, r8, r9, sl, fp, ip, lr}^
    2454:	554f454d 	strbpl	r4, [pc, #-1357]	; 1f0f <_Min_Stack_Size+0x1b0f>
    2458:	50480054 	subpl	r0, r8, r4, asr r0
    245c:	53465854 	movtpl	r5, #26708	; 0x6854
    2460:	5f005a49 	svcpl	0x00005a49
    2464:	414d445f 	cmpmi	sp, pc, asr r4
    2468:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
    246c:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    2470:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    2474:	48006665 	stmdami	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
    2478:	505f4c41 	subspl	r4, pc, r1, asr #24
    247c:	535f4443 	cmppl	pc, #1124073472	; 0x43000000
    2480:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
    2484:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
    2488:	4f00524f 	svcmi	0x0000524f
    248c:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
    2490:	48004252 	stmdami	r0, {r1, r4, r6, r9, lr}
    2494:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 185b <_Min_Stack_Size+0x145b>
    2498:	434f4c4e 	movtmi	r4, #64590	; 0xfc4e
    249c:	0044454b 	subeq	r4, r4, fp, asr #10
    24a0:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
    24a4:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    24a8:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    24ac:	6b636162 	blvs	18daa3c <_Min_Stack_Size+0x18da63c>
    24b0:	42535500 	subsmi	r5, r3, #0, 10
    24b4:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
    24b8:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    24bc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    24c0:	4443505f 	strbmi	r5, [r3], #-95	; 0xffffffa1
    24c4:	4154535f 	cmpmi	r4, pc, asr r3
    24c8:	545f4554 	ldrbpl	r4, [pc], #-1364	; 24d0 <_Min_Stack_Size+0x20d0>
    24cc:	4f454d49 	svcmi	0x00454d49
    24d0:	31005455 	tstcc	r0, r5, asr r4
    24d4:	4c414835 	mcrrmi	8, 3, r4, r1, cr5
    24d8:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
    24dc:	7079546b 	rsbsvc	r5, r9, fp, ror #8
    24e0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    24e4:	58785400 	ldmdapl	r8!, {sl, ip, lr}^
    24e8:	43726566 	cmnmi	r2, #427819008	; 0x19800000
    24ec:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    24f0:	79687000 	stmdbvc	r8!, {ip, sp, lr}^
    24f4:	6674695f 			; <UNDEFINED> instruction: 0x6674695f
    24f8:	00656361 	rsbeq	r6, r5, r1, ror #6
    24fc:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    2500:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
    2504:	65520035 	ldrbvs	r0, [r2, #-53]	; 0xffffffcb
    2508:	76726573 			; <UNDEFINED> instruction: 0x76726573
    250c:	00366465 	eorseq	r6, r6, r5, ror #8
    2510:	5f4c4148 	svcpl	0x004c4148
    2514:	5f414d44 	svcpl	0x00414d44
    2518:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    251c:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
    2520:	53005953 	movwpl	r5, #2387	; 0x953
    2524:	61657274 	smcvs	22308	; 0x5724
    2528:	7361426d 	cmnvc	r1, #-805306362	; 0xd0000006
    252c:	64644165 	strbtvs	r4, [r4], #-357	; 0xfffffe9b
    2530:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2534:	53785200 	cmnpl	r8, #0, 4
    2538:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    253c:	41304d00 	teqmi	r0, r0, lsl #26
    2540:	33310052 	teqcc	r1, #82	; 0x52
    2544:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    2548:	79545f54 	ldmdbvc	r4, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    254c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    2550:	616d0066 	cmnvs	sp, r6, rrx
    2554:	63617078 	cmnvs	r1, #120	; 0x78
    2558:	0074656b 	rsbseq	r6, r4, fp, ror #10
    255c:	5f657375 	svcpl	0x00657375
    2560:	65747865 	ldrbvs	r7, [r4, #-2149]!	; 0xfffff79b
    2564:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
    2568:	7562765f 	strbvc	r7, [r2, #-1631]!	; 0xfffff9a1
    256c:	61620073 	smcvs	8195	; 0x2003
    2570:	72657474 	rsbvc	r7, r5, #116, 8	; 0x74000000
    2574:	68635f79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2578:	69677261 	stmdbvs	r7!, {r0, r5, r6, r9, ip, sp, lr}^
    257c:	615f676e 	cmpvs	pc, lr, ror #14
    2580:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    2584:	41480065 	cmpmi	r8, r5, rrx
    2588:	41555f4c 	cmpmi	r5, ip, asr #30
    258c:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
    2590:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
    2594:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
    2598:	6900524f 	stmdbvs	r0, {r0, r1, r2, r3, r6, r9, ip, lr}
    259c:	6e695f73 	mcrvs	15, 3, r5, cr9, cr3, {3}
    25a0:	4e494700 	cdpmi	7, 4, cr4, cr9, cr0, {0}
    25a4:	53545354 	cmppl	r4, #84, 6	; 0x50000001
    25a8:	736f4800 	cmnvc	pc, #0, 16
    25ac:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    25b0:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
    25b4:	4800736c 	stmdami	r0, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    25b8:	5854504e 	ldmdapl	r4, {r1, r2, r3, r6, ip, lr}^
    25bc:	00535453 	subseq	r5, r3, r3, asr r4
    25c0:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
    25c4:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    25c8:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    25cc:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    25d0:	6b636162 	blvs	18dab60 <_Min_Stack_Size+0x18da760>
    25d4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    25d8:	4443505f 	strbmi	r5, [r3], #-95	; 0xffffffa1
    25dc:	4154535f 	cmpmi	r4, pc, asr r3
    25e0:	425f4554 	subsmi	r4, pc, #84, 10	; 0x15000000
    25e4:	00595355 	subseq	r5, r9, r5, asr r3
    25e8:	5f4c4148 	svcpl	0x004c4148
    25ec:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    25f0:	4154535f 	cmpmi	r4, pc, asr r3
    25f4:	425f4554 	subsmi	r4, pc, #84, 10	; 0x15000000
    25f8:	00595355 	subseq	r5, r9, r5, asr r3
    25fc:	5f4c4148 	svcpl	0x004c4148
    2600:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    2604:	4154535f 	cmpmi	r4, pc, asr r3
    2608:	425f4554 	subsmi	r4, pc, #84, 10	; 0x15000000
    260c:	5f595355 	svcpl	0x00595355
    2610:	525f5854 	subspl	r5, pc, #84, 16	; 0x540000
    2614:	66780058 			; <UNDEFINED> instruction: 0x66780058
    2618:	635f7265 	cmpvs	pc, #1342177286	; 0x50000006
    261c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    2620:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2624:	434f4c5f 	movtmi	r4, #64607	; 0xfc5f
    2628:	0044454b 	subeq	r4, r4, fp, asr #10
    262c:	5f4c4148 	svcpl	0x004c4148
    2630:	5f414d44 	svcpl	0x00414d44
    2634:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    2638:	45525f45 	ldrbmi	r5, [r2, #-3909]	; 0xfffff0bb
    263c:	00594441 	subseq	r4, r9, r1, asr #8
    2640:	5f6d706c 	svcpl	0x006d706c
    2644:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
    2648:	4e00656c 	cfsh32mi	mvfx6, mvfx0, #60
    264c:	00525444 	subseq	r5, r2, r4, asr #8
    2650:	74614470 	strbtvc	r4, [r1], #-1136	; 0xfffffb90
    2654:	55470061 	strbpl	r0, [r7, #-97]	; 0xffffff9f
    2658:	46434253 			; <UNDEFINED> instruction: 0x46434253
    265c:	41480047 	cmpmi	r8, r7, asr #32
    2660:	43505f4c 	cmpmi	r0, #76, 30	; 0x130
    2664:	54535f44 	ldrbpl	r5, [r3], #-3908	; 0xfffff0bc
    2668:	5f455441 	svcpl	0x00455441
    266c:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
    2670:	Address 0x0000000000002670 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_Min_Stack_Size+0x10d0924>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
   8:	72412055 	subvc	r2, r1, #85	; 0x55
  __HAL_FLASH_DATA_CACHE_ENABLE();
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  HAL_InitTick(TICK_INT_PRIORITY);
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  HAL_MspInit();
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
}
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
  *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL);
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL);
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
  __HAL_FLASH_DATA_CACHE_ENABLE();
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	0000000c 	andeq	r0, r0, ip
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
      14:	00000000 	andeq	r0, r0, r0
      18:	08000204 	stmdaeq	r0, {r2, r9}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
      1c:	00000002 	andeq	r0, r0, r2
      20:	0000000c 	andeq	r0, r0, ip
  HAL_InitTick(TICK_INT_PRIORITY);
      24:	00000000 	andeq	r0, r0, r0
  HAL_MspInit();
      28:	08000206 	stmdaeq	r0, {r1, r2, r9}
}
      2c:	00000002 	andeq	r0, r0, r2
      30:	0000000c 	andeq	r0, r0, ip
  *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL);
      34:	00000000 	andeq	r0, r0, r0
      38:	08000208 	stmdaeq	r0, {r3, r9}
      3c:	00000002 	andeq	r0, r0, r2
  *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL);
      40:	0000000c 	andeq	r0, r0, ip
      44:	00000000 	andeq	r0, r0, r0
      48:	0800020a 	stmdaeq	r0, {r1, r3, r9}
    return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
      4c:	00000002 	andeq	r0, r0, r2
      50:	0000000c 	andeq	r0, r0, ip
      54:	00000000 	andeq	r0, r0, r0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
      58:	0800020c 	stmdaeq	r0, {r2, r3, r9}
      5c:	00000002 	andeq	r0, r0, r2
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	0000000c 	andeq	r0, r0, ip
      64:	00000000 	andeq	r0, r0, r0
      68:	0800020e 	stmdaeq	r0, {r1, r2, r3, r9}
      SystemCoreClock = pllvco/pllp;
      6c:	00000002 	andeq	r0, r0, r2
      70:	0000000c 	andeq	r0, r0, ip
      break;
      74:	00000000 	andeq	r0, r0, r0
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	08000210 	stmdaeq	r0, {r4, r9}
      7c:	00000002 	andeq	r0, r0, r2
      80:	0000000c 	andeq	r0, r0, ip
      84:	00000000 	andeq	r0, r0, r0
      88:	08000212 	stmdaeq	r0, {r1, r4, r9}
      8c:	00000002 	andeq	r0, r0, r2
      90:	00000014 	andeq	r0, r0, r4, lsl r0
      94:	00000000 	andeq	r0, r0, r0
      98:	08000214 	stmdaeq	r0, {r2, r4, r9}
      9c:	00000008 	andeq	r0, r0, r8
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
      a0:	83080e41 	movwhi	r0, #36417	; 0x8e41
      a4:	00018e02 	andeq	r8, r1, r2, lsl #28
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
      a8:	0000000c 	andeq	r0, r0, ip
      ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      b0:	7c020001 	stcvc	0, cr0, [r2], {1}
      b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      b8:	0000000c 	andeq	r0, r0, ip
  if((plli2sused == 1U) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
      bc:	000000a8 	andeq	r0, r0, r8, lsr #1
      c0:	00000000 	andeq	r0, r0, r0
      c4:	00000004 	andeq	r0, r0, r4
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
      c8:	00000034 	andeq	r0, r0, r4, lsr r0
      cc:	000000a8 	andeq	r0, r0, r8, lsr #1
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
      d0:	00000000 	andeq	r0, r0, r0
      d4:	00000408 	andeq	r0, r0, r8, lsl #8
      d8:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
      dc:	86038504 	strhi	r8, [r3], -r4, lsl #10
      e0:	41018e02 	tstmi	r1, r2, lsl #28
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1_AUDIO) == RCC_PERIPHCLK_DFSDM1_AUDIO)
      e4:	e003180e 	and	r1, r3, lr, lsl #16
      e8:	c4000e01 	strgt	r0, [r0], #-3585	; 0xfffff1ff
    __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
      ec:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
      f0:	0484180e 	streq	r1, [r4], #2062	; 0x80e
      f4:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
      f8:	0a46018e 	beq	1180738 <_Min_Stack_Size+0x1180338>
      fc:	0b41100e 	bleq	104413c <_Min_Stack_Size+0x1043d3c>
}
     100:	00000020 	andeq	r0, r0, r0, lsr #32
      plli2sused = 1U;
     104:	000000a8 	andeq	r0, r0, r8, lsr #1
    __HAL_RCC_PWR_CLK_ENABLE();
     108:	00000000 	andeq	r0, r0, r0
     10c:	0000009c 	muleq	r0, ip, r0
     110:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     114:	86038504 	strhi	r8, [r3], -r4, lsl #10
     118:	41018e02 	tstmi	r1, r2, lsl #28
     11c:	0a63300e 	beq	18cc15c <_Min_Stack_Size+0x18cbd5c>
    PWR->CR |= PWR_CR_DBP;
     120:	0b41100e 	bleq	1044160 <_Min_Stack_Size+0x1043d60>
     124:	0000000c 	andeq	r0, r0, ip
     128:	000000a8 	andeq	r0, r0, r8, lsr #1
    tickstart = HAL_GetTick();
     12c:	00000000 	andeq	r0, r0, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
     130:	0000000c 	andeq	r0, r0, ip
     134:	0000000c 	andeq	r0, r0, ip
     138:	000000a8 	andeq	r0, r0, r8, lsr #1
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
     13c:	00000000 	andeq	r0, r0, r0
     140:	0000000c 	andeq	r0, r0, ip
        return HAL_TIMEOUT;
     144:	00000014 	andeq	r0, r0, r4, lsl r0
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
     148:	000000a8 	andeq	r0, r0, r8, lsr #1
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
     14c:	0800021c 	stmdaeq	r0, {r2, r3, r4, r9}
     150:	000000d4 	ldrdeq	r0, [r0], -r4
     154:	83080e41 	movwhi	r0, #36417	; 0x8e41
     158:	00018e02 	andeq	r8, r1, r2, lsl #28
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
     15c:	0000002c 	andeq	r0, r0, ip, lsr #32
     160:	000000a8 	andeq	r0, r0, r8, lsr #1
      __HAL_RCC_BACKUPRESET_FORCE();
     164:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
     168:	00000160 	andeq	r0, r0, r0, ror #2
      __HAL_RCC_BACKUPRESET_RELEASE();
     16c:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     170:	86038504 	strhi	r8, [r3], -r4, lsl #10
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
     174:	02018e02 	andeq	r8, r1, #2, 28
     178:	c4000e9a 	strgt	r0, [r0], #-3738	; 0xfffff166
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
     17c:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     180:	0484100e 	streq	r1, [r4], #14
     184:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     188:	0000018e 	andeq	r0, r0, lr, lsl #3
     18c:	0000000c 	andeq	r0, r0, ip
     190:	000000a8 	andeq	r0, r0, r8, lsr #1
     194:	00000000 	andeq	r0, r0, r0
     198:	0000000c 	andeq	r0, r0, ip
     19c:	00000014 	andeq	r0, r0, r4, lsl r0
     1a0:	000000a8 	andeq	r0, r0, r8, lsr #1
        tickstart = HAL_GetTick();
     1a4:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     1a8:	00000020 	andeq	r0, r0, r0, lsr #32
     1ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
     1b0:	00018e02 	andeq	r8, r1, r2, lsl #28
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     1b4:	00000014 	andeq	r0, r0, r4, lsl r0
     1b8:	000000a8 	andeq	r0, r0, r8, lsr #1
     1bc:	00000000 	andeq	r0, r0, r0
            return HAL_TIMEOUT;
     1c0:	00000020 	andeq	r0, r0, r0, lsr #32
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
     1c4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     1c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     1cc:	0000000c 	andeq	r0, r0, ip
     1d0:	000000a8 	andeq	r0, r0, r8, lsr #1
     1d4:	00000000 	andeq	r0, r0, r0
     1d8:	000000cc 	andeq	r0, r0, ip, asr #1
      plli2sused = 1U;
     1dc:	0000000c 	andeq	r0, r0, ip
    __HAL_RCC_PLLI2S_DISABLE();
     1e0:	000000a8 	andeq	r0, r0, r8, lsr #1
    tickstart = HAL_GetTick();
     1e4:	00000000 	andeq	r0, r0, r0
     1e8:	0000003c 	andeq	r0, r0, ip, lsr r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
     1ec:	0000000c 	andeq	r0, r0, ip
     1f0:	000000a8 	andeq	r0, r0, r8, lsr #1
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
     1f4:	00000000 	andeq	r0, r0, r0
     1f8:	00000002 	andeq	r0, r0, r2
     1fc:	00000014 	andeq	r0, r0, r4, lsl r0
        return HAL_TIMEOUT;
     200:	000000a8 	andeq	r0, r0, r8, lsr #1
    __HAL_RCC_PLL_I2S_CONFIG(PeriphClkInit->PLLI2SSelection);
     204:	00000000 	andeq	r0, r0, r0
     208:	00000020 	andeq	r0, r0, r0, lsr #32
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB1) == RCC_PERIPHCLK_I2S_APB1) && (PeriphClkInit->I2sApb1ClockSelection == RCC_I2SAPB1CLKSOURCE_PLLI2S)) ||
     20c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     210:	00018e02 	andeq	r8, r1, r2, lsl #28
     214:	0000000c 	andeq	r0, r0, ip
     218:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB2) == RCC_PERIPHCLK_I2S_APB2) && (PeriphClkInit->I2sApb2ClockSelection == RCC_I2SAPB2CLKSOURCE_PLLI2S)) ||
     21c:	7c020001 	stcvc	0, cr0, [r2], {1}
     220:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     224:	00000024 	andeq	r0, r0, r4, lsr #32
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)) ||
     228:	00000214 	andeq	r0, r0, r4, lsl r2
     22c:	00000000 	andeq	r0, r0, r0
     230:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO) && (PeriphClkInit->SdioClockSelection == RCC_SDIOCLKSOURCE_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)))
     234:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     238:	86038504 	strhi	r8, [r3], -r4, lsl #10
     23c:	41018e02 	tstmi	r1, r2, lsl #28
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
     240:	7f02180e 	svcvc	0x0002180e
     244:	41100e0a 	tstmi	r0, sl, lsl #28
     248:	0000000b 	andeq	r0, r0, fp
     24c:	0000000c 	andeq	r0, r0, ip
     250:	00000214 	andeq	r0, r0, r4, lsl r2
     254:	00000000 	andeq	r0, r0, r0
     258:	000000a4 	andeq	r0, r0, r4, lsr #1
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
     25c:	0000000c 	andeq	r0, r0, ip
     260:	00000214 	andeq	r0, r0, r4, lsl r2
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
     264:	00000000 	andeq	r0, r0, r0
     268:	000001e8 	andeq	r0, r0, r8, ror #3
     26c:	0000000c 	andeq	r0, r0, ip
     270:	00000214 	andeq	r0, r0, r4, lsl r2
     274:	00000000 	andeq	r0, r0, r0
     278:	00000020 	andeq	r0, r0, r0, lsr #32
    __HAL_RCC_PLLI2S_ENABLE();
     27c:	00000018 	andeq	r0, r0, r8, lsl r0
     280:	00000214 	andeq	r0, r0, r4, lsl r2
    tickstart = HAL_GetTick();
     284:	00000000 	andeq	r0, r0, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
     288:	00000074 	andeq	r0, r0, r4, ror r0
     28c:	83100e41 	tsthi	r0, #1040	; 0x410
     290:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
     294:	00018e02 	andeq	r8, r1, r2, lsl #28
     298:	00000014 	andeq	r0, r0, r4, lsl r0
     29c:	00000214 	andeq	r0, r0, r4, lsl r2
        return HAL_TIMEOUT;
     2a0:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
     2a4:	00000034 	andeq	r0, r0, r4, lsr r0
     2a8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     2ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     2b0:	00000018 	andeq	r0, r0, r8, lsl r0
     2b4:	00000214 	andeq	r0, r0, r4, lsl r2
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2b8:	00000000 	andeq	r0, r0, r0
     2bc:	00000138 	andeq	r0, r0, r8, lsr r1
          return HAL_TIMEOUT;
     2c0:	83100e41 	tsthi	r0, #1040	; 0x410
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     2c4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     2c8:	00018e02 	andeq	r8, r1, r2, lsl #28
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     2cc:	00000034 	andeq	r0, r0, r4, lsr r0
     2d0:	00000214 	andeq	r0, r0, r4, lsl r2
     2d4:	08000450 	stmdaeq	r0, {r4, r6, sl}
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     2d8:	00000410 	andeq	r0, r0, r0, lsl r4
        __HAL_RCC_PLL_DISABLE();
     2dc:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     2e0:	86038504 	strhi	r8, [r3], -r4, lsl #10
        tickstart = HAL_GetTick();
     2e4:	41018e02 	tstmi	r1, r2, lsl #28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     2e8:	e303180e 	movw	r1, #14350	; 0x380e
     2ec:	c4000e01 	strgt	r0, [r0], #-3585	; 0xfffff1ff
     2f0:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     2f4:	0484180e 	streq	r1, [r4], #2062	; 0x80e
     2f8:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
            return HAL_TIMEOUT;
     2fc:	0a46018e 	beq	118093c <_Min_Stack_Size+0x118053c>
      __HAL_RCC_PWR_CLK_DISABLE();
     300:	0b41100e 	bleq	1044340 <_Min_Stack_Size+0x1043f40>
     304:	0000000c 	andeq	r0, r0, ip
     308:	00000214 	andeq	r0, r0, r4, lsl r2
        __HAL_RCC_PLL_DISABLE();
     30c:	00000000 	andeq	r0, r0, r0
     310:	000000d4 	ldrdeq	r0, [r0], -r4
        tickstart = HAL_GetTick();
     314:	0000000c 	andeq	r0, r0, ip
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     318:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     31c:	7c020001 	stcvc	0, cr0, [r2], {1}
     320:	000d0c0e 	andeq	r0, sp, lr, lsl #24
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     324:	0000000c 	andeq	r0, r0, ip
     328:	00000314 	andeq	r0, r0, r4, lsl r3
            return HAL_TIMEOUT;
     32c:	00000000 	andeq	r0, r0, r0
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     330:	00000024 	andeq	r0, r0, r4, lsr #32
     334:	00000014 	andeq	r0, r0, r4, lsl r0
     338:	00000314 	andeq	r0, r0, r4, lsl r3
     33c:	08000860 	stmdaeq	r0, {r5, r6, fp}
     340:	00000070 	andeq	r0, r0, r0, ror r0
     344:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     348:	00000001 	andeq	r0, r0, r1
     34c:	0000000c 	andeq	r0, r0, ip
        __HAL_RCC_PLL_ENABLE();
     350:	00000314 	andeq	r0, r0, r4, lsl r3
     354:	00000000 	andeq	r0, r0, r0
        tickstart = HAL_GetTick();
     358:	0000001c 	andeq	r0, r0, ip, lsl r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     35c:	0000000c 	andeq	r0, r0, ip
     360:	00000314 	andeq	r0, r0, r4, lsl r3
     364:	00000000 	andeq	r0, r0, r0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     368:	00000024 	andeq	r0, r0, r4, lsr #32
     36c:	0000000c 	andeq	r0, r0, ip
            return HAL_TIMEOUT;
     370:	00000314 	andeq	r0, r0, r4, lsl r3
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     374:	00000000 	andeq	r0, r0, r0
        pll_config = RCC->PLLCFGR;
     378:	00000024 	andeq	r0, r0, r4, lsr #32
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     37c:	0000000c 	andeq	r0, r0, ip
     380:	00000314 	andeq	r0, r0, r4, lsl r3
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     384:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     388:	00000028 	andeq	r0, r0, r8, lsr #32
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     38c:	0000000c 	andeq	r0, r0, ip
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     390:	00000314 	andeq	r0, r0, r4, lsl r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     394:	00000000 	andeq	r0, r0, r0
     398:	0000001c 	andeq	r0, r0, ip, lsl r0
     39c:	0000000c 	andeq	r0, r0, ip
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     3a0:	00000314 	andeq	r0, r0, r4, lsl r3
     3a4:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     3a8:	00000020 	andeq	r0, r0, r0, lsr #32
     3ac:	0000000c 	andeq	r0, r0, ip
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
     3b0:	00000314 	andeq	r0, r0, r4, lsl r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     3b4:	00000000 	andeq	r0, r0, r0
     3b8:	00000060 	andeq	r0, r0, r0, rrx
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
     3bc:	0000000c 	andeq	r0, r0, ip
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
     3c0:	00000314 	andeq	r0, r0, r4, lsl r3
     3c4:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
     3c8:	00000010 	andeq	r0, r0, r0, lsl r0
}
     3cc:	00000014 	andeq	r0, r0, r4, lsl r0
        return HAL_ERROR;
     3d0:	00000314 	andeq	r0, r0, r4, lsl r3
        return HAL_ERROR;
     3d4:	00000000 	andeq	r0, r0, r0
}
     3d8:	00000060 	andeq	r0, r0, r0, rrx
  return HAL_OK;
     3dc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     3e0:	00018e02 	andeq	r8, r1, r2, lsl #28
        return HAL_ERROR;
     3e4:	0000000c 	andeq	r0, r0, ip
          return HAL_ERROR;
     3e8:	00000314 	andeq	r0, r0, r4, lsl r3
     3ec:	00000000 	andeq	r0, r0, r0
     3f0:	0000001c 	andeq	r0, r0, ip, lsl r0
     3f4:	0000000c 	andeq	r0, r0, ip
     3f8:	00000314 	andeq	r0, r0, r4, lsl r3
     3fc:	00000000 	andeq	r0, r0, r0
     400:	00000024 	andeq	r0, r0, r4, lsr #32
     404:	0000000c 	andeq	r0, r0, ip
     408:	00000314 	andeq	r0, r0, r4, lsl r3
     40c:	00000000 	andeq	r0, r0, r0
     410:	0000001c 	andeq	r0, r0, ip, lsl r0
     414:	0000000c 	andeq	r0, r0, ip
     418:	00000314 	andeq	r0, r0, r4, lsl r3
     41c:	00000000 	andeq	r0, r0, r0
     420:	00000024 	andeq	r0, r0, r4, lsr #32
     424:	0000000c 	andeq	r0, r0, ip
     428:	00000314 	andeq	r0, r0, r4, lsl r3
     42c:	00000000 	andeq	r0, r0, r0
     430:	00000020 	andeq	r0, r0, r0, lsr #32
     434:	0000000c 	andeq	r0, r0, ip
     438:	00000314 	andeq	r0, r0, r4, lsl r3
     43c:	00000000 	andeq	r0, r0, r0
     440:	00000002 	andeq	r0, r0, r2
     444:	00000014 	andeq	r0, r0, r4, lsl r0
     448:	00000314 	andeq	r0, r0, r4, lsl r3
     44c:	00000000 	andeq	r0, r0, r0
     450:	00000008 	andeq	r0, r0, r8
     454:	83080e41 	movwhi	r0, #36417	; 0x8e41
     458:	00018e02 	andeq	r8, r1, r2, lsl #28
     45c:	0000000c 	andeq	r0, r0, ip
     460:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     464:	7c020001 	stcvc	0, cr0, [r2], {1}
     468:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     46c:	0000000c 	andeq	r0, r0, ip
     470:	0000045c 	andeq	r0, r0, ip, asr r4
     474:	00000000 	andeq	r0, r0, r0
     478:	00000002 	andeq	r0, r0, r2
     47c:	0000000c 	andeq	r0, r0, ip
     480:	0000045c 	andeq	r0, r0, ip, asr r4
     484:	00000000 	andeq	r0, r0, r0
     488:	00000002 	andeq	r0, r0, r2
     48c:	00000014 	andeq	r0, r0, r4, lsl r0
     490:	0000045c 	andeq	r0, r0, ip, asr r4
     494:	00000000 	andeq	r0, r0, r0
     498:	0000002c 	andeq	r0, r0, ip, lsr #32
     49c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     4a0:	00018e02 	andeq	r8, r1, r2, lsl #28
     4a4:	00000014 	andeq	r0, r0, r4, lsl r0
     4a8:	0000045c 	andeq	r0, r0, ip, asr r4
     4ac:	080008f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp}
     4b0:	0000004c 	andeq	r0, r0, ip, asr #32
     4b4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     4b8:	00018e02 	andeq	r8, r1, r2, lsl #28
     4bc:	00000014 	andeq	r0, r0, r4, lsl r0
     4c0:	0000045c 	andeq	r0, r0, ip, asr r4
     4c4:	00000000 	andeq	r0, r0, r0
     4c8:	00000034 	andeq	r0, r0, r4, lsr r0
     4cc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     4d4:	0000000c 	andeq	r0, r0, ip
     4d8:	0000045c 	andeq	r0, r0, ip, asr r4
     4dc:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
     4e0:	00000018 	andeq	r0, r0, r8, lsl r0
     4e4:	0000000c 	andeq	r0, r0, ip
     4e8:	0000045c 	andeq	r0, r0, ip, asr r4
     4ec:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
     4f0:	0000000c 	andeq	r0, r0, ip
     4f4:	0000000c 	andeq	r0, r0, ip
     4f8:	0000045c 	andeq	r0, r0, ip, asr r4
     4fc:	00000000 	andeq	r0, r0, r0
     500:	0000000c 	andeq	r0, r0, ip
     504:	00000014 	andeq	r0, r0, r4, lsl r0
     508:	0000045c 	andeq	r0, r0, ip, asr r4
     50c:	00000000 	andeq	r0, r0, r0
     510:	0000002c 	andeq	r0, r0, ip, lsr #32
     514:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     518:	00018e02 	andeq	r8, r1, r2, lsl #28
     51c:	0000000c 	andeq	r0, r0, ip
     520:	0000045c 	andeq	r0, r0, ip, asr r4
     524:	00000000 	andeq	r0, r0, r0
     528:	0000000c 	andeq	r0, r0, ip
     52c:	00000018 	andeq	r0, r0, r8, lsl r0
     530:	0000045c 	andeq	r0, r0, ip, asr r4
     534:	08000968 	stmdaeq	r0, {r3, r5, r6, r8, fp}
     538:	00000028 	andeq	r0, r0, r8, lsr #32
     53c:	83100e41 	tsthi	r0, #1040	; 0x410
     540:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     544:	00018e02 	andeq	r8, r1, r2, lsl #28
     548:	0000000c 	andeq	r0, r0, ip
     54c:	0000045c 	andeq	r0, r0, ip, asr r4
     550:	00000000 	andeq	r0, r0, r0
     554:	0000000e 	andeq	r0, r0, lr
     558:	0000000c 	andeq	r0, r0, ip
     55c:	0000045c 	andeq	r0, r0, ip, asr r4
     560:	00000000 	andeq	r0, r0, r0
     564:	0000000e 	andeq	r0, r0, lr
     568:	0000000c 	andeq	r0, r0, ip
     56c:	0000045c 	andeq	r0, r0, ip, asr r4
     570:	00000000 	andeq	r0, r0, r0
     574:	00000008 	andeq	r0, r0, r8
     578:	0000000c 	andeq	r0, r0, ip
     57c:	0000045c 	andeq	r0, r0, ip, asr r4
     580:	00000000 	andeq	r0, r0, r0
     584:	0000000c 	andeq	r0, r0, ip
     588:	0000000c 	andeq	r0, r0, ip
     58c:	0000045c 	andeq	r0, r0, ip, asr r4
     590:	00000000 	andeq	r0, r0, r0
     594:	00000010 	andeq	r0, r0, r0, lsl r0
     598:	0000000c 	andeq	r0, r0, ip
     59c:	0000045c 	andeq	r0, r0, ip, asr r4
     5a0:	00000000 	andeq	r0, r0, r0
     5a4:	00000010 	andeq	r0, r0, r0, lsl r0
     5a8:	0000000c 	andeq	r0, r0, ip
     5ac:	0000045c 	andeq	r0, r0, ip, asr r4
     5b0:	00000000 	andeq	r0, r0, r0
     5b4:	00000010 	andeq	r0, r0, r0, lsl r0
     5b8:	0000000c 	andeq	r0, r0, ip
     5bc:	0000045c 	andeq	r0, r0, ip, asr r4
     5c0:	00000000 	andeq	r0, r0, r0
     5c4:	00000010 	andeq	r0, r0, r0, lsl r0
     5c8:	0000000c 	andeq	r0, r0, ip
     5cc:	0000045c 	andeq	r0, r0, ip, asr r4
     5d0:	00000000 	andeq	r0, r0, r0
     5d4:	00000010 	andeq	r0, r0, r0, lsl r0
     5d8:	0000000c 	andeq	r0, r0, ip
     5dc:	0000045c 	andeq	r0, r0, ip, asr r4
     5e0:	00000000 	andeq	r0, r0, r0
     5e4:	00000010 	andeq	r0, r0, r0, lsl r0
     5e8:	0000000c 	andeq	r0, r0, ip
     5ec:	0000045c 	andeq	r0, r0, ip, asr r4
     5f0:	00000000 	andeq	r0, r0, r0
     5f4:	00000010 	andeq	r0, r0, r0, lsl r0
     5f8:	0000000c 	andeq	r0, r0, ip
     5fc:	0000045c 	andeq	r0, r0, ip, asr r4
     600:	00000000 	andeq	r0, r0, r0
     604:	00000010 	andeq	r0, r0, r0, lsl r0
     608:	0000000c 	andeq	r0, r0, ip
     60c:	0000045c 	andeq	r0, r0, ip, asr r4
     610:	00000000 	andeq	r0, r0, r0
     614:	00000010 	andeq	r0, r0, r0, lsl r0
     618:	0000000c 	andeq	r0, r0, ip
     61c:	0000045c 	andeq	r0, r0, ip, asr r4
     620:	00000000 	andeq	r0, r0, r0
     624:	0000000c 	andeq	r0, r0, ip
     628:	0000000c 	andeq	r0, r0, ip
     62c:	0000045c 	andeq	r0, r0, ip, asr r4
     630:	00000000 	andeq	r0, r0, r0
     634:	0000000c 	andeq	r0, r0, ip
     638:	0000000c 	andeq	r0, r0, ip
     63c:	0000045c 	andeq	r0, r0, ip, asr r4
     640:	00000000 	andeq	r0, r0, r0
     644:	0000000c 	andeq	r0, r0, ip
     648:	0000000c 	andeq	r0, r0, ip
     64c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     650:	7c020001 	stcvc	0, cr0, [r2], {1}
     654:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     658:	0000000c 	andeq	r0, r0, ip
     65c:	00000648 	andeq	r0, r0, r8, asr #12
     660:	00000000 	andeq	r0, r0, r0
     664:	00000014 	andeq	r0, r0, r4, lsl r0
     668:	0000000c 	andeq	r0, r0, ip
     66c:	00000648 	andeq	r0, r0, r8, asr #12
     670:	00000000 	andeq	r0, r0, r0
     674:	000000a0 	andeq	r0, r0, r0, lsr #1
     678:	0000000c 	andeq	r0, r0, ip
     67c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     680:	7c020001 	stcvc	0, cr0, [r2], {1}
     684:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     688:	00000014 	andeq	r0, r0, r4, lsl r0
     68c:	00000678 	andeq	r0, r0, r8, ror r6
     690:	08000990 	stmdaeq	r0, {r4, r7, r8, fp}
     694:	00000054 	andeq	r0, r0, r4, asr r0
     698:	83080e41 	movwhi	r0, #36417	; 0x8e41
     69c:	00018e02 	andeq	r8, r1, r2, lsl #28
     6a0:	0000000c 	andeq	r0, r0, ip
     6a4:	00000678 	andeq	r0, r0, r8, ror r6
     6a8:	080009e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp}
     6ac:	00000002 	andeq	r0, r0, r2
     6b0:	00000014 	andeq	r0, r0, r4, lsl r0
     6b4:	00000678 	andeq	r0, r0, r8, ror r6
     6b8:	00000000 	andeq	r0, r0, r0
     6bc:	00000006 	andeq	r0, r0, r6
     6c0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6c4:	00018e02 	andeq	r8, r1, r2, lsl #28
     6c8:	00000014 	andeq	r0, r0, r4, lsl r0
     6cc:	00000678 	andeq	r0, r0, r8, ror r6
     6d0:	00000000 	andeq	r0, r0, r0
     6d4:	00000006 	andeq	r0, r0, r6
     6d8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6dc:	00018e02 	andeq	r8, r1, r2, lsl #28
     6e0:	00000014 	andeq	r0, r0, r4, lsl r0
     6e4:	00000678 	andeq	r0, r0, r8, ror r6
     6e8:	00000000 	andeq	r0, r0, r0
     6ec:	00000006 	andeq	r0, r0, r6
     6f0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6f4:	00018e02 	andeq	r8, r1, r2, lsl #28
     6f8:	00000014 	andeq	r0, r0, r4, lsl r0
     6fc:	00000678 	andeq	r0, r0, r8, ror r6
     700:	00000000 	andeq	r0, r0, r0
     704:	00000006 	andeq	r0, r0, r6
     708:	83080e41 	movwhi	r0, #36417	; 0x8e41
     70c:	00018e02 	andeq	r8, r1, r2, lsl #28
     710:	00000014 	andeq	r0, r0, r4, lsl r0
     714:	00000678 	andeq	r0, r0, r8, ror r6
     718:	00000000 	andeq	r0, r0, r0
     71c:	00000006 	andeq	r0, r0, r6
     720:	83080e41 	movwhi	r0, #36417	; 0x8e41
     724:	00018e02 	andeq	r8, r1, r2, lsl #28
     728:	00000014 	andeq	r0, r0, r4, lsl r0
     72c:	00000678 	andeq	r0, r0, r8, ror r6
     730:	00000000 	andeq	r0, r0, r0
     734:	00000006 	andeq	r0, r0, r6
     738:	83080e41 	movwhi	r0, #36417	; 0x8e41
     73c:	00018e02 	andeq	r8, r1, r2, lsl #28
     740:	00000014 	andeq	r0, r0, r4, lsl r0
     744:	00000678 	andeq	r0, r0, r8, ror r6
     748:	00000000 	andeq	r0, r0, r0
     74c:	00000006 	andeq	r0, r0, r6
     750:	83080e41 	movwhi	r0, #36417	; 0x8e41
     754:	00018e02 	andeq	r8, r1, r2, lsl #28
     758:	00000014 	andeq	r0, r0, r4, lsl r0
     75c:	00000678 	andeq	r0, r0, r8, ror r6
     760:	00000000 	andeq	r0, r0, r0
     764:	00000006 	andeq	r0, r0, r6
     768:	83080e41 	movwhi	r0, #36417	; 0x8e41
     76c:	00018e02 	andeq	r8, r1, r2, lsl #28
     770:	00000014 	andeq	r0, r0, r4, lsl r0
     774:	00000678 	andeq	r0, r0, r8, ror r6
     778:	00000000 	andeq	r0, r0, r0
     77c:	00000006 	andeq	r0, r0, r6
     780:	83080e41 	movwhi	r0, #36417	; 0x8e41
     784:	00018e02 	andeq	r8, r1, r2, lsl #28
     788:	00000014 	andeq	r0, r0, r4, lsl r0
     78c:	00000678 	andeq	r0, r0, r8, ror r6
     790:	080009e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, fp}
     794:	00000006 	andeq	r0, r0, r6
     798:	83080e41 	movwhi	r0, #36417	; 0x8e41
     79c:	00018e02 	andeq	r8, r1, r2, lsl #28
     7a0:	00000014 	andeq	r0, r0, r4, lsl r0
     7a4:	00000678 	andeq	r0, r0, r8, ror r6
     7a8:	080009ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, fp}
     7ac:	00000006 	andeq	r0, r0, r6
     7b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7b8:	00000014 	andeq	r0, r0, r4, lsl r0
     7bc:	00000678 	andeq	r0, r0, r8, ror r6
     7c0:	080009f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, fp}
     7c4:	00000006 	andeq	r0, r0, r6
     7c8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7cc:	00018e02 	andeq	r8, r1, r2, lsl #28
     7d0:	00000014 	andeq	r0, r0, r4, lsl r0
     7d4:	00000678 	andeq	r0, r0, r8, ror r6
     7d8:	080009f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, fp}
     7dc:	00000006 	andeq	r0, r0, r6
     7e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7e8:	00000014 	andeq	r0, r0, r4, lsl r0
     7ec:	00000678 	andeq	r0, r0, r8, ror r6
     7f0:	080009fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, fp}
     7f4:	00000006 	andeq	r0, r0, r6
     7f8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7fc:	00018e02 	andeq	r8, r1, r2, lsl #28
     800:	00000014 	andeq	r0, r0, r4, lsl r0
     804:	00000678 	andeq	r0, r0, r8, ror r6
     808:	08000a04 	stmdaeq	r0, {r2, r9, fp}
     80c:	00000006 	andeq	r0, r0, r6
     810:	83080e41 	movwhi	r0, #36417	; 0x8e41
     814:	00018e02 	andeq	r8, r1, r2, lsl #28
     818:	00000014 	andeq	r0, r0, r4, lsl r0
     81c:	00000678 	andeq	r0, r0, r8, ror r6
     820:	08000a0a 	stmdaeq	r0, {r1, r3, r9, fp}
     824:	00000006 	andeq	r0, r0, r6
     828:	83080e41 	movwhi	r0, #36417	; 0x8e41
     82c:	00018e02 	andeq	r8, r1, r2, lsl #28
     830:	00000014 	andeq	r0, r0, r4, lsl r0
     834:	00000678 	andeq	r0, r0, r8, ror r6
     838:	08000a10 	stmdaeq	r0, {r4, r9, fp}
     83c:	00000006 	andeq	r0, r0, r6
     840:	83080e41 	movwhi	r0, #36417	; 0x8e41
     844:	00018e02 	andeq	r8, r1, r2, lsl #28
     848:	00000014 	andeq	r0, r0, r4, lsl r0
     84c:	00000678 	andeq	r0, r0, r8, ror r6
     850:	08000a16 	stmdaeq	r0, {r1, r2, r4, r9, fp}
     854:	00000006 	andeq	r0, r0, r6
     858:	83080e41 	movwhi	r0, #36417	; 0x8e41
     85c:	00018e02 	andeq	r8, r1, r2, lsl #28
     860:	00000014 	andeq	r0, r0, r4, lsl r0
     864:	00000678 	andeq	r0, r0, r8, ror r6
     868:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
     86c:	00000006 	andeq	r0, r0, r6
     870:	83080e41 	movwhi	r0, #36417	; 0x8e41
     874:	00018e02 	andeq	r8, r1, r2, lsl #28
     878:	00000014 	andeq	r0, r0, r4, lsl r0
     87c:	00000678 	andeq	r0, r0, r8, ror r6
     880:	08000a22 	stmdaeq	r0, {r1, r5, r9, fp}
     884:	00000006 	andeq	r0, r0, r6
     888:	83080e41 	movwhi	r0, #36417	; 0x8e41
     88c:	00018e02 	andeq	r8, r1, r2, lsl #28
     890:	00000014 	andeq	r0, r0, r4, lsl r0
     894:	00000678 	andeq	r0, r0, r8, ror r6
     898:	08000a28 	stmdaeq	r0, {r3, r5, r9, fp}
     89c:	00000006 	andeq	r0, r0, r6
     8a0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8a4:	00018e02 	andeq	r8, r1, r2, lsl #28
     8a8:	00000014 	andeq	r0, r0, r4, lsl r0
     8ac:	00000678 	andeq	r0, r0, r8, ror r6
     8b0:	08000a2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, fp}
     8b4:	00000006 	andeq	r0, r0, r6
     8b8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8bc:	00018e02 	andeq	r8, r1, r2, lsl #28
     8c0:	00000014 	andeq	r0, r0, r4, lsl r0
     8c4:	00000678 	andeq	r0, r0, r8, ror r6
     8c8:	08000a34 	stmdaeq	r0, {r2, r4, r5, r9, fp}
     8cc:	00000006 	andeq	r0, r0, r6
     8d0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8d4:	00018e02 	andeq	r8, r1, r2, lsl #28
     8d8:	00000014 	andeq	r0, r0, r4, lsl r0
     8dc:	00000678 	andeq	r0, r0, r8, ror r6
     8e0:	08000a3a 	stmdaeq	r0, {r1, r3, r4, r5, r9, fp}
     8e4:	00000006 	andeq	r0, r0, r6
     8e8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8ec:	00018e02 	andeq	r8, r1, r2, lsl #28
     8f0:	00000014 	andeq	r0, r0, r4, lsl r0
     8f4:	00000678 	andeq	r0, r0, r8, ror r6
     8f8:	08000a40 	stmdaeq	r0, {r6, r9, fp}
     8fc:	00000006 	andeq	r0, r0, r6
     900:	83080e41 	movwhi	r0, #36417	; 0x8e41
     904:	00018e02 	andeq	r8, r1, r2, lsl #28
     908:	00000014 	andeq	r0, r0, r4, lsl r0
     90c:	00000678 	andeq	r0, r0, r8, ror r6
     910:	08000a46 	stmdaeq	r0, {r1, r2, r6, r9, fp}
     914:	00000006 	andeq	r0, r0, r6
     918:	83080e41 	movwhi	r0, #36417	; 0x8e41
     91c:	00018e02 	andeq	r8, r1, r2, lsl #28
     920:	00000014 	andeq	r0, r0, r4, lsl r0
     924:	00000678 	andeq	r0, r0, r8, ror r6
     928:	08000a4c 	stmdaeq	r0, {r2, r3, r6, r9, fp}
     92c:	00000006 	andeq	r0, r0, r6
     930:	83080e41 	movwhi	r0, #36417	; 0x8e41
     934:	00018e02 	andeq	r8, r1, r2, lsl #28
     938:	00000014 	andeq	r0, r0, r4, lsl r0
     93c:	00000678 	andeq	r0, r0, r8, ror r6
     940:	08000a52 	stmdaeq	r0, {r1, r4, r6, r9, fp}
     944:	00000006 	andeq	r0, r0, r6
     948:	83080e41 	movwhi	r0, #36417	; 0x8e41
     94c:	00018e02 	andeq	r8, r1, r2, lsl #28
     950:	00000014 	andeq	r0, r0, r4, lsl r0
     954:	00000678 	andeq	r0, r0, r8, ror r6
     958:	08000a58 	stmdaeq	r0, {r3, r4, r6, r9, fp}
     95c:	00000006 	andeq	r0, r0, r6
     960:	83080e41 	movwhi	r0, #36417	; 0x8e41
     964:	00018e02 	andeq	r8, r1, r2, lsl #28
     968:	00000014 	andeq	r0, r0, r4, lsl r0
     96c:	00000678 	andeq	r0, r0, r8, ror r6
     970:	08000a5e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r9, fp}
     974:	00000006 	andeq	r0, r0, r6
     978:	83080e41 	movwhi	r0, #36417	; 0x8e41
     97c:	00018e02 	andeq	r8, r1, r2, lsl #28
     980:	00000014 	andeq	r0, r0, r4, lsl r0
     984:	00000678 	andeq	r0, r0, r8, ror r6
     988:	08000a64 	stmdaeq	r0, {r2, r5, r6, r9, fp}
     98c:	00000006 	andeq	r0, r0, r6
     990:	83080e41 	movwhi	r0, #36417	; 0x8e41
     994:	00018e02 	andeq	r8, r1, r2, lsl #28
     998:	00000014 	andeq	r0, r0, r4, lsl r0
     99c:	00000678 	andeq	r0, r0, r8, ror r6
     9a0:	08000a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp}
     9a4:	00000006 	andeq	r0, r0, r6
     9a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     9ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     9b0:	00000014 	andeq	r0, r0, r4, lsl r0
     9b4:	00000678 	andeq	r0, r0, r8, ror r6
     9b8:	08000a70 	stmdaeq	r0, {r4, r5, r6, r9, fp}
     9bc:	00000006 	andeq	r0, r0, r6
     9c0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     9c4:	00018e02 	andeq	r8, r1, r2, lsl #28
     9c8:	00000014 	andeq	r0, r0, r4, lsl r0
     9cc:	00000678 	andeq	r0, r0, r8, ror r6
     9d0:	08000a76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, fp}
     9d4:	00000006 	andeq	r0, r0, r6
     9d8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     9dc:	00018e02 	andeq	r8, r1, r2, lsl #28
     9e0:	00000014 	andeq	r0, r0, r4, lsl r0
     9e4:	00000678 	andeq	r0, r0, r8, ror r6
     9e8:	08000a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp}
     9ec:	00000006 	andeq	r0, r0, r6
     9f0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     9f4:	00018e02 	andeq	r8, r1, r2, lsl #28
     9f8:	00000014 	andeq	r0, r0, r4, lsl r0
     9fc:	00000678 	andeq	r0, r0, r8, ror r6
     a00:	08000a82 	stmdaeq	r0, {r1, r7, r9, fp}
     a04:	00000006 	andeq	r0, r0, r6
     a08:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a10:	00000014 	andeq	r0, r0, r4, lsl r0
     a14:	00000678 	andeq	r0, r0, r8, ror r6
     a18:	08000a88 	stmdaeq	r0, {r3, r7, r9, fp}
     a1c:	00000006 	andeq	r0, r0, r6
     a20:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a24:	00018e02 	andeq	r8, r1, r2, lsl #28
     a28:	00000014 	andeq	r0, r0, r4, lsl r0
     a2c:	00000678 	andeq	r0, r0, r8, ror r6
     a30:	08000a8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, fp}
     a34:	00000006 	andeq	r0, r0, r6
     a38:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a3c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a40:	00000014 	andeq	r0, r0, r4, lsl r0
     a44:	00000678 	andeq	r0, r0, r8, ror r6
     a48:	08000a94 	stmdaeq	r0, {r2, r4, r7, r9, fp}
     a4c:	00000006 	andeq	r0, r0, r6
     a50:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a54:	00018e02 	andeq	r8, r1, r2, lsl #28
     a58:	00000014 	andeq	r0, r0, r4, lsl r0
     a5c:	00000678 	andeq	r0, r0, r8, ror r6
     a60:	08000a9a 	stmdaeq	r0, {r1, r3, r4, r7, r9, fp}
     a64:	00000006 	andeq	r0, r0, r6
     a68:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a6c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a70:	00000014 	andeq	r0, r0, r4, lsl r0
     a74:	00000678 	andeq	r0, r0, r8, ror r6
     a78:	08000aa0 	stmdaeq	r0, {r5, r7, r9, fp}
     a7c:	00000006 	andeq	r0, r0, r6
     a80:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a84:	00018e02 	andeq	r8, r1, r2, lsl #28
     a88:	00000014 	andeq	r0, r0, r4, lsl r0
     a8c:	00000678 	andeq	r0, r0, r8, ror r6
     a90:	08000aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp}
     a94:	00000006 	andeq	r0, r0, r6
     a98:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a9c:	00018e02 	andeq	r8, r1, r2, lsl #28
     aa0:	00000014 	andeq	r0, r0, r4, lsl r0
     aa4:	00000678 	andeq	r0, r0, r8, ror r6
     aa8:	08000aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp}
     aac:	00000006 	andeq	r0, r0, r6
     ab0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ab4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ab8:	00000014 	andeq	r0, r0, r4, lsl r0
     abc:	00000678 	andeq	r0, r0, r8, ror r6
     ac0:	08000ab2 	stmdaeq	r0, {r1, r4, r5, r7, r9, fp}
     ac4:	00000006 	andeq	r0, r0, r6
     ac8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     acc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ad0:	00000014 	andeq	r0, r0, r4, lsl r0
     ad4:	00000678 	andeq	r0, r0, r8, ror r6
     ad8:	08000ab8 	stmdaeq	r0, {r3, r4, r5, r7, r9, fp}
     adc:	00000006 	andeq	r0, r0, r6
     ae0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ae4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ae8:	00000014 	andeq	r0, r0, r4, lsl r0
     aec:	00000678 	andeq	r0, r0, r8, ror r6
     af0:	08000abe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, fp}
     af4:	00000006 	andeq	r0, r0, r6
     af8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     afc:	00018e02 	andeq	r8, r1, r2, lsl #28
     b00:	00000014 	andeq	r0, r0, r4, lsl r0
     b04:	00000678 	andeq	r0, r0, r8, ror r6
     b08:	08000ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp}
     b0c:	00000006 	andeq	r0, r0, r6
     b10:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b14:	00018e02 	andeq	r8, r1, r2, lsl #28
     b18:	00000014 	andeq	r0, r0, r4, lsl r0
     b1c:	00000678 	andeq	r0, r0, r8, ror r6
     b20:	08000aca 	stmdaeq	r0, {r1, r3, r6, r7, r9, fp}
     b24:	00000006 	andeq	r0, r0, r6
     b28:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b30:	00000014 	andeq	r0, r0, r4, lsl r0
     b34:	00000678 	andeq	r0, r0, r8, ror r6
     b38:	08000ad0 	stmdaeq	r0, {r4, r6, r7, r9, fp}
     b3c:	00000006 	andeq	r0, r0, r6
     b40:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b44:	00018e02 	andeq	r8, r1, r2, lsl #28
     b48:	00000014 	andeq	r0, r0, r4, lsl r0
     b4c:	00000678 	andeq	r0, r0, r8, ror r6
     b50:	08000ad6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9, fp}
     b54:	00000006 	andeq	r0, r0, r6
     b58:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b5c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b60:	00000014 	andeq	r0, r0, r4, lsl r0
     b64:	00000678 	andeq	r0, r0, r8, ror r6
     b68:	08000adc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, fp}
     b6c:	00000006 	andeq	r0, r0, r6
     b70:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b74:	00018e02 	andeq	r8, r1, r2, lsl #28
     b78:	00000014 	andeq	r0, r0, r4, lsl r0
     b7c:	00000678 	andeq	r0, r0, r8, ror r6
     b80:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
     b84:	00000006 	andeq	r0, r0, r6
     b88:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b8c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b90:	00000014 	andeq	r0, r0, r4, lsl r0
     b94:	00000678 	andeq	r0, r0, r8, ror r6
     b98:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
     b9c:	00000006 	andeq	r0, r0, r6
     ba0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ba4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ba8:	00000014 	andeq	r0, r0, r4, lsl r0
     bac:	00000678 	andeq	r0, r0, r8, ror r6
     bb0:	08000aee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, fp}
     bb4:	00000006 	andeq	r0, r0, r6
     bb8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     bbc:	00018e02 	andeq	r8, r1, r2, lsl #28
     bc0:	00000014 	andeq	r0, r0, r4, lsl r0
     bc4:	00000678 	andeq	r0, r0, r8, ror r6
     bc8:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
     bcc:	00000006 	andeq	r0, r0, r6
     bd0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     bd4:	00018e02 	andeq	r8, r1, r2, lsl #28
     bd8:	00000014 	andeq	r0, r0, r4, lsl r0
     bdc:	00000678 	andeq	r0, r0, r8, ror r6
     be0:	08000afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp}
     be4:	00000006 	andeq	r0, r0, r6
     be8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     bec:	00018e02 	andeq	r8, r1, r2, lsl #28
     bf0:	00000014 	andeq	r0, r0, r4, lsl r0
     bf4:	00000678 	andeq	r0, r0, r8, ror r6
     bf8:	08000b00 	stmdaeq	r0, {r8, r9, fp}
     bfc:	00000006 	andeq	r0, r0, r6
     c00:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c04:	00018e02 	andeq	r8, r1, r2, lsl #28
     c08:	00000014 	andeq	r0, r0, r4, lsl r0
     c0c:	00000678 	andeq	r0, r0, r8, ror r6
     c10:	08000b06 	stmdaeq	r0, {r1, r2, r8, r9, fp}
     c14:	00000006 	andeq	r0, r0, r6
     c18:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c1c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c20:	00000014 	andeq	r0, r0, r4, lsl r0
     c24:	00000678 	andeq	r0, r0, r8, ror r6
     c28:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
     c2c:	00000006 	andeq	r0, r0, r6
     c30:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c34:	00018e02 	andeq	r8, r1, r2, lsl #28
     c38:	00000014 	andeq	r0, r0, r4, lsl r0
     c3c:	00000678 	andeq	r0, r0, r8, ror r6
     c40:	08000b12 	stmdaeq	r0, {r1, r4, r8, r9, fp}
     c44:	00000006 	andeq	r0, r0, r6
     c48:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c4c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c50:	00000014 	andeq	r0, r0, r4, lsl r0
     c54:	00000678 	andeq	r0, r0, r8, ror r6
     c58:	08000b18 	stmdaeq	r0, {r3, r4, r8, r9, fp}
     c5c:	00000006 	andeq	r0, r0, r6
     c60:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c64:	00018e02 	andeq	r8, r1, r2, lsl #28
     c68:	00000014 	andeq	r0, r0, r4, lsl r0
     c6c:	00000678 	andeq	r0, r0, r8, ror r6
     c70:	08000b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp}
     c74:	00000006 	andeq	r0, r0, r6
     c78:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c7c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c80:	00000014 	andeq	r0, r0, r4, lsl r0
     c84:	00000678 	andeq	r0, r0, r8, ror r6
     c88:	08000b24 	stmdaeq	r0, {r2, r5, r8, r9, fp}
     c8c:	00000006 	andeq	r0, r0, r6
     c90:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c94:	00018e02 	andeq	r8, r1, r2, lsl #28
     c98:	00000014 	andeq	r0, r0, r4, lsl r0
     c9c:	00000678 	andeq	r0, r0, r8, ror r6
     ca0:	08000b2a 	stmdaeq	r0, {r1, r3, r5, r8, r9, fp}
     ca4:	00000006 	andeq	r0, r0, r6
     ca8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     cac:	00018e02 	andeq	r8, r1, r2, lsl #28
     cb0:	00000014 	andeq	r0, r0, r4, lsl r0
     cb4:	00000678 	andeq	r0, r0, r8, ror r6
     cb8:	08000b30 	stmdaeq	r0, {r4, r5, r8, r9, fp}
     cbc:	00000006 	andeq	r0, r0, r6
     cc0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     cc4:	00018e02 	andeq	r8, r1, r2, lsl #28
     cc8:	00000014 	andeq	r0, r0, r4, lsl r0
     ccc:	00000678 	andeq	r0, r0, r8, ror r6
     cd0:	08000b36 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, fp}
     cd4:	00000006 	andeq	r0, r0, r6
     cd8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     cdc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ce0:	00000014 	andeq	r0, r0, r4, lsl r0
     ce4:	00000678 	andeq	r0, r0, r8, ror r6
     ce8:	08000b3c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, fp}
     cec:	00000006 	andeq	r0, r0, r6
     cf0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     cf4:	00018e02 	andeq	r8, r1, r2, lsl #28
     cf8:	00000014 	andeq	r0, r0, r4, lsl r0
     cfc:	00000678 	andeq	r0, r0, r8, ror r6
     d00:	08000b42 	stmdaeq	r0, {r1, r6, r8, r9, fp}
     d04:	00000006 	andeq	r0, r0, r6
     d08:	83080e41 	movwhi	r0, #36417	; 0x8e41
     d0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d10:	00000014 	andeq	r0, r0, r4, lsl r0
     d14:	00000678 	andeq	r0, r0, r8, ror r6
     d18:	08000b48 	stmdaeq	r0, {r3, r6, r8, r9, fp}
     d1c:	00000006 	andeq	r0, r0, r6
     d20:	83080e41 	movwhi	r0, #36417	; 0x8e41
     d24:	00018e02 	andeq	r8, r1, r2, lsl #28
     d28:	00000014 	andeq	r0, r0, r4, lsl r0
     d2c:	00000678 	andeq	r0, r0, r8, ror r6
     d30:	08000b4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, fp}
     d34:	00000006 	andeq	r0, r0, r6
     d38:	83080e41 	movwhi	r0, #36417	; 0x8e41
     d3c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d40:	00000014 	andeq	r0, r0, r4, lsl r0
     d44:	00000678 	andeq	r0, r0, r8, ror r6
     d48:	08000b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp}
     d4c:	00000006 	andeq	r0, r0, r6
     d50:	83080e41 	movwhi	r0, #36417	; 0x8e41
     d54:	00018e02 	andeq	r8, r1, r2, lsl #28
     d58:	00000014 	andeq	r0, r0, r4, lsl r0
     d5c:	00000678 	andeq	r0, r0, r8, ror r6
     d60:	08000b5a 	stmdaeq	r0, {r1, r3, r4, r6, r8, r9, fp}
     d64:	00000006 	andeq	r0, r0, r6
     d68:	83080e41 	movwhi	r0, #36417	; 0x8e41
     d6c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d70:	00000014 	andeq	r0, r0, r4, lsl r0
     d74:	00000678 	andeq	r0, r0, r8, ror r6
     d78:	08000b60 	stmdaeq	r0, {r5, r6, r8, r9, fp}
     d7c:	00000006 	andeq	r0, r0, r6
     d80:	83080e41 	movwhi	r0, #36417	; 0x8e41
     d84:	00018e02 	andeq	r8, r1, r2, lsl #28
     d88:	00000014 	andeq	r0, r0, r4, lsl r0
     d8c:	00000678 	andeq	r0, r0, r8, ror r6
     d90:	08000b66 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, fp}
     d94:	00000006 	andeq	r0, r0, r6
     d98:	83080e41 	movwhi	r0, #36417	; 0x8e41
     d9c:	00018e02 	andeq	r8, r1, r2, lsl #28
     da0:	00000014 	andeq	r0, r0, r4, lsl r0
     da4:	00000678 	andeq	r0, r0, r8, ror r6
     da8:	08000b6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, fp}
     dac:	00000006 	andeq	r0, r0, r6
     db0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     db4:	00018e02 	andeq	r8, r1, r2, lsl #28
     db8:	00000014 	andeq	r0, r0, r4, lsl r0
     dbc:	00000678 	andeq	r0, r0, r8, ror r6
     dc0:	08000b72 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, fp}
     dc4:	00000006 	andeq	r0, r0, r6
     dc8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     dcc:	00018e02 	andeq	r8, r1, r2, lsl #28
     dd0:	00000014 	andeq	r0, r0, r4, lsl r0
     dd4:	00000678 	andeq	r0, r0, r8, ror r6
     dd8:	08000b78 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, fp}
     ddc:	00000006 	andeq	r0, r0, r6
     de0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     de4:	00018e02 	andeq	r8, r1, r2, lsl #28
     de8:	00000014 	andeq	r0, r0, r4, lsl r0
     dec:	00000678 	andeq	r0, r0, r8, ror r6
     df0:	08000b7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, fp}
     df4:	00000006 	andeq	r0, r0, r6
     df8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     dfc:	00018e02 	andeq	r8, r1, r2, lsl #28
     e00:	00000014 	andeq	r0, r0, r4, lsl r0
     e04:	00000678 	andeq	r0, r0, r8, ror r6
     e08:	08000b84 	stmdaeq	r0, {r2, r7, r8, r9, fp}
     e0c:	00000006 	andeq	r0, r0, r6
     e10:	83080e41 	movwhi	r0, #36417	; 0x8e41
     e14:	00018e02 	andeq	r8, r1, r2, lsl #28
     e18:	00000014 	andeq	r0, r0, r4, lsl r0
     e1c:	00000678 	andeq	r0, r0, r8, ror r6
     e20:	08000b8a 	stmdaeq	r0, {r1, r3, r7, r8, r9, fp}
     e24:	00000006 	andeq	r0, r0, r6
     e28:	83080e41 	movwhi	r0, #36417	; 0x8e41
     e2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e30:	00000014 	andeq	r0, r0, r4, lsl r0
     e34:	00000678 	andeq	r0, r0, r8, ror r6
     e38:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
     e3c:	00000006 	andeq	r0, r0, r6
     e40:	83080e41 	movwhi	r0, #36417	; 0x8e41
     e44:	00018e02 	andeq	r8, r1, r2, lsl #28
     e48:	00000014 	andeq	r0, r0, r4, lsl r0
     e4c:	00000678 	andeq	r0, r0, r8, ror r6
     e50:	08000b96 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, fp}
     e54:	00000006 	andeq	r0, r0, r6
     e58:	83080e41 	movwhi	r0, #36417	; 0x8e41
     e5c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e60:	00000014 	andeq	r0, r0, r4, lsl r0
     e64:	00000678 	andeq	r0, r0, r8, ror r6
     e68:	08000b9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, fp}
     e6c:	00000006 	andeq	r0, r0, r6
     e70:	83080e41 	movwhi	r0, #36417	; 0x8e41
     e74:	00018e02 	andeq	r8, r1, r2, lsl #28
     e78:	00000014 	andeq	r0, r0, r4, lsl r0
     e7c:	00000678 	andeq	r0, r0, r8, ror r6
     e80:	08000ba2 	stmdaeq	r0, {r1, r5, r7, r8, r9, fp}
     e84:	00000006 	andeq	r0, r0, r6
     e88:	83080e41 	movwhi	r0, #36417	; 0x8e41
     e8c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e90:	00000014 	andeq	r0, r0, r4, lsl r0
     e94:	00000678 	andeq	r0, r0, r8, ror r6
     e98:	08000ba8 	stmdaeq	r0, {r3, r5, r7, r8, r9, fp}
     e9c:	00000006 	andeq	r0, r0, r6
     ea0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ea4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ea8:	00000014 	andeq	r0, r0, r4, lsl r0
     eac:	00000678 	andeq	r0, r0, r8, ror r6
     eb0:	08000bae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9, fp}
     eb4:	00000006 	andeq	r0, r0, r6
     eb8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ebc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ec0:	00000014 	andeq	r0, r0, r4, lsl r0
     ec4:	00000678 	andeq	r0, r0, r8, ror r6
     ec8:	08000bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp}
     ecc:	00000006 	andeq	r0, r0, r6
     ed0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ed4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ed8:	0000000c 	andeq	r0, r0, ip
     edc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ee0:	7c020001 	stcvc	0, cr0, [r2], {1}
     ee4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ee8:	0000000c 	andeq	r0, r0, ip
     eec:	00000ed8 	ldrdeq	r0, [r0], -r8
     ef0:	08000bba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, fp}
     ef4:	00000004 	andeq	r0, r0, r4
     ef8:	0000001c 	andeq	r0, r0, ip, lsl r0
     efc:	00000ed8 	ldrdeq	r0, [r0], -r8
     f00:	08000bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp}
     f04:	000000a8 	andeq	r0, r0, r8, lsr #1
     f08:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     f0c:	580e4101 	stmdapl	lr, {r0, r8, lr}
     f10:	0e0a4802 	cdpeq	8, 0, cr4, cr10, cr2, {0}
     f14:	000b4204 	andeq	r4, fp, r4, lsl #4
     f18:	00000014 	andeq	r0, r0, r4, lsl r0
     f1c:	00000ed8 	ldrdeq	r0, [r0], -r8
     f20:	08000c68 	stmdaeq	r0, {r3, r5, r6, sl, fp}
     f24:	00000094 	muleq	r0, r4, r0
     f28:	83080e41 	movwhi	r0, #36417	; 0x8e41
     f2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f30:	0000000c 	andeq	r0, r0, ip
     f34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     f38:	7c020001 	stcvc	0, cr0, [r2], {1}
     f3c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     f40:	00000018 	andeq	r0, r0, r8, lsl r0
     f44:	00000f30 	andeq	r0, r0, r0, lsr pc
     f48:	08000cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp}
     f4c:	00000048 	andeq	r0, r0, r8, asr #32
     f50:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     f54:	86038504 	strhi	r8, [r3], -r4, lsl #10
     f58:	00018e02 	andeq	r8, r1, r2, lsl #28
     f5c:	0000000c 	andeq	r0, r0, ip
     f60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     f64:	7c020001 	stcvc	0, cr0, [r2], {1}
     f68:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     f6c:	00000018 	andeq	r0, r0, r8, lsl r0
     f70:	00000f5c 	andeq	r0, r0, ip, asr pc
     f74:	08000d44 	stmdaeq	r0, {r2, r6, r8, sl, fp}
     f78:	000000a4 	andeq	r0, r0, r4, lsr #1
     f7c:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     f80:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     f84:	00000001 	andeq	r0, r0, r1
     f88:	0000000c 	andeq	r0, r0, ip
     f8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     f90:	7c020001 	stcvc	0, cr0, [r2], {1}
     f94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     f98:	0000000c 	andeq	r0, r0, ip
     f9c:	00000f88 	andeq	r0, r0, r8, lsl #31
     fa0:	08000de8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, fp}
     fa4:	00000014 	andeq	r0, r0, r4, lsl r0
     fa8:	00000044 	andeq	r0, r0, r4, asr #32
     fac:	00000f88 	andeq	r0, r0, r8, lsl #31
     fb0:	00000000 	andeq	r0, r0, r0
     fb4:	000000cc 	andeq	r0, r0, ip, asr #1
     fb8:	83280e42 			; <UNDEFINED> instruction: 0x83280e42
     fbc:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
     fc0:	87078608 	strhi	r8, [r7, -r8, lsl #12]
     fc4:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
     fc8:	8b038a04 	blhi	e37e0 <_Min_Stack_Size+0xe33e0>
     fcc:	43018e02 	movwmi	r8, #7682	; 0x1e02
     fd0:	5005300e 	andpl	r3, r5, lr
     fd4:	0b51050c 	bleq	144240c <_Min_Stack_Size+0x144200c>
     fd8:	50060a63 	andpl	r0, r6, r3, ror #20
     fdc:	280e5106 	stmdacs	lr, {r1, r2, r8, ip, lr}
     fe0:	cacbce44 	bgt	ff2f48f8 <_estack+0xdf2b48f8>
     fe4:	c6c7c8c9 	strbgt	ip, [r7], r9, asr #17
     fe8:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
     fec:	000b4200 	andeq	r4, fp, r0, lsl #4
     ff0:	0000000c 	andeq	r0, r0, ip
     ff4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ff8:	7c020001 	stcvc	0, cr0, [r2], {1}
     ffc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1000:	0000000c 	andeq	r0, r0, ip
    1004:	00000ff0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1008:	08000dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp}
    100c:	0000000c 	andeq	r0, r0, ip
    1010:	0000000c 	andeq	r0, r0, ip
    1014:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1018:	7c020001 	stcvc	0, cr0, [r2], {1}
    101c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1020:	00000020 	andeq	r0, r0, r0, lsr #32
    1024:	00001010 	andeq	r1, r0, r0, lsl r0
    1028:	08000e08 	stmdaeq	r0, {r3, r9, sl, fp}
    102c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1030:	83100e41 	tsthi	r0, #1040	; 0x410
    1034:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1038:	4f018e02 	svcmi	0x00018e02
    103c:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    1040:	0000000e 	andeq	r0, r0, lr
    1044:	0000000c 	andeq	r0, r0, ip
    1048:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    104c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1050:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1054:	0000000c 	andeq	r0, r0, ip
    1058:	00001044 	andeq	r1, r0, r4, asr #32
    105c:	00000000 	andeq	r0, r0, r0
    1060:	00000002 	andeq	r0, r0, r2
    1064:	0000000c 	andeq	r0, r0, ip
    1068:	00001044 	andeq	r1, r0, r4, asr #32
    106c:	00000000 	andeq	r0, r0, r0
    1070:	00000002 	andeq	r0, r0, r2
    1074:	0000000c 	andeq	r0, r0, ip
    1078:	00001044 	andeq	r1, r0, r4, asr #32
    107c:	00000000 	andeq	r0, r0, r0
    1080:	00000002 	andeq	r0, r0, r2
    1084:	0000000c 	andeq	r0, r0, ip
    1088:	00001044 	andeq	r1, r0, r4, asr #32
    108c:	00000000 	andeq	r0, r0, r0
    1090:	00000002 	andeq	r0, r0, r2
    1094:	0000000c 	andeq	r0, r0, ip
    1098:	00001044 	andeq	r1, r0, r4, asr #32
    109c:	00000000 	andeq	r0, r0, r0
    10a0:	00000002 	andeq	r0, r0, r2
    10a4:	0000000c 	andeq	r0, r0, ip
    10a8:	00001044 	andeq	r1, r0, r4, asr #32
    10ac:	08000e34 	stmdaeq	r0, {r2, r4, r5, r9, sl, fp}
    10b0:	00000002 	andeq	r0, r0, r2
    10b4:	0000000c 	andeq	r0, r0, ip
    10b8:	00001044 	andeq	r1, r0, r4, asr #32
    10bc:	00000000 	andeq	r0, r0, r0
    10c0:	00000004 	andeq	r0, r0, r4
    10c4:	0000000c 	andeq	r0, r0, ip
    10c8:	00001044 	andeq	r1, r0, r4, asr #32
    10cc:	00000000 	andeq	r0, r0, r0
    10d0:	00000004 	andeq	r0, r0, r4
    10d4:	0000000c 	andeq	r0, r0, ip
    10d8:	00001044 	andeq	r1, r0, r4, asr #32
    10dc:	00000000 	andeq	r0, r0, r0
    10e0:	00000002 	andeq	r0, r0, r2
    10e4:	0000000c 	andeq	r0, r0, ip
    10e8:	00001044 	andeq	r1, r0, r4, asr #32
    10ec:	08000e38 	stmdaeq	r0, {r3, r4, r5, r9, sl, fp}
    10f0:	00000002 	andeq	r0, r0, r2
    10f4:	0000000c 	andeq	r0, r0, ip
    10f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    10fc:	7c020001 	stcvc	0, cr0, [r2], {1}
    1100:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1104:	00000020 	andeq	r0, r0, r0, lsr #32
    1108:	000010f4 	strdeq	r1, [r0], -r4
    110c:	08000e3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, sl, fp}
    1110:	0000008c 	andeq	r0, r0, ip, lsl #1
    1114:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1118:	86078508 	strhi	r8, [r7], -r8, lsl #10
    111c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1120:	8a038904 	bhi	e3538 <_Min_Stack_Size+0xe3138>
    1124:	00018e02 	andeq	r8, r1, r2, lsl #28
    1128:	0000000c 	andeq	r0, r0, ip
    112c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1130:	7c020001 	stcvc	0, cr0, [r2], {1}
    1134:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1138:	00000018 	andeq	r0, r0, r8, lsl r0
    113c:	00001128 	andeq	r1, r0, r8, lsr #2
    1140:	08000ec8 	stmdaeq	r0, {r3, r6, r7, r9, sl, fp}
    1144:	00000030 	andeq	r0, r0, r0, lsr r0
    1148:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    114c:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    1150:	00000010 	andeq	r0, r0, r0, lsl r0
    1154:	0000000c 	andeq	r0, r0, ip
    1158:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    115c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1160:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1164:	00000020 	andeq	r0, r0, r0, lsr #32
    1168:	00001154 	andeq	r1, r0, r4, asr r1
    116c:	08000ef8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, fp}
    1170:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1174:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1178:	86078508 	strhi	r8, [r7], -r8, lsl #10
    117c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1180:	8a038904 	bhi	e3598 <_Min_Stack_Size+0xe3198>
    1184:	00018e02 	andeq	r8, r1, r2, lsl #28
    1188:	0000000c 	andeq	r0, r0, ip
    118c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1190:	7c020001 	stcvc	0, cr0, [r2], {1}
    1194:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1198:	0000000c 	andeq	r0, r0, ip
    119c:	00001188 	andeq	r1, r0, r8, lsl #3
    11a0:	080011c8 	stmdaeq	r0, {r3, r6, r7, r8, ip}
    11a4:	00000012 	andeq	r0, r0, r2, lsl r0
    11a8:	00000020 	andeq	r0, r0, r0, lsr #32
    11ac:	00001188 	andeq	r1, r0, r8, lsl #3
    11b0:	080011dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, ip}
    11b4:	0000005c 	andeq	r0, r0, ip, asr r0
    11b8:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    11bc:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    11c0:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    11c4:	89038804 	stmdbhi	r3, {r2, fp, pc}
    11c8:	00018e02 	andeq	r8, r1, r2, lsl #28
    11cc:	0000000c 	andeq	r0, r0, ip
    11d0:	00001188 	andeq	r1, r0, r8, lsl #3
    11d4:	08001238 	stmdaeq	r0, {r3, r4, r5, r9, ip}
    11d8:	00000028 	andeq	r0, r0, r8, lsr #32
    11dc:	0000002c 	andeq	r0, r0, ip, lsr #32
    11e0:	00001188 	andeq	r1, r0, r8, lsl #3
    11e4:	08001260 	stmdaeq	r0, {r5, r6, r9, ip}
    11e8:	0000009c 	muleq	r0, ip, r0
    11ec:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    11f0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    11f4:	180e4201 	stmdane	lr, {r0, r9, lr}
    11f8:	0c0e0a65 			; <UNDEFINED> instruction: 0x0c0e0a65
    11fc:	0a440b41 	beq	1103f08 <_Min_Stack_Size+0x1103b08>
    1200:	0b410c0e 	bleq	1044240 <_Min_Stack_Size+0x1043e40>
    1204:	0c0e0a51 			; <UNDEFINED> instruction: 0x0c0e0a51
    1208:	00000b41 	andeq	r0, r0, r1, asr #22
    120c:	00000018 	andeq	r0, r0, r8, lsl r0
    1210:	00001188 	andeq	r1, r0, r8, lsl #3
    1214:	080012fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, ip}
    1218:	00000058 	andeq	r0, r0, r8, asr r0
    121c:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
    1220:	67018e02 	strvs	r8, [r1, -r2, lsl #28]
    1224:	000ec4ce 	andeq	ip, lr, lr, asr #9
    1228:	0000000c 	andeq	r0, r0, ip
    122c:	00001188 	andeq	r1, r0, r8, lsl #3
    1230:	08001354 	stmdaeq	r0, {r2, r4, r6, r8, r9, ip}
    1234:	00000004 	andeq	r0, r0, r4
    1238:	0000000c 	andeq	r0, r0, ip
    123c:	00001188 	andeq	r1, r0, r8, lsl #3
    1240:	08001358 	stmdaeq	r0, {r3, r4, r6, r8, r9, ip}
    1244:	0000000a 	andeq	r0, r0, sl
    1248:	0000000c 	andeq	r0, r0, ip
    124c:	00001188 	andeq	r1, r0, r8, lsl #3
    1250:	08001364 	stmdaeq	r0, {r2, r5, r6, r8, r9, ip}
    1254:	00000002 	andeq	r0, r0, r2
    1258:	00000018 	andeq	r0, r0, r8, lsl r0
    125c:	00001188 	andeq	r1, r0, r8, lsl #3
    1260:	08001368 	stmdaeq	r0, {r3, r5, r6, r8, r9, ip}
    1264:	0000003a 	andeq	r0, r0, sl, lsr r0
    1268:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    126c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1270:	00018e02 	andeq	r8, r1, r2, lsl #28
    1274:	0000002c 	andeq	r0, r0, ip, lsr #32
    1278:	00001188 	andeq	r1, r0, r8, lsl #3
    127c:	080013a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, ip}
    1280:	000000ca 	andeq	r0, r0, sl, asr #1
    1284:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1288:	86078508 	strhi	r8, [r7], -r8, lsl #10
    128c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1290:	8a038904 	bhi	e36a8 <_Min_Stack_Size+0xe32a8>
    1294:	4a018e02 	bmi	64aa4 <_Min_Stack_Size+0x646a4>
    1298:	0207e80e 	andeq	lr, r7, #917504	; 0xe0000
    129c:	200e0a4e 	andcs	r0, lr, lr, asr #20
    12a0:	00000b42 	andeq	r0, r0, r2, asr #22
    12a4:	0000000c 	andeq	r0, r0, ip
    12a8:	00001188 	andeq	r1, r0, r8, lsl #3
    12ac:	08001470 	stmdaeq	r0, {r4, r5, r6, sl, ip}
    12b0:	00000004 	andeq	r0, r0, r4
    12b4:	00000024 	andeq	r0, r0, r4, lsr #32
    12b8:	00001188 	andeq	r1, r0, r8, lsl #3
    12bc:	08001474 	stmdaeq	r0, {r2, r4, r5, r6, sl, ip}
    12c0:	00000066 	andeq	r0, r0, r6, rrx
    12c4:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    12c8:	86048505 	strhi	r8, [r4], -r5, lsl #10
    12cc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    12d0:	f80e4901 			; <UNDEFINED> instruction: 0xf80e4901
    12d4:	0e0a5f03 	cdpeq	15, 0, cr5, cr10, cr3, {0}
    12d8:	000b4114 	andeq	r4, fp, r4, lsl r1
    12dc:	0000000c 	andeq	r0, r0, ip
    12e0:	00001188 	andeq	r1, r0, r8, lsl #3
    12e4:	080014dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, ip}
    12e8:	0000000e 	andeq	r0, r0, lr
    12ec:	00000018 	andeq	r0, r0, r8, lsl r0
    12f0:	00001188 	andeq	r1, r0, r8, lsl #3
    12f4:	080014ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, ip}
    12f8:	00000044 	andeq	r0, r0, r4, asr #32
    12fc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1300:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1304:	00018e02 	andeq	r8, r1, r2, lsl #28
    1308:	0000000c 	andeq	r0, r0, ip
    130c:	00001188 	andeq	r1, r0, r8, lsl #3
    1310:	08001530 	stmdaeq	r0, {r4, r5, r8, sl, ip}
    1314:	0000000e 	andeq	r0, r0, lr
    1318:	0000000c 	andeq	r0, r0, ip
    131c:	00001188 	andeq	r1, r0, r8, lsl #3
    1320:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
    1324:	00000002 	andeq	r0, r0, r2
    1328:	0000000c 	andeq	r0, r0, ip
    132c:	00001188 	andeq	r1, r0, r8, lsl #3
    1330:	08001544 	stmdaeq	r0, {r2, r6, r8, sl, ip}
    1334:	0000000c 	andeq	r0, r0, ip
    1338:	0000000c 	andeq	r0, r0, ip
    133c:	00001188 	andeq	r1, r0, r8, lsl #3
    1340:	08001550 	stmdaeq	r0, {r4, r6, r8, sl, ip}
    1344:	0000002e 	andeq	r0, r0, lr, lsr #32
    1348:	00000018 	andeq	r0, r0, r8, lsl r0
    134c:	00001188 	andeq	r1, r0, r8, lsl #3
    1350:	08001580 	stmdaeq	r0, {r7, r8, sl, ip}
    1354:	0000001a 	andeq	r0, r0, sl, lsl r0
    1358:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    135c:	180e4101 	stmdane	lr, {r0, r8, lr}
    1360:	00040e49 	andeq	r0, r4, r9, asr #28
    1364:	0000000c 	andeq	r0, r0, ip
    1368:	00001188 	andeq	r1, r0, r8, lsl #3
    136c:	0800159c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, ip}
    1370:	0000002e 	andeq	r0, r0, lr, lsr #32
    1374:	0000001c 	andeq	r0, r0, ip, lsl r0
    1378:	00001188 	andeq	r1, r0, r8, lsl #3
    137c:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
    1380:	00000018 	andeq	r0, r0, r8, lsl r0
    1384:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1388:	41018e02 	tstmi	r1, r2, lsl #28
    138c:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1390:	00000008 	andeq	r0, r0, r8
    1394:	00000020 	andeq	r0, r0, r0, lsr #32
    1398:	00001188 	andeq	r1, r0, r8, lsl #3
    139c:	080015e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl, ip}
    13a0:	00000084 	andeq	r0, r0, r4, lsl #1
    13a4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13a8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13ac:	4a018e02 	bmi	64bbc <_Min_Stack_Size+0x647bc>
    13b0:	7604c80e 	strvc	ip, [r4], -lr, lsl #16
    13b4:	0000100e 	andeq	r1, r0, lr
    13b8:	00000030 	andeq	r0, r0, r0, lsr r0
    13bc:	00001188 	andeq	r1, r0, r8, lsl #3
    13c0:	08001668 	stmdaeq	r0, {r3, r5, r6, r9, sl, ip}
    13c4:	000002a8 	andeq	r0, r0, r8, lsr #5
    13c8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    13cc:	86088509 	strhi	r8, [r8], -r9, lsl #10
    13d0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    13d4:	8a048905 	bhi	1237f0 <_Min_Stack_Size+0x1233f0>
    13d8:	8e028b03 	vmlahi.f64	d8, d2, d3
    13dc:	480e4201 	stmdami	lr, {r0, r9, lr}
    13e0:	240e0a64 	strcs	r0, [lr], #-2660	; 0xfffff59c
    13e4:	0a420b42 	beq	10840f4 <_Min_Stack_Size+0x1083cf4>
    13e8:	0b42240e 	bleq	108a428 <_Min_Stack_Size+0x108a028>
    13ec:	0000000c 	andeq	r0, r0, ip
    13f0:	00001188 	andeq	r1, r0, r8, lsl #3
    13f4:	08001910 	stmdaeq	r0, {r4, r8, fp, ip}
    13f8:	00000004 	andeq	r0, r0, r4
    13fc:	0000000c 	andeq	r0, r0, ip
    1400:	00001188 	andeq	r1, r0, r8, lsl #3
    1404:	08001914 	stmdaeq	r0, {r2, r4, r8, fp, ip}
    1408:	00000004 	andeq	r0, r0, r4
    140c:	0000000c 	andeq	r0, r0, ip
    1410:	00001188 	andeq	r1, r0, r8, lsl #3
    1414:	08001918 	stmdaeq	r0, {r3, r4, r8, fp, ip}
    1418:	00000004 	andeq	r0, r0, r4
    141c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1420:	00001188 	andeq	r1, r0, r8, lsl #3
    1424:	0800191c 	stmdaeq	r0, {r2, r3, r4, r8, fp, ip}
    1428:	00000284 	andeq	r0, r0, r4, lsl #5
    142c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    1430:	86068507 	strhi	r8, [r6], -r7, lsl #10
    1434:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    1438:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    143c:	a80e4201 	stmdage	lr, {r0, r9, lr}
    1440:	0e0a7202 	cdpeq	2, 0, cr7, cr10, cr2, {0}
    1444:	680b421c 	stmdavs	fp, {r2, r3, r4, r9, lr}
    1448:	421c0e0a 	andsmi	r0, ip, #10, 28	; 0xa0
    144c:	0a45020b 	beq	1141c80 <_Min_Stack_Size+0x1141880>
    1450:	0b421c0e 	bleq	1088490 <_Min_Stack_Size+0x1088090>
    1454:	1c0e0a61 			; <UNDEFINED> instruction: 0x1c0e0a61
    1458:	00000b42 	andeq	r0, r0, r2, asr #22
    145c:	0000000c 	andeq	r0, r0, ip
    1460:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1464:	7c020001 	stcvc	0, cr0, [r2], {1}
    1468:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    146c:	00000018 	andeq	r0, r0, r8, lsl r0
    1470:	0000145c 	andeq	r1, r0, ip, asr r4
    1474:	08001d4c 	stmdaeq	r0, {r2, r3, r6, r8, sl, fp, ip}
    1478:	00000038 	andeq	r0, r0, r8, lsr r0
    147c:	84040e48 	strhi	r0, [r4], #-3656	; 0xfffff1b8
    1480:	0ec44901 	vdiveq.f16	s9, s8, s2	; <UNPREDICTABLE>
    1484:	00000000 	andeq	r0, r0, r0
    1488:	00000018 	andeq	r0, r0, r8, lsl r0
    148c:	0000145c 	andeq	r1, r0, ip, asr r4
    1490:	08001d84 	stmdaeq	r0, {r2, r7, r8, sl, fp, ip}
    1494:	0000001a 	andeq	r0, r0, sl, lsl r0
    1498:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    149c:	180e4101 	stmdane	lr, {r0, r8, lr}
    14a0:	00040e49 	andeq	r0, r4, r9, asr #28
    14a4:	0000000c 	andeq	r0, r0, ip
    14a8:	0000145c 	andeq	r1, r0, ip, asr r4
    14ac:	08001da0 	stmdaeq	r0, {r5, r7, r8, sl, fp, ip}
    14b0:	00000002 	andeq	r0, r0, r2
    14b4:	00000028 	andeq	r0, r0, r8, lsr #32
    14b8:	0000145c 	andeq	r1, r0, ip, asr r4
    14bc:	08001da4 	stmdaeq	r0, {r2, r5, r7, r8, sl, fp, ip}
    14c0:	000002ac 	andeq	r0, r0, ip, lsr #5
    14c4:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    14c8:	86068507 	strhi	r8, [r6], -r7, lsl #10
    14cc:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    14d0:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    14d4:	300e4201 	andcc	r4, lr, r1, lsl #4
    14d8:	1c0e0a6b 			; <UNDEFINED> instruction: 0x1c0e0a6b
    14dc:	00000b42 	andeq	r0, r0, r2, asr #22
    14e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    14e4:	0000145c 	andeq	r1, r0, ip, asr r4
    14e8:	08002050 	stmdaeq	r0, {r4, r6, sp}
    14ec:	0000002a 	andeq	r0, r0, sl, lsr #32
    14f0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    14f4:	43018e02 	movwmi	r8, #7682	; 0x1e02
    14f8:	0e50180e 	cdpeq	8, 5, cr1, cr0, cr14, {0}
    14fc:	00000008 	andeq	r0, r0, r8
    1500:	00000014 	andeq	r0, r0, r4, lsl r0
    1504:	0000145c 	andeq	r1, r0, ip, asr r4
    1508:	0800207c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sp}
    150c:	0000000a 	andeq	r0, r0, sl
    1510:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1514:	00018e02 	andeq	r8, r1, r2, lsl #28
    1518:	00000014 	andeq	r0, r0, r4, lsl r0
    151c:	0000145c 	andeq	r1, r0, ip, asr r4
    1520:	08002088 	stmdaeq	r0, {r3, r7, sp}
    1524:	00000012 	andeq	r0, r0, r2, lsl r0
    1528:	83080e41 	movwhi	r0, #36417	; 0x8e41
    152c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1530:	00000014 	andeq	r0, r0, r4, lsl r0
    1534:	0000145c 	andeq	r1, r0, ip, asr r4
    1538:	00000000 	andeq	r0, r0, r0
    153c:	00000006 	andeq	r0, r0, r6
    1540:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1544:	00018e02 	andeq	r8, r1, r2, lsl #28
    1548:	00000014 	andeq	r0, r0, r4, lsl r0
    154c:	0000145c 	andeq	r1, r0, ip, asr r4
    1550:	00000000 	andeq	r0, r0, r0
    1554:	00000006 	andeq	r0, r0, r6
    1558:	83080e41 	movwhi	r0, #36417	; 0x8e41
    155c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1560:	0000000c 	andeq	r0, r0, ip
    1564:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1568:	7c020001 	stcvc	0, cr0, [r2], {1}
    156c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1570:	00000014 	andeq	r0, r0, r4, lsl r0
    1574:	00001560 	andeq	r1, r0, r0, ror #10
    1578:	080020a0 	stmdaeq	r0, {r5, r7, sp}
    157c:	0000000e 	andeq	r0, r0, lr
    1580:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1584:	00018e02 	andeq	r8, r1, r2, lsl #28
    1588:	0000000c 	andeq	r0, r0, ip
    158c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1590:	7c020001 	stcvc	0, cr0, [r2], {1}
    1594:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1598:	00000018 	andeq	r0, r0, r8, lsl r0
    159c:	00001588 	andeq	r1, r0, r8, lsl #11
    15a0:	00000000 	andeq	r0, r0, r0
    15a4:	00000030 	andeq	r0, r0, r0, lsr r0
    15a8:	83100e41 	tsthi	r0, #1040	; 0x410
    15ac:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    15b0:	00018e02 	andeq	r8, r1, r2, lsl #28
    15b4:	0000001c 	andeq	r0, r0, ip, lsl r0
    15b8:	00001588 	andeq	r1, r0, r8, lsl #11
    15bc:	00000000 	andeq	r0, r0, r0
    15c0:	0000004c 	andeq	r0, r0, ip, asr #32
    15c4:	83180e42 	tsthi	r8, #1056	; 0x420
    15c8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    15cc:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    15d0:	00018e02 	andeq	r8, r1, r2, lsl #28
    15d4:	00000024 	andeq	r0, r0, r4, lsr #32
    15d8:	00001588 	andeq	r1, r0, r8, lsl #11
    15dc:	00000000 	andeq	r0, r0, r0
    15e0:	00000056 	andeq	r0, r0, r6, asr r0
    15e4:	83100e42 	tsthi	r0, #1056	; 0x420
    15e8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    15ec:	5c018e02 	stcpl	14, cr8, [r1], {2}
    15f0:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    15f4:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    15f8:	0000000b 	andeq	r0, r0, fp
    15fc:	00000020 	andeq	r0, r0, r0, lsr #32
    1600:	00001588 	andeq	r1, r0, r8, lsl #11
    1604:	00000000 	andeq	r0, r0, r0
    1608:	00000064 	andeq	r0, r0, r4, rrx
    160c:	83100e45 	tsthi	r0, #1104	; 0x450
    1610:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1614:	6a018e02 	bvs	64e24 <_Min_Stack_Size+0x64a24>
    1618:	c4c3000e 	strbgt	r0, [r3], #14
    161c:	0000cec5 	andeq	ip, r0, r5, asr #29
    1620:	00000024 	andeq	r0, r0, r4, lsr #32
    1624:	00001588 	andeq	r1, r0, r8, lsl #11
    1628:	080021e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sp}
    162c:	0000005c 	andeq	r0, r0, ip, asr r0
    1630:	83100e41 	tsthi	r0, #1040	; 0x410
    1634:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1638:	5d018e02 	stcpl	14, cr8, [r1, #-8]
    163c:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    1640:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    1644:	0000000b 	andeq	r0, r0, fp
    1648:	00000018 	andeq	r0, r0, r8, lsl r0
    164c:	00001588 	andeq	r1, r0, r8, lsl #11
    1650:	00000000 	andeq	r0, r0, r0
    1654:	00000054 	andeq	r0, r0, r4, asr r0
    1658:	84100e43 	ldrhi	r0, [r0], #-3651	; 0xfffff1bd
    165c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1660:	00018e02 	andeq	r8, r1, r2, lsl #28
    1664:	00000018 	andeq	r0, r0, r8, lsl r0
    1668:	00001588 	andeq	r1, r0, r8, lsl #11
    166c:	00000000 	andeq	r0, r0, r0
    1670:	00000038 	andeq	r0, r0, r8, lsr r0
    1674:	83100e41 	tsthi	r0, #1040	; 0x410
    1678:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    167c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1680:	00000018 	andeq	r0, r0, r8, lsl r0
    1684:	00001588 	andeq	r1, r0, r8, lsl #11
    1688:	00000000 	andeq	r0, r0, r0
    168c:	00000068 	andeq	r0, r0, r8, rrx
    1690:	83100e41 	tsthi	r0, #1040	; 0x410
    1694:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1698:	00018e02 	andeq	r8, r1, r2, lsl #28
    169c:	0000000c 	andeq	r0, r0, ip
    16a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    16a4:	7c020001 	stcvc	0, cr0, [r2], {1}
    16a8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16ac:	00000018 	andeq	r0, r0, r8, lsl r0
    16b0:	0000169c 	muleq	r0, ip, r6
    16b4:	08002240 	stmdaeq	r0, {r6, r9, sp}
    16b8:	0000002c 	andeq	r0, r0, ip, lsr #32
    16bc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    16c0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    16c4:	00018e02 	andeq	r8, r1, r2, lsl #28
    16c8:	0000000c 	andeq	r0, r0, ip
    16cc:	0000169c 	muleq	r0, ip, r6
    16d0:	0800226c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sp}
    16d4:	00000004 	andeq	r0, r0, r4
    16d8:	0000000c 	andeq	r0, r0, ip
    16dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    16e0:	7c020001 	stcvc	0, cr0, [r2], {1}
    16e4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16e8:	00000024 	andeq	r0, r0, r4, lsr #32
    16ec:	000016d8 	ldrdeq	r1, [r0], -r8
    16f0:	00000000 	andeq	r0, r0, r0
    16f4:	00000048 	andeq	r0, r0, r8, asr #32
    16f8:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    16fc:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1700:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1704:	60018e02 	andvs	r8, r1, r2, lsl #28
    1708:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    170c:	000ec4c5 	andeq	ip, lr, r5, asr #9
    1710:	00000028 	andeq	r0, r0, r8, lsr #32
    1714:	000016d8 	ldrdeq	r1, [r0], -r8
    1718:	00000000 	andeq	r0, r0, r0
    171c:	00000090 	muleq	r0, r0, r0
    1720:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
    1724:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1728:	7c018e02 	stcvc	14, cr8, [r1], {2}
    172c:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1730:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1734:	000e410b 	andeq	r4, lr, fp, lsl #2
    1738:	cec6c5c4 	cdpgt	5, 12, cr12, cr6, cr4, {6}
    173c:	0000000c 	andeq	r0, r0, ip
    1740:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1744:	7c020001 	stcvc	0, cr0, [r2], {1}
    1748:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    174c:	0000000c 	andeq	r0, r0, ip
    1750:	0000173c 	andeq	r1, r0, ip, lsr r7
    1754:	08002270 	stmdaeq	r0, {r4, r5, r6, r9, sp}
    1758:	00000010 	andeq	r0, r0, r0, lsl r0
    175c:	0000000c 	andeq	r0, r0, ip
    1760:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1764:	7c020001 	stcvc	0, cr0, [r2], {1}
    1768:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    176c:	0000000c 	andeq	r0, r0, ip
    1770:	0000175c 	andeq	r1, r0, ip, asr r7
    1774:	08002280 	stmdaeq	r0, {r7, r9, sp}
    1778:	00000010 	andeq	r0, r0, r0, lsl r0
    177c:	0000000c 	andeq	r0, r0, ip
    1780:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1784:	7c020001 	stcvc	0, cr0, [r2], {1}
    1788:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    178c:	0000000c 	andeq	r0, r0, ip
    1790:	0000177c 	andeq	r1, r0, ip, ror r7
    1794:	08002290 	stmdaeq	r0, {r4, r7, r9, sp}
    1798:	00000002 	andeq	r0, r0, r2

Disassembly of section .stab:

00000000 <.stab>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00040000 	andeq	r0, r4, r0
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
   8:	00000076 	andeq	r0, r0, r6, ror r0
  __HAL_FLASH_DATA_CACHE_ENABLE();
   c:	0000000a 	andeq	r0, r0, sl
  10:	0000001e 	andeq	r0, r0, lr, lsl r0
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  14:	00000000 	andeq	r0, r0, r0
  18:	0000003a 	andeq	r0, r0, sl, lsr r0
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  1c:	00000001 	andeq	r0, r0, r1
  20:	00000000 	andeq	r0, r0, r0
  HAL_InitTick(TICK_INT_PRIORITY);
  24:	00000042 	andeq	r0, r0, r2, asr #32
  HAL_MspInit();
  28:	0000001e 	andeq	r0, r0, lr, lsl r0
}
  2c:	00000000 	andeq	r0, r0, r0
  30:	00000070 	andeq	r0, r0, r0, ror r0
  *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL);
  34:	00000001 	andeq	r0, r0, r1
  38:	00000000 	andeq	r0, r0, r0

Disassembly of section .stabstr:

00000000 <.stabstr>:
   0:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
   4:	2e646970 			; <UNDEFINED> instruction: 0x2e646970
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
   8:	675f0063 	ldrbvs	r0, [pc, -r3, rrx]
  __HAL_FLASH_DATA_CACHE_ENABLE();
   c:	69707465 	ldmdbvs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}^
  10:	73692064 	cmnvc	r9, #100	; 0x64
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  14:	746f6e20 	strbtvc	r6, [pc], #-3616	; 1c <_Min_Heap_Size-0x1e4>
  18:	706d6920 	rsbvc	r6, sp, r0, lsr #18
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  1c:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
  20:	6465746e 	strbtvs	r7, [r5], #-1134	; 0xfffffb92
  HAL_InitTick(TICK_INT_PRIORITY);
  24:	646e6120 	strbtvs	r6, [lr], #-288	; 0xfffffee0
  HAL_MspInit();
  28:	6c697720 	stclvs	7, cr7, [r9], #-128	; 0xffffff80
}
  2c:	6c61206c 	stclvs	0, cr2, [r1], #-432	; 0xfffffe50
  30:	73796177 	cmnvc	r9, #-1073741795	; 0xc000001d
  34:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
  38:	675f006c 	ldrbvs	r0, [pc, -ip, rrx]
  3c:	69707465 	ldmdbvs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}^
  *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL);
  40:	6b5f0064 	blvs	17c01d8 <_Min_Stack_Size+0x17bfdd8>
  44:	206c6c69 	rsbcs	r6, ip, r9, ror #24
  48:	6e207369 	cdpvs	3, 2, cr7, cr0, cr9, {3}
    return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
  4c:	6920746f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
  50:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
  54:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
  58:	61206465 			; <UNDEFINED> instruction: 0x61206465
  5c:	7720646e 	strvc	r6, [r0, -lr, ror #8]!
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	206c6c69 	rsbcs	r6, ip, r9, ror #24
  64:	61776c61 	cmnvs	r7, r1, ror #24
  68:	66207379 			; <UNDEFINED> instruction: 0x66207379
      SystemCoreClock = pllvco/pllp;
  6c:	006c6961 	rsbeq	r6, ip, r1, ror #18
  70:	6c696b5f 			; <UNDEFINED> instruction: 0x6c696b5f
      break;
  74:	Address 0x0000000000000074 is out of bounds.

